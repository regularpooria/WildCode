conversation_hash,code_index,error_line,error_character,error_id,error_message
00b4b184046fba7406f9911463415a7c,5,44,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
00b4b184046fba7406f9911463415a7c,9,4,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
00faf14d6c186161926f8f3844ef201e,1,19,34,files.javascript.rules.lang.security.detect-insecure-websocket,Insecure WebSocket Detected. WebSocket Secure (wss) should be used for all WebSocket connections.
01730ede94976732b5f51bead431f055,1,6,9,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
01730ede94976732b5f51bead431f055,1,6,9,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `el.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
01730ede94976732b5f51bead431f055,1,6,24,files.javascript.rules.lang.security.html-in-template-string,"This template literal looks like HTML and has interpolated variables. These variables are not HTML-encoded by default. If the variables contain HTML tags, these may be interpreted by the browser, resulting in cross-site scripting (XSS)."
01730ede94976732b5f51bead431f055,10,8,13,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
01730ede94976732b5f51bead431f055,10,8,13,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `el.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
01730ede94976732b5f51bead431f055,10,10,13,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
01730ede94976732b5f51bead431f055,10,10,13,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `el.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
01730ede94976732b5f51bead431f055,11,7,9,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
01730ede94976732b5f51bead431f055,11,7,9,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `el.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
01730ede94976732b5f51bead431f055,2,6,9,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
01730ede94976732b5f51bead431f055,2,6,9,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `el.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
01730ede94976732b5f51bead431f055,4,6,9,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
01730ede94976732b5f51bead431f055,4,6,9,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `el.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
01730ede94976732b5f51bead431f055,8,6,9,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
01730ede94976732b5f51bead431f055,8,6,9,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `el.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
01a0cf70d69c34c30ea2efe2b043d971,2,8,47,files.javascript.rules.browser.security.eval-detected,"Detected the use of eval(). eval() can be dangerous if used to evaluate dynamic content. If this content can be input from outside the program, this may be a code injection vulnerability. Ensure evaluated content is not definable by external sources."
02108f71e3455f6a782f9def33ba9542,5,2,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
023e59ea6fd9c1b1075cbd7d6517db84,6,8,1,files.javascript.rules.lang.security.audit.unsafe-dynamic-method,"Using non-static data to retrieve and run functions from the object is dangerous. If the data is user-controlled, it may allow executing arbitrary code."
025e52c7f8ec0cd32c6b36b84955a11c,2,13,13,files.javascript.rules.lang.security.audit.unsafe-dynamic-method,"Using non-static data to retrieve and run functions from the object is dangerous. If the data is user-controlled, it may allow executing arbitrary code."
027e15398b040f548419371297ede2f8,0,7,19,files.javascript.rules.lang.security.audit.unsafe-formatstring,"Detected string concatenation with a non-literal variable in a util.format / console.log function. If an attacker injects a format specifier in the string, it will forge the log message. Try to use constant values for the format string."
029f34eca4d039c27c3ac48ba47a9f2c,0,27,10,files.javascript.rules.jquery.security.audit.prohibit-jquery-html,"JQuery's `html` function is susceptible to Cross Site Scripting (XSS) attacks. If you're just passing text, consider `text` instead. Otherwise, use a function that escapes HTML such as edX's `HtmlUtils.setHtml()`."
029f34eca4d039c27c3ac48ba47a9f2c,0,37,5,files.javascript.rules.jquery.security.audit.prohibit-jquery-html,"JQuery's `html` function is susceptible to Cross Site Scripting (XSS) attacks. If you're just passing text, consider `text` instead. Otherwise, use a function that escapes HTML such as edX's `HtmlUtils.setHtml()`."
029f34eca4d039c27c3ac48ba47a9f2c,0,44,2,files.javascript.rules.jquery.security.audit.jquery-insecure-method,User controlled data in a jQuery's `.after(...)` is an anti-pattern that can lead to XSS vulnerabilities
02b9ff8fa012ec70273694bac6cebf88,3,7,18,files.javascript.rules.lang.security.detect-child-process,"Detected calls to child_process from a function argument `pid`. This could lead to a command injection if the input is user controllable. Try to avoid calls to child_process, and if it is needed ensure user input is correctly sanitized or sandboxed. "
031cf7af37f710399f64ae8bbe9692e8,0,42,13,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
031cf7af37f710399f64ae8bbe9692e8,0,42,13,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `box_body.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
031cf7af37f710399f64ae8bbe9692e8,1,50,3,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
031cf7af37f710399f64ae8bbe9692e8,1,50,3,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `boxBody.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
03ce456a6f13b846bd0d3af6d289308f,1,5,5,files.javascript.rules.jquery.security.audit.jquery-insecure-method,User controlled data in a jQuery's `.html(...)` is an anti-pattern that can lead to XSS vulnerabilities
03ce456a6f13b846bd0d3af6d289308f,1,5,5,files.javascript.rules.jquery.security.audit.prohibit-jquery-html,"JQuery's `html` function is susceptible to Cross Site Scripting (XSS) attacks. If you're just passing text, consider `text` instead. Otherwise, use a function that escapes HTML such as edX's `HtmlUtils.setHtml()`."
03ce456a6f13b846bd0d3af6d289308f,3,5,5,files.javascript.rules.jquery.security.audit.jquery-insecure-method,User controlled data in a jQuery's `.html(...)` is an anti-pattern that can lead to XSS vulnerabilities
03ce456a6f13b846bd0d3af6d289308f,3,5,5,files.javascript.rules.jquery.security.audit.prohibit-jquery-html,"JQuery's `html` function is susceptible to Cross Site Scripting (XSS) attacks. If you're just passing text, consider `text` instead. Otherwise, use a function that escapes HTML such as edX's `HtmlUtils.setHtml()`."
03f1ef1a25b551506a6466f388d87de0,24,3,25,files.javascript.rules.lang.security.audit.detect-non-literal-regexp,"RegExp() called with a `search` function argument, this might allow an attacker to cause a Regular Expression Denial-of-Service (ReDoS) within your application as RegExP blocks the main thread. For this reason, it is recommended to use hardcoded regexes instead. If your regex is run on user-controlled input, consider performing input validation or use a regex checking/sanitization library such as https://www.npmjs.com/package/recheck to verify that the regex does not appear vulnerable to ReDoS."
0405f428258d814f886de4ad289a64b6,2,8,9,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
0405f428258d814f886de4ad289a64b6,2,8,9,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `output.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
0429b01fc8ccee9bcf38dcb201431ea6,8,10,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
043890b120327ab6327b78199a4ab871,0,18,21,files.javascript.rules.lang.security.audit.unsafe-formatstring,"Detected string concatenation with a non-literal variable in a util.format / console.log function. If an attacker injects a format specifier in the string, it will forge the log message. Try to use constant values for the format string."
043890b120327ab6327b78199a4ab871,0,44,17,files.javascript.rules.lang.security.audit.unsafe-formatstring,"Detected string concatenation with a non-literal variable in a util.format / console.log function. If an attacker injects a format specifier in the string, it will forge the log message. Try to use constant values for the format string."
043890b120327ab6327b78199a4ab871,0,50,17,files.javascript.rules.lang.security.audit.unsafe-formatstring,"Detected string concatenation with a non-literal variable in a util.format / console.log function. If an attacker injects a format specifier in the string, it will forge the log message. Try to use constant values for the format string."
04784a1b06ca71f250ddb1fe62062d81,3,5,1,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
04784a1b06ca71f250ddb1fe62062d81,3,5,1,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `document.body.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
047a12df2ef8486674406e5e1b75450b,2,2,24,files.javascript.rules.lang.security.audit.unsafe-dynamic-method,"Using non-static data to retrieve and run functions from the object is dangerous. If the data is user-controlled, it may allow executing arbitrary code."
049e1639b60cfff271a2923bc2cd353d,0,75,9,files.javascript.rules.lang.security.audit.unsafe-dynamic-method,"Using non-static data to retrieve and run functions from the object is dangerous. If the data is user-controlled, it may allow executing arbitrary code."
04a79e97af826c0624bafeb853d4c9ac,3,11,5,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
04a79e97af826c0624bafeb853d4c9ac,3,11,5,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `parentDiv.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
04c5d6ab57211775e2eb50e05d1754ca,0,56,21,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
04c5d6ab57211775e2eb50e05d1754ca,0,56,21,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `tempElement.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
04c5d6ab57211775e2eb50e05d1754ca,1,56,21,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
04c5d6ab57211775e2eb50e05d1754ca,1,56,21,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `tempElement.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
04c5d6ab57211775e2eb50e05d1754ca,3,59,17,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
04c5d6ab57211775e2eb50e05d1754ca,3,59,17,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `tempElement.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
04cb4435d7ab234f0302b86c72ceca79,0,19,5,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
04cb4435d7ab234f0302b86c72ceca79,0,19,5,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `menu.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
05a75f626c2ba6bbc9e72d9675843287,5,4,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
05a75f626c2ba6bbc9e72d9675843287,53,4,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
05a75f626c2ba6bbc9e72d9675843287,59,4,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
05a75f626c2ba6bbc9e72d9675843287,63,4,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
05a75f626c2ba6bbc9e72d9675843287,8,3,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
05bde848ced4d6678bb6c764885c00bc,13,2,7,files.javascript.rules.lang.security.audit.detect-non-literal-require,"Detected the use of require(variable). Calling require with a non-literal argument might allow an attacker to load and run arbitrary code, or access arbitrary files."
05bde848ced4d6678bb6c764885c00bc,16,2,5,files.javascript.rules.lang.security.audit.detect-non-literal-require,"Detected the use of require(variable). Calling require with a non-literal argument might allow an attacker to load and run arbitrary code, or access arbitrary files."
05bde848ced4d6678bb6c764885c00bc,17,6,5,files.javascript.rules.lang.security.audit.detect-non-literal-require,"Detected the use of require(variable). Calling require with a non-literal argument might allow an attacker to load and run arbitrary code, or access arbitrary files."
05bde848ced4d6678bb6c764885c00bc,9,2,5,files.javascript.rules.lang.security.audit.detect-non-literal-require,"Detected the use of require(variable). Calling require with a non-literal argument might allow an attacker to load and run arbitrary code, or access arbitrary files."
06313a257120937130f5afc3e90c89b2,0,35,14,files.javascript.rules.express.security.audit.xss.direct-response-write,"Detected directly writing to a Response object from user-defined input. This bypasses any HTML escaping and may expose your application to a Cross-Site-scripting (XSS) vulnerability. Instead, use 'resp.render()' to render safely escaped HTML."
06313a257120937130f5afc3e90c89b2,8,5,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
06561b316e249f88a60e2606211ba65d,0,5,5,files.javascript.rules.lang.security.audit.detect-non-literal-require,"Detected the use of require(variable). Calling require with a non-literal argument might allow an attacker to load and run arbitrary code, or access arbitrary files."
06561b316e249f88a60e2606211ba65d,2,5,5,files.javascript.rules.lang.security.audit.detect-non-literal-require,"Detected the use of require(variable). Calling require with a non-literal argument might allow an attacker to load and run arbitrary code, or access arbitrary files."
06561b316e249f88a60e2606211ba65d,3,5,5,files.javascript.rules.lang.security.audit.detect-non-literal-require,"Detected the use of require(variable). Calling require with a non-literal argument might allow an attacker to load and run arbitrary code, or access arbitrary files."
06561b316e249f88a60e2606211ba65d,4,5,5,files.javascript.rules.lang.security.audit.detect-non-literal-require,"Detected the use of require(variable). Calling require with a non-literal argument might allow an attacker to load and run arbitrary code, or access arbitrary files."
06f5f82e476d114dd3abb0c2219a90d1,0,12,3,files.javascript.rules.jquery.security.audit.jquery-insecure-method,User controlled data in a jQuery's `.after(...)` is an anti-pattern that can lead to XSS vulnerabilities
06f5f82e476d114dd3abb0c2219a90d1,1,9,3,files.javascript.rules.jquery.security.audit.jquery-insecure-method,User controlled data in a jQuery's `.append(...)` is an anti-pattern that can lead to XSS vulnerabilities
0712e1d477421c48e1e8b06aefc6417a,2,2,5,files.javascript.rules.lang.security.audit.unsafe-dynamic-method,"Using non-static data to retrieve and run functions from the object is dangerous. If the data is user-controlled, it may allow executing arbitrary code."
0754597eb578db264188f79b0d4c519d,1,18,5,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
0754597eb578db264188f79b0d4c519d,1,18,5,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `productElement.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
0754597eb578db264188f79b0d4c519d,1,18,32,files.javascript.rules.lang.security.html-in-template-string,"This template literal looks like HTML and has interpolated variables. These variables are not HTML-encoded by default. If the variables contain HTML tags, these may be interpreted by the browser, resulting in cross-site scripting (XSS)."
0754597eb578db264188f79b0d4c519d,1,52,5,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
0754597eb578db264188f79b0d4c519d,1,52,5,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `cartItemElement.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
0754597eb578db264188f79b0d4c519d,1,52,33,files.javascript.rules.lang.security.html-in-template-string,"This template literal looks like HTML and has interpolated variables. These variables are not HTML-encoded by default. If the variables contain HTML tags, these may be interpreted by the browser, resulting in cross-site scripting (XSS)."
0754597eb578db264188f79b0d4c519d,3,14,3,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
0754597eb578db264188f79b0d4c519d,3,14,3,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `output.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
077deefb20dfab5239785289ccd064e8,4,7,7,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
077deefb20dfab5239785289ccd064e8,4,7,7,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `savedDataDiv.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
07cd08a1f667bfecc3144eefa87cb5b0,1,24,3,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
07cd08a1f667bfecc3144eefa87cb5b0,1,24,3,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `countryDetails.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
08617d546205e682e15fec7c5aa592c6,1,48,65,files.javascript.rules.lang.security.audit.unknown-value-with-script-tag,"Cannot determine what 'url' is and it is used with a '<script>' tag. This could be susceptible to cross-site scripting (XSS). Ensure 'url' is not externally controlled, or sanitize this data."
08abbc4b1c5ad8341641cc03ab93c298,0,22,31,files.javascript.rules.lang.security.audit.detect-redos,"Detected the use of a regular expression `[\w-]+(?:\.[\w-]+)*@[A-Za-z0-9]+(?:\.[A-Za-z]{2,})+` which appears to be vulnerable to a Regular expression Denial-of-Service (ReDoS). For this reason, it is recommended to review the regex and ensure it is not vulnerable to catastrophic backtracking, and if possible use a library which offers default safety against ReDoS vulnerabilities."
092c323f0bdc82abdda424bdb901ab38,0,14,9,files.javascript.rules.lang.security.audit.prototype-pollution.prototype-pollution-loop,"Possibility of prototype polluting function detected. By adding or modifying attributes of an object prototype, it is possible to create attributes that exist on every object, or replace critical attributes with malicious ones. This can be problematic if the software depends on existence or non-existence of certain attributes, or uses pre-defined attributes of object prototype (such as hasOwnProperty, toString or valueOf). Possible mitigations might be: freezing the object prototype, using an object without prototypes (via Object.create(null) ), blocking modifications of attributes that resolve to object prototype, using Map instead of object."
092c323f0bdc82abdda424bdb901ab38,0,19,9,files.javascript.rules.lang.security.audit.prototype-pollution.prototype-pollution-loop,"Possibility of prototype polluting function detected. By adding or modifying attributes of an object prototype, it is possible to create attributes that exist on every object, or replace critical attributes with malicious ones. This can be problematic if the software depends on existence or non-existence of certain attributes, or uses pre-defined attributes of object prototype (such as hasOwnProperty, toString or valueOf). Possible mitigations might be: freezing the object prototype, using an object without prototypes (via Object.create(null) ), blocking modifications of attributes that resolve to object prototype, using Map instead of object."
09bb3de07eb0e196121c6da4254695c0,0,2,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
09d6529c3c1542e3cee58e6a9742407c,0,35,44,files.javascript.rules.lang.security.audit.unsafe-dynamic-method,"Using non-static data to retrieve and run functions from the object is dangerous. If the data is user-controlled, it may allow executing arbitrary code."
09dc91375b2b9e77ddff406eede3232f,2,2,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
09f22ba67c077371b2b8d45206edda93,6,2,28,files.javascript.rules.lang.security.detect-insecure-websocket,Insecure WebSocket Detected. WebSocket Secure (wss) should be used for all WebSocket connections.
0a27fe1aca94caf8dcde825ea48ce65f,17,12,17,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
0a27fe1aca94caf8dcde825ea48ce65f,17,12,17,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `tr.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
0a27fe1aca94caf8dcde825ea48ce65f,17,12,32,files.javascript.rules.lang.security.html-in-template-string,"This template literal looks like HTML and has interpolated variables. These variables are not HTML-encoded by default. If the variables contain HTML tags, these may be interpreted by the browser, resulting in cross-site scripting (XSS)."
0a7b7b6c16a5255ca4ca7d8719336256,0,3,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
0a936386e2ef4436e93aa076c6486fc7,1,7,3,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
0a936386e2ef4436e93aa076c6486fc7,1,7,3,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `paintingDiv.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
0a936386e2ef4436e93aa076c6486fc7,2,41,5,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
0a936386e2ef4436e93aa076c6486fc7,2,41,5,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `paintingDiv.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
0a936386e2ef4436e93aa076c6486fc7,3,42,5,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
0a936386e2ef4436e93aa076c6486fc7,3,42,5,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `paintingDiv.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
0a936386e2ef4436e93aa076c6486fc7,4,42,5,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
0a936386e2ef4436e93aa076c6486fc7,4,42,5,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `paintingDiv.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
0a936386e2ef4436e93aa076c6486fc7,6,49,3,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
0a936386e2ef4436e93aa076c6486fc7,6,49,3,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `paintingDiv.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
0abafdb6ffee6d148c7c8a84f4147b71,2,12,9,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
0abafdb6ffee6d148c7c8a84f4147b71,2,12,9,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `block.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
0abafdb6ffee6d148c7c8a84f4147b71,2,12,27,files.javascript.rules.lang.security.html-in-template-string,"This template literal looks like HTML and has interpolated variables. These variables are not HTML-encoded by default. If the variables contain HTML tags, these may be interpreted by the browser, resulting in cross-site scripting (XSS)."
0aec2194bf49f7e408dbffbdd5f2e297,0,38,13,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
0aec2194bf49f7e408dbffbdd5f2e297,0,38,13,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `tile.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
0afb5bcab7c087f422a43ad7a624dd88,3,8,7,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
0afb5bcab7c087f422a43ad7a624dd88,3,8,7,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `box.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
0afb5bcab7c087f422a43ad7a624dd88,3,8,24,files.javascript.rules.lang.security.html-in-template-string,"This template literal looks like HTML and has interpolated variables. These variables are not HTML-encoded by default. If the variables contain HTML tags, these may be interpreted by the browser, resulting in cross-site scripting (XSS)."
0b3817fb44f95d8be5e52b532b63018f,0,45,13,files.javascript.rules.lang.security.audit.unsafe-dynamic-method,"Using non-static data to retrieve and run functions from the object is dangerous. If the data is user-controlled, it may allow executing arbitrary code."
0babbff5ac35c3f8dbe51a67115aa48b,4,18,10,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
0babbff5ac35c3f8dbe51a67115aa48b,8,6,10,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
0c4a333f86065f1a38044cd8b6d9c3ad,0,4,10,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
0caffc81c23d4f374ef9abb48c758088,0,3,10,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
0caffc81c23d4f374ef9abb48c758088,13,5,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
0caffc81c23d4f374ef9abb48c758088,16,2,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
0caffc81c23d4f374ef9abb48c758088,20,2,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
0caffc81c23d4f374ef9abb48c758088,8,3,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
0d4aab6fe2bb3e38fdb4b3eecaa4764d,3,4,9,files.javascript.rules.jquery.security.audit.jquery-insecure-method,User controlled data in a jQuery's `.append(...)` is an anti-pattern that can lead to XSS vulnerabilities
0d4aab6fe2bb3e38fdb4b3eecaa4764d,3,4,48,files.javascript.rules.jquery.security.audit.prohibit-jquery-html,"JQuery's `html` function is susceptible to Cross Site Scripting (XSS) attacks. If you're just passing text, consider `text` instead. Otherwise, use a function that escapes HTML such as edX's `HtmlUtils.setHtml()`."
0d4aab6fe2bb3e38fdb4b3eecaa4764d,7,29,9,files.javascript.rules.jquery.security.audit.jquery-insecure-method,User controlled data in a jQuery's `.append(...)` is an anti-pattern that can lead to XSS vulnerabilities
0d5f4fb7b1c5b1d67ac902aeea4de94b,10,70,7,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
0d5f4fb7b1c5b1d67ac902aeea4de94b,10,70,7,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `th.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
0d5f4fb7b1c5b1d67ac902aeea4de94b,10,86,7,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
0d5f4fb7b1c5b1d67ac902aeea4de94b,10,86,7,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `td.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
0d5f4fb7b1c5b1d67ac902aeea4de94b,11,9,5,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
0d5f4fb7b1c5b1d67ac902aeea4de94b,11,9,5,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `td.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
0d5f4fb7b1c5b1d67ac902aeea4de94b,12,45,5,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
0d5f4fb7b1c5b1d67ac902aeea4de94b,12,45,5,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `td.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
0d5f4fb7b1c5b1d67ac902aeea4de94b,13,48,29,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
0d5f4fb7b1c5b1d67ac902aeea4de94b,13,48,29,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `cell.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
0d95d78a5dc00cca5b94704edc41b9d5,1,20,3,files.javascript.rules.jquery.security.audit.jquery-insecure-method,User controlled data in a jQuery's `.append(...)` is an anti-pattern that can lead to XSS vulnerabilities
0d95d78a5dc00cca5b94704edc41b9d5,1,21,3,files.javascript.rules.jquery.security.audit.jquery-insecure-method,User controlled data in a jQuery's `.append(...)` is an anti-pattern that can lead to XSS vulnerabilities
0d95d78a5dc00cca5b94704edc41b9d5,1,22,3,files.javascript.rules.jquery.security.audit.jquery-insecure-method,User controlled data in a jQuery's `.append(...)` is an anti-pattern that can lead to XSS vulnerabilities
0d95d78a5dc00cca5b94704edc41b9d5,1,26,5,files.javascript.rules.jquery.security.audit.jquery-insecure-method,User controlled data in a jQuery's `.append(...)` is an anti-pattern that can lead to XSS vulnerabilities
0d95d78a5dc00cca5b94704edc41b9d5,1,27,5,files.javascript.rules.jquery.security.audit.jquery-insecure-method,User controlled data in a jQuery's `.append(...)` is an anti-pattern that can lead to XSS vulnerabilities
0d95d78a5dc00cca5b94704edc41b9d5,1,28,5,files.javascript.rules.jquery.security.audit.jquery-insecure-method,User controlled data in a jQuery's `.append(...)` is an anti-pattern that can lead to XSS vulnerabilities
0dae168cdcf3bddb941ba543977d9b65,2,34,5,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
0dae168cdcf3bddb941ba543977d9b65,2,34,5,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `cartItems.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
0dae168cdcf3bddb941ba543977d9b65,2,50,5,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
0dae168cdcf3bddb941ba543977d9b65,2,50,5,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `productsGrid.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
0dae168cdcf3bddb941ba543977d9b65,2,52,26,files.javascript.rules.lang.security.html-in-template-string,"This template literal looks like HTML and has interpolated variables. These variables are not HTML-encoded by default. If the variables contain HTML tags, these may be interpreted by the browser, resulting in cross-site scripting (XSS)."
0e214eff2ec3d9731689667ee61a22e7,1,17,5,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
0e214eff2ec3d9731689667ee61a22e7,1,17,5,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `contentElement.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
0e214eff2ec3d9731689667ee61a22e7,4,17,5,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
0e214eff2ec3d9731689667ee61a22e7,4,17,5,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `contentElement.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
0e3b3a2cbd0b70610b010c7b4a3a253a,1,2,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
0e873ec6832f5ea6a9d92b3c4bbbcbfb,0,9,3,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
0e873ec6832f5ea6a9d92b3c4bbbcbfb,0,9,3,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `streetviewDiv.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
0e98ca0d856c695ac00ffe89c207f1aa,0,5,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
0f148de95320fc560608663eeeddb118,0,4,9,files.javascript.rules.lang.security.audit.detect-non-literal-require,"Detected the use of require(variable). Calling require with a non-literal argument might allow an attacker to load and run arbitrary code, or access arbitrary files."
0f148de95320fc560608663eeeddb118,0,8,9,files.javascript.rules.lang.security.audit.detect-non-literal-require,"Detected the use of require(variable). Calling require with a non-literal argument might allow an attacker to load and run arbitrary code, or access arbitrary files."
0f7431549ab2973a614ff16bba19c384,0,4,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
0f7431549ab2973a614ff16bba19c384,0,38,53,files.javascript.rules.express.security.injection.tainted-sql-string,"Detected user input used to manually construct a SQL string. This is usually bad practice because manual construction could accidentally result in a SQL injection. An attacker could use a SQL injection to steal or modify contents of the database. Instead, use a parameterized query which is available by default in most database engines. Alternatively, consider using an object-relational mapper (ORM) such as Sequelize which will protect your queries."
0f7431549ab2973a614ff16bba19c384,0,51,74,files.javascript.rules.express.security.injection.tainted-sql-string,"Detected user input used to manually construct a SQL string. This is usually bad practice because manual construction could accidentally result in a SQL injection. An attacker could use a SQL injection to steal or modify contents of the database. Instead, use a parameterized query which is available by default in most database engines. Alternatively, consider using an object-relational mapper (ORM) such as Sequelize which will protect your queries."
0f7431549ab2973a614ff16bba19c384,1,4,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
0f7431549ab2973a614ff16bba19c384,2,4,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
0fa3a3b1a90a58ccfb20531616785081,2,11,9,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
0fa3a3b1a90a58ccfb20531616785081,2,11,9,files.javascript.rules.browser.security.insecure-innerhtml,"User controlled data in a `document.getElementById(""betting"").innerHTML` is an anti-pattern that can lead to XSS vulnerabilities"
0fba8f06f8886f010d55caf056ac4b3a,21,42,21,files.javascript.rules.lang.security.audit.unsafe-formatstring,"Detected string concatenation with a non-literal variable in a util.format / console.log function. If an attacker injects a format specifier in the string, it will forge the log message. Try to use constant values for the format string."
100c17949d567de96bafd3105fac291c,5,8,3,files.javascript.rules.browser.security.wildcard-postmessage-configuration,"The target origin of the window.postMessage() API is set to ""*"". This could allow for information disclosure due to the possibility of any origin allowed to receive the message."
1025677f864027ba2990fd30bb8593c1,0,6,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
1025677f864027ba2990fd30bb8593c1,0,28,22,files.javascript.rules.lang.security.audit.detect-non-literal-fs-filename,"Detected that function argument `{ name, data }` has entered the fs module. An attacker could potentially control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are validated."
1025677f864027ba2990fd30bb8593c1,12,8,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
1025677f864027ba2990fd30bb8593c1,18,33,52,files.javascript.rules.lang.security.audit.path-traversal.path-join-resolve-traversal,"Detected possible user input going into a `path.join` or `path.resolve` function. This could possibly lead to a path traversal vulnerability,  where the attacker can access arbitrary files stored in the file system. Instead, be sure to sanitize or validate user input first."
1025677f864027ba2990fd30bb8593c1,18,35,26,files.javascript.rules.lang.security.audit.detect-non-literal-fs-filename,"Detected that function argument `message` has entered the fs module. An attacker could potentially control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are validated."
1025677f864027ba2990fd30bb8593c1,20,13,47,files.javascript.rules.lang.security.audit.path-traversal.path-join-resolve-traversal,"Detected possible user input going into a `path.join` or `path.resolve` function. This could possibly lead to a path traversal vulnerability,  where the attacker can access arbitrary files stored in the file system. Instead, be sure to sanitize or validate user input first."
1025677f864027ba2990fd30bb8593c1,20,14,27,files.javascript.rules.lang.security.audit.detect-non-literal-fs-filename,"Detected that function argument `req` has entered the fs module. An attacker could potentially control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are validated."
1025677f864027ba2990fd30bb8593c1,20,16,33,files.javascript.rules.lang.security.audit.detect-non-literal-fs-filename,"Detected that function argument `req` has entered the fs module. An attacker could potentially control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are validated."
1025677f864027ba2990fd30bb8593c1,24,8,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
1025677f864027ba2990fd30bb8593c1,6,8,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
1025677f864027ba2990fd30bb8593c1,6,35,22,files.javascript.rules.lang.security.audit.detect-non-literal-fs-filename,"Detected that function argument `{ name, data }` has entered the fs module. An attacker could potentially control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are validated."
1025677f864027ba2990fd30bb8593c1,6,35,54,files.javascript.rules.lang.security.audit.path-traversal.path-join-resolve-traversal,"Detected possible user input going into a `path.join` or `path.resolve` function. This could possibly lead to a path traversal vulnerability,  where the attacker can access arbitrary files stored in the file system. Instead, be sure to sanitize or validate user input first."
1068497335960c5cf43eeefb691416fc,2,18,3,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
1068497335960c5cf43eeefb691416fc,2,18,3,files.javascript.rules.browser.security.insecure-innerhtml,"User controlled data in a `document.getElementById(""uptime"").innerHTML` is an anti-pattern that can lead to XSS vulnerabilities"
10d2ac329f96b7a6140a332ee220078e,0,12,9,files.javascript.rules.jquery.security.audit.jquery-insecure-method,User controlled data in a jQuery's `.append(...)` is an anti-pattern that can lead to XSS vulnerabilities
10d2ac329f96b7a6140a332ee220078e,0,13,9,files.javascript.rules.jquery.security.audit.jquery-insecure-method,User controlled data in a jQuery's `.append(...)` is an anti-pattern that can lead to XSS vulnerabilities
10d2ac329f96b7a6140a332ee220078e,0,15,5,files.javascript.rules.jquery.security.audit.jquery-insecure-method,User controlled data in a jQuery's `.append(...)` is an anti-pattern that can lead to XSS vulnerabilities
110cc72c7f530c5755e5bfe6f6bff9c9,9,15,21,files.javascript.rules.jsonwebtoken.security.hardcoded-jwt-secret,"A hard-coded credential was detected. It is not recommended to store credentials in source-code, as this risks secrets being leaked and used by either an internal or external malicious adversary. It is recommended to use environment variables to securely provide credentials or retrieve credentials from a secure vault or HSM (Hardware Security Module)."
1146ad36026378628c0590e909858509,2,18,9,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
1146ad36026378628c0590e909858509,2,18,9,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `ayahElement.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
119e8cdbaefa9fcb665612b75f11f4da,0,9,20,files.javascript.rules.lang.security.html-in-template-string,"This template literal looks like HTML and has interpolated variables. These variables are not HTML-encoded by default. If the variables contain HTML tags, these may be interpreted by the browser, resulting in cross-site scripting (XSS)."
11e3c4f2e9f59425d2742693052235cb,5,2,26,files.javascript.rules.browser.security.js-open-redirect-from-function,The application accepts potentially user-controlled input `page` which can control the location of the current window context. This can lead two types of vulnerabilities open-redirection and Cross-Site-Scripting (XSS) with JavaScript URIs. It is recommended to validate user-controllable input before allowing it to control the redirection.
1272d1851bdf839255126674ceb2c1e9,0,9,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
12c6746b8dddb70bc2dec5c5dc389a6a,4,3,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
12d90b3e27958c634778b039aa7422ca,0,30,21,files.javascript.rules.jquery.security.audit.jquery-insecure-method,User controlled data in a jQuery's `.append(...)` is an anti-pattern that can lead to XSS vulnerabilities
12fdb03453117859b8189b5db7ddbcd3,0,12,3,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
12fdb03453117859b8189b5db7ddbcd3,0,12,3,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `content.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
13066b01a19e50527dcca3bf4a1dbbe1,2,25,3,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
13066b01a19e50527dcca3bf4a1dbbe1,2,25,3,files.javascript.rules.browser.security.insecure-innerhtml,"User controlled data in a `document.getElementById(""question"").innerHTML` is an anti-pattern that can lead to XSS vulnerabilities"
13066b01a19e50527dcca3bf4a1dbbe1,2,70,3,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
13066b01a19e50527dcca3bf4a1dbbe1,2,70,3,files.javascript.rules.browser.security.insecure-innerhtml,"User controlled data in a `document.getElementById(""result"").innerHTML` is an anti-pattern that can lead to XSS vulnerabilities"
13a894cf5860a9832ff4c3dc06f2b44a,1,7,7,files.javascript.rules.jquery.security.audit.jquery-insecure-selector,User controlled data in a `$(...)` is an anti-pattern that can lead to XSS vulnerabilities
13a894cf5860a9832ff4c3dc06f2b44a,1,18,1,files.javascript.rules.jquery.security.audit.jquery-insecure-method,User controlled data in a jQuery's `.append(...)` is an anti-pattern that can lead to XSS vulnerabilities
13bb90c0f2c8ef2dcb3bdadbc9f220c9,2,15,23,files.javascript.rules.jquery.security.audit.jquery-insecure-method,User controlled data in a jQuery's `.append(...)` is an anti-pattern that can lead to XSS vulnerabilities
13bb90c0f2c8ef2dcb3bdadbc9f220c9,2,20,13,files.javascript.rules.jquery.security.audit.jquery-insecure-method,User controlled data in a jQuery's `.append(...)` is an anti-pattern that can lead to XSS vulnerabilities
13bb90c0f2c8ef2dcb3bdadbc9f220c9,2,28,23,files.javascript.rules.jquery.security.audit.jquery-insecure-method,User controlled data in a jQuery's `.append(...)` is an anti-pattern that can lead to XSS vulnerabilities
13bb90c0f2c8ef2dcb3bdadbc9f220c9,2,35,13,files.javascript.rules.jquery.security.audit.jquery-insecure-method,User controlled data in a jQuery's `.append(...)` is an anti-pattern that can lead to XSS vulnerabilities
13bb90c0f2c8ef2dcb3bdadbc9f220c9,2,53,23,files.javascript.rules.jquery.security.audit.jquery-insecure-method,User controlled data in a jQuery's `.append(...)` is an anti-pattern that can lead to XSS vulnerabilities
13bb90c0f2c8ef2dcb3bdadbc9f220c9,2,60,13,files.javascript.rules.jquery.security.audit.jquery-insecure-method,User controlled data in a jQuery's `.append(...)` is an anti-pattern that can lead to XSS vulnerabilities
13c0e9963fe6ae37fb30e427b0a8f9e3,0,33,1,files.javascript.rules.browser.security.insufficient-postmessage-origin-validation,No validation of origin is done by the addEventListener API. It may be possible to exploit this flaw to perform Cross Origin attacks such as Cross-Site Scripting(XSS).
13c0e9963fe6ae37fb30e427b0a8f9e3,2,30,1,files.javascript.rules.browser.security.insufficient-postmessage-origin-validation,No validation of origin is done by the addEventListener API. It may be possible to exploit this flaw to perform Cross Origin attacks such as Cross-Site Scripting(XSS).
13c0e9963fe6ae37fb30e427b0a8f9e3,3,6,5,files.javascript.rules.browser.security.eval-detected,"Detected the use of eval(). eval() can be dangerous if used to evaluate dynamic content. If this content can be input from outside the program, this may be a code injection vulnerability. Ensure evaluated content is not definable by external sources."
13c0e9963fe6ae37fb30e427b0a8f9e3,8,3,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
13d4a279ce7252ca4370a505d43fb89e,0,3,3,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
13d4a279ce7252ca4370a505d43fb89e,0,3,3,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `jakajaElementit[1].innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
13d4a279ce7252ca4370a505d43fb89e,0,10,9,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
13d4a279ce7252ca4370a505d43fb89e,0,10,9,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `jakajaElementit[showCardIndex].innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
13e308c6996ed275981bde4ac675436c,0,10,9,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
13e308c6996ed275981bde4ac675436c,0,11,9,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
13e308c6996ed275981bde4ac675436c,0,12,9,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
13e308c6996ed275981bde4ac675436c,0,13,9,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
140548f3b59f0b7ec98694552390f31c,2,51,3,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
140548f3b59f0b7ec98694552390f31c,2,51,3,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `emojiContainer.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
142866779587653bdf30a35397ef7dd6,0,2,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
14a77881d6ed028048d1ad641b9a9536,2,21,24,files.javascript.rules.lang.security.html-in-template-string,"This template literal looks like HTML and has interpolated variables. These variables are not HTML-encoded by default. If the variables contain HTML tags, these may be interpreted by the browser, resulting in cross-site scripting (XSS)."
14a77881d6ed028048d1ad641b9a9536,2,22,28,files.javascript.rules.lang.security.html-in-template-string,"This template literal looks like HTML and has interpolated variables. These variables are not HTML-encoded by default. If the variables contain HTML tags, these may be interpreted by the browser, resulting in cross-site scripting (XSS)."
14a77881d6ed028048d1ad641b9a9536,2,27,9,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
14a77881d6ed028048d1ad641b9a9536,2,27,9,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `papersContainer.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
14a77881d6ed028048d1ad641b9a9536,3,2,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
1565851bf219e60779d63935c238e300,0,9,3,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
1565851bf219e60779d63935c238e300,0,9,3,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `paintingDiv.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
15d7be76b53edbf68074c510c98a6d74,0,6,21,files.javascript.rules.lang.security.audit.detect-non-literal-regexp,"RegExp() called with a `name` function argument, this might allow an attacker to cause a Regular Expression Denial-of-Service (ReDoS) within your application as RegExP blocks the main thread. For this reason, it is recommended to use hardcoded regexes instead. If your regex is run on user-controlled input, consider performing input validation or use a regex checking/sanitization library such as https://www.npmjs.com/package/recheck to verify that the regex does not appear vulnerable to ReDoS."
15e91cc4caa6842d9e77353d57b20da1,0,34,9,files.javascript.rules.jquery.security.audit.prohibit-jquery-html,"JQuery's `html` function is susceptible to Cross Site Scripting (XSS) attacks. If you're just passing text, consider `text` instead. Otherwise, use a function that escapes HTML such as edX's `HtmlUtils.setHtml()`."
15e91cc4caa6842d9e77353d57b20da1,0,41,3,files.javascript.rules.jquery.security.audit.jquery-insecure-method,User controlled data in a jQuery's `.after(...)` is an anti-pattern that can lead to XSS vulnerabilities
1624f8ed1b75b29f9208201505ae1494,11,17,9,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
1624f8ed1b75b29f9208201505ae1494,11,17,9,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `div.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
1624f8ed1b75b29f9208201505ae1494,11,17,25,files.javascript.rules.lang.security.html-in-template-string,"This template literal looks like HTML and has interpolated variables. These variables are not HTML-encoded by default. If the variables contain HTML tags, these may be interpreted by the browser, resulting in cross-site scripting (XSS)."
1624f8ed1b75b29f9208201505ae1494,16,8,37,files.javascript.rules.lang.security.html-in-template-string,"This template literal looks like HTML and has interpolated variables. These variables are not HTML-encoded by default. If the variables contain HTML tags, these may be interpreted by the browser, resulting in cross-site scripting (XSS)."
1624f8ed1b75b29f9208201505ae1494,16,11,37,files.javascript.rules.lang.security.html-in-template-string,"This template literal looks like HTML and has interpolated variables. These variables are not HTML-encoded by default. If the variables contain HTML tags, these may be interpreted by the browser, resulting in cross-site scripting (XSS)."
1624f8ed1b75b29f9208201505ae1494,16,14,37,files.javascript.rules.lang.security.html-in-template-string,"This template literal looks like HTML and has interpolated variables. These variables are not HTML-encoded by default. If the variables contain HTML tags, these may be interpreted by the browser, resulting in cross-site scripting (XSS)."
1624f8ed1b75b29f9208201505ae1494,16,23,5,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
1624f8ed1b75b29f9208201505ae1494,16,23,5,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `div.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
16560fd3786ee183df3feeb163a101da,1,15,17,files.javascript.rules.jquery.security.audit.jquery-insecure-method,User controlled data in a jQuery's `.html(...)` is an anti-pattern that can lead to XSS vulnerabilities
16560fd3786ee183df3feeb163a101da,1,15,17,files.javascript.rules.jquery.security.audit.prohibit-jquery-html,"JQuery's `html` function is susceptible to Cross Site Scripting (XSS) attacks. If you're just passing text, consider `text` instead. Otherwise, use a function that escapes HTML such as edX's `HtmlUtils.setHtml()`."
16560fd3786ee183df3feeb163a101da,1,31,17,files.javascript.rules.jquery.security.audit.jquery-insecure-method,User controlled data in a jQuery's `.html(...)` is an anti-pattern that can lead to XSS vulnerabilities
16560fd3786ee183df3feeb163a101da,1,31,17,files.javascript.rules.jquery.security.audit.prohibit-jquery-html,"JQuery's `html` function is susceptible to Cross Site Scripting (XSS) attacks. If you're just passing text, consider `text` instead. Otherwise, use a function that escapes HTML such as edX's `HtmlUtils.setHtml()`."
16913aaca26602ba328bb59a4105a623,1,4,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
16f39b58e0216088fb1e6f76405c7dab,1,2,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
178491575c69f353a182f05dc3561317,10,11,17,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
178491575c69f353a182f05dc3561317,10,11,17,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `row.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
178491575c69f353a182f05dc3561317,10,11,33,files.javascript.rules.lang.security.html-in-template-string,"This template literal looks like HTML and has interpolated variables. These variables are not HTML-encoded by default. If the variables contain HTML tags, these may be interpreted by the browser, resulting in cross-site scripting (XSS)."
178491575c69f353a182f05dc3561317,2,11,17,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
178491575c69f353a182f05dc3561317,2,11,17,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `row.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
178491575c69f353a182f05dc3561317,2,11,33,files.javascript.rules.lang.security.html-in-template-string,"This template literal looks like HTML and has interpolated variables. These variables are not HTML-encoded by default. If the variables contain HTML tags, these may be interpreted by the browser, resulting in cross-site scripting (XSS)."
178491575c69f353a182f05dc3561317,6,11,17,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
178491575c69f353a182f05dc3561317,6,11,17,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `row.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
178491575c69f353a182f05dc3561317,6,11,33,files.javascript.rules.lang.security.html-in-template-string,"This template literal looks like HTML and has interpolated variables. These variables are not HTML-encoded by default. If the variables contain HTML tags, these may be interpreted by the browser, resulting in cross-site scripting (XSS)."
178849643cc75599aad6f249797577ed,0,34,9,files.javascript.rules.jquery.security.audit.jquery-insecure-method,User controlled data in a jQuery's `.append(...)` is an anti-pattern that can lead to XSS vulnerabilities
178849643cc75599aad6f249797577ed,0,58,8,files.javascript.rules.jquery.security.audit.jquery-insecure-method,User controlled data in a jQuery's `.append(...)` is an anti-pattern that can lead to XSS vulnerabilities
179910ee682f93e39cdfc45f45d86878,0,28,25,files.javascript.rules.lang.security.audit.unsafe-formatstring,"Detected string concatenation with a non-literal variable in a util.format / console.log function. If an attacker injects a format specifier in the string, it will forge the log message. Try to use constant values for the format string."
179910ee682f93e39cdfc45f45d86878,0,30,25,files.javascript.rules.lang.security.audit.unsafe-formatstring,"Detected string concatenation with a non-literal variable in a util.format / console.log function. If an attacker injects a format specifier in the string, it will forge the log message. Try to use constant values for the format string."
179910ee682f93e39cdfc45f45d86878,0,42,21,files.javascript.rules.lang.security.audit.unsafe-formatstring,"Detected string concatenation with a non-literal variable in a util.format / console.log function. If an attacker injects a format specifier in the string, it will forge the log message. Try to use constant values for the format string."
17a0183d6b82f697cfbf585be3b2e7bc,3,2,13,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
17bfa45c4bc2ca47aa9b965efaff4df2,0,31,9,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
17bfa45c4bc2ca47aa9b965efaff4df2,0,31,9,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `summaryOutput.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
17bfa45c4bc2ca47aa9b965efaff4df2,0,31,35,files.javascript.rules.lang.security.html-in-template-string,"This template literal looks like HTML and has interpolated variables. These variables are not HTML-encoded by default. If the variables contain HTML tags, these may be interpreted by the browser, resulting in cross-site scripting (XSS)."
17bfa45c4bc2ca47aa9b965efaff4df2,0,43,9,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
17bfa45c4bc2ca47aa9b965efaff4df2,0,43,9,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `summaryOutput.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
17bfa45c4bc2ca47aa9b965efaff4df2,0,43,35,files.javascript.rules.lang.security.html-in-template-string,"This template literal looks like HTML and has interpolated variables. These variables are not HTML-encoded by default. If the variables contain HTML tags, these may be interpreted by the browser, resulting in cross-site scripting (XSS)."
183a1d24216627f4add802652f4b75d8,3,3,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
187cb5cde3d0663fe09ea8187aa4e22f,1,4,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
188acc1237cf88199cd1999cefa6765f,0,16,55,files.javascript.rules.lang.security.audit.path-traversal.path-join-resolve-traversal,"Detected possible user input going into a `path.join` or `path.resolve` function. This could possibly lead to a path traversal vulnerability,  where the attacker can access arbitrary files stored in the file system. Instead, be sure to sanitize or validate user input first."
18c6046f7529164829278cc4fceb8d7d,7,30,21,files.javascript.rules.lang.security.audit.unsafe-formatstring,"Detected string concatenation with a non-literal variable in a util.format / console.log function. If an attacker injects a format specifier in the string, it will forge the log message. Try to use constant values for the format string."
1937e30dbc19de16c009e89d299b7094,1,3,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
1937e30dbc19de16c009e89d299b7094,3,2,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
199a5c6fc19c8d14648e7845554ec9e4,0,3,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
1a2c274fad9d085139f67f5d57a867f3,5,1,25,files.javascript.rules.lang.security.detect-insecure-websocket,Insecure WebSocket Detected. WebSocket Secure (wss) should be used for all WebSocket connections.
1a9156d6d9be86666331a8b4e239dd7a,2,12,17,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
1a9156d6d9be86666331a8b4e239dd7a,2,12,17,files.javascript.rules.browser.security.insecure-innerhtml,"User controlled data in a `document.getElementById(""resultado"").innerHTML` is an anti-pattern that can lead to XSS vulnerabilities"
1a9156d6d9be86666331a8b4e239dd7a,2,15,17,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
1a9156d6d9be86666331a8b4e239dd7a,2,15,17,files.javascript.rules.browser.security.insecure-innerhtml,"User controlled data in a `document.getElementById(""resultado"").innerHTML` is an anti-pattern that can lead to XSS vulnerabilities"
1a9156d6d9be86666331a8b4e239dd7a,2,19,9,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
1a9156d6d9be86666331a8b4e239dd7a,2,19,9,files.javascript.rules.browser.security.insecure-innerhtml,"User controlled data in a `document.getElementById(""resultado"").innerHTML` is an anti-pattern that can lead to XSS vulnerabilities"
1a926f029cbe63592a031bf49c528e7f,3,1,27,files.javascript.rules.lang.security.detect-insecure-websocket,Insecure WebSocket Detected. WebSocket Secure (wss) should be used for all WebSocket connections.
1ab0d3eae04be408e30e6d30b506a86d,0,11,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
1aeec7acd934e2189cac123bc5f8cfda,2,18,3,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
1aeec7acd934e2189cac123bc5f8cfda,2,18,3,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `label.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
1b1f54b64cebc338c2dcff8f2de309f0,2,2,5,files.javascript.rules.lang.security.audit.detect-non-literal-require,"Detected the use of require(variable). Calling require with a non-literal argument might allow an attacker to load and run arbitrary code, or access arbitrary files."
1b1f54b64cebc338c2dcff8f2de309f0,2,5,5,files.javascript.rules.lang.security.audit.detect-non-literal-require,"Detected the use of require(variable). Calling require with a non-literal argument might allow an attacker to load and run arbitrary code, or access arbitrary files."
1b1f54b64cebc338c2dcff8f2de309f0,3,2,5,files.javascript.rules.lang.security.audit.detect-non-literal-require,"Detected the use of require(variable). Calling require with a non-literal argument might allow an attacker to load and run arbitrary code, or access arbitrary files."
1b1f54b64cebc338c2dcff8f2de309f0,3,5,5,files.javascript.rules.lang.security.audit.detect-non-literal-require,"Detected the use of require(variable). Calling require with a non-literal argument might allow an attacker to load and run arbitrary code, or access arbitrary files."
1b1f54b64cebc338c2dcff8f2de309f0,4,9,5,files.javascript.rules.lang.security.audit.detect-non-literal-require,"Detected the use of require(variable). Calling require with a non-literal argument might allow an attacker to load and run arbitrary code, or access arbitrary files."
1b1f54b64cebc338c2dcff8f2de309f0,4,14,5,files.javascript.rules.lang.security.audit.detect-non-literal-require,"Detected the use of require(variable). Calling require with a non-literal argument might allow an attacker to load and run arbitrary code, or access arbitrary files."
1b369ee12bb42b49f184572fa695978b,0,2,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
1bfb408026af1790cc0be81dab13e47f,2,9,5,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
1bfb408026af1790cc0be81dab13e47f,2,9,5,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `hoverText.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
1bfb408026af1790cc0be81dab13e47f,3,9,5,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
1bfb408026af1790cc0be81dab13e47f,3,9,5,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `hoverText.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
1bfb408026af1790cc0be81dab13e47f,4,8,1,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
1bfb408026af1790cc0be81dab13e47f,4,8,1,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `hoverText.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
1bfb408026af1790cc0be81dab13e47f,4,12,5,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
1bfb408026af1790cc0be81dab13e47f,4,12,5,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `hoverText.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
1bfb408026af1790cc0be81dab13e47f,4,16,5,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
1bfb408026af1790cc0be81dab13e47f,4,16,5,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `hoverText.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
1bfb408026af1790cc0be81dab13e47f,5,16,5,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
1bfb408026af1790cc0be81dab13e47f,5,16,5,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `myDiv.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
1c09ddca1946bc91f269f2aa47b91e46,1,12,17,files.javascript.rules.lang.security.audit.detect-non-literal-regexp,"RegExp() called with a `s` function argument, this might allow an attacker to cause a Regular Expression Denial-of-Service (ReDoS) within your application as RegExP blocks the main thread. For this reason, it is recommended to use hardcoded regexes instead. If your regex is run on user-controlled input, consider performing input validation or use a regex checking/sanitization library such as https://www.npmjs.com/package/recheck to verify that the regex does not appear vulnerable to ReDoS."
1c09ddca1946bc91f269f2aa47b91e46,10,12,17,files.javascript.rules.lang.security.audit.detect-non-literal-regexp,"RegExp() called with a `s` function argument, this might allow an attacker to cause a Regular Expression Denial-of-Service (ReDoS) within your application as RegExP blocks the main thread. For this reason, it is recommended to use hardcoded regexes instead. If your regex is run on user-controlled input, consider performing input validation or use a regex checking/sanitization library such as https://www.npmjs.com/package/recheck to verify that the regex does not appear vulnerable to ReDoS."
1c09ddca1946bc91f269f2aa47b91e46,5,12,17,files.javascript.rules.lang.security.audit.detect-non-literal-regexp,"RegExp() called with a `s` function argument, this might allow an attacker to cause a Regular Expression Denial-of-Service (ReDoS) within your application as RegExP blocks the main thread. For this reason, it is recommended to use hardcoded regexes instead. If your regex is run on user-controlled input, consider performing input validation or use a regex checking/sanitization library such as https://www.npmjs.com/package/recheck to verify that the regex does not appear vulnerable to ReDoS."
1c243e6f1781ed2c0cf9dfe308354503,2,7,1,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
1c243e6f1781ed2c0cf9dfe308354503,2,7,1,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `document.getElementById('output').innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
1c46fa394b43e89ef9f6ea967df6ead7,2,30,2,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
1c46fa394b43e89ef9f6ea967df6ead7,2,30,2,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `document.getElementById('result').innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
1d67410406dfe573c54031e4882896cc,1,5,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
1d7f780ad794c1029f579412efc79e15,0,2,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
1d7f780ad794c1029f579412efc79e15,1,2,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
1d7f780ad794c1029f579412efc79e15,2,2,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
1da25018767b325d0842abaa23da3680,0,3,27,files.javascript.rules.lang.security.detect-insecure-websocket,Insecure WebSocket Detected. WebSocket Secure (wss) should be used for all WebSocket connections.
1da25018767b325d0842abaa23da3680,1,3,27,files.javascript.rules.lang.security.detect-insecure-websocket,Insecure WebSocket Detected. WebSocket Secure (wss) should be used for all WebSocket connections.
1dad6a761f1a746c62cd9ee82e5b5d68,0,19,9,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
1dad6a761f1a746c62cd9ee82e5b5d68,0,19,9,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `quizDiv.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
1dad6a761f1a746c62cd9ee82e5b5d68,0,19,29,files.javascript.rules.lang.security.html-in-template-string,"This template literal looks like HTML and has interpolated variables. These variables are not HTML-encoded by default. If the variables contain HTML tags, these may be interpreted by the browser, resulting in cross-site scripting (XSS)."
1dad6a761f1a746c62cd9ee82e5b5d68,0,21,62,files.javascript.rules.lang.security.html-in-template-string,"This template literal looks like HTML and has interpolated variables. These variables are not HTML-encoded by default. If the variables contain HTML tags, these may be interpreted by the browser, resulting in cross-site scripting (XSS)."
1e307725dbab6006ef2929319e683695,0,16,13,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
1e90745645042e4da0877569af7de746,0,4,5,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
1e90745645042e4da0877569af7de746,0,4,5,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `result.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
1e90745645042e4da0877569af7de746,4,5,5,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
1e90745645042e4da0877569af7de746,4,5,5,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `result.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
1f0b3668c7d4639c3524b6c513979b35,0,11,32,files.javascript.rules.lang.security.audit.detect-non-literal-fs-filename,"Detected that function argument `filePath` has entered the fs module. An attacker could potentially control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are validated."
1f0b3668c7d4639c3524b6c513979b35,0,48,32,files.javascript.rules.lang.security.audit.detect-non-literal-fs-filename,"Detected that function argument `dirPath` has entered the fs module. An attacker could potentially control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are validated."
1f0b3668c7d4639c3524b6c513979b35,0,51,32,files.javascript.rules.lang.security.audit.path-traversal.path-join-resolve-traversal,"Detected possible user input going into a `path.join` or `path.resolve` function. This could possibly lead to a path traversal vulnerability,  where the attacker can access arbitrary files stored in the file system. Instead, be sure to sanitize or validate user input first."
1f0b3668c7d4639c3524b6c513979b35,0,51,41,files.javascript.rules.lang.security.audit.path-traversal.path-join-resolve-traversal,"Detected possible user input going into a `path.join` or `path.resolve` function. This could possibly lead to a path traversal vulnerability,  where the attacker can access arbitrary files stored in the file system. Instead, be sure to sanitize or validate user input first."
1f0b3668c7d4639c3524b6c513979b35,0,52,31,files.javascript.rules.lang.security.audit.detect-non-literal-fs-filename,"Detected that function argument `dirPath` has entered the fs module. An attacker could potentially control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are validated."
1f0b3668c7d4639c3524b6c513979b35,0,52,31,files.javascript.rules.lang.security.audit.detect-non-literal-fs-filename,"Detected that function argument `file` has entered the fs module. An attacker could potentially control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are validated."
1f1ed7b9fff3289d192e1be494670419,3,6,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
1fc8080c17109c216686c35474248f61,0,18,26,files.javascript.rules.lang.security.audit.unsafe-dynamic-method,"Using non-static data to retrieve and run functions from the object is dangerous. If the data is user-controlled, it may allow executing arbitrary code."
1fc8080c17109c216686c35474248f61,0,18,26,files.javascript.rules.lang.security.audit.unsafe-dynamic-method,"Using non-static data to retrieve and run functions from the object is dangerous. If the data is user-controlled, it may allow executing arbitrary code."
1fc8080c17109c216686c35474248f61,0,18,26,files.javascript.rules.lang.security.audit.unsafe-dynamic-method,"Using non-static data to retrieve and run functions from the object is dangerous. If the data is user-controlled, it may allow executing arbitrary code."
1fc8080c17109c216686c35474248f61,0,18,26,files.javascript.rules.lang.security.audit.unsafe-dynamic-method,"Using non-static data to retrieve and run functions from the object is dangerous. If the data is user-controlled, it may allow executing arbitrary code."
1fd87f593d5ce2c5bf3d0c2c41786969,3,6,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
1ffada29fc79ebd5aedd192eb6746e26,7,3,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
1ffada29fc79ebd5aedd192eb6746e26,8,4,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
20da8d26f10b2ff3b28377cb657d7ec4,10,4,10,files.javascript.rules.lang.security.audit.detect-redos,"Detected the use of a regular expression `^(https?:\/\/)?([\da-z\.-]+)\.([a-z\.]{2,6})([\/\w \.-]*)*\/?$` which appears to be vulnerable to a Regular expression Denial-of-Service (ReDoS). For this reason, it is recommended to review the regex and ensure it is not vulnerable to catastrophic backtracking, and if possible use a library which offers default safety against ReDoS vulnerabilities."
2104bb220fadcb5ddb575fe242aa3270,4,5,10,files.javascript.rules.lang.security.detect-child-process,"Detected calls to child_process from a function argument `inputFile`. This could lead to a command injection if the input is user controllable. Try to avoid calls to child_process, and if it is needed ensure user input is correctly sanitized or sandboxed. "
2104bb220fadcb5ddb575fe242aa3270,4,5,10,files.javascript.rules.lang.security.detect-child-process,"Detected calls to child_process from a function argument `outputFile`. This could lead to a command injection if the input is user controllable. Try to avoid calls to child_process, and if it is needed ensure user input is correctly sanitized or sandboxed. "
2104bb220fadcb5ddb575fe242aa3270,6,8,49,files.javascript.rules.lang.security.audit.detect-non-literal-fs-filename,"Detected that function argument `inputFile` has entered the fs module. An attacker could potentially control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are validated."
2104bb220fadcb5ddb575fe242aa3270,6,20,24,files.javascript.rules.lang.security.audit.detect-non-literal-fs-filename,"Detected that function argument `outputFile` has entered the fs module. An attacker could potentially control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are validated."
21268ac53a6772546d9f69858919fede,0,14,36,files.javascript.rules.lang.security.detect-insecure-websocket,Insecure WebSocket Detected. WebSocket Secure (wss) should be used for all WebSocket connections.
218c20facf3eff4807dff8b1aad6e0b0,1,1,25,files.javascript.rules.lang.security.detect-insecure-websocket,Insecure WebSocket Detected. WebSocket Secure (wss) should be used for all WebSocket connections.
225d296c773894955e73522e56709aa5,10,11,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
225d296c773894955e73522e56709aa5,6,9,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
22d05189f63f1052ff3763b453f9ca52,0,3,13,files.javascript.rules.lang.security.audit.detect-non-literal-regexp,"RegExp() called with a `name` function argument, this might allow an attacker to cause a Regular Expression Denial-of-Service (ReDoS) within your application as RegExP blocks the main thread. For this reason, it is recommended to use hardcoded regexes instead. If your regex is run on user-controlled input, consider performing input validation or use a regex checking/sanitization library such as https://www.npmjs.com/package/recheck to verify that the regex does not appear vulnerable to ReDoS."
22fa10aeed334aa512c4c6be363f9197,0,6,5,files.javascript.rules.lang.security.audit.detect-non-literal-require,"Detected the use of require(variable). Calling require with a non-literal argument might allow an attacker to load and run arbitrary code, or access arbitrary files."
2330cee2b5615a3f3f0283f895f814dd,1,5,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
2353c3e1144c65c0798c74d8cb643029,3,9,5,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
2353c3e1144c65c0798c74d8cb643029,3,9,5,files.javascript.rules.browser.security.insecure-innerhtml,"User controlled data in a `document.getElementById(""output"").innerHTML` is an anti-pattern that can lead to XSS vulnerabilities"
2353c3e1144c65c0798c74d8cb643029,6,19,9,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
2353c3e1144c65c0798c74d8cb643029,6,19,9,files.javascript.rules.browser.security.insecure-innerhtml,"User controlled data in a `document.getElementById(""output"").innerHTML` is an anti-pattern that can lead to XSS vulnerabilities"
2353c3e1144c65c0798c74d8cb643029,7,16,5,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
2353c3e1144c65c0798c74d8cb643029,7,16,5,files.javascript.rules.browser.security.insecure-innerhtml,"User controlled data in a `document.getElementById(""output"").innerHTML` is an anti-pattern that can lead to XSS vulnerabilities"
2357928f17d7ccdd971606fc9cc40694,3,4,5,files.javascript.rules.lang.security.audit.detect-non-literal-require,"Detected the use of require(variable). Calling require with a non-literal argument might allow an attacker to load and run arbitrary code, or access arbitrary files."
2357928f17d7ccdd971606fc9cc40694,3,6,5,files.javascript.rules.lang.security.audit.detect-non-literal-require,"Detected the use of require(variable). Calling require with a non-literal argument might allow an attacker to load and run arbitrary code, or access arbitrary files."
2357928f17d7ccdd971606fc9cc40694,3,13,9,files.javascript.rules.lang.security.audit.detect-non-literal-require,"Detected the use of require(variable). Calling require with a non-literal argument might allow an attacker to load and run arbitrary code, or access arbitrary files."
2357928f17d7ccdd971606fc9cc40694,4,5,5,files.javascript.rules.lang.security.audit.detect-non-literal-require,"Detected the use of require(variable). Calling require with a non-literal argument might allow an attacker to load and run arbitrary code, or access arbitrary files."
2357928f17d7ccdd971606fc9cc40694,4,7,5,files.javascript.rules.lang.security.audit.detect-non-literal-require,"Detected the use of require(variable). Calling require with a non-literal argument might allow an attacker to load and run arbitrary code, or access arbitrary files."
2357928f17d7ccdd971606fc9cc40694,4,14,9,files.javascript.rules.lang.security.audit.detect-non-literal-require,"Detected the use of require(variable). Calling require with a non-literal argument might allow an attacker to load and run arbitrary code, or access arbitrary files."
2357928f17d7ccdd971606fc9cc40694,5,4,5,files.javascript.rules.lang.security.audit.detect-non-literal-require,"Detected the use of require(variable). Calling require with a non-literal argument might allow an attacker to load and run arbitrary code, or access arbitrary files."
2357928f17d7ccdd971606fc9cc40694,5,6,5,files.javascript.rules.lang.security.audit.detect-non-literal-require,"Detected the use of require(variable). Calling require with a non-literal argument might allow an attacker to load and run arbitrary code, or access arbitrary files."
2357928f17d7ccdd971606fc9cc40694,5,13,9,files.javascript.rules.lang.security.audit.detect-non-literal-require,"Detected the use of require(variable). Calling require with a non-literal argument might allow an attacker to load and run arbitrary code, or access arbitrary files."
2357928f17d7ccdd971606fc9cc40694,6,4,5,files.javascript.rules.lang.security.audit.detect-non-literal-require,"Detected the use of require(variable). Calling require with a non-literal argument might allow an attacker to load and run arbitrary code, or access arbitrary files."
2357928f17d7ccdd971606fc9cc40694,6,6,5,files.javascript.rules.lang.security.audit.detect-non-literal-require,"Detected the use of require(variable). Calling require with a non-literal argument might allow an attacker to load and run arbitrary code, or access arbitrary files."
2357928f17d7ccdd971606fc9cc40694,6,13,9,files.javascript.rules.lang.security.audit.detect-non-literal-require,"Detected the use of require(variable). Calling require with a non-literal argument might allow an attacker to load and run arbitrary code, or access arbitrary files."
2357928f17d7ccdd971606fc9cc40694,7,5,5,files.javascript.rules.lang.security.audit.detect-non-literal-require,"Detected the use of require(variable). Calling require with a non-literal argument might allow an attacker to load and run arbitrary code, or access arbitrary files."
2357928f17d7ccdd971606fc9cc40694,7,7,5,files.javascript.rules.lang.security.audit.detect-non-literal-require,"Detected the use of require(variable). Calling require with a non-literal argument might allow an attacker to load and run arbitrary code, or access arbitrary files."
2357928f17d7ccdd971606fc9cc40694,7,14,9,files.javascript.rules.lang.security.audit.detect-non-literal-require,"Detected the use of require(variable). Calling require with a non-literal argument might allow an attacker to load and run arbitrary code, or access arbitrary files."
239488a9d43fd4e977e4285277c8907b,1,5,11,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
2418fec2961c15da78d2b62920789005,2,2,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
2443d20f454e186131d41dc7b91dae00,1,77,3,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
2443d20f454e186131d41dc7b91dae00,1,77,3,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `chatLog.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
2443d20f454e186131d41dc7b91dae00,1,77,24,files.javascript.rules.lang.security.html-in-template-string,"This template literal looks like HTML and has interpolated variables. These variables are not HTML-encoded by default. If the variables contain HTML tags, these may be interpreted by the browser, resulting in cross-site scripting (XSS)."
2443d20f454e186131d41dc7b91dae00,1,86,3,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
2443d20f454e186131d41dc7b91dae00,1,86,3,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `chatLog.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
2443d20f454e186131d41dc7b91dae00,1,86,24,files.javascript.rules.lang.security.html-in-template-string,"This template literal looks like HTML and has interpolated variables. These variables are not HTML-encoded by default. If the variables contain HTML tags, these may be interpreted by the browser, resulting in cross-site scripting (XSS)."
24922716856f4f59f09c8c18e1cfd3fb,0,1,31,files.javascript.rules.lang.security.detect-insecure-websocket,Insecure WebSocket Detected. WebSocket Secure (wss) should be used for all WebSocket connections.
24a423b2824b4001f214690168d7c7fe,7,5,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
24ba0f9c4bfc7f8de54380474e20b9ab,0,3,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
24ba0f9c4bfc7f8de54380474e20b9ab,2,4,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
24ba0f9c4bfc7f8de54380474e20b9ab,2,19,18,files.javascript.rules.jquery.security.audit.jquery-insecure-selector,User controlled data in a `$(...)` is an anti-pattern that can lead to XSS vulnerabilities
24ba0f9c4bfc7f8de54380474e20b9ab,2,20,16,files.javascript.rules.jquery.security.audit.jquery-insecure-selector,User controlled data in a `$(...)` is an anti-pattern that can lead to XSS vulnerabilities
24ba0f9c4bfc7f8de54380474e20b9ab,2,21,20,files.javascript.rules.jquery.security.audit.jquery-insecure-selector,User controlled data in a `$(...)` is an anti-pattern that can lead to XSS vulnerabilities
251769bd2488b0a4d84eca8c010b1645,3,4,10,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
2517be1324429ae3ca526b71801eed31,0,10,9,files.javascript.rules.jquery.security.audit.jquery-insecure-method,User controlled data in a jQuery's `.append(...)` is an anti-pattern that can lead to XSS vulnerabilities
259c5ecac1bb1a078335526e72ec09f2,1,4,4,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
259c5ecac1bb1a078335526e72ec09f2,1,4,4,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `button.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
259c5ecac1bb1a078335526e72ec09f2,10,4,4,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
259c5ecac1bb1a078335526e72ec09f2,10,4,4,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `button.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
259c5ecac1bb1a078335526e72ec09f2,10,35,4,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
259c5ecac1bb1a078335526e72ec09f2,10,35,4,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `tab.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
259c5ecac1bb1a078335526e72ec09f2,15,4,4,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
259c5ecac1bb1a078335526e72ec09f2,15,4,4,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `button.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
259c5ecac1bb1a078335526e72ec09f2,15,23,4,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
259c5ecac1bb1a078335526e72ec09f2,15,23,4,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `tab.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
259c5ecac1bb1a078335526e72ec09f2,3,4,4,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
259c5ecac1bb1a078335526e72ec09f2,3,4,4,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `button.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
259c5ecac1bb1a078335526e72ec09f2,6,6,4,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
259c5ecac1bb1a078335526e72ec09f2,6,6,4,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `tab.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
25a6566641d7e9c248992edc92e11255,1,7,17,files.javascript.rules.lang.security.html-in-template-string,"This template literal looks like HTML and has interpolated variables. These variables are not HTML-encoded by default. If the variables contain HTML tags, these may be interpreted by the browser, resulting in cross-site scripting (XSS)."
25bdd2d41ea3ea1af9af0e61e97cda51,4,10,14,files.javascript.rules.lang.security.html-in-template-string,"This template literal looks like HTML and has interpolated variables. These variables are not HTML-encoded by default. If the variables contain HTML tags, these may be interpreted by the browser, resulting in cross-site scripting (XSS)."
25bdd2d41ea3ea1af9af0e61e97cda51,4,14,14,files.javascript.rules.lang.security.html-in-template-string,"This template literal looks like HTML and has interpolated variables. These variables are not HTML-encoded by default. If the variables contain HTML tags, these may be interpreted by the browser, resulting in cross-site scripting (XSS)."
2641924ae0397e8950fbe4892bf4f76e,0,5,10,files.javascript.rules.lang.security.detect-child-process,"Detected calls to child_process from a function argument `filePath`. This could lead to a command injection if the input is user controllable. Try to avoid calls to child_process, and if it is needed ensure user input is correctly sanitized or sandboxed. "
266e751daf1dc13dface8ed8abcc6a3a,0,46,5,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
266e751daf1dc13dface8ed8abcc6a3a,0,46,5,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `quizScore.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
26d7bf8442e1d8a5c32e852ac3f5ff3c,10,2,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
26d7bf8442e1d8a5c32e852ac3f5ff3c,10,11,12,files.javascript.rules.express.security.audit.xss.direct-response-write,"Detected directly writing to a Response object from user-defined input. This bypasses any HTML escaping and may expose your application to a Cross-Site-scripting (XSS) vulnerability. Instead, use 'resp.render()' to render safely escaped HTML."
26d7bf8442e1d8a5c32e852ac3f5ff3c,13,3,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
26d7bf8442e1d8a5c32e852ac3f5ff3c,16,3,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
26d7bf8442e1d8a5c32e852ac3f5ff3c,6,2,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
27589a73c8c858fb0e75f6320a37f8e2,4,11,28,files.javascript.rules.browser.security.js-open-redirect-from-function,The application accepts potentially user-controlled input `ui` which can control the location of the current window context. This can lead two types of vulnerabilities open-redirection and Cross-Site-Scripting (XSS) with JavaScript URIs. It is recommended to validate user-controllable input before allowing it to control the redirection.
27a72360202bf86c6a794410d1b23299,0,18,71,files.javascript.rules.lang.security.html-in-template-string,"This template literal looks like HTML and has interpolated variables. These variables are not HTML-encoded by default. If the variables contain HTML tags, these may be interpreted by the browser, resulting in cross-site scripting (XSS)."
28493638605e0a64fe372da8e20b0475,2,5,5,files.javascript.rules.lang.security.audit.detect-non-literal-require,"Detected the use of require(variable). Calling require with a non-literal argument might allow an attacker to load and run arbitrary code, or access arbitrary files."
28493638605e0a64fe372da8e20b0475,3,5,5,files.javascript.rules.lang.security.audit.detect-non-literal-require,"Detected the use of require(variable). Calling require with a non-literal argument might allow an attacker to load and run arbitrary code, or access arbitrary files."
28493638605e0a64fe372da8e20b0475,4,5,5,files.javascript.rules.lang.security.audit.detect-non-literal-require,"Detected the use of require(variable). Calling require with a non-literal argument might allow an attacker to load and run arbitrary code, or access arbitrary files."
285452c3f653beaa0075c96b92fe72c3,1,13,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
28b80b1fee1abd118f9cef4ea1352d7d,3,2,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
28ba9c22312d1caf30c7e74b21eaf589,2,17,13,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
28ba9c22312d1caf30c7e74b21eaf589,2,17,13,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `block.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
28d4949da20e8c4d3752208fef40533a,11,17,21,files.javascript.rules.lang.security.audit.unsafe-formatstring,"Detected string concatenation with a non-literal variable in a util.format / console.log function. If an attacker injects a format specifier in the string, it will forge the log message. Try to use constant values for the format string."
28d4949da20e8c4d3752208fef40533a,9,17,21,files.javascript.rules.lang.security.audit.unsafe-formatstring,"Detected string concatenation with a non-literal variable in a util.format / console.log function. If an attacker injects a format specifier in the string, it will forge the log message. Try to use constant values for the format string."
29192411e9d6fb5cffcc8c13b00aa0f6,2,22,5,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
29192411e9d6fb5cffcc8c13b00aa0f6,2,22,5,files.javascript.rules.browser.security.insecure-innerhtml,"User controlled data in a `document.getElementById(""countdown"").innerHTML` is an anti-pattern that can lead to XSS vulnerabilities"
29192411e9d6fb5cffcc8c13b00aa0f6,2,31,5,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
29192411e9d6fb5cffcc8c13b00aa0f6,2,31,5,files.javascript.rules.browser.security.insecure-innerhtml,"User controlled data in a `document.getElementById(""countdown"").innerHTML` is an anti-pattern that can lead to XSS vulnerabilities"
29192411e9d6fb5cffcc8c13b00aa0f6,5,24,3,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
29192411e9d6fb5cffcc8c13b00aa0f6,5,24,3,files.javascript.rules.browser.security.insecure-innerhtml,"User controlled data in a `document.getElementById(""days"").innerHTML` is an anti-pattern that can lead to XSS vulnerabilities"
29192411e9d6fb5cffcc8c13b00aa0f6,5,25,3,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
29192411e9d6fb5cffcc8c13b00aa0f6,5,25,3,files.javascript.rules.browser.security.insecure-innerhtml,"User controlled data in a `document.getElementById(""hours"").innerHTML` is an anti-pattern that can lead to XSS vulnerabilities"
29192411e9d6fb5cffcc8c13b00aa0f6,5,26,3,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
29192411e9d6fb5cffcc8c13b00aa0f6,5,26,3,files.javascript.rules.browser.security.insecure-innerhtml,"User controlled data in a `document.getElementById(""minutes"").innerHTML` is an anti-pattern that can lead to XSS vulnerabilities"
29192411e9d6fb5cffcc8c13b00aa0f6,5,27,3,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
29192411e9d6fb5cffcc8c13b00aa0f6,5,27,3,files.javascript.rules.browser.security.insecure-innerhtml,"User controlled data in a `document.getElementById(""seconds"").innerHTML` is an anti-pattern that can lead to XSS vulnerabilities"
29192411e9d6fb5cffcc8c13b00aa0f6,5,32,5,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
29192411e9d6fb5cffcc8c13b00aa0f6,5,32,5,files.javascript.rules.browser.security.insecure-innerhtml,"User controlled data in a `document.getElementById(""days"").innerHTML` is an anti-pattern that can lead to XSS vulnerabilities"
29192411e9d6fb5cffcc8c13b00aa0f6,5,33,5,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
29192411e9d6fb5cffcc8c13b00aa0f6,5,33,5,files.javascript.rules.browser.security.insecure-innerhtml,"User controlled data in a `document.getElementById(""hours"").innerHTML` is an anti-pattern that can lead to XSS vulnerabilities"
29192411e9d6fb5cffcc8c13b00aa0f6,5,34,5,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
29192411e9d6fb5cffcc8c13b00aa0f6,5,34,5,files.javascript.rules.browser.security.insecure-innerhtml,"User controlled data in a `document.getElementById(""minutes"").innerHTML` is an anti-pattern that can lead to XSS vulnerabilities"
29192411e9d6fb5cffcc8c13b00aa0f6,5,35,5,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
29192411e9d6fb5cffcc8c13b00aa0f6,5,35,5,files.javascript.rules.browser.security.insecure-innerhtml,"User controlled data in a `document.getElementById(""seconds"").innerHTML` is an anti-pattern that can lead to XSS vulnerabilities"
29dfac2f03cc03b0035d9dd9b784a7d1,0,11,13,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
29dfac2f03cc03b0035d9dd9b784a7d1,0,11,13,files.javascript.rules.browser.security.insecure-innerhtml,"User controlled data in a `document.getElementById(""results"").innerHTML` is an anti-pattern that can lead to XSS vulnerabilities"
29dfac2f03cc03b0035d9dd9b784a7d1,0,18,17,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
29dfac2f03cc03b0035d9dd9b784a7d1,0,18,17,files.javascript.rules.browser.security.insecure-innerhtml,"User controlled data in a `document.getElementById(""betting"").innerHTML` is an anti-pattern that can lead to XSS vulnerabilities"
29dfac2f03cc03b0035d9dd9b784a7d1,0,20,17,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
29dfac2f03cc03b0035d9dd9b784a7d1,0,20,17,files.javascript.rules.browser.security.insecure-innerhtml,"User controlled data in a `document.getElementById(""results"").innerHTML` is an anti-pattern that can lead to XSS vulnerabilities"
29dfac2f03cc03b0035d9dd9b784a7d1,0,23,17,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
29dfac2f03cc03b0035d9dd9b784a7d1,0,23,17,files.javascript.rules.browser.security.insecure-innerhtml,"User controlled data in a `document.getElementById(""results"").innerHTML` is an anti-pattern that can lead to XSS vulnerabilities"
29f05e809c3c1d9f9aed836ad4d33a4c,1,13,9,files.javascript.rules.jquery.security.audit.jquery-insecure-method,User controlled data in a jQuery's `.html(...)` is an anti-pattern that can lead to XSS vulnerabilities
29f05e809c3c1d9f9aed836ad4d33a4c,1,13,9,files.javascript.rules.jquery.security.audit.prohibit-jquery-html,"JQuery's `html` function is susceptible to Cross Site Scripting (XSS) attacks. If you're just passing text, consider `text` instead. Otherwise, use a function that escapes HTML such as edX's `HtmlUtils.setHtml()`."
29f3822e4a5b9b74b6f55a42a6090f25,0,26,3,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
29f3822e4a5b9b74b6f55a42a6090f25,0,26,3,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `streetviewDiv.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
29f3822e4a5b9b74b6f55a42a6090f25,1,29,5,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
29f3822e4a5b9b74b6f55a42a6090f25,1,29,5,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `streetviewDiv.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
2aaa527a03b30aaf1df82382ad01ada1,2,5,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
2adb3f4b94abe7b35c557af68c7fa69f,2,4,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
2afaadc22908c24886117a02bcfa938b,9,54,32,files.javascript.rules.lang.security.audit.detect-non-literal-regexp,"RegExp() called with a `prefix` function argument, this might allow an attacker to cause a Regular Expression Denial-of-Service (ReDoS) within your application as RegExP blocks the main thread. For this reason, it is recommended to use hardcoded regexes instead. If your regex is run on user-controlled input, consider performing input validation or use a regex checking/sanitization library such as https://www.npmjs.com/package/recheck to verify that the regex does not appear vulnerable to ReDoS."
2afaadc22908c24886117a02bcfa938b,9,56,23,files.javascript.rules.jquery.security.audit.jquery-insecure-selector,User controlled data in a `$(...)` is an anti-pattern that can lead to XSS vulnerabilities
2afaadc22908c24886117a02bcfa938b,9,56,42,files.javascript.rules.jquery.security.audit.jquery-insecure-selector,User controlled data in a `$(...)` is an anti-pattern that can lead to XSS vulnerabilities
2afaadc22908c24886117a02bcfa938b,9,56,60,files.javascript.rules.jquery.security.audit.jquery-insecure-selector,User controlled data in a `$(...)` is an anti-pattern that can lead to XSS vulnerabilities
2b013050fe2defcc25ca0fbbc6a923e0,1,4,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
2b022c5d8d86cfd39591b2e2e822460b,6,5,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
2b022c5d8d86cfd39591b2e2e822460b,9,6,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
2b133afb81be0f5d3d177b69158d950f,2,66,31,files.javascript.rules.jquery.security.audit.jquery-insecure-selector,User controlled data in a `$(...)` is an anti-pattern that can lead to XSS vulnerabilities
2b133afb81be0f5d3d177b69158d950f,2,72,30,files.javascript.rules.jquery.security.audit.jquery-insecure-selector,User controlled data in a `$(...)` is an anti-pattern that can lead to XSS vulnerabilities
2b133afb81be0f5d3d177b69158d950f,2,79,31,files.javascript.rules.jquery.security.audit.jquery-insecure-selector,User controlled data in a `$(...)` is an anti-pattern that can lead to XSS vulnerabilities
2b133afb81be0f5d3d177b69158d950f,2,124,35,files.javascript.rules.jquery.security.audit.jquery-insecure-selector,User controlled data in a `$(...)` is an anti-pattern that can lead to XSS vulnerabilities
2b133afb81be0f5d3d177b69158d950f,2,129,47,files.javascript.rules.jquery.security.audit.jquery-insecure-selector,User controlled data in a `$(...)` is an anti-pattern that can lead to XSS vulnerabilities
2b133afb81be0f5d3d177b69158d950f,2,131,47,files.javascript.rules.jquery.security.audit.jquery-insecure-selector,User controlled data in a `$(...)` is an anti-pattern that can lead to XSS vulnerabilities
2b133afb81be0f5d3d177b69158d950f,2,133,47,files.javascript.rules.jquery.security.audit.jquery-insecure-selector,User controlled data in a `$(...)` is an anti-pattern that can lead to XSS vulnerabilities
2b133afb81be0f5d3d177b69158d950f,2,135,47,files.javascript.rules.jquery.security.audit.jquery-insecure-selector,User controlled data in a `$(...)` is an anti-pattern that can lead to XSS vulnerabilities
2b133afb81be0f5d3d177b69158d950f,2,167,31,files.javascript.rules.jquery.security.audit.jquery-insecure-method,User controlled data in a jQuery's `.html(...)` is an anti-pattern that can lead to XSS vulnerabilities
2b133afb81be0f5d3d177b69158d950f,2,167,31,files.javascript.rules.jquery.security.audit.prohibit-jquery-html,"JQuery's `html` function is susceptible to Cross Site Scripting (XSS) attacks. If you're just passing text, consider `text` instead. Otherwise, use a function that escapes HTML such as edX's `HtmlUtils.setHtml()`."
2b2a4ac7de8b242911535b18789bf4aa,4,6,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
2b2fb9f41b1d44d726ca3eec5fb89c58,1,22,9,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
2b2fb9f41b1d44d726ca3eec5fb89c58,1,22,9,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `resultado.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
2bf2c651275776ba766aacd77b71c6d0,1,3,1,files.javascript.rules.lang.security.audit.detect-non-literal-require,"Detected the use of require(variable). Calling require with a non-literal argument might allow an attacker to load and run arbitrary code, or access arbitrary files."
2bf2c651275776ba766aacd77b71c6d0,1,16,17,files.javascript.rules.lang.security.audit.detect-non-literal-regexp,"RegExp() called with a `text` function argument, this might allow an attacker to cause a Regular Expression Denial-of-Service (ReDoS) within your application as RegExP blocks the main thread. For this reason, it is recommended to use hardcoded regexes instead. If your regex is run on user-controlled input, consider performing input validation or use a regex checking/sanitization library such as https://www.npmjs.com/package/recheck to verify that the regex does not appear vulnerable to ReDoS."
2bf2c651275776ba766aacd77b71c6d0,3,3,1,files.javascript.rules.lang.security.audit.detect-non-literal-require,"Detected the use of require(variable). Calling require with a non-literal argument might allow an attacker to load and run arbitrary code, or access arbitrary files."
2bf2c651275776ba766aacd77b71c6d0,3,16,17,files.javascript.rules.lang.security.audit.detect-non-literal-regexp,"RegExp() called with a `text` function argument, this might allow an attacker to cause a Regular Expression Denial-of-Service (ReDoS) within your application as RegExP blocks the main thread. For this reason, it is recommended to use hardcoded regexes instead. If your regex is run on user-controlled input, consider performing input validation or use a regex checking/sanitization library such as https://www.npmjs.com/package/recheck to verify that the regex does not appear vulnerable to ReDoS."
2dd3ae1b1a8cb027b51f30edb16b9240,1,13,3,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
2dd3ae1b1a8cb027b51f30edb16b9240,1,13,3,files.javascript.rules.browser.security.insecure-innerhtml,"User controlled data in a `document.getElementById(""processDetails"").innerHTML` is an anti-pattern that can lead to XSS vulnerabilities"
2ef99be73e33c72b72a3ed1226627a8d,3,30,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
2f687f254919780257db451c7c9e5153,1,6,9,files.javascript.rules.puppeteer.security.audit.puppeteer-goto-injection,If unverified user data can reach the `goto` method it can result in Server-Side Request Forgery vulnerabilities
2f7e85093c7e361806d5d8d7f96b157c,0,22,11,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
2f7e85093c7e361806d5d8d7f96b157c,0,22,11,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `captionContainer.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
2f7e85093c7e361806d5d8d7f96b157c,0,22,40,files.javascript.rules.lang.security.html-in-template-string,"This template literal looks like HTML and has interpolated variables. These variables are not HTML-encoded by default. If the variables contain HTML tags, these may be interpreted by the browser, resulting in cross-site scripting (XSS)."
2ff3c782d5132e2480a8d859871c65aa,0,2,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
300411d7daca11c6eae9b5a4d1f8ce55,1,2,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
300d2d99cf3c97e58c60cf1edad5862b,2,14,5,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
300d2d99cf3c97e58c60cf1edad5862b,2,14,5,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `productsContainer.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
300d2d99cf3c97e58c60cf1edad5862b,2,14,36,files.javascript.rules.lang.security.html-in-template-string,"This template literal looks like HTML and has interpolated variables. These variables are not HTML-encoded by default. If the variables contain HTML tags, these may be interpreted by the browser, resulting in cross-site scripting (XSS)."
300d2d99cf3c97e58c60cf1edad5862b,2,28,3,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
300d2d99cf3c97e58c60cf1edad5862b,2,28,3,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `cartCount.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
30eddd4b20f73784dc15e1ff083b67d4,4,16,26,files.javascript.rules.lang.security.html-in-template-string,"This template literal looks like HTML and has interpolated variables. These variables are not HTML-encoded by default. If the variables contain HTML tags, these may be interpreted by the browser, resulting in cross-site scripting (XSS)."
318c124a7deda66902cc0d0e1591a594,2,3,5,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
318c124a7deda66902cc0d0e1591a594,2,3,5,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `document.getElementById('results').innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
318c124a7deda66902cc0d0e1591a594,2,3,52,files.javascript.rules.lang.security.html-in-template-string,"This template literal looks like HTML and has interpolated variables. These variables are not HTML-encoded by default. If the variables contain HTML tags, these may be interpreted by the browser, resulting in cross-site scripting (XSS)."
319bfeab8013e46d543f8be8d4774f83,3,21,9,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
319bfeab8013e46d543f8be8d4774f83,3,21,9,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `block.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
319bfeab8013e46d543f8be8d4774f83,3,21,27,files.javascript.rules.lang.security.html-in-template-string,"This template literal looks like HTML and has interpolated variables. These variables are not HTML-encoded by default. If the variables contain HTML tags, these may be interpreted by the browser, resulting in cross-site scripting (XSS)."
31b8b4d7310e396968ff956124f77ad7,2,13,3,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
31b8b4d7310e396968ff956124f77ad7,2,13,3,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `text.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
32b243868e87a4ca6f6d185416a0924f,1,16,5,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
32b243868e87a4ca6f6d185416a0924f,1,16,5,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `tripSummary.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
32b243868e87a4ca6f6d185416a0924f,1,16,29,files.javascript.rules.lang.security.html-in-template-string,"This template literal looks like HTML and has interpolated variables. These variables are not HTML-encoded by default. If the variables contain HTML tags, these may be interpreted by the browser, resulting in cross-site scripting (XSS)."
332964febcac807894825e27acfb4ccd,1,2,18,files.javascript.rules.lang.security.audit.unsafe-dynamic-method,"Using non-static data to retrieve and run functions from the object is dangerous. If the data is user-controlled, it may allow executing arbitrary code."
3371467ede987d6411939d2e5d761433,1,28,18,files.javascript.rules.browser.security.eval-detected,"Detected the use of eval(). eval() can be dangerous if used to evaluate dynamic content. If this content can be input from outside the program, this may be a code injection vulnerability. Ensure evaluated content is not definable by external sources."
337c7ae32c1e9df1a951b3fae4d67f68,0,80,5,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
337c7ae32c1e9df1a951b3fae4d67f68,0,80,5,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `korttiElementit.pelaaja[i].innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
337c7ae32c1e9df1a951b3fae4d67f68,0,85,7,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
337c7ae32c1e9df1a951b3fae4d67f68,0,85,7,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `korttiElementit.jakaja[i].innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
337c7ae32c1e9df1a951b3fae4d67f68,0,87,7,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
337c7ae32c1e9df1a951b3fae4d67f68,0,87,7,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `korttiElementit.jakaja[i].innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
337c7ae32c1e9df1a951b3fae4d67f68,0,87,45,files.javascript.rules.lang.security.html-in-template-string,"This template literal looks like HTML and has interpolated variables. These variables are not HTML-encoded by default. If the variables contain HTML tags, these may be interpreted by the browser, resulting in cross-site scripting (XSS)."
337c7ae32c1e9df1a951b3fae4d67f68,0,97,10,files.javascript.rules.lang.security.html-in-template-string,"This template literal looks like HTML and has interpolated variables. These variables are not HTML-encoded by default. If the variables contain HTML tags, these may be interpreted by the browser, resulting in cross-site scripting (XSS)."
3388ba79989831a20b0f1ad324aa5390,0,16,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
3393f11ebdd1eed9a3a72a3f588579df,15,3,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
33ee231dd2958f6e59dee12a5e068b4e,0,8,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
33ee231dd2958f6e59dee12a5e068b4e,1,22,33,files.javascript.rules.lang.security.audit.detect-non-literal-fs-filename,"Detected that function argument `req` has entered the fs module. An attacker could potentially control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are validated."
3433efd0be5cf9750a0ed57e1c7dfac7,1,65,3,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
3433efd0be5cf9750a0ed57e1c7dfac7,1,65,3,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `system_operation.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
3433efd0be5cf9750a0ed57e1c7dfac7,1,70,3,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
3433efd0be5cf9750a0ed57e1c7dfac7,1,70,3,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `system_operation.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
3433efd0be5cf9750a0ed57e1c7dfac7,2,46,5,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
344d5ff616c8ae87f8dbecd4ac730ebf,0,3,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
344d5ff616c8ae87f8dbecd4ac730ebf,0,6,9,files.javascript.rules.express.security.audit.express-cookie-session-default-name,Don’t use the default session cookie name Using the default session cookie name can open your app to attacks. The security issue posed is similar to X-Powered-By: a potential attacker can use it to fingerprint the server and target attacks accordingly.
344d5ff616c8ae87f8dbecd4ac730ebf,0,6,9,files.javascript.rules.express.security.audit.express-cookie-session-no-domain,"Default session middleware settings: `domain` not set. It indicates the domain of the cookie; use it to compare against the domain of the server in which the URL is being requested. If they match, then check the path attribute next."
344d5ff616c8ae87f8dbecd4ac730ebf,0,6,9,files.javascript.rules.express.security.audit.express-cookie-session-no-expires,Default session middleware settings: `expires` not set. Use it to set expiration date for persistent cookies.
344d5ff616c8ae87f8dbecd4ac730ebf,0,6,9,files.javascript.rules.express.security.audit.express-cookie-session-no-httponly,"Default session middleware settings: `httpOnly` not set. It ensures the cookie is sent only over HTTP(S), not client JavaScript, helping to protect against cross-site scripting attacks."
344d5ff616c8ae87f8dbecd4ac730ebf,0,6,9,files.javascript.rules.express.security.audit.express-cookie-session-no-path,"Default session middleware settings: `path` not set. It indicates the path of the cookie; use it to compare against the request path. If this and domain match, then send the cookie in the request."
344d5ff616c8ae87f8dbecd4ac730ebf,0,6,9,files.javascript.rules.express.security.audit.express-cookie-session-no-secure,Default session middleware settings: `secure` not set. It ensures the browser only sends the cookie over HTTPS.
344d5ff616c8ae87f8dbecd4ac730ebf,0,7,3,files.javascript.rules.express.security.audit.express-session-hardcoded-secret,"A hard-coded credential was detected. It is not recommended to store credentials in source-code, as this risks secrets being leaked and used by either an internal or external malicious adversary. It is recommended to use environment variables to securely provide credentials or retrieve credentials from a secure vault or HSM (Hardware Security Module)."
34674e729c1747f30d8e208847a91ff8,0,26,11,files.javascript.rules.jquery.security.audit.prohibit-jquery-html,"JQuery's `html` function is susceptible to Cross Site Scripting (XSS) attacks. If you're just passing text, consider `text` instead. Otherwise, use a function that escapes HTML such as edX's `HtmlUtils.setHtml()`."
34674e729c1747f30d8e208847a91ff8,0,35,11,files.javascript.rules.jquery.security.audit.prohibit-jquery-html,"JQuery's `html` function is susceptible to Cross Site Scripting (XSS) attacks. If you're just passing text, consider `text` instead. Otherwise, use a function that escapes HTML such as edX's `HtmlUtils.setHtml()`."
34674e729c1747f30d8e208847a91ff8,0,43,3,files.javascript.rules.jquery.security.audit.jquery-insecure-method,User controlled data in a jQuery's `.after(...)` is an anti-pattern that can lead to XSS vulnerabilities
34dc1de123f77df74edb85717ace8501,3,60,3,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
34dc1de123f77df74edb85717ace8501,3,60,3,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `scoreDisplay.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
34dc1de123f77df74edb85717ace8501,3,70,3,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
34dc1de123f77df74edb85717ace8501,3,70,3,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `healthDisplay.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
34dc1de123f77df74edb85717ace8501,3,79,3,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
34dc1de123f77df74edb85717ace8501,3,79,3,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `finalScoreDisplay.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
353d9b5108ae2fa9debd7f5ca534fb1f,0,105,9,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
353d9b5108ae2fa9debd7f5ca534fb1f,0,105,9,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `label.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
357291bc19ad191caeb79a5cded9da81,3,4,15,files.javascript.rules.lang.security.audit.unsafe-formatstring,"Detected string concatenation with a non-literal variable in a util.format / console.log function. If an attacker injects a format specifier in the string, it will forge the log message. Try to use constant values for the format string."
3579f7ec5293c82c4cb65e5910acd1d0,3,1,1,files.javascript.rules.grpc.security.grpc-nodejs-insecure-connection,"Found an insecure gRPC connection. This creates a connection without encryption to a gRPC client/server. A malicious attacker could tamper with the gRPC message, which could compromise the machine."
3579f7ec5293c82c4cb65e5910acd1d0,4,1,1,files.javascript.rules.grpc.security.grpc-nodejs-insecure-connection,"Found an insecure gRPC connection. This creates a connection without encryption to a gRPC client/server. A malicious attacker could tamper with the gRPC message, which could compromise the machine."
35bc26a20b2470249c05888eee65f54c,4,6,41,files.javascript.rules.lang.security.audit.detect-non-literal-regexp,"RegExp() called with a `name` function argument, this might allow an attacker to cause a Regular Expression Denial-of-Service (ReDoS) within your application as RegExP blocks the main thread. For this reason, it is recommended to use hardcoded regexes instead. If your regex is run on user-controlled input, consider performing input validation or use a regex checking/sanitization library such as https://www.npmjs.com/package/recheck to verify that the regex does not appear vulnerable to ReDoS."
36339c7bf1cc36ae7b52d4b8a7f5d762,0,2,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
3716b279be67cbcecb32edf7235db7dc,1,10,5,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
3716b279be67cbcecb32edf7235db7dc,1,10,5,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `moneyDisplay.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
3716b279be67cbcecb32edf7235db7dc,1,15,5,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
3716b279be67cbcecb32edf7235db7dc,1,15,5,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `moneyDisplay.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
3716b279be67cbcecb32edf7235db7dc,2,7,5,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
3716b279be67cbcecb32edf7235db7dc,2,7,5,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `moneyDisplay.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
3716b279be67cbcecb32edf7235db7dc,2,7,31,files.javascript.rules.lang.security.html-in-template-string,"This template literal looks like HTML and has interpolated variables. These variables are not HTML-encoded by default. If the variables contain HTML tags, these may be interpreted by the browser, resulting in cross-site scripting (XSS)."
3716b279be67cbcecb32edf7235db7dc,2,11,5,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
3716b279be67cbcecb32edf7235db7dc,2,11,5,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `moneyDisplay.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
3716b279be67cbcecb32edf7235db7dc,2,11,61,files.javascript.rules.lang.security.html-in-template-string,"This template literal looks like HTML and has interpolated variables. These variables are not HTML-encoded by default. If the variables contain HTML tags, these may be interpreted by the browser, resulting in cross-site scripting (XSS)."
371aca1f52bfb8a36efa621a468291d9,0,3,3,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
371aca1f52bfb8a36efa621a468291d9,0,3,3,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `txt.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
377c8745fe4fd0f2592a11b4387930e6,2,60,27,files.javascript.rules.lang.security.audit.unsafe-formatstring,"Detected string concatenation with a non-literal variable in a util.format / console.log function. If an attacker injects a format specifier in the string, it will forge the log message. Try to use constant values for the format string."
377c8745fe4fd0f2592a11b4387930e6,2,66,23,files.javascript.rules.lang.security.audit.unsafe-formatstring,"Detected string concatenation with a non-literal variable in a util.format / console.log function. If an attacker injects a format specifier in the string, it will forge the log message. Try to use constant values for the format string."
378fbcce3ee1ae1ed6703da70ff6b0e3,2,24,5,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
378fbcce3ee1ae1ed6703da70ff6b0e3,2,24,5,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `tooltip.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
378fbcce3ee1ae1ed6703da70ff6b0e3,5,14,5,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
378fbcce3ee1ae1ed6703da70ff6b0e3,5,14,5,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `elementInfo.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
37dbb83de557654a4856e35eafd50e15,0,18,21,files.javascript.rules.lang.security.audit.unsafe-formatstring,"Detected string concatenation with a non-literal variable in a util.format / console.log function. If an attacker injects a format specifier in the string, it will forge the log message. Try to use constant values for the format string."
37dbb83de557654a4856e35eafd50e15,0,41,25,files.javascript.rules.lang.security.audit.unsafe-formatstring,"Detected string concatenation with a non-literal variable in a util.format / console.log function. If an attacker injects a format specifier in the string, it will forge the log message. Try to use constant values for the format string."
37dbb83de557654a4856e35eafd50e15,0,43,25,files.javascript.rules.lang.security.audit.unsafe-formatstring,"Detected string concatenation with a non-literal variable in a util.format / console.log function. If an attacker injects a format specifier in the string, it will forge the log message. Try to use constant values for the format string."
3859b689ffe5faa57fd926243981bb6f,10,14,9,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
3859b689ffe5faa57fd926243981bb6f,10,14,9,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `merchNote.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
3859b689ffe5faa57fd926243981bb6f,10,20,7,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
3859b689ffe5faa57fd926243981bb6f,10,20,7,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `merchNote.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
3859b689ffe5faa57fd926243981bb6f,11,16,9,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
3859b689ffe5faa57fd926243981bb6f,11,16,9,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `merchNote.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
3859b689ffe5faa57fd926243981bb6f,11,26,7,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
3859b689ffe5faa57fd926243981bb6f,11,26,7,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `merchNote.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
3859b689ffe5faa57fd926243981bb6f,6,6,9,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
3859b689ffe5faa57fd926243981bb6f,6,6,9,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `cell.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
387695a0692d74f50503ceffeeaa4780,2,20,9,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
387695a0692d74f50503ceffeeaa4780,2,20,9,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `document.getElementById('outputGraph').innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
387695a0692d74f50503ceffeeaa4780,2,20,60,files.javascript.rules.lang.security.html-in-template-string,"This template literal looks like HTML and has interpolated variables. These variables are not HTML-encoded by default. If the variables contain HTML tags, these may be interpreted by the browser, resulting in cross-site scripting (XSS)."
388847ea9b6c7fa121d79013a59c6552,4,4,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
388847ea9b6c7fa121d79013a59c6552,4,18,31,files.javascript.rules.jsonwebtoken.security.hardcoded-jwt-secret,"A hard-coded credential was detected. It is not recommended to store credentials in source-code, as this risks secrets being leaked and used by either an internal or external malicious adversary. It is recommended to use environment variables to securely provide credentials or retrieve credentials from a secure vault or HSM (Hardware Security Module)."
38c7cf8c405bb845eec05f7c2f585ee2,4,13,13,files.javascript.rules.jquery.security.audit.prohibit-jquery-html,"JQuery's `html` function is susceptible to Cross Site Scripting (XSS) attacks. If you're just passing text, consider `text` instead. Otherwise, use a function that escapes HTML such as edX's `HtmlUtils.setHtml()`."
391d38896ff504b3c2d8c930cb93ac10,0,28,15,files.javascript.rules.lang.security.audit.detect-non-literal-fs-filename,"Detected that function argument `req` has entered the fs module. An attacker could potentially control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are validated."
391d38896ff504b3c2d8c930cb93ac10,0,37,21,files.javascript.rules.lang.security.audit.detect-non-literal-fs-filename,"Detected that function argument `req` has entered the fs module. An attacker could potentially control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are validated."
391d38896ff504b3c2d8c930cb93ac10,0,91,52,files.javascript.rules.lang.security.audit.path-traversal.path-join-resolve-traversal,"Detected possible user input going into a `path.join` or `path.resolve` function. This could possibly lead to a path traversal vulnerability,  where the attacker can access arbitrary files stored in the file system. Instead, be sure to sanitize or validate user input first."
391d38896ff504b3c2d8c930cb93ac10,0,94,26,files.javascript.rules.lang.security.audit.detect-non-literal-fs-filename,"Detected that function argument `message` has entered the fs module. An attacker could potentially control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are validated."
398e7cd757ffe2a11aee238ddf8c812c,1,5,10,files.javascript.rules.lang.security.audit.detect-redos,"Detected the use of a regular expression `^((http|https|ftp):\/\/)?([a-z0-9-]+\.)+[a-z0-9]{2,4}.*$` which appears to be vulnerable to a Regular expression Denial-of-Service (ReDoS). For this reason, it is recommended to review the regex and ensure it is not vulnerable to catastrophic backtracking, and if possible use a library which offers default safety against ReDoS vulnerabilities."
399d370a9d84871c688f1f260a497b4b,0,3,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
39b5e29f13751ca47bc7b41f11129fe9,2,7,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
39b5e29f13751ca47bc7b41f11129fe9,23,7,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
39f68adf68dc180f0562f00170b4a64e,2,23,18,files.javascript.rules.lang.security.html-in-template-string,"This template literal looks like HTML and has interpolated variables. These variables are not HTML-encoded by default. If the variables contain HTML tags, these may be interpreted by the browser, resulting in cross-site scripting (XSS)."
39f68adf68dc180f0562f00170b4a64e,2,24,5,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
39f68adf68dc180f0562f00170b4a64e,2,24,5,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `document.getElementById('result').innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
39f68adf68dc180f0562f00170b4a64e,2,28,18,files.javascript.rules.lang.security.html-in-template-string,"This template literal looks like HTML and has interpolated variables. These variables are not HTML-encoded by default. If the variables contain HTML tags, these may be interpreted by the browser, resulting in cross-site scripting (XSS)."
39f68adf68dc180f0562f00170b4a64e,2,29,3,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
39f68adf68dc180f0562f00170b4a64e,2,29,3,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `document.getElementById('result').innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
39f68adf68dc180f0562f00170b4a64e,2,30,3,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
39f68adf68dc180f0562f00170b4a64e,2,30,3,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `document.getElementById('result').innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
3a0c373d331afb8f9a17e4518acc8967,0,3,13,files.javascript.rules.lang.security.audit.spawn-shell-true,"Found '$SPAWN' with '{shell: true}'. This is dangerous because this call will spawn the command using a shell process. Doing so propagates current shell settings and variables, which makes it much easier for a malicious actor to execute commands. Use '{shell: false}' instead."
3a1bfa0873b917b680252b32bedbe7c3,0,17,5,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
3a1bfa0873b917b680252b32bedbe7c3,0,17,5,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `vehicleHeaderDiv.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
3a1bfa0873b917b680252b32bedbe7c3,0,17,34,files.javascript.rules.lang.security.html-in-template-string,"This template literal looks like HTML and has interpolated variables. These variables are not HTML-encoded by default. If the variables contain HTML tags, these may be interpreted by the browser, resulting in cross-site scripting (XSS)."
3a578d3699ac80c8eb3865234480f413,4,3,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
3b0ad2c99cf1459f98f4faefd0285393,5,10,22,files.javascript.rules.browser.security.eval-detected,"Detected the use of eval(). eval() can be dangerous if used to evaluate dynamic content. If this content can be input from outside the program, this may be a code injection vulnerability. Ensure evaluated content is not definable by external sources."
3b4d05b8a0ba25fd137e200c6844a5e1,0,5,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
3b62beb68007ba89d9bcd2642ab11519,31,10,35,files.javascript.rules.lang.security.audit.unsafe-formatstring,"Detected string concatenation with a non-literal variable in a util.format / console.log function. If an attacker injects a format specifier in the string, it will forge the log message. Try to use constant values for the format string."
3b62beb68007ba89d9bcd2642ab11519,32,19,23,files.javascript.rules.lang.security.audit.unsafe-formatstring,"Detected string concatenation with a non-literal variable in a util.format / console.log function. If an attacker injects a format specifier in the string, it will forge the log message. Try to use constant values for the format string."
3bd3150fee6f209981268706b65c4e34,2,18,28,files.javascript.rules.browser.security.eval-detected,"Detected the use of eval(). eval() can be dangerous if used to evaluate dynamic content. If this content can be input from outside the program, this may be a code injection vulnerability. Ensure evaluated content is not definable by external sources."
3c240f190530798e91de8ced0e491a26,0,13,5,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
3c240f190530798e91de8ced0e491a26,0,13,5,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `ghostInfoDiv.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
3c7ee649cd05cf80249d7c74fc902ed7,6,6,9,files.javascript.rules.lang.security.audit.detect-non-literal-require,"Detected the use of require(variable). Calling require with a non-literal argument might allow an attacker to load and run arbitrary code, or access arbitrary files."
3cd006497b81c92df64ce27429ca0a04,3,5,24,files.javascript.rules.lang.security.html-in-template-string,"This template literal looks like HTML and has interpolated variables. These variables are not HTML-encoded by default. If the variables contain HTML tags, these may be interpreted by the browser, resulting in cross-site scripting (XSS)."
3cd006497b81c92df64ce27429ca0a04,3,10,3,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
3cd006497b81c92df64ce27429ca0a04,3,10,3,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `leaderboardDiv.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
3d5933d232bb36514f6a3e6483f21c3d,0,22,21,files.javascript.rules.jquery.security.audit.jquery-insecure-method,User controlled data in a jQuery's `.html(...)` is an anti-pattern that can lead to XSS vulnerabilities
3d5933d232bb36514f6a3e6483f21c3d,0,22,21,files.javascript.rules.jquery.security.audit.prohibit-jquery-html,"JQuery's `html` function is susceptible to Cross Site Scripting (XSS) attacks. If you're just passing text, consider `text` instead. Otherwise, use a function that escapes HTML such as edX's `HtmlUtils.setHtml()`."
3d6ef265533d7e3417bb0f613adfdee6,12,10,40,files.javascript.rules.lang.security.html-in-template-string,"This template literal looks like HTML and has interpolated variables. These variables are not HTML-encoded by default. If the variables contain HTML tags, these may be interpreted by the browser, resulting in cross-site scripting (XSS)."
3d6ef265533d7e3417bb0f613adfdee6,12,11,7,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
3d6ef265533d7e3417bb0f613adfdee6,12,11,7,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `searchResults.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
3d6ef265533d7e3417bb0f613adfdee6,17,11,16,files.javascript.rules.lang.security.html-in-template-string,"This template literal looks like HTML and has interpolated variables. These variables are not HTML-encoded by default. If the variables contain HTML tags, these may be interpreted by the browser, resulting in cross-site scripting (XSS)."
3d6ef265533d7e3417bb0f613adfdee6,17,19,3,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
3d6ef265533d7e3417bb0f613adfdee6,17,19,3,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `weatherContainer.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
3eb5a85e410041bfffa9f4276a6d4cb0,6,7,5,files.javascript.rules.jquery.security.audit.jquery-insecure-method,User controlled data in a jQuery's `.append(...)` is an anti-pattern that can lead to XSS vulnerabilities
3eb5a85e410041bfffa9f4276a6d4cb0,7,5,21,files.javascript.rules.jquery.security.audit.jquery-insecure-method,User controlled data in a jQuery's `.append(...)` is an anti-pattern that can lead to XSS vulnerabilities
3f78adc891b958dd659e9b3a1414fb43,0,4,7,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
3f78adc891b958dd659e9b3a1414fb43,0,4,7,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `elementit[i].innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
3f78adc891b958dd659e9b3a1414fb43,1,7,11,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
3f78adc891b958dd659e9b3a1414fb43,1,7,11,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `elementit[i].innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
3f78adc891b958dd659e9b3a1414fb43,1,17,9,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
3f78adc891b958dd659e9b3a1414fb43,1,17,9,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `elementit[i].innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
400f148c0f7dd62a89f00f7ac826c801,0,9,5,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
400f148c0f7dd62a89f00f7ac826c801,0,9,5,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `chatContainer.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
400f148c0f7dd62a89f00f7ac826c801,0,36,9,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
400f148c0f7dd62a89f00f7ac826c801,0,36,9,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `chatContainer.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
400f148c0f7dd62a89f00f7ac826c801,0,65,9,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
400f148c0f7dd62a89f00f7ac826c801,0,65,9,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `chatContainer.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
400f148c0f7dd62a89f00f7ac826c801,0,70,9,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
400f148c0f7dd62a89f00f7ac826c801,0,70,9,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `chatContainer.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
40745624ec520253f24a4953c9aa3125,1,8,5,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
40745624ec520253f24a4953c9aa3125,1,8,5,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `mousePositionDiv.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
40745624ec520253f24a4953c9aa3125,4,9,3,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
40745624ec520253f24a4953c9aa3125,4,9,3,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `mousePositionDiv.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
40745624ec520253f24a4953c9aa3125,6,9,3,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
40745624ec520253f24a4953c9aa3125,6,9,3,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `mousePositionDiv.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
40745624ec520253f24a4953c9aa3125,9,21,3,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
40745624ec520253f24a4953c9aa3125,9,21,3,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `mousePositionDiv.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
408a54bfaa75ae02ca61d23fbf8c797e,0,22,21,files.javascript.rules.lang.security.audit.unsafe-formatstring,"Detected string concatenation with a non-literal variable in a util.format / console.log function. If an attacker injects a format specifier in the string, it will forge the log message. Try to use constant values for the format string."
409f604745ff7ac065f45c159f656e11,1,14,11,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
409f604745ff7ac065f45c159f656e11,1,14,11,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `cell.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
409f604745ff7ac065f45c159f656e11,11,39,3,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
409f604745ff7ac065f45c159f656e11,11,39,3,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `container.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
409f604745ff7ac065f45c159f656e11,7,53,3,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
409f604745ff7ac065f45c159f656e11,7,53,3,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `table.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
409f604745ff7ac065f45c159f656e11,9,38,3,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
409f604745ff7ac065f45c159f656e11,9,38,3,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `list.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
40fd19088ce709f0ad9cf880a458582e,0,1,1,files.javascript.rules.browser.security.insufficient-postmessage-origin-validation,No validation of origin is done by the addEventListener API. It may be possible to exploit this flaw to perform Cross Origin attacks such as Cross-Site Scripting(XSS).
40fd19088ce709f0ad9cf880a458582e,1,1,1,files.javascript.rules.browser.security.insufficient-postmessage-origin-validation,No validation of origin is done by the addEventListener API. It may be possible to exploit this flaw to perform Cross Origin attacks such as Cross-Site Scripting(XSS).
417d05769fa08fc297dfedaba04351cb,1,11,5,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
417d05769fa08fc297dfedaba04351cb,1,11,5,files.javascript.rules.browser.security.insecure-innerhtml,"User controlled data in a `document.getElementById(""result"").innerHTML` is an anti-pattern that can lead to XSS vulnerabilities"
417d05769fa08fc297dfedaba04351cb,1,19,9,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
417d05769fa08fc297dfedaba04351cb,1,19,9,files.javascript.rules.browser.security.insecure-innerhtml,"User controlled data in a `document.getElementById(""result"").innerHTML` is an anti-pattern that can lead to XSS vulnerabilities"
417d05769fa08fc297dfedaba04351cb,1,24,9,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
417d05769fa08fc297dfedaba04351cb,1,24,9,files.javascript.rules.browser.security.insecure-innerhtml,"User controlled data in a `document.getElementById(""result"").innerHTML` is an anti-pattern that can lead to XSS vulnerabilities"
41d6471359182171d438876001d79799,0,17,3,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
41d6471359182171d438876001d79799,0,17,3,files.javascript.rules.browser.security.insecure-innerhtml,"User controlled data in a `document.querySelector("".countdown-timer"").innerHTML` is an anti-pattern that can lead to XSS vulnerabilities"
41f0b97a6f0b21be617808b8362b0d36,2,34,29,files.javascript.rules.lang.security.html-in-template-string,"This template literal looks like HTML and has interpolated variables. These variables are not HTML-encoded by default. If the variables contain HTML tags, these may be interpreted by the browser, resulting in cross-site scripting (XSS)."
41f0b97a6f0b21be617808b8362b0d36,2,55,29,files.javascript.rules.lang.security.html-in-template-string,"This template literal looks like HTML and has interpolated variables. These variables are not HTML-encoded by default. If the variables contain HTML tags, these may be interpreted by the browser, resulting in cross-site scripting (XSS)."
41f0b97a6f0b21be617808b8362b0d36,3,34,29,files.javascript.rules.lang.security.html-in-template-string,"This template literal looks like HTML and has interpolated variables. These variables are not HTML-encoded by default. If the variables contain HTML tags, these may be interpreted by the browser, resulting in cross-site scripting (XSS)."
41f0b97a6f0b21be617808b8362b0d36,3,55,29,files.javascript.rules.lang.security.html-in-template-string,"This template literal looks like HTML and has interpolated variables. These variables are not HTML-encoded by default. If the variables contain HTML tags, these may be interpreted by the browser, resulting in cross-site scripting (XSS)."
42c95fb0e630a21642b126fd48bccb66,1,88,9,files.javascript.rules.lang.security.audit.detect-non-literal-require,"Detected the use of require(variable). Calling require with a non-literal argument might allow an attacker to load and run arbitrary code, or access arbitrary files."
42eb71cf15cd93874192bfc1b4004c74,0,13,5,files.javascript.rules.jquery.security.audit.jquery-insecure-method,User controlled data in a jQuery's `.append(...)` is an anti-pattern that can lead to XSS vulnerabilities
42eb71cf15cd93874192bfc1b4004c74,0,23,13,files.javascript.rules.jquery.security.audit.jquery-insecure-method,User controlled data in a jQuery's `.append(...)` is an anti-pattern that can lead to XSS vulnerabilities
42eb71cf15cd93874192bfc1b4004c74,0,33,13,files.javascript.rules.jquery.security.audit.jquery-insecure-method,User controlled data in a jQuery's `.append(...)` is an anti-pattern that can lead to XSS vulnerabilities
42eb71cf15cd93874192bfc1b4004c74,0,42,5,files.javascript.rules.jquery.security.audit.jquery-insecure-method,User controlled data in a jQuery's `.append(...)` is an anti-pattern that can lead to XSS vulnerabilities
43dee24fd4dc868005ad8119cd650701,1,9,13,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
43dee24fd4dc868005ad8119cd650701,1,9,13,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `cell.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
43dee24fd4dc868005ad8119cd650701,3,22,13,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
43dee24fd4dc868005ad8119cd650701,3,22,13,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `cell.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
4469bff742324a31fecf1817e384eb42,0,27,5,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
4469bff742324a31fecf1817e384eb42,0,27,5,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `chatLogs.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
4469bff742324a31fecf1817e384eb42,0,34,3,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
4469bff742324a31fecf1817e384eb42,0,34,3,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `chatLogs.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
4469bff742324a31fecf1817e384eb42,0,108,7,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
4469bff742324a31fecf1817e384eb42,0,108,7,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `chatLogs.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
4469bff742324a31fecf1817e384eb42,0,114,9,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
4469bff742324a31fecf1817e384eb42,0,114,9,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `chatLogs.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
4469bff742324a31fecf1817e384eb42,0,161,5,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
4469bff742324a31fecf1817e384eb42,0,161,5,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `chatLogs.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
4469bff742324a31fecf1817e384eb42,0,174,10,files.javascript.rules.lang.security.html-in-template-string,"This template literal looks like HTML and has interpolated variables. These variables are not HTML-encoded by default. If the variables contain HTML tags, these may be interpreted by the browser, resulting in cross-site scripting (XSS)."
45379ed5402d384012f3388f4f4f96fd,1,7,5,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
45379ed5402d384012f3388f4f4f96fd,1,7,5,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `resultDiv.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
45379ed5402d384012f3388f4f4f96fd,1,12,7,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
45379ed5402d384012f3388f4f4f96fd,1,12,7,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `resultDiv.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
457813783b6004052f68646572ec3c89,4,10,9,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
457813783b6004052f68646572ec3c89,4,10,9,files.javascript.rules.browser.security.insecure-innerhtml,"User controlled data in a `document.getElementById(""resultado"").innerHTML` is an anti-pattern that can lead to XSS vulnerabilities"
458259f12b769d25783c495c233a24d1,0,7,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
458259f12b769d25783c495c233a24d1,0,15,49,files.javascript.rules.lang.security.audit.detect-non-literal-fs-filename,"Detected that function argument `req` has entered the fs module. An attacker could potentially control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are validated."
458259f12b769d25783c495c233a24d1,0,34,23,files.javascript.rules.lang.security.audit.detect-non-literal-fs-filename,"Detected that function argument `req` has entered the fs module. An attacker could potentially control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are validated."
45e92a61ac1b8079f86df364b3868acb,3,82,30,files.javascript.rules.browser.security.js-open-redirect-from-function,The application accepts potentially user-controlled input `url` which can control the location of the current window context. This can lead two types of vulnerabilities open-redirection and Cross-Site-Scripting (XSS) with JavaScript URIs. It is recommended to validate user-controllable input before allowing it to control the redirection.
46046cfe0eb4a0af83c9078248ad61b5,7,4,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
46046cfe0eb4a0af83c9078248ad61b5,7,10,56,files.javascript.rules.express.security.injection.tainted-sql-string,"Detected user input used to manually construct a SQL string. This is usually bad practice because manual construction could accidentally result in a SQL injection. An attacker could use a SQL injection to steal or modify contents of the database. Instead, use a parameterized query which is available by default in most database engines. Alternatively, consider using an object-relational mapper (ORM) such as Sequelize which will protect your queries."
462517214c6d02ca4f686ecf88d2133b,0,1,1,files.javascript.rules.browser.security.insufficient-postmessage-origin-validation,No validation of origin is done by the addEventListener API. It may be possible to exploit this flaw to perform Cross Origin attacks such as Cross-Site Scripting(XSS).
4639f3426abb4cfcd138c781a66f8da7,1,23,3,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
4639f3426abb4cfcd138c781a66f8da7,1,23,3,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `contentElement.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
46416cdc974f1ca4960f87053287d768,2,2,3,files.javascript.rules.lang.security.audit.unsafe-dynamic-method,"Using non-static data to retrieve and run functions from the object is dangerous. If the data is user-controlled, it may allow executing arbitrary code."
4684acf3c776bce8d105076c4dfd63bb,0,5,17,files.javascript.rules.lang.security.audit.unsafe-formatstring,"Detected string concatenation with a non-literal variable in a util.format / console.log function. If an attacker injects a format specifier in the string, it will forge the log message. Try to use constant values for the format string."
4684acf3c776bce8d105076c4dfd63bb,0,23,21,files.javascript.rules.lang.security.audit.unsafe-formatstring,"Detected string concatenation with a non-literal variable in a util.format / console.log function. If an attacker injects a format specifier in the string, it will forge the log message. Try to use constant values for the format string."
4684acf3c776bce8d105076c4dfd63bb,0,46,17,files.javascript.rules.lang.security.audit.unsafe-formatstring,"Detected string concatenation with a non-literal variable in a util.format / console.log function. If an attacker injects a format specifier in the string, it will forge the log message. Try to use constant values for the format string."
4684acf3c776bce8d105076c4dfd63bb,0,51,17,files.javascript.rules.lang.security.audit.unsafe-formatstring,"Detected string concatenation with a non-literal variable in a util.format / console.log function. If an attacker injects a format specifier in the string, it will forge the log message. Try to use constant values for the format string."
468d8e9494b2b7ad2d857afec198f5c6,0,3,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
46b070627b22203b9af5d45be3650167,9,6,7,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
46b070627b22203b9af5d45be3650167,9,6,7,files.javascript.rules.browser.security.insecure-innerhtml,"User controlled data in a `document.getElementById(""content"").innerHTML` is an anti-pattern that can lead to XSS vulnerabilities"
46c226ccda567fe00d88f922db77847b,8,11,12,files.javascript.rules.lang.security.html-in-template-string,"This template literal looks like HTML and has interpolated variables. These variables are not HTML-encoded by default. If the variables contain HTML tags, these may be interpreted by the browser, resulting in cross-site scripting (XSS)."
46df6ec1c76102d702ec9fc83646d6e8,0,3,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
47140aefcc74fd57e7dfd860f47ce5ff,5,5,72,files.javascript.rules.lang.security.detect-insecure-websocket,Insecure WebSocket Detected. WebSocket Secure (wss) should be used for all WebSocket connections.
47140aefcc74fd57e7dfd860f47ce5ff,7,2,72,files.javascript.rules.lang.security.detect-insecure-websocket,Insecure WebSocket Detected. WebSocket Secure (wss) should be used for all WebSocket connections.
472a18a1dc7d3009af39ad9d00d74374,1,26,13,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
472a18a1dc7d3009af39ad9d00d74374,1,26,13,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `divListaEnlaces.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
473d5b09af5c68c5acb8c8463d750f83,0,16,11,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
473d5b09af5c68c5acb8c8463d750f83,0,16,11,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `elementit[i].innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
473d5b09af5c68c5acb8c8463d750f83,0,19,9,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
473d5b09af5c68c5acb8c8463d750f83,0,19,9,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `elementit[i].innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
47b0b74f0c2be3ac24408ae27281e07f,0,7,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
47b0b74f0c2be3ac24408ae27281e07f,0,31,18,files.javascript.rules.express.security.audit.xss.direct-response-write,"Detected directly writing to a Response object from user-defined input. This bypasses any HTML escaping and may expose your application to a Cross-Site-scripting (XSS) vulnerability. Instead, use 'resp.render()' to render safely escaped HTML."
47b88503a236bfec8ab99934d57a2c90,2,14,2,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
47b88503a236bfec8ab99934d57a2c90,2,14,2,files.javascript.rules.browser.security.insecure-innerhtml,"User controlled data in a `document.getElementById(""sortedNumbers"").innerHTML` is an anti-pattern that can lead to XSS vulnerabilities"
4810c29a99e60e4605333bb1e3352531,2,28,3,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
4810c29a99e60e4605333bb1e3352531,2,28,3,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `messageContainer.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
4810c29a99e60e4605333bb1e3352531,2,28,32,files.javascript.rules.lang.security.html-in-template-string,"This template literal looks like HTML and has interpolated variables. These variables are not HTML-encoded by default. If the variables contain HTML tags, these may be interpreted by the browser, resulting in cross-site scripting (XSS)."
4923192acb2593081f1eb858be1b2b64,1,4,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
49ab14ad8d8861a7e2f5c7ee3fa86f6f,1,16,9,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
49ab14ad8d8861a7e2f5c7ee3fa86f6f,1,16,9,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `resultsDiv.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
49ab14ad8d8861a7e2f5c7ee3fa86f6f,1,16,55,files.javascript.rules.lang.security.html-in-template-string,"This template literal looks like HTML and has interpolated variables. These variables are not HTML-encoded by default. If the variables contain HTML tags, these may be interpreted by the browser, resulting in cross-site scripting (XSS)."
49ab14ad8d8861a7e2f5c7ee3fa86f6f,3,27,9,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
49ab14ad8d8861a7e2f5c7ee3fa86f6f,3,27,9,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `resultsDiv.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
49ab14ad8d8861a7e2f5c7ee3fa86f6f,3,27,55,files.javascript.rules.lang.security.html-in-template-string,"This template literal looks like HTML and has interpolated variables. These variables are not HTML-encoded by default. If the variables contain HTML tags, these may be interpreted by the browser, resulting in cross-site scripting (XSS)."
49d0e7fe40daa635d969edb8266d3ab4,4,15,3,files.javascript.rules.jquery.security.audit.jquery-insecure-method,User controlled data in a jQuery's `.html(...)` is an anti-pattern that can lead to XSS vulnerabilities
49d0e7fe40daa635d969edb8266d3ab4,4,15,3,files.javascript.rules.jquery.security.audit.prohibit-jquery-html,"JQuery's `html` function is susceptible to Cross Site Scripting (XSS) attacks. If you're just passing text, consider `text` instead. Otherwise, use a function that escapes HTML such as edX's `HtmlUtils.setHtml()`."
49db29ad88ce37d2d7e1b49e40bd6af3,0,28,7,files.javascript.rules.lang.security.audit.unsafe-dynamic-method,"Using non-static data to retrieve and run functions from the object is dangerous. If the data is user-controlled, it may allow executing arbitrary code."
4a54422978e607e56da5cd4ed02e09b8,6,30,9,files.javascript.rules.lang.security.audit.detect-non-literal-require,"Detected the use of require(variable). Calling require with a non-literal argument might allow an attacker to load and run arbitrary code, or access arbitrary files."
4a54422978e607e56da5cd4ed02e09b8,6,34,9,files.javascript.rules.lang.security.audit.detect-non-literal-require,"Detected the use of require(variable). Calling require with a non-literal argument might allow an attacker to load and run arbitrary code, or access arbitrary files."
4a6b6017d97b9779798168ffacc850b2,0,16,5,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
4a6b6017d97b9779798168ffacc850b2,0,16,5,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `scheduleSummaryDiv.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
4a6b6017d97b9779798168ffacc850b2,0,16,36,files.javascript.rules.lang.security.html-in-template-string,"This template literal looks like HTML and has interpolated variables. These variables are not HTML-encoded by default. If the variables contain HTML tags, these may be interpreted by the browser, resulting in cross-site scripting (XSS)."
4a6b6017d97b9779798168ffacc850b2,0,24,5,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
4a6b6017d97b9779798168ffacc850b2,0,24,5,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `routeDetailsDiv.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
4a6b6017d97b9779798168ffacc850b2,0,24,62,files.javascript.rules.lang.security.html-in-template-string,"This template literal looks like HTML and has interpolated variables. These variables are not HTML-encoded by default. If the variables contain HTML tags, these may be interpreted by the browser, resulting in cross-site scripting (XSS)."
4a6d91c4d6a94b44da11fbba93a3dbbe,0,70,9,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
4a6d91c4d6a94b44da11fbba93a3dbbe,0,70,9,files.javascript.rules.browser.security.insecure-innerhtml,"User controlled data in a `this.votVideoVolumeSlider.label.querySelector(""strong"").innerHTML` is an anti-pattern that can lead to XSS vulnerabilities"
4a6d91c4d6a94b44da11fbba93a3dbbe,0,85,11,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
4a6d91c4d6a94b44da11fbba93a3dbbe,0,85,11,files.javascript.rules.browser.security.insecure-innerhtml,"User controlled data in a `this.votVideoTranslationVolumeSlider.label.querySelector(
            ""strong"",
          ).innerHTML` is an anti-pattern that can lead to XSS vulnerabilities"
4a6d91c4d6a94b44da11fbba93a3dbbe,0,100,11,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
4a6d91c4d6a94b44da11fbba93a3dbbe,0,100,11,files.javascript.rules.browser.security.insecure-innerhtml,"User controlled data in a `this.votVideoTranslationVolumeSlider.label.querySelector(
            ""strong"",
          ).innerHTML` is an anti-pattern that can lead to XSS vulnerabilities"
4a6d91c4d6a94b44da11fbba93a3dbbe,0,159,9,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
4a6d91c4d6a94b44da11fbba93a3dbbe,0,159,9,files.javascript.rules.browser.security.insecure-innerhtml,"User controlled data in a `this.votAutoSetVolumeSlider.label.querySelector(""strong"").innerHTML` is an anti-pattern that can lead to XSS vulnerabilities"
4a6d91c4d6a94b44da11fbba93a3dbbe,0,222,11,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
4a6d91c4d6a94b44da11fbba93a3dbbe,0,222,11,files.javascript.rules.browser.security.insecure-innerhtml,"User controlled data in a `this.votSubtitlesMaxLengthSlider.label.querySelector(
            ""strong"",
          ).innerHTML` is an anti-pattern that can lead to XSS vulnerabilities"
4ab4211f9d61f4bd064d0084382a65ad,7,26,1,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
4ab4211f9d61f4bd064d0084382a65ad,7,26,1,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `document.getElementById('myDiv').innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
4b5ec6c3c07f85dd10b812467da7012d,13,21,15,files.javascript.rules.lang.security.audit.detect-non-literal-fs-filename,"Detected that function argument `req` has entered the fs module. An attacker could potentially control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are validated."
4b5ec6c3c07f85dd10b812467da7012d,13,30,21,files.javascript.rules.lang.security.audit.detect-non-literal-fs-filename,"Detected that function argument `req` has entered the fs module. An attacker could potentially control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are validated."
4b5ec6c3c07f85dd10b812467da7012d,13,63,52,files.javascript.rules.lang.security.audit.path-traversal.path-join-resolve-traversal,"Detected possible user input going into a `path.join` or `path.resolve` function. This could possibly lead to a path traversal vulnerability,  where the attacker can access arbitrary files stored in the file system. Instead, be sure to sanitize or validate user input first."
4b5ec6c3c07f85dd10b812467da7012d,13,66,26,files.javascript.rules.lang.security.audit.detect-non-literal-fs-filename,"Detected that function argument `message` has entered the fs module. An attacker could potentially control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are validated."
4b5ec6c3c07f85dd10b812467da7012d,8,15,15,files.javascript.rules.lang.security.audit.detect-non-literal-fs-filename,"Detected that function argument `req` has entered the fs module. An attacker could potentially control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are validated."
4b5ec6c3c07f85dd10b812467da7012d,8,24,21,files.javascript.rules.lang.security.audit.detect-non-literal-fs-filename,"Detected that function argument `req` has entered the fs module. An attacker could potentially control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are validated."
4b5ec6c3c07f85dd10b812467da7012d,8,59,52,files.javascript.rules.lang.security.audit.path-traversal.path-join-resolve-traversal,"Detected possible user input going into a `path.join` or `path.resolve` function. This could possibly lead to a path traversal vulnerability,  where the attacker can access arbitrary files stored in the file system. Instead, be sure to sanitize or validate user input first."
4b5ec6c3c07f85dd10b812467da7012d,8,61,26,files.javascript.rules.lang.security.audit.detect-non-literal-fs-filename,"Detected that function argument `message` has entered the fs module. An attacker could potentially control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are validated."
4b5ec6c3c07f85dd10b812467da7012d,9,15,15,files.javascript.rules.lang.security.audit.detect-non-literal-fs-filename,"Detected that function argument `req` has entered the fs module. An attacker could potentially control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are validated."
4b5ec6c3c07f85dd10b812467da7012d,9,24,21,files.javascript.rules.lang.security.audit.detect-non-literal-fs-filename,"Detected that function argument `req` has entered the fs module. An attacker could potentially control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are validated."
4b5ec6c3c07f85dd10b812467da7012d,9,59,52,files.javascript.rules.lang.security.audit.path-traversal.path-join-resolve-traversal,"Detected possible user input going into a `path.join` or `path.resolve` function. This could possibly lead to a path traversal vulnerability,  where the attacker can access arbitrary files stored in the file system. Instead, be sure to sanitize or validate user input first."
4b5ec6c3c07f85dd10b812467da7012d,9,61,26,files.javascript.rules.lang.security.audit.detect-non-literal-fs-filename,"Detected that function argument `message` has entered the fs module. An attacker could potentially control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are validated."
4bacc4e7fa97d5223d93871c231cf78b,1,16,7,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
4bacc4e7fa97d5223d93871c231cf78b,1,16,7,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `link.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
4bacc4e7fa97d5223d93871c231cf78b,3,22,5,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
4bacc4e7fa97d5223d93871c231cf78b,3,22,5,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `link.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
4bacc4e7fa97d5223d93871c231cf78b,6,24,5,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
4bacc4e7fa97d5223d93871c231cf78b,6,24,5,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `link.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
4bacc4e7fa97d5223d93871c231cf78b,9,30,5,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
4bacc4e7fa97d5223d93871c231cf78b,9,30,5,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `link.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
4be1a0fb620de63d94432d9fcb3b529a,0,2,10,files.javascript.rules.jquery.security.audit.prohibit-jquery-html,"JQuery's `html` function is susceptible to Cross Site Scripting (XSS) attacks. If you're just passing text, consider `text` instead. Otherwise, use a function that escapes HTML such as edX's `HtmlUtils.setHtml()`."
4be1a0fb620de63d94432d9fcb3b529a,1,2,10,files.javascript.rules.jquery.security.audit.prohibit-jquery-html,"JQuery's `html` function is susceptible to Cross Site Scripting (XSS) attacks. If you're just passing text, consider `text` instead. Otherwise, use a function that escapes HTML such as edX's `HtmlUtils.setHtml()`."
4bfe0a4e286e9a59987e903737c9948e,0,4,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
4bfe0a4e286e9a59987e903737c9948e,1,5,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
4c438b3c65abce26da0bf2ccb49d3f5d,16,2,5,files.javascript.rules.lang.security.audit.detect-non-literal-require,"Detected the use of require(variable). Calling require with a non-literal argument might allow an attacker to load and run arbitrary code, or access arbitrary files."
4c744954db1dac095fdd4e29e492861e,2,3,5,files.javascript.rules.lang.security.audit.detect-non-literal-require,"Detected the use of require(variable). Calling require with a non-literal argument might allow an attacker to load and run arbitrary code, or access arbitrary files."
4c7785c114b28d3ccce46453560adf6f,0,6,39,files.javascript.rules.lang.security.detect-insecure-websocket,Insecure WebSocket Detected. WebSocket Secure (wss) should be used for all WebSocket connections.
4cd717b0f7edbb7832c7b56044cc13c6,0,16,9,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
4cd717b0f7edbb7832c7b56044cc13c6,0,16,9,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `codeElement.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
4cf7ba7d82e485b13f59618ec5c78d1b,12,12,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
4d3a97c6f6f738ac7399a3653718e473,3,7,3,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
4d3a97c6f6f738ac7399a3653718e473,3,7,3,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `ghostinfo.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
4d72724c805f7605d228eedd1217ebaf,4,20,9,files.javascript.rules.lang.security.audit.unsafe-formatstring,"Detected string concatenation with a non-literal variable in a util.format / console.log function. If an attacker injects a format specifier in the string, it will forge the log message. Try to use constant values for the format string."
4dcf3e483abe279e598b77bedca3cbd4,0,5,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
4dcf3e483abe279e598b77bedca3cbd4,0,25,18,files.javascript.rules.express.security.audit.xss.direct-response-write,"Detected directly writing to a Response object from user-defined input. This bypasses any HTML escaping and may expose your application to a Cross-Site-scripting (XSS) vulnerability. Instead, use 'resp.render()' to render safely escaped HTML."
4dcf3e483abe279e598b77bedca3cbd4,1,5,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
4dcf3e483abe279e598b77bedca3cbd4,1,25,53,files.javascript.rules.jsonwebtoken.security.hardcoded-jwt-secret,"A hard-coded credential was detected. It is not recommended to store credentials in source-code, as this risks secrets being leaked and used by either an internal or external malicious adversary. It is recommended to use environment variables to securely provide credentials or retrieve credentials from a secure vault or HSM (Hardware Security Module)."
4dcf3e483abe279e598b77bedca3cbd4,1,27,18,files.javascript.rules.express.security.audit.xss.direct-response-write,"Detected directly writing to a Response object from user-defined input. This bypasses any HTML escaping and may expose your application to a Cross-Site-scripting (XSS) vulnerability. Instead, use 'resp.render()' to render safely escaped HTML."
4dcf3e483abe279e598b77bedca3cbd4,1,38,27,files.javascript.rules.jsonwebtoken.security.hardcoded-jwt-secret,"A hard-coded credential was detected. It is not recommended to store credentials in source-code, as this risks secrets being leaked and used by either an internal or external malicious adversary. It is recommended to use environment variables to securely provide credentials or retrieve credentials from a secure vault or HSM (Hardware Security Module)."
4dfc2a6542e1f1be568462b45c214abc,5,19,1,files.javascript.rules.browser.security.insufficient-postmessage-origin-validation,No validation of origin is done by the addEventListener API. It may be possible to exploit this flaw to perform Cross Origin attacks such as Cross-Site Scripting(XSS).
4dfc2a6542e1f1be568462b45c214abc,9,25,1,files.javascript.rules.browser.security.insufficient-postmessage-origin-validation,No validation of origin is done by the addEventListener API. It may be possible to exploit this flaw to perform Cross Origin attacks such as Cross-Site Scripting(XSS).
4e1a676ab3cad4993f5e0d2adc18c27f,1,16,3,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
4e1a676ab3cad4993f5e0d2adc18c27f,1,16,3,files.javascript.rules.browser.security.insecure-innerhtml,"User controlled data in a `document.getElementById(""countdown"").innerHTML` is an anti-pattern that can lead to XSS vulnerabilities"
4e1a676ab3cad4993f5e0d2adc18c27f,15,38,3,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
4e1a676ab3cad4993f5e0d2adc18c27f,15,38,3,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `element.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
4e1a676ab3cad4993f5e0d2adc18c27f,3,11,3,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
4e1a676ab3cad4993f5e0d2adc18c27f,3,11,3,files.javascript.rules.browser.security.insecure-innerhtml,"User controlled data in a `document.getElementById(""quote"").innerHTML` is an anti-pattern that can lead to XSS vulnerabilities"
4e1a676ab3cad4993f5e0d2adc18c27f,5,12,4,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
4e1a676ab3cad4993f5e0d2adc18c27f,5,12,4,files.javascript.rules.browser.security.insecure-innerhtml,"User controlled data in a `document.getElementById(""temperature"").innerHTML` is an anti-pattern that can lead to XSS vulnerabilities"
4e1a676ab3cad4993f5e0d2adc18c27f,5,13,4,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
4e1a676ab3cad4993f5e0d2adc18c27f,5,13,4,files.javascript.rules.browser.security.insecure-innerhtml,"User controlled data in a `document.getElementById(""conditions"").innerHTML` is an anti-pattern that can lead to XSS vulnerabilities"
4e1a676ab3cad4993f5e0d2adc18c27f,7,28,3,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
4e1a676ab3cad4993f5e0d2adc18c27f,7,28,3,files.javascript.rules.browser.security.insecure-innerhtml,"User controlled data in a `document.getElementById(""question"").innerHTML` is an anti-pattern that can lead to XSS vulnerabilities"
4e1a676ab3cad4993f5e0d2adc18c27f,7,34,5,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
4e1a676ab3cad4993f5e0d2adc18c27f,7,34,5,files.javascript.rules.browser.security.insecure-innerhtml,"User controlled data in a `document.getElementById(""score"").innerHTML` is an anti-pattern that can lead to XSS vulnerabilities"
4e1a676ab3cad4993f5e0d2adc18c27f,9,17,7,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
4e1a676ab3cad4993f5e0d2adc18c27f,9,17,7,files.javascript.rules.browser.security.insecure-innerhtml,"User controlled data in a `document.getElementById(""result"").innerHTML` is an anti-pattern that can lead to XSS vulnerabilities"
4ec1c8386c05d8e2b36261239d92d6fb,2,6,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
4ecaeb4db1dd859bbf3cca2e4abad989,19,2,1,files.javascript.rules.browser.security.wildcard-postmessage-configuration,"The target origin of the window.postMessage() API is set to ""*"". This could allow for information disclosure due to the possibility of any origin allowed to receive the message."
4ecaeb4db1dd859bbf3cca2e4abad989,19,5,1,files.javascript.rules.browser.security.insufficient-postmessage-origin-validation,No validation of origin is done by the addEventListener API. It may be possible to exploit this flaw to perform Cross Origin attacks such as Cross-Site Scripting(XSS).
4ee0cc3818ae030fe0781c80451450b4,8,34,7,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
4ee0cc3818ae030fe0781c80451450b4,8,34,7,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `container.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
4f18411bc3bf46b518e7b267a08445e8,3,4,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
4f498fd2a7b9ae6ecbab1e3be7c1e952,1,12,3,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
4f498fd2a7b9ae6ecbab1e3be7c1e952,1,12,3,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `boxes[bestMove].innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
4f498fd2a7b9ae6ecbab1e3be7c1e952,1,35,7,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
4f498fd2a7b9ae6ecbab1e3be7c1e952,1,35,7,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `boxes[i].innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
4f53bf07e893e00268348d6280227792,0,68,7,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
4f53bf07e893e00268348d6280227792,0,68,7,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `pelaajanKortti.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
4f53bf07e893e00268348d6280227792,0,68,34,files.javascript.rules.lang.security.html-in-template-string,"This template literal looks like HTML and has interpolated variables. These variables are not HTML-encoded by default. If the variables contain HTML tags, these may be interpreted by the browser, resulting in cross-site scripting (XSS)."
4f53bf07e893e00268348d6280227792,0,75,7,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
4f53bf07e893e00268348d6280227792,0,75,7,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `jakajanKortti.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
4f53bf07e893e00268348d6280227792,0,75,33,files.javascript.rules.lang.security.html-in-template-string,"This template literal looks like HTML and has interpolated variables. These variables are not HTML-encoded by default. If the variables contain HTML tags, these may be interpreted by the browser, resulting in cross-site scripting (XSS)."
4f889586692873eb262b30c9bce3e943,1,4,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
4f889586692873eb262b30c9bce3e943,3,4,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
5004f1873fcb8feb1e2cdf7af930f64b,10,30,5,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
5004f1873fcb8feb1e2cdf7af930f64b,10,30,5,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `bookElement.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
5004f1873fcb8feb1e2cdf7af930f64b,10,30,29,files.javascript.rules.lang.security.html-in-template-string,"This template literal looks like HTML and has interpolated variables. These variables are not HTML-encoded by default. If the variables contain HTML tags, these may be interpreted by the browser, resulting in cross-site scripting (XSS)."
5004f1873fcb8feb1e2cdf7af930f64b,3,30,5,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
5004f1873fcb8feb1e2cdf7af930f64b,3,30,5,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `bookElement.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
5004f1873fcb8feb1e2cdf7af930f64b,3,30,29,files.javascript.rules.lang.security.html-in-template-string,"This template literal looks like HTML and has interpolated variables. These variables are not HTML-encoded by default. If the variables contain HTML tags, these may be interpreted by the browser, resulting in cross-site scripting (XSS)."
5004f1873fcb8feb1e2cdf7af930f64b,9,30,5,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
5004f1873fcb8feb1e2cdf7af930f64b,9,30,5,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `bookElement.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
5004f1873fcb8feb1e2cdf7af930f64b,9,30,29,files.javascript.rules.lang.security.html-in-template-string,"This template literal looks like HTML and has interpolated variables. These variables are not HTML-encoded by default. If the variables contain HTML tags, these may be interpreted by the browser, resulting in cross-site scripting (XSS)."
5013edde25f11e9928973fedbc79c101,6,3,5,files.javascript.rules.lang.security.audit.unsafe-dynamic-method,"Using non-static data to retrieve and run functions from the object is dangerous. If the data is user-controlled, it may allow executing arbitrary code."
505a472c0d5d462be783ee2585d3f7f9,11,2,3,files.javascript.rules.lang.security.audit.unsafe-dynamic-method,"Using non-static data to retrieve and run functions from the object is dangerous. If the data is user-controlled, it may allow executing arbitrary code."
505a472c0d5d462be783ee2585d3f7f9,11,4,4,files.javascript.rules.lang.security.audit.unsafe-dynamic-method,"Using non-static data to retrieve and run functions from the object is dangerous. If the data is user-controlled, it may allow executing arbitrary code."
509ff5b96a01becff281fd2dcfb6c7fb,0,7,11,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
509ff5b96a01becff281fd2dcfb6c7fb,0,7,11,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `elementit[i].innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
509ff5b96a01becff281fd2dcfb6c7fb,0,17,9,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
509ff5b96a01becff281fd2dcfb6c7fb,0,17,9,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `elementit[i].innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
50a34a79a249da74a99cf6ff7ca881aa,0,34,9,files.javascript.rules.jquery.security.audit.prohibit-jquery-html,"JQuery's `html` function is susceptible to Cross Site Scripting (XSS) attacks. If you're just passing text, consider `text` instead. Otherwise, use a function that escapes HTML such as edX's `HtmlUtils.setHtml()`."
50a34a79a249da74a99cf6ff7ca881aa,0,41,5,files.javascript.rules.jquery.security.audit.jquery-insecure-method,User controlled data in a jQuery's `.after(...)` is an anti-pattern that can lead to XSS vulnerabilities
513ca6d5437e74f927d8414ab1348dcd,2,9,5,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
513ca6d5437e74f927d8414ab1348dcd,2,9,5,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `document.getElementById('app').innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
5154d55bb41af19b208ef29af6885697,2,17,27,files.javascript.rules.browser.security.eval-detected,"Detected the use of eval(). eval() can be dangerous if used to evaluate dynamic content. If this content can be input from outside the program, this may be a code injection vulnerability. Ensure evaluated content is not definable by external sources."
522796b7187da37e6039967183f180c0,0,3,7,files.javascript.rules.jquery.security.audit.jquery-insecure-selector,User controlled data in a `$(...)` is an anti-pattern that can lead to XSS vulnerabilities
522796b7187da37e6039967183f180c0,0,4,31,files.javascript.rules.jquery.security.audit.jquery-insecure-selector,User controlled data in a `$(...)` is an anti-pattern that can lead to XSS vulnerabilities
522796b7187da37e6039967183f180c0,0,9,20,files.javascript.rules.jquery.security.audit.jquery-insecure-selector,User controlled data in a `$(...)` is an anti-pattern that can lead to XSS vulnerabilities
52602e470f2c1fdd55858d587bc65376,3,12,9,files.javascript.rules.browser.security.eval-detected,"Detected the use of eval(). eval() can be dangerous if used to evaluate dynamic content. If this content can be input from outside the program, this may be a code injection vulnerability. Ensure evaluated content is not definable by external sources."
52602e470f2c1fdd55858d587bc65376,3,12,34,files.javascript.rules.browser.security.eval-detected,"Detected the use of eval(). eval() can be dangerous if used to evaluate dynamic content. If this content can be input from outside the program, this may be a code injection vulnerability. Ensure evaluated content is not definable by external sources."
52602e470f2c1fdd55858d587bc65376,3,23,9,files.javascript.rules.browser.security.eval-detected,"Detected the use of eval(). eval() can be dangerous if used to evaluate dynamic content. If this content can be input from outside the program, this may be a code injection vulnerability. Ensure evaluated content is not definable by external sources."
52602e470f2c1fdd55858d587bc65376,3,30,3,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
52602e470f2c1fdd55858d587bc65376,3,30,3,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `results.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
52602e470f2c1fdd55858d587bc65376,5,18,3,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
52602e470f2c1fdd55858d587bc65376,5,18,3,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `cell1.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
52602e470f2c1fdd55858d587bc65376,5,19,3,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
52602e470f2c1fdd55858d587bc65376,5,19,3,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `cell2.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
52602e470f2c1fdd55858d587bc65376,5,22,3,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
52602e470f2c1fdd55858d587bc65376,5,22,3,files.javascript.rules.browser.security.insecure-innerhtml,"User controlled data in a `document.getElementById(""total-calories"").innerHTML` is an anti-pattern that can lead to XSS vulnerabilities"
52602e470f2c1fdd55858d587bc65376,5,30,3,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
52602e470f2c1fdd55858d587bc65376,5,30,3,files.javascript.rules.browser.security.insecure-innerhtml,"User controlled data in a `document.getElementById(""total-calories"").innerHTML` is an anti-pattern that can lead to XSS vulnerabilities"
52602e470f2c1fdd55858d587bc65376,7,19,3,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
52602e470f2c1fdd55858d587bc65376,7,19,3,files.javascript.rules.browser.security.insecure-innerhtml,"User controlled data in a `document.getElementsByTagName(""h3"")[1].innerHTML` is an anti-pattern that can lead to XSS vulnerabilities"
52a6e623222a167728cf39896bdb2661,2,9,9,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
52a6e623222a167728cf39896bdb2661,2,9,9,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `tabLink.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
52a6e623222a167728cf39896bdb2661,2,15,9,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
52a6e623222a167728cf39896bdb2661,2,15,9,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `tabContent.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
5315e6e673c796336ea9b9770a49b9cf,0,5,7,files.javascript.rules.jquery.security.audit.prohibit-jquery-html,"JQuery's `html` function is susceptible to Cross Site Scripting (XSS) attacks. If you're just passing text, consider `text` instead. Otherwise, use a function that escapes HTML such as edX's `HtmlUtils.setHtml()`."
5315e6e673c796336ea9b9770a49b9cf,0,5,53,files.javascript.rules.jquery.security.audit.prohibit-jquery-html,"JQuery's `html` function is susceptible to Cross Site Scripting (XSS) attacks. If you're just passing text, consider `text` instead. Otherwise, use a function that escapes HTML such as edX's `HtmlUtils.setHtml()`."
532a803077bda2352990167a3fa1df5b,0,51,3,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
532a803077bda2352990167a3fa1df5b,0,51,3,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `document.getElementById(newCellId).innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
532a803077bda2352990167a3fa1df5b,0,51,50,files.javascript.rules.lang.security.html-in-template-string,"This template literal looks like HTML and has interpolated variables. These variables are not HTML-encoded by default. If the variables contain HTML tags, these may be interpreted by the browser, resulting in cross-site scripting (XSS)."
532a803077bda2352990167a3fa1df5b,0,88,9,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
532a803077bda2352990167a3fa1df5b,0,88,9,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `document.getElementById(cellId).innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
532a803077bda2352990167a3fa1df5b,0,88,53,files.javascript.rules.lang.security.html-in-template-string,"This template literal looks like HTML and has interpolated variables. These variables are not HTML-encoded by default. If the variables contain HTML tags, these may be interpreted by the browser, resulting in cross-site scripting (XSS)."
535f26da61844c6e711d3e099ac34c96,1,14,27,files.javascript.rules.lang.security.html-in-template-string,"This template literal looks like HTML and has interpolated variables. These variables are not HTML-encoded by default. If the variables contain HTML tags, these may be interpreted by the browser, resulting in cross-site scripting (XSS)."
535f26da61844c6e711d3e099ac34c96,1,24,33,files.javascript.rules.lang.security.html-in-template-string,"This template literal looks like HTML and has interpolated variables. These variables are not HTML-encoded by default. If the variables contain HTML tags, these may be interpreted by the browser, resulting in cross-site scripting (XSS)."
538078f1ac3ffd668a5489b90974ae5e,6,41,5,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
538078f1ac3ffd668a5489b90974ae5e,6,41,5,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `result.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
538078f1ac3ffd668a5489b90974ae5e,6,50,5,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
538078f1ac3ffd668a5489b90974ae5e,6,50,5,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `result.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
5385a7c30dca409fe9e69c55e5e3219f,0,15,7,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
5385a7c30dca409fe9e69c55e5e3219f,0,15,7,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `elementit[i].innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
5385a7c30dca409fe9e69c55e5e3219f,0,32,3,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
5385a7c30dca409fe9e69c55e5e3219f,0,32,3,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `tulos.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
53b47b6f1b8a9f629a41be6bc7f2d30e,3,52,21,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
53b47b6f1b8a9f629a41be6bc7f2d30e,3,52,21,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `tempElement.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
54383903512a86eae389ee561e79fb72,1,16,7,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
54383903512a86eae389ee561e79fb72,1,16,7,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `searchPage.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
54383903512a86eae389ee561e79fb72,1,32,13,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
54383903512a86eae389ee561e79fb72,1,32,13,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `itemPage.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
543c7f2c6be5cb897620b287b931ccea,10,32,5,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
543c7f2c6be5cb897620b287b931ccea,10,32,5,files.javascript.rules.browser.security.insecure-innerhtml,"User controlled data in a `document.getElementById(""regionDimensions"").innerHTML` is an anti-pattern that can lead to XSS vulnerabilities"
543c7f2c6be5cb897620b287b931ccea,8,19,9,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
543c7f2c6be5cb897620b287b931ccea,8,19,9,files.javascript.rules.browser.security.insecure-innerhtml,"User controlled data in a `document.getElementById(""output"").innerHTML` is an anti-pattern that can lead to XSS vulnerabilities"
546e3a6bfe5407e799f305389f699822,1,30,17,files.javascript.rules.lang.security.audit.unsafe-formatstring,"Detected string concatenation with a non-literal variable in a util.format / console.log function. If an attacker injects a format specifier in the string, it will forge the log message. Try to use constant values for the format string."
546e3a6bfe5407e799f305389f699822,1,34,17,files.javascript.rules.lang.security.audit.unsafe-formatstring,"Detected string concatenation with a non-literal variable in a util.format / console.log function. If an attacker injects a format specifier in the string, it will forge the log message. Try to use constant values for the format string."
546e3a6bfe5407e799f305389f699822,1,38,17,files.javascript.rules.lang.security.audit.unsafe-formatstring,"Detected string concatenation with a non-literal variable in a util.format / console.log function. If an attacker injects a format specifier in the string, it will forge the log message. Try to use constant values for the format string."
546e3a6bfe5407e799f305389f699822,1,42,17,files.javascript.rules.lang.security.audit.unsafe-formatstring,"Detected string concatenation with a non-literal variable in a util.format / console.log function. If an attacker injects a format specifier in the string, it will forge the log message. Try to use constant values for the format string."
5479c1b51cd226514dfe6e2917b05519,1,28,5,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
5479c1b51cd226514dfe6e2917b05519,1,28,5,files.javascript.rules.browser.security.insecure-innerhtml,"User controlled data in a `document.getElementById(""result"").innerHTML` is an anti-pattern that can lead to XSS vulnerabilities"
5479c1b51cd226514dfe6e2917b05519,3,28,5,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
5479c1b51cd226514dfe6e2917b05519,3,28,5,files.javascript.rules.browser.security.insecure-innerhtml,"User controlled data in a `document.getElementById(""result"").innerHTML` is an anti-pattern that can lead to XSS vulnerabilities"
54a4486a1aa597d26d669aa2cdd32333,2,12,5,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
54a4486a1aa597d26d669aa2cdd32333,2,12,5,files.javascript.rules.browser.security.insecure-innerhtml,"User controlled data in a `document.getElementById(""result"").innerHTML` is an anti-pattern that can lead to XSS vulnerabilities"
54c5df8f67e1af10a92c2e1484ab362e,5,2,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
54fa185231e97be2f23298691234ed61,0,4,3,files.javascript.rules.browser.security.insufficient-postmessage-origin-validation,No validation of origin is done by the addEventListener API. It may be possible to exploit this flaw to perform Cross Origin attacks such as Cross-Site Scripting(XSS).
5589040513953a2464bd95f9ab1803e7,1,6,9,files.javascript.rules.lang.security.audit.detect-non-literal-require,"Detected the use of require(variable). Calling require with a non-literal argument might allow an attacker to load and run arbitrary code, or access arbitrary files."
5589040513953a2464bd95f9ab1803e7,1,19,9,files.javascript.rules.lang.security.audit.detect-non-literal-require,"Detected the use of require(variable). Calling require with a non-literal argument might allow an attacker to load and run arbitrary code, or access arbitrary files."
55b6f50dd4d1ce8d3400ae8143c235a6,0,17,21,files.javascript.rules.lang.security.audit.unsafe-formatstring,"Detected string concatenation with a non-literal variable in a util.format / console.log function. If an attacker injects a format specifier in the string, it will forge the log message. Try to use constant values for the format string."
55db489c67c5980c8fc3fe3b87b2ae0c,5,13,77,files.javascript.rules.lang.security.audit.path-traversal.path-join-resolve-traversal,"Detected possible user input going into a `path.join` or `path.resolve` function. This could possibly lead to a path traversal vulnerability,  where the attacker can access arbitrary files stored in the file system. Instead, be sure to sanitize or validate user input first."
55f8b103840afcf5d854d903e0f9f725,1,32,5,files.javascript.rules.lang.security.audit.unsafe-dynamic-method,"Using non-static data to retrieve and run functions from the object is dangerous. If the data is user-controlled, it may allow executing arbitrary code."
55f8b103840afcf5d854d903e0f9f725,1,44,5,files.javascript.rules.lang.security.audit.unsafe-dynamic-method,"Using non-static data to retrieve and run functions from the object is dangerous. If the data is user-controlled, it may allow executing arbitrary code."
56b36f160d6f12a512ed5e7c7d6209c3,0,9,20,files.javascript.rules.lang.security.html-in-template-string,"This template literal looks like HTML and has interpolated variables. These variables are not HTML-encoded by default. If the variables contain HTML tags, these may be interpreted by the browser, resulting in cross-site scripting (XSS)."
56b36f160d6f12a512ed5e7c7d6209c3,0,14,5,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
56b36f160d6f12a512ed5e7c7d6209c3,0,14,5,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `messageElement.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
572c96856dc04eec4ef2ca2973a87164,1,6,3,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
572c96856dc04eec4ef2ca2973a87164,1,6,3,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `writeTo.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
57bb75ceae51b7396047405e6a517f60,2,10,27,files.javascript.rules.lang.security.audit.detect-non-literal-regexp,"RegExp() called with a `query` function argument, this might allow an attacker to cause a Regular Expression Denial-of-Service (ReDoS) within your application as RegExP blocks the main thread. For this reason, it is recommended to use hardcoded regexes instead. If your regex is run on user-controlled input, consider performing input validation or use a regex checking/sanitization library such as https://www.npmjs.com/package/recheck to verify that the regex does not appear vulnerable to ReDoS."
5811c07c01a167a8a71d04fbee806d59,0,9,3,files.javascript.rules.jquery.security.audit.jquery-insecure-method,User controlled data in a jQuery's `.wrapAll(...)` is an anti-pattern that can lead to XSS vulnerabilities
58b5e60a15192c5f51587ac045bfcd77,1,11,13,files.javascript.rules.lang.security.audit.unsafe-formatstring,"Detected string concatenation with a non-literal variable in a util.format / console.log function. If an attacker injects a format specifier in the string, it will forge the log message. Try to use constant values for the format string."
58b5e60a15192c5f51587ac045bfcd77,4,24,13,files.javascript.rules.lang.security.audit.unsafe-formatstring,"Detected string concatenation with a non-literal variable in a util.format / console.log function. If an attacker injects a format specifier in the string, it will forge the log message. Try to use constant values for the format string."
58b5e60a15192c5f51587ac045bfcd77,7,32,13,files.javascript.rules.lang.security.audit.unsafe-formatstring,"Detected string concatenation with a non-literal variable in a util.format / console.log function. If an attacker injects a format specifier in the string, it will forge the log message. Try to use constant values for the format string."
58c1c22ccde247b4be053950bc8f3fe3,0,25,13,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
58c1c22ccde247b4be053950bc8f3fe3,0,25,13,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `chatContainer.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
58c1c22ccde247b4be053950bc8f3fe3,0,32,9,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
58c1c22ccde247b4be053950bc8f3fe3,0,32,9,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `chatContainer.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
58c1c22ccde247b4be053950bc8f3fe3,0,51,5,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
58c1c22ccde247b4be053950bc8f3fe3,0,51,5,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `chatContainer.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
58cad65d2c73a188f3c95023bc040200,2,9,5,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
58cad65d2c73a188f3c95023bc040200,2,9,5,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `style.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
58cad65d2c73a188f3c95023bc040200,4,9,5,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
58cad65d2c73a188f3c95023bc040200,4,9,5,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `style.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
594fda08d1756cd21892219605bddef0,14,3,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
594fda08d1756cd21892219605bddef0,15,11,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
594fda08d1756cd21892219605bddef0,3,6,21,files.javascript.rules.lang.security.audit.detect-non-literal-fs-filename,"Detected that function argument `filePath` has entered the fs module. An attacker could potentially control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are validated."
594fda08d1756cd21892219605bddef0,3,18,15,files.javascript.rules.lang.security.audit.detect-non-literal-fs-filename,"Detected that function argument `filePath` has entered the fs module. An attacker could potentially control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are validated."
59b508318416b7dec6e359452189d2e1,1,7,9,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
59b508318416b7dec6e359452189d2e1,1,7,9,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `el.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
59b508318416b7dec6e359452189d2e1,2,8,5,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
59b508318416b7dec6e359452189d2e1,2,8,5,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `el.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
59b508318416b7dec6e359452189d2e1,3,16,5,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
59b508318416b7dec6e359452189d2e1,3,16,5,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `el.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
59b508318416b7dec6e359452189d2e1,4,12,5,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
59b508318416b7dec6e359452189d2e1,4,12,5,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `el.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
5a1006b4c6cc5aca548905e01ce18534,1,9,3,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
5a1006b4c6cc5aca548905e01ce18534,1,9,3,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `infoDiv.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
5a1006b4c6cc5aca548905e01ce18534,1,17,3,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
5a1006b4c6cc5aca548905e01ce18534,1,17,3,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `paintingDiv.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
5a55a4f31a51eb83fc81c7ef9ab5e3e2,5,4,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
5a74340593ef8ff696c7ebf0123b6566,2,4,8,files.javascript.rules.lang.security.audit.detect-non-literal-require,"Detected the use of require(variable). Calling require with a non-literal argument might allow an attacker to load and run arbitrary code, or access arbitrary files."
5aa3811d1ff25ba08cc4a390b5b5c755,4,2,10,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
5b1d2ba52cb846544be74ed17573be52,0,7,3,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
5b1d2ba52cb846544be74ed17573be52,0,7,3,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `display.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
5b1d4198c156f4e8f61b717888e3dd00,0,35,5,files.javascript.rules.jquery.security.audit.jquery-insecure-method,User controlled data in a jQuery's `.append(...)` is an anti-pattern that can lead to XSS vulnerabilities
5b1d4198c156f4e8f61b717888e3dd00,0,37,5,files.javascript.rules.jquery.security.audit.jquery-insecure-method,User controlled data in a jQuery's `.append(...)` is an anti-pattern that can lead to XSS vulnerabilities
5cab8a80dc9b0b4cf9734727248d1466,0,11,9,files.javascript.rules.lang.security.audit.detect-non-literal-require,"Detected the use of require(variable). Calling require with a non-literal argument might allow an attacker to load and run arbitrary code, or access arbitrary files."
5cd89ddb48fcca0a3d2b44fec06048bb,0,6,5,files.javascript.rules.jquery.security.audit.jquery-insecure-method,User controlled data in a jQuery's `.append(...)` is an anti-pattern that can lead to XSS vulnerabilities
5d2696d5487b2d175ceac9999872263d,2,9,7,files.javascript.rules.jquery.security.audit.jquery-insecure-method,User controlled data in a jQuery's `.html(...)` is an anti-pattern that can lead to XSS vulnerabilities
5d2696d5487b2d175ceac9999872263d,2,9,7,files.javascript.rules.jquery.security.audit.prohibit-jquery-html,"JQuery's `html` function is susceptible to Cross Site Scripting (XSS) attacks. If you're just passing text, consider `text` instead. Otherwise, use a function that escapes HTML such as edX's `HtmlUtils.setHtml()`."
5e3d0737828b66c2d40dc937b09bf125,1,5,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
5e3d0737828b66c2d40dc937b09bf125,2,5,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
5e555b5fce9cc4e4cfa8c3a193a530ab,6,2,16,files.javascript.rules.lang.security.detect-insecure-websocket,Insecure WebSocket Detected. WebSocket Secure (wss) should be used for all WebSocket connections.
5ed72eb96e52bcae78a1311900cb59e3,8,2,5,files.javascript.rules.browser.security.insufficient-postmessage-origin-validation,No validation of origin is done by the addEventListener API. It may be possible to exploit this flaw to perform Cross Origin attacks such as Cross-Site Scripting(XSS).
5eeacae174287a9d567e380a7ec68bfa,4,5,10,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
5ef123e4d700ee944968d90d307e0041,11,16,18,files.javascript.rules.browser.security.eval-detected,"Detected the use of eval(). eval() can be dangerous if used to evaluate dynamic content. If this content can be input from outside the program, this may be a code injection vulnerability. Ensure evaluated content is not definable by external sources."
5f118751b7f3457918d241dd6d5ccf41,0,58,13,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
5f118751b7f3457918d241dd6d5ccf41,0,58,13,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `chatContainer.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
5f118751b7f3457918d241dd6d5ccf41,0,65,13,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
5f118751b7f3457918d241dd6d5ccf41,0,65,13,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `chatContainer.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
5f118751b7f3457918d241dd6d5ccf41,0,73,9,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
5f118751b7f3457918d241dd6d5ccf41,0,73,9,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `chatContainer.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
5fc1a2673f8e40e661db0422f0919ab9,0,8,3,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
5fc1a2673f8e40e661db0422f0919ab9,0,8,3,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `streetviewDiv.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
5fc1a2673f8e40e661db0422f0919ab9,0,17,5,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
5fc1a2673f8e40e661db0422f0919ab9,0,17,5,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `streetviewDiv.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
5fc1a2673f8e40e661db0422f0919ab9,0,17,32,files.javascript.rules.lang.security.html-in-template-string,"This template literal looks like HTML and has interpolated variables. These variables are not HTML-encoded by default. If the variables contain HTML tags, these may be interpreted by the browser, resulting in cross-site scripting (XSS)."
5ff05059a55aae651cffb388a174691f,0,14,21,files.javascript.rules.lang.security.audit.unsafe-formatstring,"Detected string concatenation with a non-literal variable in a util.format / console.log function. If an attacker injects a format specifier in the string, it will forge the log message. Try to use constant values for the format string."
5ff05059a55aae651cffb388a174691f,1,13,21,files.javascript.rules.lang.security.audit.unsafe-formatstring,"Detected string concatenation with a non-literal variable in a util.format / console.log function. If an attacker injects a format specifier in the string, it will forge the log message. Try to use constant values for the format string."
6078f1382dcf94e698decb04ce66f5bb,1,5,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
61ba5c97015ea682f659c2825df67383,2,14,5,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
61ba5c97015ea682f659c2825df67383,2,14,5,files.javascript.rules.browser.security.insecure-innerhtml,"User controlled data in a `document.getElementById(""result"").innerHTML` is an anti-pattern that can lead to XSS vulnerabilities"
61c7212aa4f97ae07a8b61a2972d868b,0,91,9,files.javascript.rules.lang.security.audit.detect-non-literal-require,"Detected the use of require(variable). Calling require with a non-literal argument might allow an attacker to load and run arbitrary code, or access arbitrary files."
61c7212aa4f97ae07a8b61a2972d868b,0,92,9,files.javascript.rules.lang.security.audit.detect-non-literal-require,"Detected the use of require(variable). Calling require with a non-literal argument might allow an attacker to load and run arbitrary code, or access arbitrary files."
61c7212aa4f97ae07a8b61a2972d868b,0,134,9,files.javascript.rules.lang.security.audit.unsafe-dynamic-method,"Using non-static data to retrieve and run functions from the object is dangerous. If the data is user-controlled, it may allow executing arbitrary code."
61c7212aa4f97ae07a8b61a2972d868b,1,77,9,files.javascript.rules.lang.security.audit.detect-non-literal-require,"Detected the use of require(variable). Calling require with a non-literal argument might allow an attacker to load and run arbitrary code, or access arbitrary files."
6218daf6a2bfc4145785e1872044db6f,0,5,3,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
6218daf6a2bfc4145785e1872044db6f,0,5,3,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `fieldset.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
6218daf6a2bfc4145785e1872044db6f,0,5,24,files.javascript.rules.lang.security.html-in-template-string,"This template literal looks like HTML and has interpolated variables. These variables are not HTML-encoded by default. If the variables contain HTML tags, these may be interpreted by the browser, resulting in cross-site scripting (XSS)."
6218daf6a2bfc4145785e1872044db6f,0,17,3,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
6218daf6a2bfc4145785e1872044db6f,0,17,3,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `div.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
6218daf6a2bfc4145785e1872044db6f,1,5,3,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
6218daf6a2bfc4145785e1872044db6f,1,5,3,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `fieldset.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
6218daf6a2bfc4145785e1872044db6f,1,5,24,files.javascript.rules.lang.security.html-in-template-string,"This template literal looks like HTML and has interpolated variables. These variables are not HTML-encoded by default. If the variables contain HTML tags, these may be interpreted by the browser, resulting in cross-site scripting (XSS)."
6218daf6a2bfc4145785e1872044db6f,2,5,3,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
6218daf6a2bfc4145785e1872044db6f,2,5,3,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `fieldset.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
6218daf6a2bfc4145785e1872044db6f,2,5,24,files.javascript.rules.lang.security.html-in-template-string,"This template literal looks like HTML and has interpolated variables. These variables are not HTML-encoded by default. If the variables contain HTML tags, these may be interpreted by the browser, resulting in cross-site scripting (XSS)."
6218daf6a2bfc4145785e1872044db6f,3,5,3,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
6218daf6a2bfc4145785e1872044db6f,3,5,3,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `fieldset.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
6218daf6a2bfc4145785e1872044db6f,3,5,24,files.javascript.rules.lang.security.html-in-template-string,"This template literal looks like HTML and has interpolated variables. These variables are not HTML-encoded by default. If the variables contain HTML tags, these may be interpreted by the browser, resulting in cross-site scripting (XSS)."
6218daf6a2bfc4145785e1872044db6f,4,5,3,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
6218daf6a2bfc4145785e1872044db6f,4,5,3,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `fieldset.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
6218daf6a2bfc4145785e1872044db6f,4,5,24,files.javascript.rules.lang.security.html-in-template-string,"This template literal looks like HTML and has interpolated variables. These variables are not HTML-encoded by default. If the variables contain HTML tags, these may be interpreted by the browser, resulting in cross-site scripting (XSS)."
6218daf6a2bfc4145785e1872044db6f,5,5,3,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
6218daf6a2bfc4145785e1872044db6f,5,5,3,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `fieldset.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
6218daf6a2bfc4145785e1872044db6f,5,5,24,files.javascript.rules.lang.security.html-in-template-string,"This template literal looks like HTML and has interpolated variables. These variables are not HTML-encoded by default. If the variables contain HTML tags, these may be interpreted by the browser, resulting in cross-site scripting (XSS)."
6218daf6a2bfc4145785e1872044db6f,6,5,3,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
6218daf6a2bfc4145785e1872044db6f,6,5,3,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `fieldset.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
6218daf6a2bfc4145785e1872044db6f,6,5,24,files.javascript.rules.lang.security.html-in-template-string,"This template literal looks like HTML and has interpolated variables. These variables are not HTML-encoded by default. If the variables contain HTML tags, these may be interpreted by the browser, resulting in cross-site scripting (XSS)."
6229956db9c5a579f8b1bdd4e982efb1,1,8,33,files.javascript.rules.passport-jwt.security.hardcoded-passport-secret,"A hard-coded credential was detected. It is not recommended to store credentials in source-code, as this risks secrets being leaked and used by either an internal or external malicious adversary. It is recommended to use environment variables to securely provide credentials or retrieve credentials from a secure vault or HSM (Hardware Security Module)."
628bcc824dcb26e2053917761329b50f,1,29,9,files.javascript.rules.lang.security.audit.detect-non-literal-require,"Detected the use of require(variable). Calling require with a non-literal argument might allow an attacker to load and run arbitrary code, or access arbitrary files."
629e7bca7c52acaedac698c0471c2717,0,7,7,files.javascript.rules.browser.security.eval-detected,"Detected the use of eval(). eval() can be dangerous if used to evaluate dynamic content. If this content can be input from outside the program, this may be a code injection vulnerability. Ensure evaluated content is not definable by external sources."
629e7bca7c52acaedac698c0471c2717,0,8,7,files.javascript.rules.browser.security.eval-detected,"Detected the use of eval(). eval() can be dangerous if used to evaluate dynamic content. If this content can be input from outside the program, this may be a code injection vulnerability. Ensure evaluated content is not definable by external sources."
629e7bca7c52acaedac698c0471c2717,0,10,9,files.javascript.rules.browser.security.eval-detected,"Detected the use of eval(). eval() can be dangerous if used to evaluate dynamic content. If this content can be input from outside the program, this may be a code injection vulnerability. Ensure evaluated content is not definable by external sources."
62bff56c905718799af81014d59f7165,1,5,5,files.javascript.rules.lang.security.audit.detect-non-literal-require,"Detected the use of require(variable). Calling require with a non-literal argument might allow an attacker to load and run arbitrary code, or access arbitrary files."
6354b4afa9459fd32fb5696581ce937b,0,6,9,files.javascript.rules.puppeteer.security.audit.puppeteer-setcontent-injection,If unverified user data can reach the `setContent` method it can result in Server-Side Request Forgery vulnerabilities
63b0f1c508e88d7b48948bb08d372aae,0,10,5,files.javascript.rules.jquery.security.audit.jquery-insecure-method,User controlled data in a jQuery's `.append(...)` is an anti-pattern that can lead to XSS vulnerabilities
63b0f1c508e88d7b48948bb08d372aae,0,23,9,files.javascript.rules.jquery.security.audit.jquery-insecure-method,User controlled data in a jQuery's `.append(...)` is an anti-pattern that can lead to XSS vulnerabilities
63b0f1c508e88d7b48948bb08d372aae,0,31,5,files.javascript.rules.jquery.security.audit.jquery-insecure-method,User controlled data in a jQuery's `.append(...)` is an anti-pattern that can lead to XSS vulnerabilities
63b2fbd532a3edf64f9113e6bf3943f9,0,27,9,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
63b2fbd532a3edf64f9113e6bf3943f9,0,27,9,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `progressBarFilled.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
63b2fbd532a3edf64f9113e6bf3943f9,0,29,9,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
63b2fbd532a3edf64f9113e6bf3943f9,0,29,9,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `progressBarFilled.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
63cc346c86b723ce89be23769abb43b4,1,7,5,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
63cc346c86b723ce89be23769abb43b4,1,7,5,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `chatContainer.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
63cc346c86b723ce89be23769abb43b4,1,61,21,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
63cc346c86b723ce89be23769abb43b4,1,61,21,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `chatContainer.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
63cc346c86b723ce89be23769abb43b4,1,68,13,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
63cc346c86b723ce89be23769abb43b4,1,68,13,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `chatContainer.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
6406d9dc1c1ba9d20759c98742b44cec,0,15,9,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
6406d9dc1c1ba9d20759c98742b44cec,0,15,9,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `progressBarFilled.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
6406d9dc1c1ba9d20759c98742b44cec,0,18,9,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
6406d9dc1c1ba9d20759c98742b44cec,0,18,9,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `progressBarFilled.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
641a70ce031abcbe8ce1aa94cf949266,0,29,17,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
641a70ce031abcbe8ce1aa94cf949266,0,29,17,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `logoContainer.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
641a70ce031abcbe8ce1aa94cf949266,0,29,43,files.javascript.rules.lang.security.html-in-template-string,"This template literal looks like HTML and has interpolated variables. These variables are not HTML-encoded by default. If the variables contain HTML tags, these may be interpreted by the browser, resulting in cross-site scripting (XSS)."
64baaa7277ba0b57e08e367a65536315,0,4,3,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
656ce68f9db28431d49afbe9489d9882,6,9,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
6574b7656509d81c8f8184a5c9c45a7f,1,2,5,files.javascript.rules.lang.security.audit.detect-non-literal-require,"Detected the use of require(variable). Calling require with a non-literal argument might allow an attacker to load and run arbitrary code, or access arbitrary files."
6574b7656509d81c8f8184a5c9c45a7f,1,3,5,files.javascript.rules.lang.security.audit.detect-non-literal-require,"Detected the use of require(variable). Calling require with a non-literal argument might allow an attacker to load and run arbitrary code, or access arbitrary files."
6574b7656509d81c8f8184a5c9c45a7f,2,2,5,files.javascript.rules.lang.security.audit.detect-non-literal-require,"Detected the use of require(variable). Calling require with a non-literal argument might allow an attacker to load and run arbitrary code, or access arbitrary files."
6574b7656509d81c8f8184a5c9c45a7f,2,3,5,files.javascript.rules.lang.security.audit.detect-non-literal-require,"Detected the use of require(variable). Calling require with a non-literal argument might allow an attacker to load and run arbitrary code, or access arbitrary files."
6574b7656509d81c8f8184a5c9c45a7f,3,2,5,files.javascript.rules.lang.security.audit.detect-non-literal-require,"Detected the use of require(variable). Calling require with a non-literal argument might allow an attacker to load and run arbitrary code, or access arbitrary files."
6574b7656509d81c8f8184a5c9c45a7f,3,3,5,files.javascript.rules.lang.security.audit.detect-non-literal-require,"Detected the use of require(variable). Calling require with a non-literal argument might allow an attacker to load and run arbitrary code, or access arbitrary files."
6574b7656509d81c8f8184a5c9c45a7f,4,2,5,files.javascript.rules.lang.security.audit.detect-non-literal-require,"Detected the use of require(variable). Calling require with a non-literal argument might allow an attacker to load and run arbitrary code, or access arbitrary files."
6574b7656509d81c8f8184a5c9c45a7f,4,4,5,files.javascript.rules.lang.security.audit.detect-non-literal-require,"Detected the use of require(variable). Calling require with a non-literal argument might allow an attacker to load and run arbitrary code, or access arbitrary files."
6574b7656509d81c8f8184a5c9c45a7f,4,6,5,files.javascript.rules.lang.security.audit.detect-non-literal-require,"Detected the use of require(variable). Calling require with a non-literal argument might allow an attacker to load and run arbitrary code, or access arbitrary files."
6574b7656509d81c8f8184a5c9c45a7f,5,2,5,files.javascript.rules.lang.security.audit.detect-non-literal-require,"Detected the use of require(variable). Calling require with a non-literal argument might allow an attacker to load and run arbitrary code, or access arbitrary files."
6574b7656509d81c8f8184a5c9c45a7f,5,3,5,files.javascript.rules.lang.security.audit.detect-non-literal-require,"Detected the use of require(variable). Calling require with a non-literal argument might allow an attacker to load and run arbitrary code, or access arbitrary files."
6574b7656509d81c8f8184a5c9c45a7f,5,5,5,files.javascript.rules.lang.security.audit.detect-non-literal-require,"Detected the use of require(variable). Calling require with a non-literal argument might allow an attacker to load and run arbitrary code, or access arbitrary files."
65bd1e724436589d73c0f025504c4001,2,28,22,files.javascript.rules.lang.security.html-in-template-string,"This template literal looks like HTML and has interpolated variables. These variables are not HTML-encoded by default. If the variables contain HTML tags, these may be interpreted by the browser, resulting in cross-site scripting (XSS)."
65bd1e724436589d73c0f025504c4001,2,29,7,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
65bd1e724436589d73c0f025504c4001,2,29,7,files.javascript.rules.browser.security.insecure-innerhtml,"User controlled data in a `document.getElementById(""chatbot-history"").innerHTML` is an anti-pattern that can lead to XSS vulnerabilities"
65daa891107c0930fc7d955e28f09a3b,10,5,12,files.javascript.rules.lang.security.html-in-template-string,"This template literal looks like HTML and has interpolated variables. These variables are not HTML-encoded by default. If the variables contain HTML tags, these may be interpreted by the browser, resulting in cross-site scripting (XSS)."
65daa891107c0930fc7d955e28f09a3b,7,25,12,files.javascript.rules.lang.security.html-in-template-string,"This template literal looks like HTML and has interpolated variables. These variables are not HTML-encoded by default. If the variables contain HTML tags, these may be interpreted by the browser, resulting in cross-site scripting (XSS)."
65daa891107c0930fc7d955e28f09a3b,8,5,12,files.javascript.rules.lang.security.html-in-template-string,"This template literal looks like HTML and has interpolated variables. These variables are not HTML-encoded by default. If the variables contain HTML tags, these may be interpreted by the browser, resulting in cross-site scripting (XSS)."
65daa891107c0930fc7d955e28f09a3b,9,4,12,files.javascript.rules.lang.security.html-in-template-string,"This template literal looks like HTML and has interpolated variables. These variables are not HTML-encoded by default. If the variables contain HTML tags, these may be interpreted by the browser, resulting in cross-site scripting (XSS)."
65e726f1974e97f5fa9746242e2ff322,0,27,9,files.javascript.rules.jquery.security.audit.prohibit-jquery-html,"JQuery's `html` function is susceptible to Cross Site Scripting (XSS) attacks. If you're just passing text, consider `text` instead. Otherwise, use a function that escapes HTML such as edX's `HtmlUtils.setHtml()`."
65e726f1974e97f5fa9746242e2ff322,0,35,3,files.javascript.rules.jquery.security.audit.jquery-insecure-method,User controlled data in a jQuery's `.after(...)` is an anti-pattern that can lead to XSS vulnerabilities
6636013ca850f2d349545115354c6e93,13,11,45,files.javascript.rules.lang.security.audit.detect-non-literal-regexp,"RegExp() called with a `subString` function argument, this might allow an attacker to cause a Regular Expression Denial-of-Service (ReDoS) within your application as RegExP blocks the main thread. For this reason, it is recommended to use hardcoded regexes instead. If your regex is run on user-controlled input, consider performing input validation or use a regex checking/sanitization library such as https://www.npmjs.com/package/recheck to verify that the regex does not appear vulnerable to ReDoS."
668a9336f907d41819e28454d2b7041c,9,2,22,files.javascript.rules.lang.security.audit.unsafe-dynamic-method,"Using non-static data to retrieve and run functions from the object is dangerous. If the data is user-controlled, it may allow executing arbitrary code."
668a9336f907d41819e28454d2b7041c,9,5,1,files.javascript.rules.lang.security.audit.unsafe-dynamic-method,"Using non-static data to retrieve and run functions from the object is dangerous. If the data is user-controlled, it may allow executing arbitrary code."
66a75e927b218244224e283337110b4a,4,6,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
672186d33311057b529c9d98fbeed2f9,0,24,20,files.javascript.rules.lang.security.audit.detect-non-literal-fs-filename,"Detected that function argument `outputPath` has entered the fs module. An attacker could potentially control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are validated."
672186d33311057b529c9d98fbeed2f9,0,34,54,files.javascript.rules.lang.security.audit.path-traversal.path-join-resolve-traversal,"Detected possible user input going into a `path.join` or `path.resolve` function. This could possibly lead to a path traversal vulnerability,  where the attacker can access arbitrary files stored in the file system. Instead, be sure to sanitize or validate user input first."
679f68dcf740f69a6b07402142ae354d,2,20,5,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
679f68dcf740f69a6b07402142ae354d,2,20,5,files.javascript.rules.browser.security.insecure-innerhtml,"User controlled data in a `document.getElementById(""days"").innerHTML` is an anti-pattern that can lead to XSS vulnerabilities"
679f68dcf740f69a6b07402142ae354d,2,21,5,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
679f68dcf740f69a6b07402142ae354d,2,21,5,files.javascript.rules.browser.security.insecure-innerhtml,"User controlled data in a `document.getElementById(""hours"").innerHTML` is an anti-pattern that can lead to XSS vulnerabilities"
679f68dcf740f69a6b07402142ae354d,2,22,5,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
679f68dcf740f69a6b07402142ae354d,2,22,5,files.javascript.rules.browser.security.insecure-innerhtml,"User controlled data in a `document.getElementById(""minutes"").innerHTML` is an anti-pattern that can lead to XSS vulnerabilities"
679f68dcf740f69a6b07402142ae354d,2,23,5,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
679f68dcf740f69a6b07402142ae354d,2,23,5,files.javascript.rules.browser.security.insecure-innerhtml,"User controlled data in a `document.getElementById(""seconds"").innerHTML` is an anti-pattern that can lead to XSS vulnerabilities"
68645a6168877b52d82c8ca415d1b51f,2,4,17,files.javascript.rules.lang.security.audit.unsafe-formatstring,"Detected string concatenation with a non-literal variable in a util.format / console.log function. If an attacker injects a format specifier in the string, it will forge the log message. Try to use constant values for the format string."
68645a6168877b52d82c8ca415d1b51f,2,6,17,files.javascript.rules.lang.security.audit.unsafe-formatstring,"Detected string concatenation with a non-literal variable in a util.format / console.log function. If an attacker injects a format specifier in the string, it will forge the log message. Try to use constant values for the format string."
68ccb22383bbd79a1e32e5ba7a2a2567,0,2,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
68ccb22383bbd79a1e32e5ba7a2a2567,1,2,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
68e0a780a1d60ffef23d4ddf8e259a74,0,27,9,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
68e0a780a1d60ffef23d4ddf8e259a74,0,27,9,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `td.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
68e0a780a1d60ffef23d4ddf8e259a74,1,54,9,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
68e0a780a1d60ffef23d4ddf8e259a74,1,54,9,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `td.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
68e0a780a1d60ffef23d4ddf8e259a74,2,54,9,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
68e0a780a1d60ffef23d4ddf8e259a74,2,54,9,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `td.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
6965858efc98f6549c5d88f73d1fd565,0,8,7,files.javascript.rules.lang.security.audit.prototype-pollution.prototype-pollution-loop,"Possibility of prototype polluting function detected. By adding or modifying attributes of an object prototype, it is possible to create attributes that exist on every object, or replace critical attributes with malicious ones. This can be problematic if the software depends on existence or non-existence of certain attributes, or uses pre-defined attributes of object prototype (such as hasOwnProperty, toString or valueOf). Possible mitigations might be: freezing the object prototype, using an object without prototypes (via Object.create(null) ), blocking modifications of attributes that resolve to object prototype, using Map instead of object."
6965858efc98f6549c5d88f73d1fd565,0,9,7,files.javascript.rules.lang.security.audit.prototype-pollution.prototype-pollution-assignment,"Possibility of prototype polluting assignment detected. By adding or modifying attributes of an object prototype, it is possible to create attributes that exist on every object, or replace critical attributes with malicious ones. This can be problematic if the software depends on existence or non-existence of certain attributes, or uses pre-defined attributes of object prototype (such as hasOwnProperty, toString or valueOf). Possible mitigations might be: freezing the object prototype, using an object without prototypes (via Object.create(null) ), blocking modifications of attributes that resolve to object prototype, using Map instead of object."
6965858efc98f6549c5d88f73d1fd565,0,10,7,files.javascript.rules.lang.security.audit.prototype-pollution.prototype-pollution-loop,"Possibility of prototype polluting function detected. By adding or modifying attributes of an object prototype, it is possible to create attributes that exist on every object, or replace critical attributes with malicious ones. This can be problematic if the software depends on existence or non-existence of certain attributes, or uses pre-defined attributes of object prototype (such as hasOwnProperty, toString or valueOf). Possible mitigations might be: freezing the object prototype, using an object without prototypes (via Object.create(null) ), blocking modifications of attributes that resolve to object prototype, using Map instead of object."
6965858efc98f6549c5d88f73d1fd565,0,19,7,files.javascript.rules.lang.security.audit.prototype-pollution.prototype-pollution-loop,"Possibility of prototype polluting function detected. By adding or modifying attributes of an object prototype, it is possible to create attributes that exist on every object, or replace critical attributes with malicious ones. This can be problematic if the software depends on existence or non-existence of certain attributes, or uses pre-defined attributes of object prototype (such as hasOwnProperty, toString or valueOf). Possible mitigations might be: freezing the object prototype, using an object without prototypes (via Object.create(null) ), blocking modifications of attributes that resolve to object prototype, using Map instead of object."
6981c75778cf41a177ec3c02fb9d3e0e,5,9,36,files.javascript.rules.lang.security.detect-insecure-websocket,Insecure WebSocket Detected. WebSocket Secure (wss) should be used for all WebSocket connections.
6a2e5f8de66fbae1f58bd120195f0118,3,2,36,files.javascript.rules.lang.security.detect-insecure-websocket,Insecure WebSocket Detected. WebSocket Secure (wss) should be used for all WebSocket connections.
6a320c9b88da7cadc0fba6a92401f94d,0,6,5,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
6a320c9b88da7cadc0fba6a92401f94d,0,6,5,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `div.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
6a320c9b88da7cadc0fba6a92401f94d,0,6,21,files.javascript.rules.lang.security.html-in-template-string,"This template literal looks like HTML and has interpolated variables. These variables are not HTML-encoded by default. If the variables contain HTML tags, these may be interpreted by the browser, resulting in cross-site scripting (XSS)."
6aaaae9f29b8dd370a3ea726e970edc7,2,32,5,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
6aaaae9f29b8dd370a3ea726e970edc7,2,32,5,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `button.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
6aaaae9f29b8dd370a3ea726e970edc7,2,64,3,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
6aaaae9f29b8dd370a3ea726e970edc7,2,64,3,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `log.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
6aaaae9f29b8dd370a3ea726e970edc7,2,64,20,files.javascript.rules.lang.security.html-in-template-string,"This template literal looks like HTML and has interpolated variables. These variables are not HTML-encoded by default. If the variables contain HTML tags, these may be interpreted by the browser, resulting in cross-site scripting (XSS)."
6ad8d7bf3071ec998d5c6654478831c2,0,3,10,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
6b390cfb08c5685498070f3cbf961e1d,0,75,19,files.javascript.rules.lang.security.audit.unsafe-formatstring,"Detected string concatenation with a non-literal variable in a util.format / console.log function. If an attacker injects a format specifier in the string, it will forge the log message. Try to use constant values for the format string."
6b3d1a36825e54565a57e6d0f2ae1d98,10,15,46,files.javascript.rules.lang.security.audit.path-traversal.path-join-resolve-traversal,"Detected possible user input going into a `path.join` or `path.resolve` function. This could possibly lead to a path traversal vulnerability,  where the attacker can access arbitrary files stored in the file system. Instead, be sure to sanitize or validate user input first."
6b3d1a36825e54565a57e6d0f2ae1d98,10,18,15,files.javascript.rules.lang.security.audit.detect-non-literal-fs-filename,"Detected that function argument `req` has entered the fs module. An attacker could potentially control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are validated."
6b3d1a36825e54565a57e6d0f2ae1d98,10,26,21,files.javascript.rules.lang.security.audit.detect-non-literal-fs-filename,"Detected that function argument `req` has entered the fs module. An attacker could potentially control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are validated."
6b3d1a36825e54565a57e6d0f2ae1d98,10,54,60,files.javascript.rules.lang.security.audit.path-traversal.path-join-resolve-traversal,"Detected possible user input going into a `path.join` or `path.resolve` function. This could possibly lead to a path traversal vulnerability,  where the attacker can access arbitrary files stored in the file system. Instead, be sure to sanitize or validate user input first."
6b3d1a36825e54565a57e6d0f2ae1d98,10,57,30,files.javascript.rules.lang.security.audit.detect-non-literal-fs-filename,"Detected that function argument `message` has entered the fs module. An attacker could potentially control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are validated."
6b3d1a36825e54565a57e6d0f2ae1d98,6,16,15,files.javascript.rules.lang.security.audit.detect-non-literal-fs-filename,"Detected that function argument `req` has entered the fs module. An attacker could potentially control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are validated."
6b3d1a36825e54565a57e6d0f2ae1d98,6,23,21,files.javascript.rules.lang.security.audit.detect-non-literal-fs-filename,"Detected that function argument `req` has entered the fs module. An attacker could potentially control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are validated."
6b3d1a36825e54565a57e6d0f2ae1d98,6,62,56,files.javascript.rules.lang.security.audit.path-traversal.path-join-resolve-traversal,"Detected possible user input going into a `path.join` or `path.resolve` function. This could possibly lead to a path traversal vulnerability,  where the attacker can access arbitrary files stored in the file system. Instead, be sure to sanitize or validate user input first."
6b3d1a36825e54565a57e6d0f2ae1d98,6,69,30,files.javascript.rules.lang.security.audit.detect-non-literal-fs-filename,"Detected that function argument `message` has entered the fs module. An attacker could potentially control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are validated."
6bd83ce7924e6455e3f98682d5963096,16,17,22,files.javascript.rules.lang.security.html-in-template-string,"This template literal looks like HTML and has interpolated variables. These variables are not HTML-encoded by default. If the variables contain HTML tags, these may be interpreted by the browser, resulting in cross-site scripting (XSS)."
6c55bd8d08ec336031f83353e20cf2c5,1,81,3,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
6c55bd8d08ec336031f83353e20cf2c5,1,81,3,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `temperatureElement.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
6c55bd8d08ec336031f83353e20cf2c5,1,85,3,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
6c55bd8d08ec336031f83353e20cf2c5,1,85,3,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `cityElement.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
6c55bd8d08ec336031f83353e20cf2c5,1,90,3,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
6c55bd8d08ec336031f83353e20cf2c5,1,90,3,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `humidityElement.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
6c55bd8d08ec336031f83353e20cf2c5,1,95,3,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
6c55bd8d08ec336031f83353e20cf2c5,1,95,3,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `windSpeedElement.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
6c55bd8d08ec336031f83353e20cf2c5,1,99,3,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
6c55bd8d08ec336031f83353e20cf2c5,1,99,3,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `weatherConditionElement.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
6ce670e8ad7bfa47fa48c6420cccee29,0,6,17,files.javascript.rules.lang.security.audit.unsafe-formatstring,"Detected string concatenation with a non-literal variable in a util.format / console.log function. If an attacker injects a format specifier in the string, it will forge the log message. Try to use constant values for the format string."
6ce670e8ad7bfa47fa48c6420cccee29,3,6,17,files.javascript.rules.lang.security.audit.unsafe-formatstring,"Detected string concatenation with a non-literal variable in a util.format / console.log function. If an attacker injects a format specifier in the string, it will forge the log message. Try to use constant values for the format string."
6cedc110df8aea9004a31a1a9410b7c2,2,37,9,files.javascript.rules.jquery.security.audit.jquery-insecure-method,User controlled data in a jQuery's `.html(...)` is an anti-pattern that can lead to XSS vulnerabilities
6cedc110df8aea9004a31a1a9410b7c2,2,37,9,files.javascript.rules.jquery.security.audit.prohibit-jquery-html,"JQuery's `html` function is susceptible to Cross Site Scripting (XSS) attacks. If you're just passing text, consider `text` instead. Otherwise, use a function that escapes HTML such as edX's `HtmlUtils.setHtml()`."
6cedc110df8aea9004a31a1a9410b7c2,2,50,9,files.javascript.rules.jquery.security.audit.jquery-insecure-method,User controlled data in a jQuery's `.html(...)` is an anti-pattern that can lead to XSS vulnerabilities
6cedc110df8aea9004a31a1a9410b7c2,2,50,9,files.javascript.rules.jquery.security.audit.prohibit-jquery-html,"JQuery's `html` function is susceptible to Cross Site Scripting (XSS) attacks. If you're just passing text, consider `text` instead. Otherwise, use a function that escapes HTML such as edX's `HtmlUtils.setHtml()`."
6cf73a49c5191b7717df0a705dc35997,0,1,1,files.javascript.rules.grpc.security.grpc-nodejs-insecure-connection,"Found an insecure gRPC connection. This creates a connection without encryption to a gRPC client/server. A malicious attacker could tamper with the gRPC message, which could compromise the machine."
6cf73a49c5191b7717df0a705dc35997,1,1,1,files.javascript.rules.grpc.security.grpc-nodejs-insecure-connection,"Found an insecure gRPC connection. This creates a connection without encryption to a gRPC client/server. A malicious attacker could tamper with the gRPC message, which could compromise the machine."
6d8452730deb3485a014f30d568685cb,0,10,3,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
6d8452730deb3485a014f30d568685cb,0,10,3,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `letterElement.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
6d8452730deb3485a014f30d568685cb,0,17,3,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
6d8452730deb3485a014f30d568685cb,0,17,3,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `buttonElement.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
6d84eb759068cd8f07f3a2b155aa5d0b,1,4,3,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
6d84eb759068cd8f07f3a2b155aa5d0b,1,4,3,files.javascript.rules.browser.security.insecure-innerhtml,"User controlled data in a `document.getElementById(""parsedHtml"").innerHTML` is an anti-pattern that can lead to XSS vulnerabilities"
6dc89d74b50f56c5ca05c5342143d42d,2,41,13,files.javascript.rules.jquery.security.audit.jquery-insecure-method,User controlled data in a jQuery's `.html(...)` is an anti-pattern that can lead to XSS vulnerabilities
6dc89d74b50f56c5ca05c5342143d42d,2,41,13,files.javascript.rules.jquery.security.audit.prohibit-jquery-html,"JQuery's `html` function is susceptible to Cross Site Scripting (XSS) attacks. If you're just passing text, consider `text` instead. Otherwise, use a function that escapes HTML such as edX's `HtmlUtils.setHtml()`."
6dfc8b54b4446d1799bac75fa8b2fa7a,0,16,9,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
6dfc8b54b4446d1799bac75fa8b2fa7a,0,16,9,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `progressBarFilled.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
6dfc8b54b4446d1799bac75fa8b2fa7a,0,21,9,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
6dfc8b54b4446d1799bac75fa8b2fa7a,0,21,9,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `progressBarFilled.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
6e001a3cb65bda276c0ebfcc37e4d5b2,1,4,10,files.javascript.rules.lang.security.audit.detect-non-literal-require,"Detected the use of require(variable). Calling require with a non-literal argument might allow an attacker to load and run arbitrary code, or access arbitrary files."
6e0ddbe4588e50dd14bd21a41f0cb678,2,13,17,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
6e0ddbe4588e50dd14bd21a41f0cb678,2,13,17,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `cart.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
6e25c03e0322786b1094e57b975d8d41,2,3,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
6e25c03e0322786b1094e57b975d8d41,3,2,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
6e48f23f745e4a0e6e684391bd1815ef,2,7,5,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
6e48f23f745e4a0e6e684391bd1815ef,2,7,5,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `listItem.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
6e4c065f2d35f61fd5a1678faa70d8eb,0,15,9,files.javascript.rules.lang.security.audit.detect-non-literal-require,"Detected the use of require(variable). Calling require with a non-literal argument might allow an attacker to load and run arbitrary code, or access arbitrary files."
6e4c065f2d35f61fd5a1678faa70d8eb,0,30,9,files.javascript.rules.lang.security.audit.detect-non-literal-require,"Detected the use of require(variable). Calling require with a non-literal argument might allow an attacker to load and run arbitrary code, or access arbitrary files."
6e4c065f2d35f61fd5a1678faa70d8eb,0,36,9,files.javascript.rules.lang.security.audit.detect-non-literal-require,"Detected the use of require(variable). Calling require with a non-literal argument might allow an attacker to load and run arbitrary code, or access arbitrary files."
6e4c065f2d35f61fd5a1678faa70d8eb,3,2,5,files.javascript.rules.lang.security.audit.detect-non-literal-require,"Detected the use of require(variable). Calling require with a non-literal argument might allow an attacker to load and run arbitrary code, or access arbitrary files."
6e4c065f2d35f61fd5a1678faa70d8eb,5,2,5,files.javascript.rules.lang.security.audit.detect-non-literal-require,"Detected the use of require(variable). Calling require with a non-literal argument might allow an attacker to load and run arbitrary code, or access arbitrary files."
6e4c065f2d35f61fd5a1678faa70d8eb,6,2,5,files.javascript.rules.lang.security.audit.detect-non-literal-require,"Detected the use of require(variable). Calling require with a non-literal argument might allow an attacker to load and run arbitrary code, or access arbitrary files."
6ef966880267677e22c6960bb87b7192,0,70,8,files.javascript.rules.jquery.security.audit.jquery-insecure-selector,User controlled data in a `$(...)` is an anti-pattern that can lead to XSS vulnerabilities
6ef966880267677e22c6960bb87b7192,0,82,8,files.javascript.rules.jquery.security.audit.jquery-insecure-selector,User controlled data in a `$(...)` is an anti-pattern that can lead to XSS vulnerabilities
6ef966880267677e22c6960bb87b7192,1,69,9,files.javascript.rules.jquery.security.audit.jquery-insecure-selector,User controlled data in a `$(...)` is an anti-pattern that can lead to XSS vulnerabilities
6ef966880267677e22c6960bb87b7192,1,81,9,files.javascript.rules.jquery.security.audit.jquery-insecure-selector,User controlled data in a `$(...)` is an anti-pattern that can lead to XSS vulnerabilities
6ef966880267677e22c6960bb87b7192,2,69,9,files.javascript.rules.jquery.security.audit.jquery-insecure-selector,User controlled data in a `$(...)` is an anti-pattern that can lead to XSS vulnerabilities
6ef966880267677e22c6960bb87b7192,2,81,9,files.javascript.rules.jquery.security.audit.jquery-insecure-selector,User controlled data in a `$(...)` is an anti-pattern that can lead to XSS vulnerabilities
6f042d22cde368cb85966debb3cd1dfe,2,6,5,files.javascript.rules.jquery.security.audit.prohibit-jquery-html,"JQuery's `html` function is susceptible to Cross Site Scripting (XSS) attacks. If you're just passing text, consider `text` instead. Otherwise, use a function that escapes HTML such as edX's `HtmlUtils.setHtml()`."
6f287e9ab95d6ccc856382b3b07fe9b7,0,92,17,files.javascript.rules.lang.security.audit.unsafe-formatstring,"Detected string concatenation with a non-literal variable in a util.format / console.log function. If an attacker injects a format specifier in the string, it will forge the log message. Try to use constant values for the format string."
6f517e84d147f51f5a231e46b2ca477c,1,2,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
6f517e84d147f51f5a231e46b2ca477c,3,2,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
6f517e84d147f51f5a231e46b2ca477c,5,3,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
6f6b96689d82bbecc7d5da41f073f940,1,6,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
6f6b96689d82bbecc7d5da41f073f940,1,9,33,files.javascript.rules.passport-jwt.security.hardcoded-passport-secret,"A hard-coded credential was detected. It is not recommended to store credentials in source-code, as this risks secrets being leaked and used by either an internal or external malicious adversary. It is recommended to use environment variables to securely provide credentials or retrieve credentials from a secure vault or HSM (Hardware Security Module)."
6f6b96689d82bbecc7d5da41f073f940,1,23,35,files.javascript.rules.passport-jwt.security.hardcoded-passport-secret,"A hard-coded credential was detected. It is not recommended to store credentials in source-code, as this risks secrets being leaked and used by either an internal or external malicious adversary. It is recommended to use environment variables to securely provide credentials or retrieve credentials from a secure vault or HSM (Hardware Security Module)."
6fd8b7e98c66837a607de9ae2136f19c,1,10,17,files.javascript.rules.lang.security.audit.detect-non-literal-regexp,"RegExp() called with a `searchString` function argument, this might allow an attacker to cause a Regular Expression Denial-of-Service (ReDoS) within your application as RegExP blocks the main thread. For this reason, it is recommended to use hardcoded regexes instead. If your regex is run on user-controlled input, consider performing input validation or use a regex checking/sanitization library such as https://www.npmjs.com/package/recheck to verify that the regex does not appear vulnerable to ReDoS."
6fd8b7e98c66837a607de9ae2136f19c,2,16,17,files.javascript.rules.lang.security.audit.detect-non-literal-regexp,"RegExp() called with a `string` function argument, this might allow an attacker to cause a Regular Expression Denial-of-Service (ReDoS) within your application as RegExP blocks the main thread. For this reason, it is recommended to use hardcoded regexes instead. If your regex is run on user-controlled input, consider performing input validation or use a regex checking/sanitization library such as https://www.npmjs.com/package/recheck to verify that the regex does not appear vulnerable to ReDoS."
6fd8b7e98c66837a607de9ae2136f19c,3,16,17,files.javascript.rules.lang.security.audit.detect-non-literal-regexp,"RegExp() called with a `string` function argument, this might allow an attacker to cause a Regular Expression Denial-of-Service (ReDoS) within your application as RegExP blocks the main thread. For this reason, it is recommended to use hardcoded regexes instead. If your regex is run on user-controlled input, consider performing input validation or use a regex checking/sanitization library such as https://www.npmjs.com/package/recheck to verify that the regex does not appear vulnerable to ReDoS."
7051b99b5771482f9b42d4b3c9ba451b,1,19,1,files.javascript.rules.browser.security.insufficient-postmessage-origin-validation,No validation of origin is done by the addEventListener API. It may be possible to exploit this flaw to perform Cross Origin attacks such as Cross-Site Scripting(XSS).
7051b99b5771482f9b42d4b3c9ba451b,5,22,1,files.javascript.rules.browser.security.insufficient-postmessage-origin-validation,No validation of origin is done by the addEventListener API. It may be possible to exploit this flaw to perform Cross Origin attacks such as Cross-Site Scripting(XSS).
709224e86f3145e89cc08b9428a21c9b,3,2,5,files.javascript.rules.lang.security.audit.detect-non-literal-require,"Detected the use of require(variable). Calling require with a non-literal argument might allow an attacker to load and run arbitrary code, or access arbitrary files."
70e11374d39d87db14806ba098131407,1,14,21,files.javascript.rules.lang.security.audit.unsafe-formatstring,"Detected string concatenation with a non-literal variable in a util.format / console.log function. If an attacker injects a format specifier in the string, it will forge the log message. Try to use constant values for the format string."
71295c068aa1caf882554691535a1588,1,17,9,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
71295c068aa1caf882554691535a1588,1,17,9,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `previewContainer.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
7135893be5e60d5bf0866653a2c527fa,0,12,5,files.javascript.rules.lang.security.audit.detect-non-literal-require,"Detected the use of require(variable). Calling require with a non-literal argument might allow an attacker to load and run arbitrary code, or access arbitrary files."
7135893be5e60d5bf0866653a2c527fa,0,13,5,files.javascript.rules.lang.security.audit.detect-non-literal-require,"Detected the use of require(variable). Calling require with a non-literal argument might allow an attacker to load and run arbitrary code, or access arbitrary files."
7135893be5e60d5bf0866653a2c527fa,0,15,5,files.javascript.rules.lang.security.audit.detect-non-literal-require,"Detected the use of require(variable). Calling require with a non-literal argument might allow an attacker to load and run arbitrary code, or access arbitrary files."
71c85a54a8e141c3ded07f495eb06ffb,2,6,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
71f00ef46771c8d5904544d26b3ae3d3,0,106,7,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
71f00ef46771c8d5904544d26b3ae3d3,0,106,7,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `toCell.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
71f00ef46771c8d5904544d26b3ae3d3,0,108,7,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
71f00ef46771c8d5904544d26b3ae3d3,0,108,7,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `toCell.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
71f00ef46771c8d5904544d26b3ae3d3,5,60,5,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
71f00ef46771c8d5904544d26b3ae3d3,5,60,5,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `toCell.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
71f00ef46771c8d5904544d26b3ae3d3,6,76,5,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
71f00ef46771c8d5904544d26b3ae3d3,6,76,5,files.javascript.rules.browser.security.insecure-innerhtml,"User controlled data in a `document.getElementById(getCellId(to.row, to.col)).innerHTML` is an anti-pattern that can lead to XSS vulnerabilities"
71f00ef46771c8d5904544d26b3ae3d3,8,92,5,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
71f00ef46771c8d5904544d26b3ae3d3,8,92,5,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `document.getElementById(newCellId).innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
71f00ef46771c8d5904544d26b3ae3d3,8,92,52,files.javascript.rules.lang.security.html-in-template-string,"This template literal looks like HTML and has interpolated variables. These variables are not HTML-encoded by default. If the variables contain HTML tags, these may be interpreted by the browser, resulting in cross-site scripting (XSS)."
7283e02e07c920361e8d5b93f063bc17,7,3,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
7283e02e07c920361e8d5b93f063bc17,9,2,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
7321e48be7a1a794bceba925f7290877,0,2,5,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
733a2d620223e2548e0534e37fb7a4cd,4,5,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
73a149c6bbf5834e0bff57a52493f354,1,2,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
73c78afe043abb86909003e7d69d03ff,0,120,3,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
73c78afe043abb86909003e7d69d03ff,0,120,3,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `pBitSizeElement.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
73c78afe043abb86909003e7d69d03ff,0,121,3,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
73c78afe043abb86909003e7d69d03ff,0,121,3,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `qBitSizeElement.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
73c78afe043abb86909003e7d69d03ff,0,124,3,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
73c78afe043abb86909003e7d69d03ff,0,124,3,files.javascript.rules.browser.security.insecure-innerhtml,"User controlled data in a `document.getElementById(""modulusBitSize"").innerHTML` is an anti-pattern that can lead to XSS vulnerabilities"
73c78afe043abb86909003e7d69d03ff,0,238,3,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
73c78afe043abb86909003e7d69d03ff,0,238,3,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `pBitSizeElement.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
73c78afe043abb86909003e7d69d03ff,0,239,3,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
73c78afe043abb86909003e7d69d03ff,0,239,3,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `qBitSizeElement.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
73c78afe043abb86909003e7d69d03ff,0,242,3,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
73c78afe043abb86909003e7d69d03ff,0,242,3,files.javascript.rules.browser.security.insecure-innerhtml,"User controlled data in a `document.getElementById(""modulusBitSize"").innerHTML` is an anti-pattern that can lead to XSS vulnerabilities"
73f7f0167f3a90366050c8439d1bb51b,0,13,5,files.javascript.rules.lang.security.audit.detect-non-literal-require,"Detected the use of require(variable). Calling require with a non-literal argument might allow an attacker to load and run arbitrary code, or access arbitrary files."
73f7f0167f3a90366050c8439d1bb51b,2,5,5,files.javascript.rules.lang.security.audit.detect-non-literal-require,"Detected the use of require(variable). Calling require with a non-literal argument might allow an attacker to load and run arbitrary code, or access arbitrary files."
7460b59c504e8a7fb7a6cdcbef9778d9,0,36,9,files.javascript.rules.lang.security.audit.detect-non-literal-require,"Detected the use of require(variable). Calling require with a non-literal argument might allow an attacker to load and run arbitrary code, or access arbitrary files."
7460b59c504e8a7fb7a6cdcbef9778d9,0,63,9,files.javascript.rules.lang.security.audit.detect-non-literal-require,"Detected the use of require(variable). Calling require with a non-literal argument might allow an attacker to load and run arbitrary code, or access arbitrary files."
7460b59c504e8a7fb7a6cdcbef9778d9,0,64,9,files.javascript.rules.lang.security.audit.detect-non-literal-require,"Detected the use of require(variable). Calling require with a non-literal argument might allow an attacker to load and run arbitrary code, or access arbitrary files."
7460b59c504e8a7fb7a6cdcbef9778d9,0,65,9,files.javascript.rules.lang.security.audit.detect-non-literal-require,"Detected the use of require(variable). Calling require with a non-literal argument might allow an attacker to load and run arbitrary code, or access arbitrary files."
7460b59c504e8a7fb7a6cdcbef9778d9,0,73,13,files.javascript.rules.lang.security.audit.detect-non-literal-require,"Detected the use of require(variable). Calling require with a non-literal argument might allow an attacker to load and run arbitrary code, or access arbitrary files."
7460b59c504e8a7fb7a6cdcbef9778d9,0,76,9,files.javascript.rules.lang.security.audit.detect-non-literal-require,"Detected the use of require(variable). Calling require with a non-literal argument might allow an attacker to load and run arbitrary code, or access arbitrary files."
7460b59c504e8a7fb7a6cdcbef9778d9,0,90,9,files.javascript.rules.lang.security.audit.detect-non-literal-require,"Detected the use of require(variable). Calling require with a non-literal argument might allow an attacker to load and run arbitrary code, or access arbitrary files."
7460b59c504e8a7fb7a6cdcbef9778d9,0,114,21,files.javascript.rules.lang.security.audit.detect-non-literal-require,"Detected the use of require(variable). Calling require with a non-literal argument might allow an attacker to load and run arbitrary code, or access arbitrary files."
7460b59c504e8a7fb7a6cdcbef9778d9,0,117,21,files.javascript.rules.lang.security.audit.detect-non-literal-require,"Detected the use of require(variable). Calling require with a non-literal argument might allow an attacker to load and run arbitrary code, or access arbitrary files."
7460b59c504e8a7fb7a6cdcbef9778d9,1,11,5,files.javascript.rules.lang.security.audit.detect-non-literal-require,"Detected the use of require(variable). Calling require with a non-literal argument might allow an attacker to load and run arbitrary code, or access arbitrary files."
74675a8aebebc3c8b4bcb8e483e9d566,0,15,12,files.javascript.rules.lang.security.html-in-template-string,"This template literal looks like HTML and has interpolated variables. These variables are not HTML-encoded by default. If the variables contain HTML tags, these may be interpreted by the browser, resulting in cross-site scripting (XSS)."
74675a8aebebc3c8b4bcb8e483e9d566,1,22,10,files.javascript.rules.lang.security.html-in-template-string,"This template literal looks like HTML and has interpolated variables. These variables are not HTML-encoded by default. If the variables contain HTML tags, these may be interpreted by the browser, resulting in cross-site scripting (XSS)."
74675a8aebebc3c8b4bcb8e483e9d566,1,35,16,files.javascript.rules.lang.security.audit.detect-non-literal-fs-filename,"Detected that function argument `post` has entered the fs module. An attacker could potentially control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are validated."
746f70a2ca9f4b333f56fb9098dc2768,1,28,17,files.javascript.rules.jquery.security.audit.jquery-insecure-method,User controlled data in a jQuery's `.html(...)` is an anti-pattern that can lead to XSS vulnerabilities
746f70a2ca9f4b333f56fb9098dc2768,1,28,17,files.javascript.rules.jquery.security.audit.prohibit-jquery-html,"JQuery's `html` function is susceptible to Cross Site Scripting (XSS) attacks. If you're just passing text, consider `text` instead. Otherwise, use a function that escapes HTML such as edX's `HtmlUtils.setHtml()`."
758473acad7e3ed26ca05026cabc9451,0,16,25,files.javascript.rules.browser.security.eval-detected,"Detected the use of eval(). eval() can be dangerous if used to evaluate dynamic content. If this content can be input from outside the program, this may be a code injection vulnerability. Ensure evaluated content is not definable by external sources."
75a899145206d535d362c2fee74c6bb3,5,52,3,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
75a899145206d535d362c2fee74c6bb3,6,41,3,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
763b17aec0eb4821e2df513e6d7f7f1c,1,4,10,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
7683ef7cb79df93912ed0a994b024eae,2,7,39,files.javascript.rules.lang.security.audit.unsafe-formatstring,"Detected string concatenation with a non-literal variable in a util.format / console.log function. If an attacker injects a format specifier in the string, it will forge the log message. Try to use constant values for the format string."
7683ef7cb79df93912ed0a994b024eae,3,11,39,files.javascript.rules.lang.security.audit.unsafe-formatstring,"Detected string concatenation with a non-literal variable in a util.format / console.log function. If an attacker injects a format specifier in the string, it will forge the log message. Try to use constant values for the format string."
76b6122642c1561d75c3375b2ec1ed80,0,18,15,files.javascript.rules.lang.security.audit.unsafe-formatstring,"Detected string concatenation with a non-literal variable in a util.format / console.log function. If an attacker injects a format specifier in the string, it will forge the log message. Try to use constant values for the format string."
77235a6a4138acedf6af1f57a08ec4e2,4,13,5,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
77235a6a4138acedf6af1f57a08ec4e2,4,13,5,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `document.getElementById('markdown-content').innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
77235a6a4138acedf6af1f57a08ec4e2,5,7,9,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
77235a6a4138acedf6af1f57a08ec4e2,5,7,9,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `document.getElementById('markdown-content').innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
778f77c6568f1c4ca467d009e70423be,0,1,8,files.javascript.rules.lang.security.audit.unsafe-dynamic-method,"Using non-static data to retrieve and run functions from the object is dangerous. If the data is user-controlled, it may allow executing arbitrary code."
77f78b042f149e4d2ad8206e7df22f55,9,3,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
79657ad4a5f7e1aaff620ae646eba03d,13,19,27,files.javascript.rules.jquery.security.audit.prohibit-jquery-html,"JQuery's `html` function is susceptible to Cross Site Scripting (XSS) attacks. If you're just passing text, consider `text` instead. Otherwise, use a function that escapes HTML such as edX's `HtmlUtils.setHtml()`."
79657ad4a5f7e1aaff620ae646eba03d,7,18,21,files.javascript.rules.lang.security.audit.detect-non-literal-fs-filename,"Detected that function argument `outputPath` has entered the fs module. An attacker could potentially control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are validated."
79657ad4a5f7e1aaff620ae646eba03d,9,22,22,files.javascript.rules.lang.security.audit.detect-non-literal-fs-filename,"Detected that function argument `outputPath` has entered the fs module. An attacker could potentially control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are validated."
79cf7e38d7a4a77c5dabc5cf75f31d04,1,17,62,files.javascript.rules.lang.security.audit.path-traversal.path-join-resolve-traversal,"Detected possible user input going into a `path.join` or `path.resolve` function. This could possibly lead to a path traversal vulnerability,  where the attacker can access arbitrary files stored in the file system. Instead, be sure to sanitize or validate user input first."
79cf7e38d7a4a77c5dabc5cf75f31d04,1,20,26,files.javascript.rules.lang.security.audit.detect-non-literal-fs-filename,"Detected that function argument `message` has entered the fs module. An attacker could potentially control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are validated."
79cf7e38d7a4a77c5dabc5cf75f31d04,10,18,15,files.javascript.rules.lang.security.audit.detect-non-literal-fs-filename,"Detected that function argument `req` has entered the fs module. An attacker could potentially control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are validated."
79cf7e38d7a4a77c5dabc5cf75f31d04,10,26,21,files.javascript.rules.lang.security.audit.detect-non-literal-fs-filename,"Detected that function argument `req` has entered the fs module. An attacker could potentially control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are validated."
79cf7e38d7a4a77c5dabc5cf75f31d04,10,56,52,files.javascript.rules.lang.security.audit.path-traversal.path-join-resolve-traversal,"Detected possible user input going into a `path.join` or `path.resolve` function. This could possibly lead to a path traversal vulnerability,  where the attacker can access arbitrary files stored in the file system. Instead, be sure to sanitize or validate user input first."
79cf7e38d7a4a77c5dabc5cf75f31d04,10,58,26,files.javascript.rules.lang.security.audit.detect-non-literal-fs-filename,"Detected that function argument `message` has entered the fs module. An attacker could potentially control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are validated."
79f95d61defddcd18ac6c9eb82e1a414,3,10,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
7a585f2c76d8d77aa1b91b67a7329d26,1,26,13,files.javascript.rules.lang.security.html-in-template-string,"This template literal looks like HTML and has interpolated variables. These variables are not HTML-encoded by default. If the variables contain HTML tags, these may be interpreted by the browser, resulting in cross-site scripting (XSS)."
7ac39129e0ecce656927833086e32681,3,7,22,files.javascript.rules.lang.security.html-in-template-string,"This template literal looks like HTML and has interpolated variables. These variables are not HTML-encoded by default. If the variables contain HTML tags, these may be interpreted by the browser, resulting in cross-site scripting (XSS)."
7b6c94aa79692e35214fa391c1c92c6b,10,8,23,files.javascript.rules.lang.security.html-in-template-string,"This template literal looks like HTML and has interpolated variables. These variables are not HTML-encoded by default. If the variables contain HTML tags, these may be interpreted by the browser, resulting in cross-site scripting (XSS)."
7b6c94aa79692e35214fa391c1c92c6b,10,14,24,files.javascript.rules.lang.security.html-in-template-string,"This template literal looks like HTML and has interpolated variables. These variables are not HTML-encoded by default. If the variables contain HTML tags, these may be interpreted by the browser, resulting in cross-site scripting (XSS)."
7b796d376a76e9047de76764eb2c14eb,0,7,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
7b796d376a76e9047de76764eb2c14eb,0,28,51,files.javascript.rules.jsonwebtoken.security.hardcoded-jwt-secret,"A hard-coded credential was detected. It is not recommended to store credentials in source-code, as this risks secrets being leaked and used by either an internal or external malicious adversary. It is recommended to use environment variables to securely provide credentials or retrieve credentials from a secure vault or HSM (Hardware Security Module)."
7b7df5c2571a33da572d5a57d46ad506,0,14,30,files.javascript.rules.browser.security.js-open-redirect-from-function,The application accepts potentially user-controlled input `ui` which can control the location of the current window context. This can lead two types of vulnerabilities open-redirection and Cross-Site-Scripting (XSS) with JavaScript URIs. It is recommended to validate user-controllable input before allowing it to control the redirection.
7b88868d0e5770306a3c1648246f00fb,0,2,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
7b88868d0e5770306a3c1648246f00fb,2,6,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
7b9e4c5d41ee61788cc71c1e915bdacc,0,52,9,files.javascript.rules.lang.security.audit.detect-non-literal-require,"Detected the use of require(variable). Calling require with a non-literal argument might allow an attacker to load and run arbitrary code, or access arbitrary files."
7bcfe0dbf23c71935b59a02755ea7f40,0,6,37,files.javascript.rules.lang.security.audit.detect-non-literal-fs-filename,"Detected that function argument `file` has entered the fs module. An attacker could potentially control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are validated."
7bcfe0dbf23c71935b59a02755ea7f40,0,29,13,files.javascript.rules.lang.security.audit.unsafe-formatstring,"Detected string concatenation with a non-literal variable in a util.format / console.log function. If an attacker injects a format specifier in the string, it will forge the log message. Try to use constant values for the format string."
7c1b5ad7415159018ca14370eb09b353,0,83,1,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
7c1b5ad7415159018ca14370eb09b353,0,83,1,files.javascript.rules.browser.security.insecure-innerhtml,"User controlled data in a `document.getElementById(""result"").innerHTML` is an anti-pattern that can lead to XSS vulnerabilities"
7c5806abb65c2f41e8ee9cc5a71d1cdb,3,16,16,files.javascript.rules.puppeteer.security.audit.puppeteer-goto-injection,If unverified user data can reach the `goto` method it can result in Server-Side Request Forgery vulnerabilities
7c5806abb65c2f41e8ee9cc5a71d1cdb,3,29,24,files.javascript.rules.lang.security.audit.unsafe-formatstring,"Detected string concatenation with a non-literal variable in a util.format / console.log function. If an attacker injects a format specifier in the string, it will forge the log message. Try to use constant values for the format string."
7c5806abb65c2f41e8ee9cc5a71d1cdb,5,20,13,files.javascript.rules.puppeteer.security.audit.puppeteer-goto-injection,If unverified user data can reach the `goto` method it can result in Server-Side Request Forgery vulnerabilities
7c5806abb65c2f41e8ee9cc5a71d1cdb,5,23,21,files.javascript.rules.lang.security.audit.unsafe-formatstring,"Detected string concatenation with a non-literal variable in a util.format / console.log function. If an attacker injects a format specifier in the string, it will forge the log message. Try to use constant values for the format string."
7d0ead18773757304450bc22c370f8e8,10,13,39,files.javascript.rules.jsonwebtoken.security.hardcoded-jwt-secret,"A hard-coded credential was detected. It is not recommended to store credentials in source-code, as this risks secrets being leaked and used by either an internal or external malicious adversary. It is recommended to use environment variables to securely provide credentials or retrieve credentials from a secure vault or HSM (Hardware Security Module)."
7d277b4e8bfdc5d886db090a80a6f917,0,2,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
7d733f403f8e1431f1920e68cfa50cd5,5,6,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
7d864eb533df16ebf9052722db31dd8a,2,19,3,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
7d864eb533df16ebf9052722db31dd8a,2,19,3,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `quoteBox.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
7d864eb533df16ebf9052722db31dd8a,2,19,24,files.javascript.rules.lang.security.html-in-template-string,"This template literal looks like HTML and has interpolated variables. These variables are not HTML-encoded by default. If the variables contain HTML tags, these may be interpreted by the browser, resulting in cross-site scripting (XSS)."
7e0e3cb25ba9d7b885654e4a7bb28a08,0,2,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
7e152be52b5489aeaa0582473ba63c9d,1,28,13,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
7e152be52b5489aeaa0582473ba63c9d,1,28,13,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `codeElement.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
7e68585ed2334a14413170f47676377f,0,1,921,files.javascript.rules.lang.security.audit.unsafe-dynamic-method,"Using non-static data to retrieve and run functions from the object is dangerous. If the data is user-controlled, it may allow executing arbitrary code."
7e68585ed2334a14413170f47676377f,0,1,1047,files.javascript.rules.jquery.security.audit.jquery-insecure-method,User controlled data in a jQuery's `.getScript(...)` is an anti-pattern that can lead to XSS vulnerabilities
7e68585ed2334a14413170f47676377f,1,37,16,files.javascript.rules.lang.security.audit.unsafe-dynamic-method,"Using non-static data to retrieve and run functions from the object is dangerous. If the data is user-controlled, it may allow executing arbitrary code."
7e68585ed2334a14413170f47676377f,1,39,1,files.javascript.rules.jquery.security.audit.jquery-insecure-method,User controlled data in a jQuery's `.getScript(...)` is an anti-pattern that can lead to XSS vulnerabilities
7e68585ed2334a14413170f47676377f,2,37,16,files.javascript.rules.lang.security.audit.unsafe-dynamic-method,"Using non-static data to retrieve and run functions from the object is dangerous. If the data is user-controlled, it may allow executing arbitrary code."
7e68585ed2334a14413170f47676377f,2,39,1,files.javascript.rules.jquery.security.audit.jquery-insecure-method,User controlled data in a jQuery's `.getScript(...)` is an anti-pattern that can lead to XSS vulnerabilities
7f0cd1cd10bb66403c17750d2f22a5a0,13,13,26,files.javascript.rules.browser.security.js-open-redirect-from-function,The application accepts potentially user-controlled input `url` which can control the location of the current window context. This can lead two types of vulnerabilities open-redirection and Cross-Site-Scripting (XSS) with JavaScript URIs. It is recommended to validate user-controllable input before allowing it to control the redirection.
7f0cd1cd10bb66403c17750d2f22a5a0,13,77,16,files.javascript.rules.browser.security.eval-detected,"Detected the use of eval(). eval() can be dangerous if used to evaluate dynamic content. If this content can be input from outside the program, this may be a code injection vulnerability. Ensure evaluated content is not definable by external sources."
7f0cd1cd10bb66403c17750d2f22a5a0,8,19,15,files.javascript.rules.lang.security.audit.unsafe-formatstring,"Detected string concatenation with a non-literal variable in a util.format / console.log function. If an attacker injects a format specifier in the string, it will forge the log message. Try to use constant values for the format string."
8039f1f54b4df3d4a3b68260977abc6b,1,6,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
8039f1f54b4df3d4a3b68260977abc6b,1,27,12,files.javascript.rules.express.security.audit.xss.direct-response-write,"Detected directly writing to a Response object from user-defined input. This bypasses any HTML escaping and may expose your application to a Cross-Site-scripting (XSS) vulnerability. Instead, use 'resp.render()' to render safely escaped HTML."
80522f24202bec63dc83588347551399,5,8,19,files.javascript.rules.lang.security.html-in-template-string,"This template literal looks like HTML and has interpolated variables. These variables are not HTML-encoded by default. If the variables contain HTML tags, these may be interpreted by the browser, resulting in cross-site scripting (XSS)."
80522f24202bec63dc83588347551399,6,8,5,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
80522f24202bec63dc83588347551399,6,8,5,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `streetViewDiv.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
80522f24202bec63dc83588347551399,7,8,19,files.javascript.rules.lang.security.html-in-template-string,"This template literal looks like HTML and has interpolated variables. These variables are not HTML-encoded by default. If the variables contain HTML tags, these may be interpreted by the browser, resulting in cross-site scripting (XSS)."
80522f24202bec63dc83588347551399,8,8,5,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
80522f24202bec63dc83588347551399,8,8,5,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `streetViewDiv.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
812932a7f5cb30f08b62c37dc9af5893,4,5,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
815cdfe733a8fa672d223b7469ed708d,3,12,16,files.javascript.rules.lang.security.detect-insecure-websocket,Insecure WebSocket Detected. WebSocket Secure (wss) should be used for all WebSocket connections.
81b678f411f3a3566d38bfa6d6cae5f0,0,7,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
81b678f411f3a3566d38bfa6d6cae5f0,0,69,9,files.javascript.rules.lang.security.audit.detect-non-literal-fs-filename,"Detected that function argument `label` has entered the fs module. An attacker could potentially control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are validated."
81b678f411f3a3566d38bfa6d6cae5f0,0,69,47,files.javascript.rules.lang.security.audit.path-traversal.path-join-resolve-traversal,"Detected possible user input going into a `path.join` or `path.resolve` function. This could possibly lead to a path traversal vulnerability,  where the attacker can access arbitrary files stored in the file system. Instead, be sure to sanitize or validate user input first."
81fa960469896cf118f913934ac70bcd,4,24,5,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
81fa960469896cf118f913934ac70bcd,4,24,5,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `prediction_element.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
8208611cf230f3674a0818298348b2de,3,24,20,files.javascript.rules.jquery.security.audit.jquery-insecure-selector,User controlled data in a `$(...)` is an anti-pattern that can lead to XSS vulnerabilities
826407ac98da7d1cfaa15f8988b5d84b,6,5,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
828792741c4aae1f69e1e37bd24ba907,10,5,5,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
828792741c4aae1f69e1e37bd24ba907,10,5,5,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `root.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
828792741c4aae1f69e1e37bd24ba907,17,3,19,files.javascript.rules.lang.security.audit.detect-non-literal-regexp,"RegExp() called with a `pattern` function argument, this might allow an attacker to cause a Regular Expression Denial-of-Service (ReDoS) within your application as RegExP blocks the main thread. For this reason, it is recommended to use hardcoded regexes instead. If your regex is run on user-controlled input, consider performing input validation or use a regex checking/sanitization library such as https://www.npmjs.com/package/recheck to verify that the regex does not appear vulnerable to ReDoS."
828792741c4aae1f69e1e37bd24ba907,19,3,5,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
828792741c4aae1f69e1e37bd24ba907,19,3,5,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `container.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
828792741c4aae1f69e1e37bd24ba907,19,3,27,files.javascript.rules.lang.security.html-in-template-string,"This template literal looks like HTML and has interpolated variables. These variables are not HTML-encoded by default. If the variables contain HTML tags, these may be interpreted by the browser, resulting in cross-site scripting (XSS)."
828792741c4aae1f69e1e37bd24ba907,5,39,5,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
828792741c4aae1f69e1e37bd24ba907,5,39,5,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `root.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
829571610aca1be4f5c3d98acb4e7f23,11,3,5,files.javascript.rules.browser.security.wildcard-postmessage-configuration,"The target origin of the window.postMessage() API is set to ""*"". This could allow for information disclosure due to the possibility of any origin allowed to receive the message."
829571610aca1be4f5c3d98acb4e7f23,11,11,5,files.javascript.rules.browser.security.wildcard-postmessage-configuration,"The target origin of the window.postMessage() API is set to ""*"". This could allow for information disclosure due to the possibility of any origin allowed to receive the message."
829571610aca1be4f5c3d98acb4e7f23,11,17,5,files.javascript.rules.browser.security.wildcard-postmessage-configuration,"The target origin of the window.postMessage() API is set to ""*"". This could allow for information disclosure due to the possibility of any origin allowed to receive the message."
829571610aca1be4f5c3d98acb4e7f23,13,4,5,files.javascript.rules.browser.security.wildcard-postmessage-configuration,"The target origin of the window.postMessage() API is set to ""*"". This could allow for information disclosure due to the possibility of any origin allowed to receive the message."
829571610aca1be4f5c3d98acb4e7f23,13,9,5,files.javascript.rules.browser.security.wildcard-postmessage-configuration,"The target origin of the window.postMessage() API is set to ""*"". This could allow for information disclosure due to the possibility of any origin allowed to receive the message."
829571610aca1be4f5c3d98acb4e7f23,13,14,5,files.javascript.rules.browser.security.wildcard-postmessage-configuration,"The target origin of the window.postMessage() API is set to ""*"". This could allow for information disclosure due to the possibility of any origin allowed to receive the message."
829571610aca1be4f5c3d98acb4e7f23,5,2,4,files.javascript.rules.browser.security.wildcard-postmessage-configuration,"The target origin of the window.postMessage() API is set to ""*"". This could allow for information disclosure due to the possibility of any origin allowed to receive the message."
829571610aca1be4f5c3d98acb4e7f23,5,5,4,files.javascript.rules.browser.security.insufficient-postmessage-origin-validation,No validation of origin is done by the addEventListener API. It may be possible to exploit this flaw to perform Cross Origin attacks such as Cross-Site Scripting(XSS).
82ad031de9e790f6874fac97a958bd12,0,24,9,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
82ad031de9e790f6874fac97a958bd12,0,24,9,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `el.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
82ad031de9e790f6874fac97a958bd12,1,35,13,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
82ad031de9e790f6874fac97a958bd12,1,35,13,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `el.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
82ad031de9e790f6874fac97a958bd12,2,41,13,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
82ad031de9e790f6874fac97a958bd12,2,41,13,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `el.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
833946d43fc0baa3f8051fafbaf09eb8,0,5,19,files.javascript.rules.lang.security.audit.detect-non-literal-fs-filename,"Detected that function argument `path` has entered the fs module. An attacker could potentially control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are validated."
83aee937cfebc530d8dbc265be691114,1,8,17,files.javascript.rules.lang.security.audit.detect-non-literal-regexp,"RegExp() called with a `s` function argument, this might allow an attacker to cause a Regular Expression Denial-of-Service (ReDoS) within your application as RegExP blocks the main thread. For this reason, it is recommended to use hardcoded regexes instead. If your regex is run on user-controlled input, consider performing input validation or use a regex checking/sanitization library such as https://www.npmjs.com/package/recheck to verify that the regex does not appear vulnerable to ReDoS."
83c1cf37529ab1eb3ac424b717cb7886,3,2,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
84499bdf3f9a17c0bd2ba46ef07fd905,7,1,1,files.javascript.rules.grpc.security.grpc-nodejs-insecure-connection,"Found an insecure gRPC connection. This creates a connection without encryption to a gRPC client/server. A malicious attacker could tamper with the gRPC message, which could compromise the machine."
84606b4b20dbf55c24437c1de070da6a,1,2,1,files.javascript.rules.lang.security.audit.unsafe-dynamic-method,"Using non-static data to retrieve and run functions from the object is dangerous. If the data is user-controlled, it may allow executing arbitrary code."
84606b4b20dbf55c24437c1de070da6a,1,2,1,files.javascript.rules.lang.security.audit.unsafe-dynamic-method,"Using non-static data to retrieve and run functions from the object is dangerous. If the data is user-controlled, it may allow executing arbitrary code."
8558e2aa3e78437be6cf2423423010f0,5,6,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
855d52009445750a683e9b40e0316520,0,3,5,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
855d52009445750a683e9b40e0316520,0,3,5,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `el.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
859031184b75549f76426ed25010ab6d,0,2,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
859031184b75549f76426ed25010ab6d,2,2,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
85a2235656b7590282e3d7a768727814,9,7,10,files.javascript.rules.lang.security.audit.hardcoded-hmac-key,Detected a hardcoded hmac key. Avoid hardcoding secrets and consider using an alternate option such as reading the secret from a config file or using an environment variable.
85b1cfc197b40bb419b57570fca31a1d,1,16,3,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
85b1cfc197b40bb419b57570fca31a1d,1,16,3,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `printContent.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
85da5b9aa4bc2277ba6abffb952bfa24,3,5,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
86a2a3ca41faec2cfb31bb464902f6de,13,12,5,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
86a2a3ca41faec2cfb31bb464902f6de,13,12,5,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `contenedorEstrellas.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
86a2a3ca41faec2cfb31bb464902f6de,16,12,5,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
86a2a3ca41faec2cfb31bb464902f6de,16,12,5,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `contenedorEstrellas.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
86a2a3ca41faec2cfb31bb464902f6de,19,29,9,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
86a2a3ca41faec2cfb31bb464902f6de,19,29,9,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `nuevoContenedorEstrellas.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
86a2a3ca41faec2cfb31bb464902f6de,19,32,9,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
86a2a3ca41faec2cfb31bb464902f6de,19,32,9,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `contenedorEstrellas.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
86a2a3ca41faec2cfb31bb464902f6de,9,7,5,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
86a2a3ca41faec2cfb31bb464902f6de,9,7,5,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `document.getElementById('contenedorEstrellas').innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
86f343a5a4de89dda67276cac1a7cc41,4,4,3,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
86f343a5a4de89dda67276cac1a7cc41,4,4,3,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `promptContent.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
87bce5fefd55d6dbb2c1a4129b9f2c16,0,18,5,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
87bce5fefd55d6dbb2c1a4129b9f2c16,0,18,5,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `questionElement.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
87bce5fefd55d6dbb2c1a4129b9f2c16,0,18,33,files.javascript.rules.lang.security.html-in-template-string,"This template literal looks like HTML and has interpolated variables. These variables are not HTML-encoded by default. If the variables contain HTML tags, these may be interpreted by the browser, resulting in cross-site scripting (XSS)."
87d4f15838204b90370d0160d17c5b95,0,5,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
87fb1a5d8ff0c53ddb1b00e9608596c9,2,33,3,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
87fb1a5d8ff0c53ddb1b00e9608596c9,2,33,3,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `scoreElement.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
8821b6932c514b1fbeb86360444f7cbb,0,2,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
8821b6932c514b1fbeb86360444f7cbb,3,2,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
88d085f0929d0345c910cc628e5a8921,4,4,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
88d085f0929d0345c910cc628e5a8921,7,4,10,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
88d21371da09bdf7ae9ccd1206e26e81,10,5,12,files.javascript.rules.lang.security.html-in-template-string,"This template literal looks like HTML and has interpolated variables. These variables are not HTML-encoded by default. If the variables contain HTML tags, these may be interpreted by the browser, resulting in cross-site scripting (XSS)."
88f4ecde83bf3b2fdfccb661ae7da1ef,1,5,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
88f8f633663515c9237bfcf9ac944335,7,6,5,files.javascript.rules.browser.security.wildcard-postmessage-configuration,"The target origin of the window.postMessage() API is set to ""*"". This could allow for information disclosure due to the possibility of any origin allowed to receive the message."
88f8f633663515c9237bfcf9ac944335,7,9,3,files.javascript.rules.browser.security.insufficient-postmessage-origin-validation,No validation of origin is done by the addEventListener API. It may be possible to exploit this flaw to perform Cross Origin attacks such as Cross-Site Scripting(XSS).
891016fcffa0b4df0dbd1a4a4990de6e,0,2,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
891cabce2fd8eec9bee7190f5b9bdacb,1,2,10,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
8937376f3fc4c6aec677ed23bc57882f,0,160,9,files.javascript.rules.lang.security.audit.detect-non-literal-require,"Detected the use of require(variable). Calling require with a non-literal argument might allow an attacker to load and run arbitrary code, or access arbitrary files."
8937376f3fc4c6aec677ed23bc57882f,0,164,9,files.javascript.rules.lang.security.audit.detect-non-literal-require,"Detected the use of require(variable). Calling require with a non-literal argument might allow an attacker to load and run arbitrary code, or access arbitrary files."
8937376f3fc4c6aec677ed23bc57882f,0,201,9,files.javascript.rules.lang.security.audit.detect-non-literal-require,"Detected the use of require(variable). Calling require with a non-literal argument might allow an attacker to load and run arbitrary code, or access arbitrary files."
8937376f3fc4c6aec677ed23bc57882f,0,205,9,files.javascript.rules.lang.security.audit.detect-non-literal-require,"Detected the use of require(variable). Calling require with a non-literal argument might allow an attacker to load and run arbitrary code, or access arbitrary files."
89961703dfbff4d4e82a001e2254317d,1,7,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
89961703dfbff4d4e82a001e2254317d,5,10,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
89961703dfbff4d4e82a001e2254317d,5,32,21,files.javascript.rules.jsonwebtoken.security.hardcoded-jwt-secret,"A hard-coded credential was detected. It is not recommended to store credentials in source-code, as this risks secrets being leaked and used by either an internal or external malicious adversary. It is recommended to use environment variables to securely provide credentials or retrieve credentials from a secure vault or HSM (Hardware Security Module)."
89961703dfbff4d4e82a001e2254317d,5,66,50,files.javascript.rules.jsonwebtoken.security.hardcoded-jwt-secret,"A hard-coded credential was detected. It is not recommended to store credentials in source-code, as this risks secrets being leaked and used by either an internal or external malicious adversary. It is recommended to use environment variables to securely provide credentials or retrieve credentials from a secure vault or HSM (Hardware Security Module)."
89b1df7d10d61de282b85410187a74bc,11,4,5,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
89b1df7d10d61de282b85410187a74bc,11,4,5,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `document.getElementById('main').innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
8a11be49205b1e50cc84d67f5ae972da,0,18,9,files.javascript.rules.lang.security.audit.prototype-pollution.prototype-pollution-assignment,"Possibility of prototype polluting assignment detected. By adding or modifying attributes of an object prototype, it is possible to create attributes that exist on every object, or replace critical attributes with malicious ones. This can be problematic if the software depends on existence or non-existence of certain attributes, or uses pre-defined attributes of object prototype (such as hasOwnProperty, toString or valueOf). Possible mitigations might be: freezing the object prototype, using an object without prototypes (via Object.create(null) ), blocking modifications of attributes that resolve to object prototype, using Map instead of object."
8a2166a38eb998da62992831b7b07925,0,39,24,files.javascript.rules.browser.security.eval-detected,"Detected the use of eval(). eval() can be dangerous if used to evaluate dynamic content. If this content can be input from outside the program, this may be a code injection vulnerability. Ensure evaluated content is not definable by external sources."
8a4a6d1edc7133566fa1c9fb7cd9c8f1,0,22,5,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
8a4a6d1edc7133566fa1c9fb7cd9c8f1,0,22,5,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `summaryDiv.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
8a4a6d1edc7133566fa1c9fb7cd9c8f1,0,22,28,files.javascript.rules.lang.security.html-in-template-string,"This template literal looks like HTML and has interpolated variables. These variables are not HTML-encoded by default. If the variables contain HTML tags, these may be interpreted by the browser, resulting in cross-site scripting (XSS)."
8adfeb04a28600fc338a57215bc3df11,1,47,17,files.javascript.rules.lang.security.audit.unsafe-dynamic-method,"Using non-static data to retrieve and run functions from the object is dangerous. If the data is user-controlled, it may allow executing arbitrary code."
8ccccff6b7c71c467c2297562e8aa2b6,1,5,5,files.javascript.rules.jquery.security.audit.jquery-insecure-method,User controlled data in a jQuery's `.html(...)` is an anti-pattern that can lead to XSS vulnerabilities
8ccccff6b7c71c467c2297562e8aa2b6,1,5,5,files.javascript.rules.jquery.security.audit.prohibit-jquery-html,"JQuery's `html` function is susceptible to Cross Site Scripting (XSS) attacks. If you're just passing text, consider `text` instead. Otherwise, use a function that escapes HTML such as edX's `HtmlUtils.setHtml()`."
8cd0ffdaee97d6e41138012c17703804,11,12,37,files.javascript.rules.lang.security.audit.detect-non-literal-fs-filename,"Detected that function argument `storyfile` has entered the fs module. An attacker could potentially control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are validated."
8ce8cbabf7a2ad7c59b6ccfe55a65bfd,5,5,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
8d071e4954dd1b63dd3a77eeb5c78c43,4,8,41,files.javascript.rules.lang.security.audit.detect-non-literal-regexp,"RegExp() called with a `selector` function argument, this might allow an attacker to cause a Regular Expression Denial-of-Service (ReDoS) within your application as RegExP blocks the main thread. For this reason, it is recommended to use hardcoded regexes instead. If your regex is run on user-controlled input, consider performing input validation or use a regex checking/sanitization library such as https://www.npmjs.com/package/recheck to verify that the regex does not appear vulnerable to ReDoS."
8d2fa202708027353c7e200514b86d6b,2,8,17,files.javascript.rules.jquery.security.audit.jquery-insecure-method,User controlled data in a jQuery's `.append(...)` is an anti-pattern that can lead to XSS vulnerabilities
8d86e13547d98de09c3f2b121d2e4210,2,6,9,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
8d86e13547d98de09c3f2b121d2e4210,2,6,9,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `greeting.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
8d86e13547d98de09c3f2b121d2e4210,4,50,13,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
8d86e13547d98de09c3f2b121d2e4210,4,50,13,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `greeting.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
8e58c8b988a517bb2c9a3a408996f5fb,0,14,20,files.javascript.rules.lang.security.audit.detect-non-literal-fs-filename,"Detected that function argument `result` has entered the fs module. An attacker could potentially control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are validated."
8e58c8b988a517bb2c9a3a408996f5fb,11,1,1,files.javascript.rules.grpc.security.grpc-nodejs-insecure-connection,"Found an insecure gRPC connection. This creates a connection without encryption to a gRPC client/server. A malicious attacker could tamper with the gRPC message, which could compromise the machine."
8e58c8b988a517bb2c9a3a408996f5fb,11,13,15,files.javascript.rules.lang.security.audit.detect-non-literal-fs-filename,"Detected that function argument `call` has entered the fs module. An attacker could potentially control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are validated."
8e58c8b988a517bb2c9a3a408996f5fb,12,1,1,files.javascript.rules.grpc.security.grpc-nodejs-insecure-connection,"Found an insecure gRPC connection. This creates a connection without encryption to a gRPC client/server. A malicious attacker could tamper with the gRPC message, which could compromise the machine."
8e58c8b988a517bb2c9a3a408996f5fb,15,1,1,files.javascript.rules.grpc.security.grpc-nodejs-insecure-connection,"Found an insecure gRPC connection. This creates a connection without encryption to a gRPC client/server. A malicious attacker could tamper with the gRPC message, which could compromise the machine."
8e58c8b988a517bb2c9a3a408996f5fb,16,1,1,files.javascript.rules.grpc.security.grpc-nodejs-insecure-connection,"Found an insecure gRPC connection. This creates a connection without encryption to a gRPC client/server. A malicious attacker could tamper with the gRPC message, which could compromise the machine."
8e58c8b988a517bb2c9a3a408996f5fb,4,1,1,files.javascript.rules.grpc.security.grpc-nodejs-insecure-connection,"Found an insecure gRPC connection. This creates a connection without encryption to a gRPC client/server. A malicious attacker could tamper with the gRPC message, which could compromise the machine."
8e58c8b988a517bb2c9a3a408996f5fb,5,1,1,files.javascript.rules.grpc.security.grpc-nodejs-insecure-connection,"Found an insecure gRPC connection. This creates a connection without encryption to a gRPC client/server. A malicious attacker could tamper with the gRPC message, which could compromise the machine."
8e92c7f395e82d12627859d25cbf3e39,0,3,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
8ebe1965337f857723399cc82d06cdf9,0,5,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
8ebe1965337f857723399cc82d06cdf9,0,48,5,files.javascript.rules.express.security.audit.remote-property-injection,"Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype. Use literal values for object properties."
8f3cf7c630a5137b486f3c08ff66fd8b,10,7,21,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
8f3cf7c630a5137b486f3c08ff66fd8b,10,7,21,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `document.getElementById('articlesList').innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
8f3cf7c630a5137b486f3c08ff66fd8b,10,18,21,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
8f3cf7c630a5137b486f3c08ff66fd8b,10,18,21,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `document.getElementById('pagination').innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
8f3cf7c630a5137b486f3c08ff66fd8b,7,18,21,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
8f3cf7c630a5137b486f3c08ff66fd8b,7,18,21,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `document.getElementById('articlesList').innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
8f3cf7c630a5137b486f3c08ff66fd8b,7,29,21,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
8f3cf7c630a5137b486f3c08ff66fd8b,7,29,21,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `document.getElementById('pagination').innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
8f5d76876eaae1665f67c7c9a3513f80,1,3,5,files.javascript.rules.jquery.security.audit.jquery-insecure-method,User controlled data in a jQuery's `.append(...)` is an anti-pattern that can lead to XSS vulnerabilities
8f5d76876eaae1665f67c7c9a3513f80,2,7,9,files.javascript.rules.jquery.security.audit.jquery-insecure-method,User controlled data in a jQuery's `.append(...)` is an anti-pattern that can lead to XSS vulnerabilities
8fb17846a093b8a23bae611c320ccad2,2,16,3,files.javascript.rules.lang.security.audit.unsafe-dynamic-method,"Using non-static data to retrieve and run functions from the object is dangerous. If the data is user-controlled, it may allow executing arbitrary code."
8fb17846a093b8a23bae611c320ccad2,2,18,4,files.javascript.rules.lang.security.audit.unsafe-dynamic-method,"Using non-static data to retrieve and run functions from the object is dangerous. If the data is user-controlled, it may allow executing arbitrary code."
8ff93720afc3a8a0183a1977c3bb280e,5,2,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
9022d1a35906d94c70eaa691bc471702,1,1,1,files.javascript.rules.grpc.security.grpc-nodejs-insecure-connection,"Found an insecure gRPC connection. This creates a connection without encryption to a gRPC client/server. A malicious attacker could tamper with the gRPC message, which could compromise the machine."
9022d1a35906d94c70eaa691bc471702,2,1,1,files.javascript.rules.grpc.security.grpc-nodejs-insecure-connection,"Found an insecure gRPC connection. This creates a connection without encryption to a gRPC client/server. A malicious attacker could tamper with the gRPC message, which could compromise the machine."
9022d1a35906d94c70eaa691bc471702,5,1,1,files.javascript.rules.grpc.security.grpc-nodejs-insecure-connection,"Found an insecure gRPC connection. This creates a connection without encryption to a gRPC client/server. A malicious attacker could tamper with the gRPC message, which could compromise the machine."
908655363259e699b79596091de6026c,4,7,9,files.javascript.rules.puppeteer.security.audit.puppeteer-goto-injection,If unverified user data can reach the `goto` method it can result in Server-Side Request Forgery vulnerabilities
908655363259e699b79596091de6026c,4,19,28,files.javascript.rules.puppeteer.security.audit.puppeteer-goto-injection,If unverified user data can reach the `goto` method it can result in Server-Side Request Forgery vulnerabilities
918179ef161a7a71c921170cf1311126,1,1,1,files.javascript.rules.browser.security.insufficient-postmessage-origin-validation,No validation of origin is done by the addEventListener API. It may be possible to exploit this flaw to perform Cross Origin attacks such as Cross-Site Scripting(XSS).
918179ef161a7a71c921170cf1311126,1,13,3,files.javascript.rules.browser.security.wildcard-postmessage-configuration,"The target origin of the window.postMessage() API is set to ""*"". This could allow for information disclosure due to the possibility of any origin allowed to receive the message."
918179ef161a7a71c921170cf1311126,2,1,1,files.javascript.rules.browser.security.insufficient-postmessage-origin-validation,No validation of origin is done by the addEventListener API. It may be possible to exploit this flaw to perform Cross Origin attacks such as Cross-Site Scripting(XSS).
918179ef161a7a71c921170cf1311126,3,5,3,files.javascript.rules.browser.security.wildcard-postmessage-configuration,"The target origin of the window.postMessage() API is set to ""*"". This could allow for information disclosure due to the possibility of any origin allowed to receive the message."
918179ef161a7a71c921170cf1311126,4,1,1,files.javascript.rules.browser.security.insufficient-postmessage-origin-validation,No validation of origin is done by the addEventListener API. It may be possible to exploit this flaw to perform Cross Origin attacks such as Cross-Site Scripting(XSS).
91913925cab3c0728f8258ef5b0c8e97,0,2,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
91bc8cc67151874c3c297a016521abfb,1,7,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
91bc8cc67151874c3c297a016521abfb,1,23,12,files.javascript.rules.lang.security.html-in-template-string,"This template literal looks like HTML and has interpolated variables. These variables are not HTML-encoded by default. If the variables contain HTML tags, these may be interpreted by the browser, resulting in cross-site scripting (XSS)."
91bc8cc67151874c3c297a016521abfb,1,29,24,files.javascript.rules.lang.security.audit.unknown-value-with-script-tag,"Cannot determine what 'html' is and it is used with a '<script>' tag. This could be susceptible to cross-site scripting (XSS). Ensure 'html' is not externally controlled, or sanitize this data."
91d4e87431bcf91795e3f44d496f2b9c,4,9,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
91d5f48976767e947bd094f739c7c746,2,16,46,files.javascript.rules.lang.security.audit.path-traversal.path-join-resolve-traversal,"Detected possible user input going into a `path.join` or `path.resolve` function. This could possibly lead to a path traversal vulnerability,  where the attacker can access arbitrary files stored in the file system. Instead, be sure to sanitize or validate user input first."
922db4f0be132a4317537bb3ea715f9b,3,1,1,files.javascript.rules.grpc.security.grpc-nodejs-insecure-connection,"Found an insecure gRPC connection. This creates a connection without encryption to a gRPC client/server. A malicious attacker could tamper with the gRPC message, which could compromise the machine."
922db4f0be132a4317537bb3ea715f9b,4,1,1,files.javascript.rules.grpc.security.grpc-nodejs-insecure-connection,"Found an insecure gRPC connection. This creates a connection without encryption to a gRPC client/server. A malicious attacker could tamper with the gRPC message, which could compromise the machine."
9240d593f8c79edcb3f168cd31aaf532,5,4,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
9240d593f8c79edcb3f168cd31aaf532,9,4,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
929d974a99471b54bf4311f66e22d814,13,37,9,files.javascript.rules.lang.security.audit.unsafe-dynamic-method,"Using non-static data to retrieve and run functions from the object is dangerous. If the data is user-controlled, it may allow executing arbitrary code."
929d974a99471b54bf4311f66e22d814,14,39,21,files.javascript.rules.lang.security.audit.unsafe-dynamic-method,"Using non-static data to retrieve and run functions from the object is dangerous. If the data is user-controlled, it may allow executing arbitrary code."
929d974a99471b54bf4311f66e22d814,14,50,21,files.javascript.rules.lang.security.audit.unsafe-dynamic-method,"Using non-static data to retrieve and run functions from the object is dangerous. If the data is user-controlled, it may allow executing arbitrary code."
92d8a803a5703c13a3988788daf0837b,7,6,9,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
92d8a803a5703c13a3988788daf0837b,7,6,9,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `productDiv.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
92d8a803a5703c13a3988788daf0837b,7,6,32,files.javascript.rules.lang.security.html-in-template-string,"This template literal looks like HTML and has interpolated variables. These variables are not HTML-encoded by default. If the variables contain HTML tags, these may be interpreted by the browser, resulting in cross-site scripting (XSS)."
92d8a803a5703c13a3988788daf0837b,8,6,9,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
92d8a803a5703c13a3988788daf0837b,8,6,9,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `productDiv.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
92d8a803a5703c13a3988788daf0837b,8,6,32,files.javascript.rules.lang.security.html-in-template-string,"This template literal looks like HTML and has interpolated variables. These variables are not HTML-encoded by default. If the variables contain HTML tags, these may be interpreted by the browser, resulting in cross-site scripting (XSS)."
92d8a803a5703c13a3988788daf0837b,9,6,9,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
92d8a803a5703c13a3988788daf0837b,9,6,9,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `productDiv.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
92d8a803a5703c13a3988788daf0837b,9,6,32,files.javascript.rules.lang.security.html-in-template-string,"This template literal looks like HTML and has interpolated variables. These variables are not HTML-encoded by default. If the variables contain HTML tags, these may be interpreted by the browser, resulting in cross-site scripting (XSS)."
9343a899585b9910166e1a722793d8ec,0,38,18,files.javascript.rules.lang.security.audit.detect-non-literal-regexp,"RegExp() called with a `keyword` function argument, this might allow an attacker to cause a Regular Expression Denial-of-Service (ReDoS) within your application as RegExP blocks the main thread. For this reason, it is recommended to use hardcoded regexes instead. If your regex is run on user-controlled input, consider performing input validation or use a regex checking/sanitization library such as https://www.npmjs.com/package/recheck to verify that the regex does not appear vulnerable to ReDoS."
9343a899585b9910166e1a722793d8ec,0,44,16,files.javascript.rules.lang.security.audit.detect-non-literal-regexp,"RegExp() called with a `keyword` function argument, this might allow an attacker to cause a Regular Expression Denial-of-Service (ReDoS) within your application as RegExP blocks the main thread. For this reason, it is recommended to use hardcoded regexes instead. If your regex is run on user-controlled input, consider performing input validation or use a regex checking/sanitization library such as https://www.npmjs.com/package/recheck to verify that the regex does not appear vulnerable to ReDoS."
9343a899585b9910166e1a722793d8ec,0,62,13,files.javascript.rules.lang.security.html-in-template-string,"This template literal looks like HTML and has interpolated variables. These variables are not HTML-encoded by default. If the variables contain HTML tags, these may be interpreted by the browser, resulting in cross-site scripting (XSS)."
9343a899585b9910166e1a722793d8ec,0,64,9,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
9343a899585b9910166e1a722793d8ec,0,64,9,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `divCopy.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
9343a899585b9910166e1a722793d8ec,0,76,13,files.javascript.rules.lang.security.html-in-template-string,"This template literal looks like HTML and has interpolated variables. These variables are not HTML-encoded by default. If the variables contain HTML tags, these may be interpreted by the browser, resulting in cross-site scripting (XSS)."
9343a899585b9910166e1a722793d8ec,0,80,9,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
9343a899585b9910166e1a722793d8ec,0,80,9,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `tempSpan.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
937ab77132a2e78ea981114a7f2fb91d,1,17,1,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
937ab77132a2e78ea981114a7f2fb91d,1,17,1,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `messageDisplay.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
937ab77132a2e78ea981114a7f2fb91d,1,17,28,files.javascript.rules.lang.security.html-in-template-string,"This template literal looks like HTML and has interpolated variables. These variables are not HTML-encoded by default. If the variables contain HTML tags, these may be interpreted by the browser, resulting in cross-site scripting (XSS)."
937ab77132a2e78ea981114a7f2fb91d,2,25,1,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
937ab77132a2e78ea981114a7f2fb91d,2,25,1,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `messageDisplay.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
937ab77132a2e78ea981114a7f2fb91d,2,25,28,files.javascript.rules.lang.security.html-in-template-string,"This template literal looks like HTML and has interpolated variables. These variables are not HTML-encoded by default. If the variables contain HTML tags, these may be interpreted by the browser, resulting in cross-site scripting (XSS)."
937ab77132a2e78ea981114a7f2fb91d,3,39,1,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
937ab77132a2e78ea981114a7f2fb91d,3,39,1,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `messageDisplay.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
937ab77132a2e78ea981114a7f2fb91d,3,39,28,files.javascript.rules.lang.security.html-in-template-string,"This template literal looks like HTML and has interpolated variables. These variables are not HTML-encoded by default. If the variables contain HTML tags, these may be interpreted by the browser, resulting in cross-site scripting (XSS)."
93c9bbd88a444dafcc834f5f6fe43668,0,2,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
9467f30215b4740b3abe5cdede36363b,1,5,19,files.javascript.rules.jsonwebtoken.security.hardcoded-jwt-secret,"A hard-coded credential was detected. It is not recommended to store credentials in source-code, as this risks secrets being leaked and used by either an internal or external malicious adversary. It is recommended to use environment variables to securely provide credentials or retrieve credentials from a secure vault or HSM (Hardware Security Module)."
950ecab219ee692f8b16676cf7d53423,0,16,9,files.javascript.rules.jquery.security.audit.jquery-insecure-method,User controlled data in a jQuery's `.html(...)` is an anti-pattern that can lead to XSS vulnerabilities
950ecab219ee692f8b16676cf7d53423,0,16,9,files.javascript.rules.jquery.security.audit.prohibit-jquery-html,"JQuery's `html` function is susceptible to Cross Site Scripting (XSS) attacks. If you're just passing text, consider `text` instead. Otherwise, use a function that escapes HTML such as edX's `HtmlUtils.setHtml()`."
955ae5bb275d3ae0f3b2febe2f9be991,2,9,3,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
955ae5bb275d3ae0f3b2febe2f9be991,2,9,3,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `dateElement.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
955ae5bb275d3ae0f3b2febe2f9be991,2,10,3,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
955ae5bb275d3ae0f3b2febe2f9be991,2,10,3,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `timeElement.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
95f40a22a992f1ebf1cfff09e9e6d1a0,10,14,25,files.javascript.rules.lang.security.audit.incomplete-sanitization,"`range.replace` method will only replace the first occurrence when used with a string argument (""[""). If this method is used for escaping of dangerous data then there is a possibility for a bypass. Try to use sanitization library instead or use a Regex with a global flag."
95f40a22a992f1ebf1cfff09e9e6d1a0,10,14,25,files.javascript.rules.lang.security.audit.incomplete-sanitization,"`range
      .replace(""["", """").replace` method will only replace the first occurrence when used with a string argument (""]""). If this method is used for escaping of dangerous data then there is a possibility for a bypass. Try to use sanitization library instead or use a Regex with a global flag."
965b53138c7d84c4718c580b311233dd,0,3,5,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
965b53138c7d84c4718c580b311233dd,0,3,5,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `tulos.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
96cb353ca9628b3ed5c90c629f26c07d,4,30,21,files.javascript.rules.lang.security.audit.unsafe-formatstring,"Detected string concatenation with a non-literal variable in a util.format / console.log function. If an attacker injects a format specifier in the string, it will forge the log message. Try to use constant values for the format string."
96d56702dcdd6672fcfe82250ce18ac0,5,2,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
96d56702dcdd6672fcfe82250ce18ac0,6,2,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
97085703aee024cabbf1932bd73e4efa,5,7,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
973a0367d370cba269c999c6e92c62a5,3,5,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
97542a57e8d9ba6ad03dd2aadfc21409,0,6,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
986995321dcd31eb14bcf1b118cf4d72,4,4,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
986995321dcd31eb14bcf1b118cf4d72,4,15,18,files.javascript.rules.express.security.audit.xss.direct-response-write,"Detected directly writing to a Response object from user-defined input. This bypasses any HTML escaping and may expose your application to a Cross-Site-scripting (XSS) vulnerability. Instead, use 'resp.render()' to render safely escaped HTML."
98adcbde17f04aa2e16b854876f0f461,0,75,38,files.javascript.rules.lang.security.detect-insecure-websocket,Insecure WebSocket Detected. WebSocket Secure (wss) should be used for all WebSocket connections.
9955336451d2a6c8b5f556f45ddd2c56,7,5,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
998297fd4c513da991bb6764f9de5a59,0,21,5,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
998297fd4c513da991bb6764f9de5a59,0,21,5,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `paintingDiv.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
998297fd4c513da991bb6764f9de5a59,1,27,3,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
998297fd4c513da991bb6764f9de5a59,1,27,3,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `paintingDiv.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
998297fd4c513da991bb6764f9de5a59,2,4,3,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
998297fd4c513da991bb6764f9de5a59,2,4,3,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `paintingDiv.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
998297fd4c513da991bb6764f9de5a59,3,24,3,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
998297fd4c513da991bb6764f9de5a59,3,24,3,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `paintingDiv.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
99d15517262fdb2d486b4c69f8307719,2,2,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
9a14e2de5e924c77dd344cc3003bf36c,3,6,5,files.javascript.rules.lang.security.audit.detect-non-literal-require,"Detected the use of require(variable). Calling require with a non-literal argument might allow an attacker to load and run arbitrary code, or access arbitrary files."
9a2b6dcadd93f4a7438b2fd6097fd366,2,19,3,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
9a2b6dcadd93f4a7438b2fd6097fd366,2,19,3,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `game.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
9a2b6dcadd93f4a7438b2fd6097fd366,2,19,20,files.javascript.rules.lang.security.html-in-template-string,"This template literal looks like HTML and has interpolated variables. These variables are not HTML-encoded by default. If the variables contain HTML tags, these may be interpreted by the browser, resulting in cross-site scripting (XSS)."
9b30c0d5862ed27bc3214fce47355269,1,37,13,files.javascript.rules.jquery.security.audit.jquery-insecure-method,User controlled data in a jQuery's `.append(...)` is an anti-pattern that can lead to XSS vulnerabilities
9b478473b9dcd9ea9a87c9d49e984efe,1,27,9,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
9b478473b9dcd9ea9a87c9d49e984efe,1,27,9,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `questionElem.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
9b478473b9dcd9ea9a87c9d49e984efe,1,27,34,files.javascript.rules.lang.security.html-in-template-string,"This template literal looks like HTML and has interpolated variables. These variables are not HTML-encoded by default. If the variables contain HTML tags, these may be interpreted by the browser, resulting in cross-site scripting (XSS)."
9b8433577b2be557553e7dc6906a3adb,2,1,1,files.javascript.rules.browser.security.insufficient-postmessage-origin-validation,No validation of origin is done by the addEventListener API. It may be possible to exploit this flaw to perform Cross Origin attacks such as Cross-Site Scripting(XSS).
9b85c02c72a455e66d86de221ed9c4e1,1,8,5,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
9b85c02c72a455e66d86de221ed9c4e1,1,8,5,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `result.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
9be7c16b707ba1b52e53747c15c28705,3,25,3,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
9be7c16b707ba1b52e53747c15c28705,3,25,3,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `output.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
9be7c16b707ba1b52e53747c15c28705,7,28,3,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
9be7c16b707ba1b52e53747c15c28705,7,28,3,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `vowelCountElement.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
9ccd21b4eec06bbd03271bd81a626a0f,0,69,7,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
9ccd21b4eec06bbd03271bd81a626a0f,0,69,7,files.javascript.rules.browser.security.insecure-innerhtml,"User controlled data in a `this.votVideoVolumeSlider.label.querySelector(""strong"").innerHTML` is an anti-pattern that can lead to XSS vulnerabilities"
9ccd21b4eec06bbd03271bd81a626a0f,0,76,9,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
9ccd21b4eec06bbd03271bd81a626a0f,0,76,9,files.javascript.rules.browser.security.insecure-innerhtml,"User controlled data in a `this.votVideoTranslationVolumeSlider.label.querySelector(""strong"").innerHTML` is an anti-pattern that can lead to XSS vulnerabilities"
9ccd21b4eec06bbd03271bd81a626a0f,0,87,7,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
9ccd21b4eec06bbd03271bd81a626a0f,0,87,7,files.javascript.rules.browser.security.insecure-innerhtml,"User controlled data in a `this.votVideoTranslationVolumeSlider.label.querySelector(""strong"").innerHTML` is an anti-pattern that can lead to XSS vulnerabilities"
9ccd21b4eec06bbd03271bd81a626a0f,0,119,7,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
9ccd21b4eec06bbd03271bd81a626a0f,0,119,7,files.javascript.rules.browser.security.insecure-innerhtml,"User controlled data in a `this.votAutoSetVolumeSlider.label.querySelector(""strong"").innerHTML` is an anti-pattern that can lead to XSS vulnerabilities"
9d1577ff8493ece51c0f8f5be49a8872,3,2,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
9d1577ff8493ece51c0f8f5be49a8872,4,2,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
9d2ff5d0dd9a5753d38d485cf9be8ab8,4,3,9,files.javascript.rules.lang.security.detect-insecure-websocket,Insecure WebSocket Detected. WebSocket Secure (wss) should be used for all WebSocket connections.
9d8846eb5e9e3a72518a7b13631e9d9d,0,9,1,files.javascript.rules.lang.security.audit.unsafe-dynamic-method,"Using non-static data to retrieve and run functions from the object is dangerous. If the data is user-controlled, it may allow executing arbitrary code."
9d8846eb5e9e3a72518a7b13631e9d9d,0,10,1,files.javascript.rules.lang.security.audit.unsafe-dynamic-method,"Using non-static data to retrieve and run functions from the object is dangerous. If the data is user-controlled, it may allow executing arbitrary code."
9d8846eb5e9e3a72518a7b13631e9d9d,0,11,1,files.javascript.rules.lang.security.audit.unsafe-dynamic-method,"Using non-static data to retrieve and run functions from the object is dangerous. If the data is user-controlled, it may allow executing arbitrary code."
9d8846eb5e9e3a72518a7b13631e9d9d,0,12,1,files.javascript.rules.lang.security.audit.unsafe-dynamic-method,"Using non-static data to retrieve and run functions from the object is dangerous. If the data is user-controlled, it may allow executing arbitrary code."
9d8846eb5e9e3a72518a7b13631e9d9d,0,13,1,files.javascript.rules.lang.security.audit.unsafe-dynamic-method,"Using non-static data to retrieve and run functions from the object is dangerous. If the data is user-controlled, it may allow executing arbitrary code."
9d8846eb5e9e3a72518a7b13631e9d9d,0,14,1,files.javascript.rules.lang.security.audit.unsafe-dynamic-method,"Using non-static data to retrieve and run functions from the object is dangerous. If the data is user-controlled, it may allow executing arbitrary code."
9db3199f80de5df8c9e987b17b02a52a,0,4,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
9dc8739d2d140f102aafce1e060c1881,4,9,21,files.javascript.rules.jquery.security.audit.jquery-insecure-method,User controlled data in a jQuery's `.html(...)` is an anti-pattern that can lead to XSS vulnerabilities
9dc8739d2d140f102aafce1e060c1881,4,9,21,files.javascript.rules.jquery.security.audit.prohibit-jquery-html,"JQuery's `html` function is susceptible to Cross Site Scripting (XSS) attacks. If you're just passing text, consider `text` instead. Otherwise, use a function that escapes HTML such as edX's `HtmlUtils.setHtml()`."
9df92732b1433f9c5028dbada836abf6,2,2,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
9e28bd1d0a572fbfcbfa52b3f9e8458c,0,15,9,files.javascript.rules.lang.security.audit.detect-non-literal-require,"Detected the use of require(variable). Calling require with a non-literal argument might allow an attacker to load and run arbitrary code, or access arbitrary files."
9e62d078c8bd70c20494b7ec7d3829ae,1,24,5,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
9e62d078c8bd70c20494b7ec7d3829ae,1,24,5,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `document.getElementById('result').innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
9eb06257baeaaf29567745896cb23746,1,5,10,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
9eb06257baeaaf29567745896cb23746,2,28,38,files.javascript.rules.lang.security.html-in-template-string,"This template literal looks like HTML and has interpolated variables. These variables are not HTML-encoded by default. If the variables contain HTML tags, these may be interpreted by the browser, resulting in cross-site scripting (XSS)."
9ef59b471fa3b4af04cb319c850df65a,2,2,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
9f3411e77ecc4b705cf251a982ce488c,1,2,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
9f4195acc9b6823d173543714ce64374,0,15,5,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
9f4195acc9b6823d173543714ce64374,0,15,5,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `typingEffect.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
a03d9119fb728ee692ad5b16aa615f5e,11,5,10,files.javascript.rules.lang.security.detect-child-process,"Detected calls to child_process from a function argument `ip`. This could lead to a command injection if the input is user controllable. Try to avoid calls to child_process, and if it is needed ensure user input is correctly sanitized or sandboxed. "
a06fb5cad9654481df4cebdaff8a9908,0,18,5,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
a06fb5cad9654481df4cebdaff8a9908,0,18,5,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `tempDiv.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
a0ea499be7358a586202c5663f397931,1,2,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
a0ea499be7358a586202c5663f397931,7,4,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
a0f7ed0247e57618dc24a849fbc1d6c4,8,2,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
a108664229e1991a110ed70051ae4242,0,2,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
a13179eb5d1616cdef169657512a108f,1,40,5,files.javascript.rules.browser.security.wildcard-postmessage-configuration,"The target origin of the window.postMessage() API is set to ""*"". This could allow for information disclosure due to the possibility of any origin allowed to receive the message."
a13179eb5d1616cdef169657512a108f,1,41,5,files.javascript.rules.browser.security.insufficient-postmessage-origin-validation,No validation of origin is done by the addEventListener API. It may be possible to exploit this flaw to perform Cross Origin attacks such as Cross-Site Scripting(XSS).
a13179eb5d1616cdef169657512a108f,2,22,5,files.javascript.rules.browser.security.wildcard-postmessage-configuration,"The target origin of the window.postMessage() API is set to ""*"". This could allow for information disclosure due to the possibility of any origin allowed to receive the message."
a13179eb5d1616cdef169657512a108f,2,23,5,files.javascript.rules.browser.security.insufficient-postmessage-origin-validation,No validation of origin is done by the addEventListener API. It may be possible to exploit this flaw to perform Cross Origin attacks such as Cross-Site Scripting(XSS).
a139a6d837cd6e6a34c04d006a2c4a5d,0,77,5,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
a139a6d837cd6e6a34c04d006a2c4a5d,0,77,5,files.javascript.rules.browser.security.insecure-innerhtml,"User controlled data in a `document.getElementById(this.getSquareId(move.x, move.y)).innerHTML` is an anti-pattern that can lead to XSS vulnerabilities"
a14e17b48aa757b059d8a3e9926c9a90,0,17,5,files.javascript.rules.lang.security.audit.unsafe-dynamic-method,"Using non-static data to retrieve and run functions from the object is dangerous. If the data is user-controlled, it may allow executing arbitrary code."
a14e17b48aa757b059d8a3e9926c9a90,0,17,5,files.javascript.rules.lang.security.audit.unsafe-dynamic-method,"Using non-static data to retrieve and run functions from the object is dangerous. If the data is user-controlled, it may allow executing arbitrary code."
a14e17b48aa757b059d8a3e9926c9a90,0,17,5,files.javascript.rules.lang.security.audit.unsafe-dynamic-method,"Using non-static data to retrieve and run functions from the object is dangerous. If the data is user-controlled, it may allow executing arbitrary code."
a14e17b48aa757b059d8a3e9926c9a90,0,17,5,files.javascript.rules.lang.security.audit.unsafe-dynamic-method,"Using non-static data to retrieve and run functions from the object is dangerous. If the data is user-controlled, it may allow executing arbitrary code."
a16fdc3d00246b5d607ad4efbf8631b5,1,12,21,files.javascript.rules.lang.security.html-in-template-string,"This template literal looks like HTML and has interpolated variables. These variables are not HTML-encoded by default. If the variables contain HTML tags, these may be interpreted by the browser, resulting in cross-site scripting (XSS)."
a16fdc3d00246b5d607ad4efbf8631b5,1,14,32,files.javascript.rules.jquery.security.audit.jquery-insecure-selector,User controlled data in a `$(...)` is an anti-pattern that can lead to XSS vulnerabilities
a16fdc3d00246b5d607ad4efbf8631b5,1,14,54,files.javascript.rules.jquery.security.audit.jquery-insecure-selector,User controlled data in a `$(...)` is an anti-pattern that can lead to XSS vulnerabilities
a16fdc3d00246b5d607ad4efbf8631b5,1,26,13,files.javascript.rules.jquery.security.audit.jquery-insecure-method,User controlled data in a jQuery's `.append(...)` is an anti-pattern that can lead to XSS vulnerabilities
a171f39e78707da496ad180b4273805e,2,21,25,files.javascript.rules.browser.security.eval-detected,"Detected the use of eval(). eval() can be dangerous if used to evaluate dynamic content. If this content can be input from outside the program, this may be a code injection vulnerability. Ensure evaluated content is not definable by external sources."
a2c52257e3a8dcbb8fd84d4805d3cc5f,0,39,5,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
a2c52257e3a8dcbb8fd84d4805d3cc5f,1,39,9,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
a2cd0f78408fd59c2d2e0011e69c439a,3,44,5,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
a2cd0f78408fd59c2d2e0011e69c439a,3,44,5,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `li.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
a2cd0f78408fd59c2d2e0011e69c439a,3,44,20,files.javascript.rules.lang.security.html-in-template-string,"This template literal looks like HTML and has interpolated variables. These variables are not HTML-encoded by default. If the variables contain HTML tags, these may be interpreted by the browser, resulting in cross-site scripting (XSS)."
a301b2d41301babc98a3a25f6120ba18,0,70,3,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
a301b2d41301babc98a3a25f6120ba18,0,70,3,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `korttiElement.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
a301b2d41301babc98a3a25f6120ba18,0,70,29,files.javascript.rules.lang.security.html-in-template-string,"This template literal looks like HTML and has interpolated variables. These variables are not HTML-encoded by default. If the variables contain HTML tags, these may be interpreted by the browser, resulting in cross-site scripting (XSS)."
a3194e1e6a19110b1527ea5846b01929,0,26,14,files.javascript.rules.lang.security.audit.unsafe-dynamic-method,"Using non-static data to retrieve and run functions from the object is dangerous. If the data is user-controlled, it may allow executing arbitrary code."
a389d711a31e526d75c9ad23d544d88e,1,4,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
a393e372dbca6992c35eb86f31eeb16b,0,24,23,files.javascript.rules.lang.security.audit.unsafe-formatstring,"Detected string concatenation with a non-literal variable in a util.format / console.log function. If an attacker injects a format specifier in the string, it will forge the log message. Try to use constant values for the format string."
a393e372dbca6992c35eb86f31eeb16b,9,11,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
a3e3837e60a0d686d8a5b0d920c9c2fd,11,2,5,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
a3e3837e60a0d686d8a5b0d920c9c2fd,17,2,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
a42c52ca1699de0604bc5ae7a3493e06,0,12,28,files.javascript.rules.browser.security.js-open-redirect-from-function,The application accepts potentially user-controlled input `path` which can control the location of the current window context. This can lead two types of vulnerabilities open-redirection and Cross-Site-Scripting (XSS) with JavaScript URIs. It is recommended to validate user-controllable input before allowing it to control the redirection.
a499b49721cd7ae996f45cb3f188a636,0,27,5,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
a499b49721cd7ae996f45cb3f188a636,0,27,5,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `progressBarFilled.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
a499b49721cd7ae996f45cb3f188a636,0,30,5,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
a499b49721cd7ae996f45cb3f188a636,0,30,5,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `progressBarFilled.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
a4cb9f018306316415136df74b27a53a,3,6,11,files.javascript.rules.lang.security.html-in-template-string,"This template literal looks like HTML and has interpolated variables. These variables are not HTML-encoded by default. If the variables contain HTML tags, these may be interpreted by the browser, resulting in cross-site scripting (XSS)."
a663d8830d8a39ab10de0e2d87bde612,0,2,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
a663d8830d8a39ab10de0e2d87bde612,1,2,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
a6a89a7665d2d7974936c7ea100f78b9,1,1,4,files.javascript.rules.lang.security.audit.unsafe-dynamic-method,"Using non-static data to retrieve and run functions from the object is dangerous. If the data is user-controlled, it may allow executing arbitrary code."
a6c2fb54ab93ee8bfa066feee52bb0bf,0,4,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
a6c3a328c7567a55a05f0a4759b35674,2,67,54,files.javascript.rules.lang.security.html-in-template-string,"This template literal looks like HTML and has interpolated variables. These variables are not HTML-encoded by default. If the variables contain HTML tags, these may be interpreted by the browser, resulting in cross-site scripting (XSS)."
a6c3a328c7567a55a05f0a4759b35674,2,70,3,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
a6c3a328c7567a55a05f0a4759b35674,2,70,3,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `vmcMenu.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
a6e36b210c5bef4719b6d54138daf593,2,3,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
a741613adbb6b1f4daffe245ad9a9e30,3,1,1,files.javascript.rules.grpc.security.grpc-nodejs-insecure-connection,"Found an insecure gRPC connection. This creates a connection without encryption to a gRPC client/server. A malicious attacker could tamper with the gRPC message, which could compromise the machine."
a7602c3da79e398334aeb06b8e55a6ff,0,3,13,files.javascript.rules.jquery.security.audit.jquery-insecure-selector,User controlled data in a `$(...)` is an anti-pattern that can lead to XSS vulnerabilities
a7602c3da79e398334aeb06b8e55a6ff,0,4,13,files.javascript.rules.jquery.security.audit.jquery-insecure-selector,User controlled data in a `$(...)` is an anti-pattern that can lead to XSS vulnerabilities
a7cecfe990a110873cf14eec113c06e6,1,155,13,files.javascript.rules.lang.security.audit.unsafe-formatstring,"Detected string concatenation with a non-literal variable in a util.format / console.log function. If an attacker injects a format specifier in the string, it will forge the log message. Try to use constant values for the format string."
a804e4b02f543937e61840a79eb44507,2,2,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
a8b0c9b96a0417c5d8a2b9a7017eb069,6,4,5,files.javascript.rules.jquery.security.audit.jquery-insecure-method,User controlled data in a jQuery's `.html(...)` is an anti-pattern that can lead to XSS vulnerabilities
a8b0c9b96a0417c5d8a2b9a7017eb069,6,4,5,files.javascript.rules.jquery.security.audit.prohibit-jquery-html,"JQuery's `html` function is susceptible to Cross Site Scripting (XSS) attacks. If you're just passing text, consider `text` instead. Otherwise, use a function that escapes HTML such as edX's `HtmlUtils.setHtml()`."
a991c68b491c00036e3cc70a632d8179,2,15,16,files.javascript.rules.lang.security.audit.unsafe-dynamic-method,"Using non-static data to retrieve and run functions from the object is dangerous. If the data is user-controlled, it may allow executing arbitrary code."
a991c68b491c00036e3cc70a632d8179,2,19,14,files.javascript.rules.lang.security.audit.unsafe-dynamic-method,"Using non-static data to retrieve and run functions from the object is dangerous. If the data is user-controlled, it may allow executing arbitrary code."
a991c68b491c00036e3cc70a632d8179,2,20,14,files.javascript.rules.lang.security.audit.unsafe-dynamic-method,"Using non-static data to retrieve and run functions from the object is dangerous. If the data is user-controlled, it may allow executing arbitrary code."
a9a29118f68fe134881334753174724b,0,17,9,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
a9a29118f68fe134881334753174724b,0,17,9,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `label.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
a9ba95f3b9c0253bb1565aa59f8b3e8b,2,22,9,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
a9ba95f3b9c0253bb1565aa59f8b3e8b,2,22,9,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `weatherDisplay.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
a9ba95f3b9c0253bb1565aa59f8b3e8b,2,22,36,files.javascript.rules.lang.security.html-in-template-string,"This template literal looks like HTML and has interpolated variables. These variables are not HTML-encoded by default. If the variables contain HTML tags, these may be interpreted by the browser, resulting in cross-site scripting (XSS)."
a9ba95f3b9c0253bb1565aa59f8b3e8b,3,28,9,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
a9ba95f3b9c0253bb1565aa59f8b3e8b,3,28,9,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `weatherDisplay.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
a9ba95f3b9c0253bb1565aa59f8b3e8b,3,28,36,files.javascript.rules.lang.security.html-in-template-string,"This template literal looks like HTML and has interpolated variables. These variables are not HTML-encoded by default. If the variables contain HTML tags, these may be interpreted by the browser, resulting in cross-site scripting (XSS)."
a9ba95f3b9c0253bb1565aa59f8b3e8b,3,39,5,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
a9ba95f3b9c0253bb1565aa59f8b3e8b,3,39,5,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `weatherDisplay.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
a9ba95f3b9c0253bb1565aa59f8b3e8b,3,39,32,files.javascript.rules.lang.security.html-in-template-string,"This template literal looks like HTML and has interpolated variables. These variables are not HTML-encoded by default. If the variables contain HTML tags, these may be interpreted by the browser, resulting in cross-site scripting (XSS)."
a9ba95f3b9c0253bb1565aa59f8b3e8b,4,33,9,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
a9ba95f3b9c0253bb1565aa59f8b3e8b,4,33,9,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `weatherDisplay.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
a9ba95f3b9c0253bb1565aa59f8b3e8b,4,33,36,files.javascript.rules.lang.security.html-in-template-string,"This template literal looks like HTML and has interpolated variables. These variables are not HTML-encoded by default. If the variables contain HTML tags, these may be interpreted by the browser, resulting in cross-site scripting (XSS)."
a9ba95f3b9c0253bb1565aa59f8b3e8b,4,45,5,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
a9ba95f3b9c0253bb1565aa59f8b3e8b,4,45,5,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `weatherDisplay.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
a9ba95f3b9c0253bb1565aa59f8b3e8b,4,45,32,files.javascript.rules.lang.security.html-in-template-string,"This template literal looks like HTML and has interpolated variables. These variables are not HTML-encoded by default. If the variables contain HTML tags, these may be interpreted by the browser, resulting in cross-site scripting (XSS)."
a9f76a7d4921595d665f5aca987b1ceb,1,7,15,files.javascript.rules.lang.security.html-in-template-string,"This template literal looks like HTML and has interpolated variables. These variables are not HTML-encoded by default. If the variables contain HTML tags, these may be interpreted by the browser, resulting in cross-site scripting (XSS)."
a9f76a7d4921595d665f5aca987b1ceb,1,9,5,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
a9f76a7d4921595d665f5aca987b1ceb,1,9,5,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `list.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
a9fc0f83cd6d6ecb94036452ac5c6233,3,4,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
a9fc0f83cd6d6ecb94036452ac5c6233,9,4,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
aa33f7c47ee14b6066fd788e2706ac09,2,14,13,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
aa33f7c47ee14b6066fd788e2706ac09,2,14,13,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `document.getElementById('response').innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
aa4e4c75c11908f8c6b25c8162a77741,5,5,9,files.javascript.rules.lang.security.audit.unsafe-dynamic-method,"Using non-static data to retrieve and run functions from the object is dangerous. If the data is user-controlled, it may allow executing arbitrary code."
aa4e4c75c11908f8c6b25c8162a77741,5,6,9,files.javascript.rules.lang.security.audit.unsafe-dynamic-method,"Using non-static data to retrieve and run functions from the object is dangerous. If the data is user-controlled, it may allow executing arbitrary code."
aa648ed834bc655993823125369ba266,0,56,7,files.javascript.rules.lang.security.audit.prototype-pollution.prototype-pollution-loop,"Possibility of prototype polluting function detected. By adding or modifying attributes of an object prototype, it is possible to create attributes that exist on every object, or replace critical attributes with malicious ones. This can be problematic if the software depends on existence or non-existence of certain attributes, or uses pre-defined attributes of object prototype (such as hasOwnProperty, toString or valueOf). Possible mitigations might be: freezing the object prototype, using an object without prototypes (via Object.create(null) ), blocking modifications of attributes that resolve to object prototype, using Map instead of object."
aaae3e0968eacc8ff327c54063d523a8,0,33,46,files.javascript.rules.lang.security.audit.path-traversal.path-join-resolve-traversal,"Detected possible user input going into a `path.join` or `path.resolve` function. This could possibly lead to a path traversal vulnerability,  where the attacker can access arbitrary files stored in the file system. Instead, be sure to sanitize or validate user input first."
aaae3e0968eacc8ff327c54063d523a8,0,35,20,files.javascript.rules.lang.security.audit.detect-non-literal-fs-filename,"Detected that function argument `message` has entered the fs module. An attacker could potentially control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are validated."
aaae3e0968eacc8ff327c54063d523a8,1,33,46,files.javascript.rules.lang.security.audit.path-traversal.path-join-resolve-traversal,"Detected possible user input going into a `path.join` or `path.resolve` function. This could possibly lead to a path traversal vulnerability,  where the attacker can access arbitrary files stored in the file system. Instead, be sure to sanitize or validate user input first."
aaae3e0968eacc8ff327c54063d523a8,1,35,20,files.javascript.rules.lang.security.audit.detect-non-literal-fs-filename,"Detected that function argument `message` has entered the fs module. An attacker could potentially control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are validated."
aaaf0b510ee4954bd02b63e6a892a8a5,9,6,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
abc67deb547bc4f5686c8521ce2d8207,2,17,13,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
abc67deb547bc4f5686c8521ce2d8207,2,17,13,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `productCard.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
abc67deb547bc4f5686c8521ce2d8207,2,17,37,files.javascript.rules.lang.security.html-in-template-string,"This template literal looks like HTML and has interpolated variables. These variables are not HTML-encoded by default. If the variables contain HTML tags, these may be interpreted by the browser, resulting in cross-site scripting (XSS)."
abff7313e6169343dbb031a20174438b,3,12,21,files.javascript.rules.lang.security.audit.unsafe-formatstring,"Detected string concatenation with a non-literal variable in a util.format / console.log function. If an attacker injects a format specifier in the string, it will forge the log message. Try to use constant values for the format string."
abff7313e6169343dbb031a20174438b,3,14,23,files.javascript.rules.lang.security.audit.unsafe-formatstring,"Detected string concatenation with a non-literal variable in a util.format / console.log function. If an attacker injects a format specifier in the string, it will forge the log message. Try to use constant values for the format string."
ac2303cb22460848c7d1dd1a18423bca,2,18,49,files.javascript.rules.browser.security.eval-detected,"Detected the use of eval(). eval() can be dangerous if used to evaluate dynamic content. If this content can be input from outside the program, this may be a code injection vulnerability. Ensure evaluated content is not definable by external sources."
ac943bb7ef5d52caa19e766cf394486d,9,9,25,files.javascript.rules.jquery.security.audit.jquery-insecure-method,User controlled data in a jQuery's `.append(...)` is an anti-pattern that can lead to XSS vulnerabilities
acee21991c16d3e65d313e2567a33c5c,24,3,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
ad1162092d8da8960e55db575b723b3c,1,6,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
ad13fe100f71dfb0c21fb051e59e1eea,7,1,1,files.javascript.rules.browser.security.insufficient-postmessage-origin-validation,No validation of origin is done by the addEventListener API. It may be possible to exploit this flaw to perform Cross Origin attacks such as Cross-Site Scripting(XSS).
addb7e7a955780a58e9764c6bd1f0853,0,5,5,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
addb7e7a955780a58e9764c6bd1f0853,0,5,5,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `pageStyle.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
addb7e7a955780a58e9764c6bd1f0853,0,11,9,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
addb7e7a955780a58e9764c6bd1f0853,0,11,9,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `styleEditor.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
addb7e7a955780a58e9764c6bd1f0853,0,20,13,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
addb7e7a955780a58e9764c6bd1f0853,0,20,13,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `styleEditor.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
addb7e7a955780a58e9764c6bd1f0853,0,21,13,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
addb7e7a955780a58e9764c6bd1f0853,0,21,13,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `pageStyle.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
adf9c1a24add35e84401b1c3e7c160d9,10,2,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
adf9c1a24add35e84401b1c3e7c160d9,8,2,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
ae2cc48cc9c931c7c4e2346299ae3f8b,1,4,26,files.javascript.rules.lang.security.html-in-template-string,"This template literal looks like HTML and has interpolated variables. These variables are not HTML-encoded by default. If the variables contain HTML tags, these may be interpreted by the browser, resulting in cross-site scripting (XSS)."
ae2cc48cc9c931c7c4e2346299ae3f8b,1,5,7,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
ae2cc48cc9c931c7c4e2346299ae3f8b,1,5,7,files.javascript.rules.browser.security.insecure-innerhtml,"User controlled data in a `document.getElementById(""soundcloud-widget-container"").innerHTML` is an anti-pattern that can lead to XSS vulnerabilities"
ae8f3dfb6e017574fdc6d90e4b060cc8,2,5,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
aecffeee563e1d90ffa3643072447baf,1,8,5,files.javascript.rules.jquery.security.audit.jquery-insecure-method,User controlled data in a jQuery's `.append(...)` is an anti-pattern that can lead to XSS vulnerabilities
aecffeee563e1d90ffa3643072447baf,1,12,7,files.javascript.rules.jquery.security.audit.jquery-insecure-method,User controlled data in a jQuery's `.append(...)` is an anti-pattern that can lead to XSS vulnerabilities
aedaae61ec07a2c542cec911c410b7ef,1,46,31,files.javascript.rules.lang.security.audit.detect-non-literal-fs-filename,"Detected that function argument `req` has entered the fs module. An attacker could potentially control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are validated."
aedaae61ec07a2c542cec911c410b7ef,6,62,44,files.javascript.rules.lang.security.audit.detect-non-literal-fs-filename,"Detected that function argument `filePath` has entered the fs module. An attacker could potentially control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are validated."
af331b429afef154b147723fc14939f0,1,4,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
af6e1069d702d3a3995b553f6eede23c,0,13,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
af94e89d7cac09543ebcf0f5e798146a,15,4,36,files.javascript.rules.lang.security.audit.detect-non-literal-fs-filename,"Detected that function argument `filePath` has entered the fs module. An attacker could potentially control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are validated."
af94e89d7cac09543ebcf0f5e798146a,2,1,25,files.javascript.rules.lang.security.detect-insecure-websocket,Insecure WebSocket Detected. WebSocket Secure (wss) should be used for all WebSocket connections.
afd54b38b6d78129e122683b498468b1,2,36,9,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
afd54b38b6d78129e122683b498468b1,2,36,9,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `savedDataDiv.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
afe3c42d69ff1ece33b9dcb1c6d0ad95,2,8,9,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
afe3c42d69ff1ece33b9dcb1c6d0ad95,2,8,9,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `questionDiv.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
afe3c42d69ff1ece33b9dcb1c6d0ad95,2,11,9,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
afe3c42d69ff1ece33b9dcb1c6d0ad95,2,11,9,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `questionDiv.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
afeb0829fdd99979dbfcfabd8cc5e4bd,29,4,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
affcc1a5fac57212ccc171268d16d853,10,4,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
affcc1a5fac57212ccc171268d16d853,6,4,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
affd386e621fd5bb3d9151462b5177ea,1,27,7,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
affd386e621fd5bb3d9151462b5177ea,1,27,7,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `document.querySelector('tbody').innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
b02ff09c235603692f778da4f5bdf700,0,26,21,files.javascript.rules.lang.security.audit.unsafe-formatstring,"Detected string concatenation with a non-literal variable in a util.format / console.log function. If an attacker injects a format specifier in the string, it will forge the log message. Try to use constant values for the format string."
b1b3a29288c5fe1855281a033c207dc9,1,20,3,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
b1b3a29288c5fe1855281a033c207dc9,1,20,3,files.javascript.rules.browser.security.insecure-innerhtml,"User controlled data in a `document.getElementById(""guthaben"").innerHTML` is an anti-pattern that can lead to XSS vulnerabilities"
b1b3a29288c5fe1855281a033c207dc9,1,37,2,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
b1b3a29288c5fe1855281a033c207dc9,1,37,2,files.javascript.rules.browser.security.insecure-innerhtml,"User controlled data in a `document.getElementById(""guthaben"").innerHTML` is an anti-pattern that can lead to XSS vulnerabilities"
b1b3a29288c5fe1855281a033c207dc9,1,51,3,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
b1b3a29288c5fe1855281a033c207dc9,1,51,3,files.javascript.rules.browser.security.insecure-innerhtml,"User controlled data in a `document.getElementById(""kredit"").innerHTML` is an anti-pattern that can lead to XSS vulnerabilities"
b1b3a29288c5fe1855281a033c207dc9,1,52,3,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
b1b3a29288c5fe1855281a033c207dc9,1,52,3,files.javascript.rules.browser.security.insecure-innerhtml,"User controlled data in a `document.getElementById(""zinsen"").innerHTML` is an anti-pattern that can lead to XSS vulnerabilities"
b1b3a29288c5fe1855281a033c207dc9,1,53,3,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
b1b3a29288c5fe1855281a033c207dc9,1,53,3,files.javascript.rules.browser.security.insecure-innerhtml,"User controlled data in a `document.getElementById(""guthaben"").innerHTML` is an anti-pattern that can lead to XSS vulnerabilities"
b1ba9178cca8108231783d990351e442,1,4,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
b1e40cb4957814971c7bdb1fda6e0977,5,3,5,files.javascript.rules.jquery.security.audit.jquery-insecure-selector,User controlled data in a `$(...)` is an anti-pattern that can lead to XSS vulnerabilities
b22ffab5707cca1f73d9c619a3b77307,5,32,5,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
b22ffab5707cca1f73d9c619a3b77307,5,32,5,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `itemElement.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
b22ffab5707cca1f73d9c619a3b77307,5,32,29,files.javascript.rules.lang.security.html-in-template-string,"This template literal looks like HTML and has interpolated variables. These variables are not HTML-encoded by default. If the variables contain HTML tags, these may be interpreted by the browser, resulting in cross-site scripting (XSS)."
b236588e3a779ca75e82e920e9fac8a8,2,14,9,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
b236588e3a779ca75e82e920e9fac8a8,2,14,9,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `block.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
b236588e3a779ca75e82e920e9fac8a8,2,14,27,files.javascript.rules.lang.security.html-in-template-string,"This template literal looks like HTML and has interpolated variables. These variables are not HTML-encoded by default. If the variables contain HTML tags, these may be interpreted by the browser, resulting in cross-site scripting (XSS)."
b285f1eb418a7a280f6c60101180974b,1,6,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
b29088d766deb650317a9faa4a184cb9,2,23,3,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
b29088d766deb650317a9faa4a184cb9,2,23,3,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `div.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
b2c63faebecf236de1f11da9dc8e06de,11,1,11,files.javascript.rules.lang.security.audit.unsafe-dynamic-method,"Using non-static data to retrieve and run functions from the object is dangerous. If the data is user-controlled, it may allow executing arbitrary code."
b2c63faebecf236de1f11da9dc8e06de,11,4,24,files.javascript.rules.lang.security.audit.unsafe-dynamic-method,"Using non-static data to retrieve and run functions from the object is dangerous. If the data is user-controlled, it may allow executing arbitrary code."
b2c63faebecf236de1f11da9dc8e06de,11,6,6,files.javascript.rules.lang.security.audit.unsafe-dynamic-method,"Using non-static data to retrieve and run functions from the object is dangerous. If the data is user-controlled, it may allow executing arbitrary code."
b2c63faebecf236de1f11da9dc8e06de,11,7,8,files.javascript.rules.lang.security.audit.unsafe-dynamic-method,"Using non-static data to retrieve and run functions from the object is dangerous. If the data is user-controlled, it may allow executing arbitrary code."
b2c63faebecf236de1f11da9dc8e06de,11,12,26,files.javascript.rules.lang.security.audit.unsafe-dynamic-method,"Using non-static data to retrieve and run functions from the object is dangerous. If the data is user-controlled, it may allow executing arbitrary code."
b2c63faebecf236de1f11da9dc8e06de,11,14,6,files.javascript.rules.lang.security.audit.unsafe-dynamic-method,"Using non-static data to retrieve and run functions from the object is dangerous. If the data is user-controlled, it may allow executing arbitrary code."
b2c63faebecf236de1f11da9dc8e06de,11,15,8,files.javascript.rules.lang.security.audit.unsafe-dynamic-method,"Using non-static data to retrieve and run functions from the object is dangerous. If the data is user-controlled, it may allow executing arbitrary code."
b2c63faebecf236de1f11da9dc8e06de,11,20,22,files.javascript.rules.lang.security.audit.unsafe-dynamic-method,"Using non-static data to retrieve and run functions from the object is dangerous. If the data is user-controlled, it may allow executing arbitrary code."
b2c63faebecf236de1f11da9dc8e06de,11,23,29,files.javascript.rules.lang.security.audit.unsafe-dynamic-method,"Using non-static data to retrieve and run functions from the object is dangerous. If the data is user-controlled, it may allow executing arbitrary code."
b310f012f33f60f6a56b0b6531297933,0,13,23,files.javascript.rules.lang.security.audit.unsafe-formatstring,"Detected string concatenation with a non-literal variable in a util.format / console.log function. If an attacker injects a format specifier in the string, it will forge the log message. Try to use constant values for the format string."
b390c84ac116280689fe44261acacc1c,0,6,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
b390c84ac116280689fe44261acacc1c,5,2,10,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
b3de14a1c2dee1441c9db58148c44743,2,2,5,files.javascript.rules.lang.security.audit.detect-non-literal-require,"Detected the use of require(variable). Calling require with a non-literal argument might allow an attacker to load and run arbitrary code, or access arbitrary files."
b3de14a1c2dee1441c9db58148c44743,2,3,5,files.javascript.rules.lang.security.audit.detect-non-literal-require,"Detected the use of require(variable). Calling require with a non-literal argument might allow an attacker to load and run arbitrary code, or access arbitrary files."
b3de14a1c2dee1441c9db58148c44743,4,2,5,files.javascript.rules.lang.security.audit.detect-non-literal-require,"Detected the use of require(variable). Calling require with a non-literal argument might allow an attacker to load and run arbitrary code, or access arbitrary files."
b3de14a1c2dee1441c9db58148c44743,5,2,5,files.javascript.rules.lang.security.audit.detect-non-literal-require,"Detected the use of require(variable). Calling require with a non-literal argument might allow an attacker to load and run arbitrary code, or access arbitrary files."
b3de14a1c2dee1441c9db58148c44743,7,2,5,files.javascript.rules.lang.security.audit.detect-non-literal-require,"Detected the use of require(variable). Calling require with a non-literal argument might allow an attacker to load and run arbitrary code, or access arbitrary files."
b42839f25507efa7fc381ed2544e811d,0,18,12,files.javascript.rules.browser.security.eval-detected,"Detected the use of eval(). eval() can be dangerous if used to evaluate dynamic content. If this content can be input from outside the program, this may be a code injection vulnerability. Ensure evaluated content is not definable by external sources."
b42839f25507efa7fc381ed2544e811d,0,37,12,files.javascript.rules.browser.security.eval-detected,"Detected the use of eval(). eval() can be dangerous if used to evaluate dynamic content. If this content can be input from outside the program, this may be a code injection vulnerability. Ensure evaluated content is not definable by external sources."
b4441e42e266667e4d30efdb7f7c091d,12,19,3,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
b4441e42e266667e4d30efdb7f7c091d,12,19,3,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `tagContainer.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
b4cf2e26d8ed3728fc6e04b91f440534,0,23,19,files.javascript.rules.lang.security.audit.unsafe-formatstring,"Detected string concatenation with a non-literal variable in a util.format / console.log function. If an attacker injects a format specifier in the string, it will forge the log message. Try to use constant values for the format string."
b4cf2e26d8ed3728fc6e04b91f440534,0,34,21,files.javascript.rules.lang.security.audit.unsafe-formatstring,"Detected string concatenation with a non-literal variable in a util.format / console.log function. If an attacker injects a format specifier in the string, it will forge the log message. Try to use constant values for the format string."
b4e3827ce657626183ffda10443eadae,0,8,5,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
b4e3827ce657626183ffda10443eadae,0,8,5,files.javascript.rules.browser.security.insecure-innerhtml,"User controlled data in a `document.getElementById(""output_content"").innerHTML` is an anti-pattern that can lead to XSS vulnerabilities"
b589427a3cc15c17161b3fee2f659edc,0,3,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
b589427a3cc15c17161b3fee2f659edc,0,62,3,files.javascript.rules.express.security.audit.remote-property-injection,"Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype. Use literal values for object properties."
b589427a3cc15c17161b3fee2f659edc,0,96,3,files.javascript.rules.express.security.audit.remote-property-injection,"Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype. Use literal values for object properties."
b5ec0449208bff4f61e0731d42c9c8c2,3,35,5,files.javascript.rules.express.security.audit.remote-property-injection,"Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype. Use literal values for object properties."
b6e6b88ccfb2072a46883be821646a75,11,38,18,files.javascript.rules.lang.security.html-in-template-string,"This template literal looks like HTML and has interpolated variables. These variables are not HTML-encoded by default. If the variables contain HTML tags, these may be interpreted by the browser, resulting in cross-site scripting (XSS)."
b6e6b88ccfb2072a46883be821646a75,12,2,24,files.javascript.rules.lang.security.html-in-template-string,"This template literal looks like HTML and has interpolated variables. These variables are not HTML-encoded by default. If the variables contain HTML tags, these may be interpreted by the browser, resulting in cross-site scripting (XSS)."
b6e6b88ccfb2072a46883be821646a75,2,2,20,files.javascript.rules.lang.security.html-in-template-string,"This template literal looks like HTML and has interpolated variables. These variables are not HTML-encoded by default. If the variables contain HTML tags, these may be interpreted by the browser, resulting in cross-site scripting (XSS)."
b71bb8e276728536c7af781abe9d4e21,0,8,3,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
b71bb8e276728536c7af781abe9d4e21,0,8,3,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `paintingDiv.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
b71bb8e276728536c7af781abe9d4e21,2,8,3,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
b71bb8e276728536c7af781abe9d4e21,2,8,3,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `paintingDiv.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
b77afe58b8fbd55c8c7594dfb735c3a8,2,3,21,files.javascript.rules.lang.security.html-in-template-string,"This template literal looks like HTML and has interpolated variables. These variables are not HTML-encoded by default. If the variables contain HTML tags, these may be interpreted by the browser, resulting in cross-site scripting (XSS)."
b7919a9d5527d878c29432b98929b875,0,3,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
b7cecdbd19e4e592039f45b98302cce7,0,25,3,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
b7cecdbd19e4e592039f45b98302cce7,0,25,3,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `textElement.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
b7e96679add708de4314e9bc8c694c9e,2,20,9,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
b7e96679add708de4314e9bc8c694c9e,2,20,9,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `block.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
b7e96679add708de4314e9bc8c694c9e,2,20,27,files.javascript.rules.lang.security.html-in-template-string,"This template literal looks like HTML and has interpolated variables. These variables are not HTML-encoded by default. If the variables contain HTML tags, these may be interpreted by the browser, resulting in cross-site scripting (XSS)."
b80abb608f0f63fc5bf0b3fdf219381c,2,2,5,files.javascript.rules.lang.security.audit.detect-non-literal-require,"Detected the use of require(variable). Calling require with a non-literal argument might allow an attacker to load and run arbitrary code, or access arbitrary files."
b8d017b1c861ed6f2e41d3df1409ad09,1,2,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
b8d017b1c861ed6f2e41d3df1409ad09,3,2,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
b8d017b1c861ed6f2e41d3df1409ad09,3,25,13,files.javascript.rules.express.security.audit.xss.direct-response-write,"Detected directly writing to a Response object from user-defined input. This bypasses any HTML escaping and may expose your application to a Cross-Site-scripting (XSS) vulnerability. Instead, use 'resp.render()' to render safely escaped HTML."
b918f50fa0f7ccf1624668936ee5fede,1,14,25,files.javascript.rules.browser.security.eval-detected,"Detected the use of eval(). eval() can be dangerous if used to evaluate dynamic content. If this content can be input from outside the program, this may be a code injection vulnerability. Ensure evaluated content is not definable by external sources."
b923e5ccb5bc5083b8d447bbb6fab980,2,2,5,files.javascript.rules.lang.security.audit.detect-non-literal-require,"Detected the use of require(variable). Calling require with a non-literal argument might allow an attacker to load and run arbitrary code, or access arbitrary files."
b93177e42f187df7909de994279011ad,0,19,21,files.javascript.rules.lang.security.audit.unsafe-formatstring,"Detected string concatenation with a non-literal variable in a util.format / console.log function. If an attacker injects a format specifier in the string, it will forge the log message. Try to use constant values for the format string."
b93177e42f187df7909de994279011ad,0,44,17,files.javascript.rules.lang.security.audit.unsafe-formatstring,"Detected string concatenation with a non-literal variable in a util.format / console.log function. If an attacker injects a format specifier in the string, it will forge the log message. Try to use constant values for the format string."
b93177e42f187df7909de994279011ad,0,49,17,files.javascript.rules.lang.security.audit.unsafe-formatstring,"Detected string concatenation with a non-literal variable in a util.format / console.log function. If an attacker injects a format specifier in the string, it will forge the log message. Try to use constant values for the format string."
b96bbb450f5e5aa8be50347d32220512,0,3,5,files.javascript.rules.lang.security.audit.detect-non-literal-require,"Detected the use of require(variable). Calling require with a non-literal argument might allow an attacker to load and run arbitrary code, or access arbitrary files."
b96bbb450f5e5aa8be50347d32220512,0,5,5,files.javascript.rules.lang.security.audit.detect-non-literal-require,"Detected the use of require(variable). Calling require with a non-literal argument might allow an attacker to load and run arbitrary code, or access arbitrary files."
b96bbb450f5e5aa8be50347d32220512,0,7,5,files.javascript.rules.lang.security.audit.detect-non-literal-require,"Detected the use of require(variable). Calling require with a non-literal argument might allow an attacker to load and run arbitrary code, or access arbitrary files."
b9fa5f53dceb95d155367bff3be4e2f0,0,23,39,files.javascript.rules.lang.security.audit.unsafe-formatstring,"Detected string concatenation with a non-literal variable in a util.format / console.log function. If an attacker injects a format specifier in the string, it will forge the log message. Try to use constant values for the format string."
b9fa5f53dceb95d155367bff3be4e2f0,1,23,39,files.javascript.rules.lang.security.audit.unsafe-formatstring,"Detected string concatenation with a non-literal variable in a util.format / console.log function. If an attacker injects a format specifier in the string, it will forge the log message. Try to use constant values for the format string."
ba079b94d6c9ee4a89a75e42cc31c289,2,6,3,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
ba079b94d6c9ee4a89a75e42cc31c289,2,6,3,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `hidden.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
bb6ece014a39a6e6c4d2e415680b09dd,5,13,57,files.javascript.rules.lang.security.audit.path-traversal.path-join-resolve-traversal,"Detected possible user input going into a `path.join` or `path.resolve` function. This could possibly lead to a path traversal vulnerability,  where the attacker can access arbitrary files stored in the file system. Instead, be sure to sanitize or validate user input first."
bb6ece014a39a6e6c4d2e415680b09dd,7,23,27,files.javascript.rules.lang.security.audit.path-traversal.path-join-resolve-traversal,"Detected possible user input going into a `path.join` or `path.resolve` function. This could possibly lead to a path traversal vulnerability,  where the attacker can access arbitrary files stored in the file system. Instead, be sure to sanitize or validate user input first."
bbc446e063a3a4f996246aad37408ef8,0,6,5,files.javascript.rules.browser.security.wildcard-postmessage-configuration,"The target origin of the window.postMessage() API is set to ""*"". This could allow for information disclosure due to the possibility of any origin allowed to receive the message."
bbc446e063a3a4f996246aad37408ef8,1,3,1,files.javascript.rules.browser.security.insufficient-postmessage-origin-validation,No validation of origin is done by the addEventListener API. It may be possible to exploit this flaw to perform Cross Origin attacks such as Cross-Site Scripting(XSS).
bc155fd7ab855cba18694db5e35b09f7,2,6,39,files.javascript.rules.lang.security.audit.path-traversal.path-join-resolve-traversal,"Detected possible user input going into a `path.join` or `path.resolve` function. This could possibly lead to a path traversal vulnerability,  where the attacker can access arbitrary files stored in the file system. Instead, be sure to sanitize or validate user input first."
bc155fd7ab855cba18694db5e35b09f7,2,31,15,files.javascript.rules.lang.security.audit.detect-non-literal-fs-filename,"Detected that function argument `req` has entered the fs module. An attacker could potentially control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are validated."
bc2e800b1b6d4f2f5eaec1f5d793dc7d,3,14,48,files.javascript.rules.lang.security.audit.path-traversal.path-join-resolve-traversal,"Detected possible user input going into a `path.join` or `path.resolve` function. This could possibly lead to a path traversal vulnerability,  where the attacker can access arbitrary files stored in the file system. Instead, be sure to sanitize or validate user input first."
bc2e800b1b6d4f2f5eaec1f5d793dc7d,3,15,42,files.javascript.rules.lang.security.audit.detect-non-literal-fs-filename,"Detected that function argument `fileName` has entered the fs module. An attacker could potentially control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are validated."
bc2e800b1b6d4f2f5eaec1f5d793dc7d,3,34,46,files.javascript.rules.lang.security.audit.path-traversal.path-join-resolve-traversal,"Detected possible user input going into a `path.join` or `path.resolve` function. This could possibly lead to a path traversal vulnerability,  where the attacker can access arbitrary files stored in the file system. Instead, be sure to sanitize or validate user input first."
bc2e800b1b6d4f2f5eaec1f5d793dc7d,3,35,40,files.javascript.rules.lang.security.audit.detect-non-literal-fs-filename,"Detected that function argument `id` has entered the fs module. An attacker could potentially control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are validated."
bc4d236fb2dc77a872dd8db10138d8d8,3,2,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
bcc49506e0858a152b6b986376f837ca,0,6,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
bcc49506e0858a152b6b986376f837ca,0,47,19,files.javascript.rules.lang.security.audit.unsafe-formatstring,"Detected string concatenation with a non-literal variable in a util.format / console.log function. If an attacker injects a format specifier in the string, it will forge the log message. Try to use constant values for the format string."
bd688ece8539aa7bd2d70f80f62be44e,0,7,3,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
bd688ece8539aa7bd2d70f80f62be44e,0,7,3,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `input.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
be5543b16b85e2b4acff3cd25d26c5e5,0,7,33,files.javascript.rules.browser.security.eval-detected,"Detected the use of eval(). eval() can be dangerous if used to evaluate dynamic content. If this content can be input from outside the program, this may be a code injection vulnerability. Ensure evaluated content is not definable by external sources."
be60a4442fce400ae3d6c02ee42e9093,0,3,3,files.javascript.rules.jquery.security.audit.jquery-insecure-method,User controlled data in a jQuery's `.append(...)` is an anti-pattern that can lead to XSS vulnerabilities
bead670351724ca454de4750a741985a,3,14,31,files.javascript.rules.jsonwebtoken.security.hardcoded-jwt-secret,"A hard-coded credential was detected. It is not recommended to store credentials in source-code, as this risks secrets being leaked and used by either an internal or external malicious adversary. It is recommended to use environment variables to securely provide credentials or retrieve credentials from a secure vault or HSM (Hardware Security Module)."
bed4a523ff7bf85bc6c672e332bab112,0,10,9,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
bed4a523ff7bf85bc6c672e332bab112,0,10,9,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `document.querySelector('.out-1').innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
bed4a523ff7bf85bc6c672e332bab112,1,7,9,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
bed4a523ff7bf85bc6c672e332bab112,1,7,9,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `document.querySelector('.out-1').innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
bee3d0ff8326b248836a177af631a709,16,3,20,files.javascript.rules.lang.security.audit.unsafe-dynamic-method,"Using non-static data to retrieve and run functions from the object is dangerous. If the data is user-controlled, it may allow executing arbitrary code."
bee3d0ff8326b248836a177af631a709,9,3,20,files.javascript.rules.lang.security.audit.unsafe-dynamic-method,"Using non-static data to retrieve and run functions from the object is dangerous. If the data is user-controlled, it may allow executing arbitrary code."
bf0c49ae9820207e540f0a6b140d55e2,2,4,5,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
bf0c49ae9820207e540f0a6b140d55e2,2,4,5,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `preview.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
bf3b7308d54fc46f85e4815eb55d88b3,25,7,64,files.javascript.rules.lang.security.audit.unsafe-formatstring,"Detected string concatenation with a non-literal variable in a util.format / console.log function. If an attacker injects a format specifier in the string, it will forge the log message. Try to use constant values for the format string."
bf545b59f8a49cceb088cdee47b0e033,0,13,11,files.javascript.rules.puppeteer.security.audit.puppeteer-goto-injection,If unverified user data can reach the `goto` method it can result in Server-Side Request Forgery vulnerabilities
bf8130231a05a48b9b708c2f00619dd2,0,2,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
bfbda10cf9a5a2d9ac8b7e10dd528adc,0,76,5,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
bfbda10cf9a5a2d9ac8b7e10dd528adc,0,76,5,files.javascript.rules.browser.security.insecure-innerhtml,"User controlled data in a `document.getElementById(""linesList"").innerHTML` is an anti-pattern that can lead to XSS vulnerabilities"
bffbdd1353ab5eb57861cac1ecd3ba46,0,11,5,files.javascript.rules.jquery.security.audit.prohibit-jquery-html,"JQuery's `html` function is susceptible to Cross Site Scripting (XSS) attacks. If you're just passing text, consider `text` instead. Otherwise, use a function that escapes HTML such as edX's `HtmlUtils.setHtml()`."
c081f9f1c3bbbe3b92c3a81ec5c949c5,2,96,3,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
c081f9f1c3bbbe3b92c3a81ec5c949c5,2,96,3,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `scoreDisplay.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
c081f9f1c3bbbe3b92c3a81ec5c949c5,2,126,2,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
c081f9f1c3bbbe3b92c3a81ec5c949c5,2,126,2,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `scoreDisplay.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
c0ac2c4af4689cfb975d4de57dcef566,3,8,17,files.javascript.rules.jquery.security.audit.jquery-insecure-method,User controlled data in a jQuery's `.html(...)` is an anti-pattern that can lead to XSS vulnerabilities
c0ac2c4af4689cfb975d4de57dcef566,3,8,17,files.javascript.rules.jquery.security.audit.prohibit-jquery-html,"JQuery's `html` function is susceptible to Cross Site Scripting (XSS) attacks. If you're just passing text, consider `text` instead. Otherwise, use a function that escapes HTML such as edX's `HtmlUtils.setHtml()`."
c0ac2c4af4689cfb975d4de57dcef566,6,15,25,files.javascript.rules.jquery.security.audit.jquery-insecure-method,User controlled data in a jQuery's `.html(...)` is an anti-pattern that can lead to XSS vulnerabilities
c0ac2c4af4689cfb975d4de57dcef566,6,15,25,files.javascript.rules.jquery.security.audit.prohibit-jquery-html,"JQuery's `html` function is susceptible to Cross Site Scripting (XSS) attacks. If you're just passing text, consider `text` instead. Otherwise, use a function that escapes HTML such as edX's `HtmlUtils.setHtml()`."
c0f2a3e041028ffc7bf119d5ab263d58,2,22,33,files.javascript.rules.lang.security.audit.detect-redos,"Detected the use of a regular expression `(?:[a-z0-9+!#$%&'*+/=?^_`{|}~-]+(?:\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|""(?:[\x01-\x08\x0b\x0c\x0e-\x1f\x21\x23-\x5b\x5d-\x7f]|\\[\x01-\x09\x0b\x0c\x0e-\x7f])*"")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\x01-\x08\x0b\x0c\x0e-\x1f\x21-\x5a\x53-\x7f]|\\[\x01-\x09\x0b\x0c\x0e-\x7f])+)\])` which appears to be vulnerable to a Regular expression Denial-of-Service (ReDoS). For this reason, it is recommended to review the regex and ensure it is not vulnerable to catastrophic backtracking, and if possible use a library which offers default safety against ReDoS vulnerabilities."
c1243c7b28c33d861c29024e83b4e127,1,14,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
c19290f88f219e4bc2928620b18c079a,4,7,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
c1f7a935afc74e8bb196193bcb98d901,2,5,5,files.javascript.rules.lang.security.audit.detect-non-literal-require,"Detected the use of require(variable). Calling require with a non-literal argument might allow an attacker to load and run arbitrary code, or access arbitrary files."
c2265f7f2451fd28f2561b6563242647,3,2,3,files.javascript.rules.browser.security.insufficient-postmessage-origin-validation,No validation of origin is done by the addEventListener API. It may be possible to exploit this flaw to perform Cross Origin attacks such as Cross-Site Scripting(XSS).
c29f94807c37533aa440d2a2374fe787,11,5,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
c29f94807c37533aa440d2a2374fe787,15,6,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
c2efb8336afe807998ee41c3dd261456,3,4,13,files.javascript.rules.browser.security.eval-detected,"Detected the use of eval(). eval() can be dangerous if used to evaluate dynamic content. If this content can be input from outside the program, this may be a code injection vulnerability. Ensure evaluated content is not definable by external sources."
c30e21f4f2fca973efd88f0cf12ad268,18,26,6,files.javascript.rules.lang.security.detect-insecure-websocket,Insecure WebSocket Detected. WebSocket Secure (wss) should be used for all WebSocket connections.
c30e21f4f2fca973efd88f0cf12ad268,22,16,27,files.javascript.rules.lang.security.detect-insecure-websocket,Insecure WebSocket Detected. WebSocket Secure (wss) should be used for all WebSocket connections.
c30e21f4f2fca973efd88f0cf12ad268,27,28,29,files.javascript.rules.lang.security.detect-insecure-websocket,Insecure WebSocket Detected. WebSocket Secure (wss) should be used for all WebSocket connections.
c380628bc5105db96ddb06268744a743,3,2,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
c43a643c632c68ae7a8e287e2a3b80b3,2,9,3,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
c43a643c632c68ae7a8e287e2a3b80b3,2,9,3,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `daysElement.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
c43a643c632c68ae7a8e287e2a3b80b3,2,10,3,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
c43a643c632c68ae7a8e287e2a3b80b3,2,10,3,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `hoursElement.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
c43a643c632c68ae7a8e287e2a3b80b3,2,11,3,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
c43a643c632c68ae7a8e287e2a3b80b3,2,11,3,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `minutesElement.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
c43a643c632c68ae7a8e287e2a3b80b3,2,12,3,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
c43a643c632c68ae7a8e287e2a3b80b3,2,12,3,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `secondsElement.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
c4566ca115c5a45cf43d96c01de5a118,0,12,17,files.javascript.rules.lang.security.html-in-template-string,"This template literal looks like HTML and has interpolated variables. These variables are not HTML-encoded by default. If the variables contain HTML tags, these may be interpreted by the browser, resulting in cross-site scripting (XSS)."
c486f1cdd8c95b1cdf8b5a32c22e95bf,4,5,11,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
c49a8d724b8ebd3f5ad33930351184a1,0,14,3,files.javascript.rules.lang.security.audit.unsafe-dynamic-method,"Using non-static data to retrieve and run functions from the object is dangerous. If the data is user-controlled, it may allow executing arbitrary code."
c49a8d724b8ebd3f5ad33930351184a1,1,17,3,files.javascript.rules.lang.security.audit.unsafe-dynamic-method,"Using non-static data to retrieve and run functions from the object is dangerous. If the data is user-controlled, it may allow executing arbitrary code."
c4b9f33222e9b90d92264cdbd0911576,6,9,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
c56861fb8b5278284ebcc0b317ea4be2,0,4,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
c5d3e3c5c1cace8615214182538135ab,3,19,5,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
c5d3e3c5c1cace8615214182538135ab,3,19,5,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `progressBarFilled.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
c5d3e3c5c1cace8615214182538135ab,3,22,5,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
c5d3e3c5c1cace8615214182538135ab,3,22,5,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `progressBarFilled.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
c5d3e3c5c1cace8615214182538135ab,4,19,5,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
c5d3e3c5c1cace8615214182538135ab,4,19,5,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `progressBarFilled.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
c5d3e3c5c1cace8615214182538135ab,4,22,5,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
c5d3e3c5c1cace8615214182538135ab,4,22,5,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `progressBarFilled.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
c5d3e3c5c1cace8615214182538135ab,5,16,5,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
c5d3e3c5c1cace8615214182538135ab,5,16,5,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `progressBarFilled.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
c5d3e3c5c1cace8615214182538135ab,5,19,5,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
c5d3e3c5c1cace8615214182538135ab,5,19,5,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `progressBarFilled.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
c693f30efacbc5fe8828bda7fa6b21ce,0,18,17,files.javascript.rules.lang.security.audit.unsafe-formatstring,"Detected string concatenation with a non-literal variable in a util.format / console.log function. If an attacker injects a format specifier in the string, it will forge the log message. Try to use constant values for the format string."
c693f30efacbc5fe8828bda7fa6b21ce,0,42,9,files.javascript.rules.lang.security.audit.unsafe-formatstring,"Detected string concatenation with a non-literal variable in a util.format / console.log function. If an attacker injects a format specifier in the string, it will forge the log message. Try to use constant values for the format string."
c693f30efacbc5fe8828bda7fa6b21ce,0,47,9,files.javascript.rules.lang.security.audit.unsafe-formatstring,"Detected string concatenation with a non-literal variable in a util.format / console.log function. If an attacker injects a format specifier in the string, it will forge the log message. Try to use constant values for the format string."
c69cefc4dd8bb1cd1264182f674a0424,6,5,7,files.javascript.rules.browser.security.eval-detected,"Detected the use of eval(). eval() can be dangerous if used to evaluate dynamic content. If this content can be input from outside the program, this may be a code injection vulnerability. Ensure evaluated content is not definable by external sources."
c6faf8c4a88fdd28c2d0f3b62b5be94b,1,43,4,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
c6faf8c4a88fdd28c2d0f3b62b5be94b,1,43,4,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `addressList.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
c751ecd9cf46d13832d206b074b08db2,2,14,7,files.javascript.rules.jquery.security.audit.jquery-insecure-selector,User controlled data in a `$(...)` is an anti-pattern that can lead to XSS vulnerabilities
c7a5785cf6c3ba5c0cd7221b8f30323e,6,2,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
c7a5785cf6c3ba5c0cd7221b8f30323e,7,2,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
c7da536986d92a9a18085596ff386de8,2,27,9,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
c7da536986d92a9a18085596ff386de8,2,27,9,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `slot1.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
c7da536986d92a9a18085596ff386de8,2,28,9,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
c7da536986d92a9a18085596ff386de8,2,28,9,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `slot2.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
c7da536986d92a9a18085596ff386de8,2,29,9,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
c7da536986d92a9a18085596ff386de8,2,29,9,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `slot3.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
c7df39a71e2db7c27996724f813b03eb,1,45,15,files.javascript.rules.lang.security.audit.detect-non-literal-regexp,"RegExp() called with a `pattern` function argument, this might allow an attacker to cause a Regular Expression Denial-of-Service (ReDoS) within your application as RegExP blocks the main thread. For this reason, it is recommended to use hardcoded regexes instead. If your regex is run on user-controlled input, consider performing input validation or use a regex checking/sanitization library such as https://www.npmjs.com/package/recheck to verify that the regex does not appear vulnerable to ReDoS."
c7df39a71e2db7c27996724f813b03eb,1,52,15,files.javascript.rules.lang.security.audit.detect-non-literal-regexp,"RegExp() called with a `pattern` function argument, this might allow an attacker to cause a Regular Expression Denial-of-Service (ReDoS) within your application as RegExP blocks the main thread. For this reason, it is recommended to use hardcoded regexes instead. If your regex is run on user-controlled input, consider performing input validation or use a regex checking/sanitization library such as https://www.npmjs.com/package/recheck to verify that the regex does not appear vulnerable to ReDoS."
c7ef5266cccbc65fa0d28a6cbc263557,2,5,29,files.javascript.rules.lang.security.detect-insecure-websocket,Insecure WebSocket Detected. WebSocket Secure (wss) should be used for all WebSocket connections.
c7ef5266cccbc65fa0d28a6cbc263557,6,19,37,files.javascript.rules.lang.security.detect-insecure-websocket,Insecure WebSocket Detected. WebSocket Secure (wss) should be used for all WebSocket connections.
c800c729ef64c42b889fdc39366ea3af,0,4,5,files.javascript.rules.lang.security.audit.detect-non-literal-require,"Detected the use of require(variable). Calling require with a non-literal argument might allow an attacker to load and run arbitrary code, or access arbitrary files."
c877db0b6db13fa8825aa846d5371cb9,0,108,17,files.javascript.rules.lang.security.audit.unsafe-formatstring,"Detected string concatenation with a non-literal variable in a util.format / console.log function. If an attacker injects a format specifier in the string, it will forge the log message. Try to use constant values for the format string."
c992bf991e8c67206178a5ec46ea3381,1,10,29,files.javascript.rules.lang.security.detect-insecure-websocket,Insecure WebSocket Detected. WebSocket Secure (wss) should be used for all WebSocket connections.
c9a78ec7374ca1fbac7fc8499cdaab56,2,33,2,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
c9a78ec7374ca1fbac7fc8499cdaab56,2,33,2,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `card.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
c9a78ec7374ca1fbac7fc8499cdaab56,2,33,19,files.javascript.rules.lang.security.html-in-template-string,"This template literal looks like HTML and has interpolated variables. These variables are not HTML-encoded by default. If the variables contain HTML tags, these may be interpreted by the browser, resulting in cross-site scripting (XSS)."
ca3f04a169ad70c1288caa17f5ff79fd,0,26,5,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
ca3f04a169ad70c1288caa17f5ff79fd,0,26,5,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `progressBarFilled.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
ca3f04a169ad70c1288caa17f5ff79fd,0,29,5,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
ca3f04a169ad70c1288caa17f5ff79fd,0,29,5,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `progressBarFilled.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
ca41cb4c1555485c7515c9608a960661,0,40,57,files.javascript.rules.lang.security.audit.unsafe-dynamic-method,"Using non-static data to retrieve and run functions from the object is dangerous. If the data is user-controlled, it may allow executing arbitrary code."
ca4cf2b9a4b0355ecb2f917be8a370af,0,12,13,files.javascript.rules.lang.security.audit.prototype-pollution.prototype-pollution-assignment,"Possibility of prototype polluting assignment detected. By adding or modifying attributes of an object prototype, it is possible to create attributes that exist on every object, or replace critical attributes with malicious ones. This can be problematic if the software depends on existence or non-existence of certain attributes, or uses pre-defined attributes of object prototype (such as hasOwnProperty, toString or valueOf). Possible mitigations might be: freezing the object prototype, using an object without prototypes (via Object.create(null) ), blocking modifications of attributes that resolve to object prototype, using Map instead of object."
ca73b4eb8e078a1bedeb21e44daccd62,5,2,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
cac2de736070f726a8d13c50d07f2241,2,5,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
cb58cb3ebe98013b5425c22d1abbc3a2,17,2,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
cb58cb3ebe98013b5425c22d1abbc3a2,3,2,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
cb72f5162e2a25a8b16ca8f8ebaf57ca,5,18,3,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
cb72f5162e2a25a8b16ca8f8ebaf57ca,5,18,3,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `lastNumbersList.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
cb72f5162e2a25a8b16ca8f8ebaf57ca,5,19,5,files.javascript.rules.lang.security.html-in-template-string,"This template literal looks like HTML and has interpolated variables. These variables are not HTML-encoded by default. If the variables contain HTML tags, these may be interpreted by the browser, resulting in cross-site scripting (XSS)."
cb7e5afc8b4be2d49cbebde97810f174,10,2,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
cb7e5afc8b4be2d49cbebde97810f174,13,2,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
cb7e5afc8b4be2d49cbebde97810f174,2,2,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
cb89465015397e9c48ec9c46db20334b,1,4,8,files.javascript.rules.lang.security.audit.detect-non-literal-require,"Detected the use of require(variable). Calling require with a non-literal argument might allow an attacker to load and run arbitrary code, or access arbitrary files."
cb89465015397e9c48ec9c46db20334b,3,4,5,files.javascript.rules.lang.security.audit.detect-non-literal-require,"Detected the use of require(variable). Calling require with a non-literal argument might allow an attacker to load and run arbitrary code, or access arbitrary files."
cbb4f96d576324c6e60abf62ec4f1351,1,2,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
cbfb4255b399a97231a28382d0b1b73f,8,12,9,files.javascript.rules.jquery.security.audit.jquery-insecure-method,User controlled data in a jQuery's `.html(...)` is an anti-pattern that can lead to XSS vulnerabilities
cbfb4255b399a97231a28382d0b1b73f,8,12,9,files.javascript.rules.jquery.security.audit.prohibit-jquery-html,"JQuery's `html` function is susceptible to Cross Site Scripting (XSS) attacks. If you're just passing text, consider `text` instead. Otherwise, use a function that escapes HTML such as edX's `HtmlUtils.setHtml()`."
cc2dd9cde8334b218721ed5929ba8466,0,11,9,files.javascript.rules.lang.security.audit.detect-non-literal-require,"Detected the use of require(variable). Calling require with a non-literal argument might allow an attacker to load and run arbitrary code, or access arbitrary files."
cc2dd9cde8334b218721ed5929ba8466,1,11,9,files.javascript.rules.lang.security.audit.detect-non-literal-require,"Detected the use of require(variable). Calling require with a non-literal argument might allow an attacker to load and run arbitrary code, or access arbitrary files."
ccf9f9bc1ea2ef641318ad2f7c6a9bf1,1,11,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
ccf9f9bc1ea2ef641318ad2f7c6a9bf1,12,6,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
cd240bbd7d05f5dcc6d1ec363a855c0e,2,9,13,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
cd240bbd7d05f5dcc6d1ec363a855c0e,2,9,13,files.javascript.rules.browser.security.insecure-innerhtml,"User controlled data in a `document.querySelector(""#score1"").innerHTML` is an anti-pattern that can lead to XSS vulnerabilities"
cd240bbd7d05f5dcc6d1ec363a855c0e,2,15,13,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
cd240bbd7d05f5dcc6d1ec363a855c0e,2,15,13,files.javascript.rules.browser.security.insecure-innerhtml,"User controlled data in a `document.querySelector(""#score2"").innerHTML` is an anti-pattern that can lead to XSS vulnerabilities"
cd311817d37dd5e62912ecc1f55bc440,2,8,9,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
cd311817d37dd5e62912ecc1f55bc440,2,8,9,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `incomeValue.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
cd311817d37dd5e62912ecc1f55bc440,2,12,9,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
cd311817d37dd5e62912ecc1f55bc440,2,12,9,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `expensesValue.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
cd311817d37dd5e62912ecc1f55bc440,4,18,13,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
cd311817d37dd5e62912ecc1f55bc440,4,18,13,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `displayElement.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
cd86febc69f8943c19dc041967dfdc50,0,4,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
cd86febc69f8943c19dc041967dfdc50,4,10,12,files.javascript.rules.express.security.audit.xss.direct-response-write,"Detected directly writing to a Response object from user-defined input. This bypasses any HTML escaping and may expose your application to a Cross-Site-scripting (XSS) vulnerability. Instead, use 'resp.render()' to render safely escaped HTML."
ce664d384adc226a1809f8c0cb23ec28,4,9,17,files.javascript.rules.jquery.security.audit.jquery-insecure-method,User controlled data in a jQuery's `.html(...)` is an anti-pattern that can lead to XSS vulnerabilities
ce664d384adc226a1809f8c0cb23ec28,4,9,17,files.javascript.rules.jquery.security.audit.prohibit-jquery-html,"JQuery's `html` function is susceptible to Cross Site Scripting (XSS) attacks. If you're just passing text, consider `text` instead. Otherwise, use a function that escapes HTML such as edX's `HtmlUtils.setHtml()`."
ce702020b2c2e76754095cd568adbfe9,10,8,13,files.javascript.rules.jquery.security.audit.jquery-insecure-method,User controlled data in a jQuery's `.html(...)` is an anti-pattern that can lead to XSS vulnerabilities
ce702020b2c2e76754095cd568adbfe9,10,8,13,files.javascript.rules.jquery.security.audit.prohibit-jquery-html,"JQuery's `html` function is susceptible to Cross Site Scripting (XSS) attacks. If you're just passing text, consider `text` instead. Otherwise, use a function that escapes HTML such as edX's `HtmlUtils.setHtml()`."
ce702020b2c2e76754095cd568adbfe9,10,20,40,files.javascript.rules.browser.security.js-open-redirect-from-function,The application accepts potentially user-controlled input `data` which can control the location of the current window context. This can lead two types of vulnerabilities open-redirection and Cross-Site-Scripting (XSS) with JavaScript URIs. It is recommended to validate user-controllable input before allowing it to control the redirection.
ce702020b2c2e76754095cd568adbfe9,8,7,36,files.javascript.rules.browser.security.js-open-redirect-from-function,The application accepts potentially user-controlled input `data` which can control the location of the current window context. This can lead two types of vulnerabilities open-redirection and Cross-Site-Scripting (XSS) with JavaScript URIs. It is recommended to validate user-controllable input before allowing it to control the redirection.
cf1d53f59f51185e10f357a26cc4575c,0,2,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
cf1d53f59f51185e10f357a26cc4575c,0,33,12,files.javascript.rules.express.security.audit.xss.direct-response-write,"Detected directly writing to a Response object from user-defined input. This bypasses any HTML escaping and may expose your application to a Cross-Site-scripting (XSS) vulnerability. Instead, use 'resp.render()' to render safely escaped HTML."
cf1d53f59f51185e10f357a26cc4575c,0,42,12,files.javascript.rules.express.security.audit.xss.direct-response-write,"Detected directly writing to a Response object from user-defined input. This bypasses any HTML escaping and may expose your application to a Cross-Site-scripting (XSS) vulnerability. Instead, use 'resp.render()' to render safely escaped HTML."
cfd473702afa71c5787c9e60b5630a54,11,35,3,files.javascript.rules.lang.security.audit.unsafe-dynamic-method,"Using non-static data to retrieve and run functions from the object is dangerous. If the data is user-controlled, it may allow executing arbitrary code."
cfd473702afa71c5787c9e60b5630a54,12,36,3,files.javascript.rules.lang.security.audit.unsafe-dynamic-method,"Using non-static data to retrieve and run functions from the object is dangerous. If the data is user-controlled, it may allow executing arbitrary code."
cfd473702afa71c5787c9e60b5630a54,17,34,39,files.javascript.rules.lang.security.audit.detect-non-literal-fs-filename,"Detected that function argument `documentPath` has entered the fs module. An attacker could potentially control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are validated."
cfd473702afa71c5787c9e60b5630a54,18,42,39,files.javascript.rules.lang.security.audit.detect-non-literal-fs-filename,"Detected that function argument `documentPath` has entered the fs module. An attacker could potentially control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are validated."
cfd473702afa71c5787c9e60b5630a54,24,18,9,files.javascript.rules.puppeteer.security.audit.puppeteer-goto-injection,If unverified user data can reach the `goto` method it can result in Server-Side Request Forgery vulnerabilities
cfd473702afa71c5787c9e60b5630a54,8,9,12,files.javascript.rules.lang.security.audit.detect-non-literal-fs-filename,"Detected that function argument `dirPath` has entered the fs module. An attacker could potentially control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are validated."
cfd473702afa71c5787c9e60b5630a54,8,11,21,files.javascript.rules.lang.security.audit.unsafe-formatstring,"Detected string concatenation with a non-literal variable in a util.format / console.log function. If an attacker injects a format specifier in the string, it will forge the log message. Try to use constant values for the format string."
cfd473702afa71c5787c9e60b5630a54,8,21,32,files.javascript.rules.lang.security.audit.path-traversal.path-join-resolve-traversal,"Detected possible user input going into a `path.join` or `path.resolve` function. This could possibly lead to a path traversal vulnerability,  where the attacker can access arbitrary files stored in the file system. Instead, be sure to sanitize or validate user input first."
cfd473702afa71c5787c9e60b5630a54,8,22,42,files.javascript.rules.lang.security.audit.detect-non-literal-fs-filename,"Detected that function argument `basePath` has entered the fs module. An attacker could potentially control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are validated."
cfd473702afa71c5787c9e60b5630a54,8,23,20,files.javascript.rules.lang.security.audit.detect-non-literal-fs-filename,"Detected that function argument `basePath` has entered the fs module. An attacker could potentially control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are validated."
cfd473702afa71c5787c9e60b5630a54,8,25,25,files.javascript.rules.lang.security.audit.unsafe-formatstring,"Detected string concatenation with a non-literal variable in a util.format / console.log function. If an attacker injects a format specifier in the string, it will forge the log message. Try to use constant values for the format string."
d063b592504f5ba40f63639ec1caf56b,3,8,9,files.javascript.rules.puppeteer.security.audit.puppeteer-goto-injection,If unverified user data can reach the `goto` method it can result in Server-Side Request Forgery vulnerabilities
d0886f421506890ad600c0091e2c9bd0,2,2,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
d0920fa5529ab2ef9b4af6b60e649c95,1,5,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
d0be951dd7010a9469c26df7a2ace315,3,23,21,files.javascript.rules.jquery.security.audit.jquery-insecure-method,User controlled data in a jQuery's `.before(...)` is an anti-pattern that can lead to XSS vulnerabilities
d159ac982007f88646571f89c4afe58b,3,25,9,files.javascript.rules.lang.security.audit.detect-non-literal-require,"Detected the use of require(variable). Calling require with a non-literal argument might allow an attacker to load and run arbitrary code, or access arbitrary files."
d159ac982007f88646571f89c4afe58b,3,43,9,files.javascript.rules.lang.security.audit.detect-non-literal-require,"Detected the use of require(variable). Calling require with a non-literal argument might allow an attacker to load and run arbitrary code, or access arbitrary files."
d159ac982007f88646571f89c4afe58b,4,31,9,files.javascript.rules.lang.security.audit.detect-non-literal-require,"Detected the use of require(variable). Calling require with a non-literal argument might allow an attacker to load and run arbitrary code, or access arbitrary files."
d159ac982007f88646571f89c4afe58b,4,49,9,files.javascript.rules.lang.security.audit.detect-non-literal-require,"Detected the use of require(variable). Calling require with a non-literal argument might allow an attacker to load and run arbitrary code, or access arbitrary files."
d159ac982007f88646571f89c4afe58b,4,50,9,files.javascript.rules.lang.security.audit.detect-non-literal-require,"Detected the use of require(variable). Calling require with a non-literal argument might allow an attacker to load and run arbitrary code, or access arbitrary files."
d187323ded08bf4df7b7a18ef88e2d37,0,17,17,files.javascript.rules.lang.security.audit.unsafe-formatstring,"Detected string concatenation with a non-literal variable in a util.format / console.log function. If an attacker injects a format specifier in the string, it will forge the log message. Try to use constant values for the format string."
d1959864dbe093054b15005e6ece8d50,7,25,13,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
d1959864dbe093054b15005e6ece8d50,7,25,13,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `resultElement.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
d1959864dbe093054b15005e6ece8d50,9,31,17,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
d1959864dbe093054b15005e6ece8d50,9,31,17,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `resultElement.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
d1a0e7644402ee638d3e05b41922f89f,27,16,17,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
d1a0e7644402ee638d3e05b41922f89f,27,16,17,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `miningDataDiv.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
d1a0e7644402ee638d3e05b41922f89f,27,16,43,files.javascript.rules.lang.security.html-in-template-string,"This template literal looks like HTML and has interpolated variables. These variables are not HTML-encoded by default. If the variables contain HTML tags, these may be interpreted by the browser, resulting in cross-site scripting (XSS)."
d25865e9dd493eb9d9794a275cbcbd9f,4,25,13,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
d25865e9dd493eb9d9794a275cbcbd9f,4,25,13,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `imageContainer.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
d27793e3b376c218fe48b0454c0f835d,2,2,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
d27793e3b376c218fe48b0454c0f835d,8,2,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
d28c1e1dd09f9e9f3cf950b9a1e32ec4,2,6,9,files.javascript.rules.jquery.security.audit.prohibit-jquery-html,"JQuery's `html` function is susceptible to Cross Site Scripting (XSS) attacks. If you're just passing text, consider `text` instead. Otherwise, use a function that escapes HTML such as edX's `HtmlUtils.setHtml()`."
d28d082b86894ecbe29260b35f73f8c8,4,2,5,files.javascript.rules.lang.security.audit.detect-non-literal-require,"Detected the use of require(variable). Calling require with a non-literal argument might allow an attacker to load and run arbitrary code, or access arbitrary files."
d28d082b86894ecbe29260b35f73f8c8,4,3,5,files.javascript.rules.lang.security.audit.detect-non-literal-require,"Detected the use of require(variable). Calling require with a non-literal argument might allow an attacker to load and run arbitrary code, or access arbitrary files."
d28d082b86894ecbe29260b35f73f8c8,5,2,5,files.javascript.rules.lang.security.audit.detect-non-literal-require,"Detected the use of require(variable). Calling require with a non-literal argument might allow an attacker to load and run arbitrary code, or access arbitrary files."
d28f7eaab93bdbfb8e4ecf8d3ccf0e77,0,2,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
d28f7eaab93bdbfb8e4ecf8d3ccf0e77,3,2,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
d28f7eaab93bdbfb8e4ecf8d3ccf0e77,7,9,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
d29883604b28823b04aaabe2fc4a7d9f,6,8,50,files.javascript.rules.lang.security.audit.path-traversal.path-join-resolve-traversal,"Detected possible user input going into a `path.join` or `path.resolve` function. This could possibly lead to a path traversal vulnerability,  where the attacker can access arbitrary files stored in the file system. Instead, be sure to sanitize or validate user input first."
d350b072dc3186cecae5301f2db76662,2,19,16,files.javascript.rules.browser.security.eval-detected,"Detected the use of eval(). eval() can be dangerous if used to evaluate dynamic content. If this content can be input from outside the program, this may be a code injection vulnerability. Ensure evaluated content is not definable by external sources."
d3799f30adbd3a636998d3e1692c6221,0,3,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
d385fe01cb72293513b8de8d24678c3d,2,11,32,files.javascript.rules.browser.security.js-open-redirect-from-function,The application accepts potentially user-controlled input `path` which can control the location of the current window context. This can lead two types of vulnerabilities open-redirection and Cross-Site-Scripting (XSS) with JavaScript URIs. It is recommended to validate user-controllable input before allowing it to control the redirection.
d40b6ee29da60477a605f786a5fb6a35,3,18,9,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
d40b6ee29da60477a605f786a5fb6a35,3,18,9,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `previewDiv.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
d40b6ee29da60477a605f786a5fb6a35,9,21,13,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
d40b6ee29da60477a605f786a5fb6a35,9,21,13,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `previewDiv.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
d413127dab2307920297409c32fd0678,10,8,10,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
d413127dab2307920297409c32fd0678,32,8,10,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
d413127dab2307920297409c32fd0678,68,7,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
d4207a897db91da869384117211eabb7,0,7,3,files.javascript.rules.jquery.security.audit.jquery-insecure-method,User controlled data in a jQuery's `.html(...)` is an anti-pattern that can lead to XSS vulnerabilities
d4207a897db91da869384117211eabb7,0,7,3,files.javascript.rules.jquery.security.audit.prohibit-jquery-html,"JQuery's `html` function is susceptible to Cross Site Scripting (XSS) attacks. If you're just passing text, consider `text` instead. Otherwise, use a function that escapes HTML such as edX's `HtmlUtils.setHtml()`."
d4adaae030365ba899d9cbc994a3f48c,0,3,1,files.javascript.rules.lang.security.audit.unsafe-dynamic-method,"Using non-static data to retrieve and run functions from the object is dangerous. If the data is user-controlled, it may allow executing arbitrary code."
d4adaae030365ba899d9cbc994a3f48c,1,3,1,files.javascript.rules.lang.security.audit.unsafe-dynamic-method,"Using non-static data to retrieve and run functions from the object is dangerous. If the data is user-controlled, it may allow executing arbitrary code."
d56ce2d50e2823f64a2818c254ea050c,0,2,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
d56ce2d50e2823f64a2818c254ea050c,1,2,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
d5a837d4c9a723a0e8f4e17cfdff5a40,3,2,5,files.javascript.rules.browser.security.insufficient-postmessage-origin-validation,No validation of origin is done by the addEventListener API. It may be possible to exploit this flaw to perform Cross Origin attacks such as Cross-Site Scripting(XSS).
d5bdedf1e81856877100686ca526c41f,1,2,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
d6182262de81a6c6680553f6ed163712,0,2,25,files.javascript.rules.lang.security.detect-insecure-websocket,Insecure WebSocket Detected. WebSocket Secure (wss) should be used for all WebSocket connections.
d6997ba2b4b9972d836ba13a16306adf,0,6,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
d6f0fca6cf37e45bcc755f5c9304f7d3,3,1,31,files.javascript.rules.lang.security.detect-insecure-websocket,Insecure WebSocket Detected. WebSocket Secure (wss) should be used for all WebSocket connections.
d7382afc902a4b82eb58fe39b902d836,7,16,5,files.javascript.rules.jquery.security.audit.jquery-insecure-method,User controlled data in a jQuery's `.append(...)` is an anti-pattern that can lead to XSS vulnerabilities
d75c194754db2d42a70ed248afbdb398,1,1,27,files.javascript.rules.lang.security.detect-insecure-websocket,Insecure WebSocket Detected. WebSocket Secure (wss) should be used for all WebSocket connections.
d7b6f3a54033ccc206c95d26bb195788,3,3,26,files.javascript.rules.browser.security.js-open-redirect-from-function,The application accepts potentially user-controlled input `activationLink` which can control the location of the current window context. This can lead two types of vulnerabilities open-redirection and Cross-Site-Scripting (XSS) with JavaScript URIs. It is recommended to validate user-controllable input before allowing it to control the redirection.
d7b6f3a54033ccc206c95d26bb195788,7,15,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
d7b6f3a54033ccc206c95d26bb195788,7,26,14,files.javascript.rules.lang.security.html-in-template-string,"This template literal looks like HTML and has interpolated variables. These variables are not HTML-encoded by default. If the variables contain HTML tags, these may be interpreted by the browser, resulting in cross-site scripting (XSS)."
d807ac871ba4f067d76085b790c8a1c5,0,2,10,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
d807ac871ba4f067d76085b790c8a1c5,1,4,10,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
d807ac871ba4f067d76085b790c8a1c5,1,12,17,files.javascript.rules.express.security.audit.xss.direct-response-write,"Detected directly writing to a Response object from user-defined input. This bypasses any HTML escaping and may expose your application to a Cross-Site-scripting (XSS) vulnerability. Instead, use 'resp.render()' to render safely escaped HTML."
d81caec64f9eeeb16251b59440703479,1,20,17,files.javascript.rules.lang.security.audit.unsafe-formatstring,"Detected string concatenation with a non-literal variable in a util.format / console.log function. If an attacker injects a format specifier in the string, it will forge the log message. Try to use constant values for the format string."
d81caec64f9eeeb16251b59440703479,1,22,19,files.javascript.rules.lang.security.audit.unsafe-formatstring,"Detected string concatenation with a non-literal variable in a util.format / console.log function. If an attacker injects a format specifier in the string, it will forge the log message. Try to use constant values for the format string."
d81caec64f9eeeb16251b59440703479,2,19,17,files.javascript.rules.lang.security.audit.unsafe-formatstring,"Detected string concatenation with a non-literal variable in a util.format / console.log function. If an attacker injects a format specifier in the string, it will forge the log message. Try to use constant values for the format string."
d81caec64f9eeeb16251b59440703479,2,21,19,files.javascript.rules.lang.security.audit.unsafe-formatstring,"Detected string concatenation with a non-literal variable in a util.format / console.log function. If an attacker injects a format specifier in the string, it will forge the log message. Try to use constant values for the format string."
d841905a7f912b5d97bc2fb0a6aac1f0,3,10,5,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
d841905a7f912b5d97bc2fb0a6aac1f0,3,10,5,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `chatLog.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
d841905a7f912b5d97bc2fb0a6aac1f0,3,16,5,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
d841905a7f912b5d97bc2fb0a6aac1f0,3,16,5,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `chatLog.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
d87770f39330907c346351fe59d06bec,0,15,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
d87770f39330907c346351fe59d06bec,1,15,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
d88b976d3cf1f16d069e89b19162f298,1,7,17,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
d88b976d3cf1f16d069e89b19162f298,1,7,17,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `document.querySelector('#post-container').innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
d88b976d3cf1f16d069e89b19162f298,1,7,71,files.javascript.rules.lang.security.html-in-template-string,"This template literal looks like HTML and has interpolated variables. These variables are not HTML-encoded by default. If the variables contain HTML tags, these may be interpreted by the browser, resulting in cross-site scripting (XSS)."
d9303921f9809aa324c09919a9647c1f,2,6,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
da10c5f400aac124d48c070c6155e8db,1,2,29,files.javascript.rules.lang.security.detect-insecure-websocket,Insecure WebSocket Detected. WebSocket Secure (wss) should be used for all WebSocket connections.
da10c5f400aac124d48c070c6155e8db,6,2,29,files.javascript.rules.lang.security.detect-insecure-websocket,Insecure WebSocket Detected. WebSocket Secure (wss) should be used for all WebSocket connections.
da19c927364e9248326d5eea6c26fa80,0,24,13,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
da19c927364e9248326d5eea6c26fa80,0,24,13,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `resultContainer.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
db99e98433391d12ac27b2f0568f778c,2,12,11,files.javascript.rules.jquery.security.audit.jquery-insecure-selector,User controlled data in a `$(...)` is an anti-pattern that can lead to XSS vulnerabilities
db99e98433391d12ac27b2f0568f778c,2,22,7,files.javascript.rules.jquery.security.audit.jquery-insecure-method,User controlled data in a jQuery's `.html(...)` is an anti-pattern that can lead to XSS vulnerabilities
db99e98433391d12ac27b2f0568f778c,2,22,7,files.javascript.rules.jquery.security.audit.prohibit-jquery-html,"JQuery's `html` function is susceptible to Cross Site Scripting (XSS) attacks. If you're just passing text, consider `text` instead. Otherwise, use a function that escapes HTML such as edX's `HtmlUtils.setHtml()`."
dccc9d5f11fac657cb077e1707f81336,2,2,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
dce737b62d58a8795abada6cccc2cb19,2,3,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
dd084d361ef68c3bf433ba046fee6e9c,0,31,13,files.javascript.rules.lang.security.audit.unsafe-formatstring,"Detected string concatenation with a non-literal variable in a util.format / console.log function. If an attacker injects a format specifier in the string, it will forge the log message. Try to use constant values for the format string."
dd084d361ef68c3bf433ba046fee6e9c,0,32,13,files.javascript.rules.lang.security.audit.unsafe-formatstring,"Detected string concatenation with a non-literal variable in a util.format / console.log function. If an attacker injects a format specifier in the string, it will forge the log message. Try to use constant values for the format string."
dd1ea44d362a9b352e36e2518a299e02,2,13,27,files.javascript.rules.lang.security.html-in-template-string,"This template literal looks like HTML and has interpolated variables. These variables are not HTML-encoded by default. If the variables contain HTML tags, these may be interpreted by the browser, resulting in cross-site scripting (XSS)."
dd1ea44d362a9b352e36e2518a299e02,2,18,9,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
dd1ea44d362a9b352e36e2518a299e02,2,18,9,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `moviesContainer.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
dd2485ba91b9c4fadebd648248ff0287,0,17,9,files.javascript.rules.lang.security.audit.unsafe-dynamic-method,"Using non-static data to retrieve and run functions from the object is dangerous. If the data is user-controlled, it may allow executing arbitrary code."
dd2485ba91b9c4fadebd648248ff0287,0,26,9,files.javascript.rules.lang.security.audit.unsafe-dynamic-method,"Using non-static data to retrieve and run functions from the object is dangerous. If the data is user-controlled, it may allow executing arbitrary code."
dd2485ba91b9c4fadebd648248ff0287,0,36,9,files.javascript.rules.lang.security.audit.unsafe-dynamic-method,"Using non-static data to retrieve and run functions from the object is dangerous. If the data is user-controlled, it may allow executing arbitrary code."
dd7aedd55cc013e1e4f8238d59b698da,12,8,9,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
dd7aedd55cc013e1e4f8238d59b698da,12,8,9,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `menuItem.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
dd7aedd55cc013e1e4f8238d59b698da,12,8,30,files.javascript.rules.lang.security.html-in-template-string,"This template literal looks like HTML and has interpolated variables. These variables are not HTML-encoded by default. If the variables contain HTML tags, these may be interpreted by the browser, resulting in cross-site scripting (XSS)."
deba5f3b0b677dfabf32024c138a1803,6,6,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
df34c2b8d3aca0a03d3dafbd465b088c,21,19,21,files.javascript.rules.lang.security.audit.unsafe-formatstring,"Detected string concatenation with a non-literal variable in a util.format / console.log function. If an attacker injects a format specifier in the string, it will forge the log message. Try to use constant values for the format string."
df34c2b8d3aca0a03d3dafbd465b088c,21,44,17,files.javascript.rules.lang.security.audit.unsafe-formatstring,"Detected string concatenation with a non-literal variable in a util.format / console.log function. If an attacker injects a format specifier in the string, it will forge the log message. Try to use constant values for the format string."
df34c2b8d3aca0a03d3dafbd465b088c,21,49,17,files.javascript.rules.lang.security.audit.unsafe-formatstring,"Detected string concatenation with a non-literal variable in a util.format / console.log function. If an attacker injects a format specifier in the string, it will forge the log message. Try to use constant values for the format string."
df6399ba3b3ef3695efbf2ee2f1cb774,0,19,50,files.javascript.rules.jsonwebtoken.security.hardcoded-jwt-secret,"A hard-coded credential was detected. It is not recommended to store credentials in source-code, as this risks secrets being leaked and used by either an internal or external malicious adversary. It is recommended to use environment variables to securely provide credentials or retrieve credentials from a secure vault or HSM (Hardware Security Module)."
df6399ba3b3ef3695efbf2ee2f1cb774,1,4,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
dfb24d19e89f87fdccdba2174a7172bd,0,3,3,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
dfb24d19e89f87fdccdba2174a7172bd,0,3,3,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `table.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
e03fbe9d7d5c253fa821e9b81aad8be2,2,13,25,files.javascript.rules.browser.security.eval-detected,"Detected the use of eval(). eval() can be dangerous if used to evaluate dynamic content. If this content can be input from outside the program, this may be a code injection vulnerability. Ensure evaluated content is not definable by external sources."
e085e99416dbebf0fcca9b64dd7fe809,2,77,13,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
e085e99416dbebf0fcca9b64dd7fe809,2,77,13,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `quiz.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
e085e99416dbebf0fcca9b64dd7fe809,2,77,30,files.javascript.rules.lang.security.html-in-template-string,"This template literal looks like HTML and has interpolated variables. These variables are not HTML-encoded by default. If the variables contain HTML tags, these may be interpreted by the browser, resulting in cross-site scripting (XSS)."
e085e99416dbebf0fcca9b64dd7fe809,2,84,13,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
e085e99416dbebf0fcca9b64dd7fe809,2,84,13,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `quiz.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
e085e99416dbebf0fcca9b64dd7fe809,2,84,31,files.javascript.rules.lang.security.html-in-template-string,"This template literal looks like HTML and has interpolated variables. These variables are not HTML-encoded by default. If the variables contain HTML tags, these may be interpreted by the browser, resulting in cross-site scripting (XSS)."
e085e99416dbebf0fcca9b64dd7fe809,5,34,5,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
e085e99416dbebf0fcca9b64dd7fe809,5,34,5,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `quiz.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
e085e99416dbebf0fcca9b64dd7fe809,5,34,22,files.javascript.rules.lang.security.html-in-template-string,"This template literal looks like HTML and has interpolated variables. These variables are not HTML-encoded by default. If the variables contain HTML tags, these may be interpreted by the browser, resulting in cross-site scripting (XSS)."
e085e99416dbebf0fcca9b64dd7fe809,5,38,5,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
e085e99416dbebf0fcca9b64dd7fe809,5,38,5,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `quiz.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
e085e99416dbebf0fcca9b64dd7fe809,5,38,23,files.javascript.rules.lang.security.html-in-template-string,"This template literal looks like HTML and has interpolated variables. These variables are not HTML-encoded by default. If the variables contain HTML tags, these may be interpreted by the browser, resulting in cross-site scripting (XSS)."
e08dd5034fa96d50760011453fe6f3dd,0,4,14,files.javascript.rules.lang.security.html-in-template-string,"This template literal looks like HTML and has interpolated variables. These variables are not HTML-encoded by default. If the variables contain HTML tags, these may be interpreted by the browser, resulting in cross-site scripting (XSS)."
e08dd5034fa96d50760011453fe6f3dd,1,4,10,files.javascript.rules.lang.security.html-in-template-string,"This template literal looks like HTML and has interpolated variables. These variables are not HTML-encoded by default. If the variables contain HTML tags, these may be interpreted by the browser, resulting in cross-site scripting (XSS)."
e08dd5034fa96d50760011453fe6f3dd,1,6,14,files.javascript.rules.lang.security.html-in-template-string,"This template literal looks like HTML and has interpolated variables. These variables are not HTML-encoded by default. If the variables contain HTML tags, these may be interpreted by the browser, resulting in cross-site scripting (XSS)."
e0cde108be36f6a5a0636afe64c23725,2,8,9,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
e0cde108be36f6a5a0636afe64c23725,2,8,9,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `chatContainer.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
e18069dca8c6a5b92577961dfeadd232,1,5,31,files.javascript.rules.lang.security.audit.detect-non-literal-require,"Detected the use of require(variable). Calling require with a non-literal argument might allow an attacker to load and run arbitrary code, or access arbitrary files."
e18069dca8c6a5b92577961dfeadd232,5,5,31,files.javascript.rules.lang.security.audit.detect-non-literal-require,"Detected the use of require(variable). Calling require with a non-literal argument might allow an attacker to load and run arbitrary code, or access arbitrary files."
e198928ffb819ab00a6f436c7ed8bf4b,0,96,9,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
e198928ffb819ab00a6f436c7ed8bf4b,0,96,9,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `toCell.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
e2d666f7876e8e2ae4357b628859dbf7,0,12,17,files.javascript.rules.lang.security.audit.unsafe-dynamic-method,"Using non-static data to retrieve and run functions from the object is dangerous. If the data is user-controlled, it may allow executing arbitrary code."
e357e58b17b3ee12871580642a828315,0,26,3,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
e357e58b17b3ee12871580642a828315,0,26,3,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `result.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
e37b27a34d90c3e1bf6be576df330d49,5,1,25,files.javascript.rules.lang.security.detect-insecure-websocket,Insecure WebSocket Detected. WebSocket Secure (wss) should be used for all WebSocket connections.
e384fc21687a22d7f4144fc5c765e248,9,3,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
e38f7c9db15ecedddab3a1e1a02c5b78,0,35,40,files.javascript.rules.browser.security.js-open-redirect-from-function,The application accepts potentially user-controlled input `href` which can control the location of the current window context. This can lead two types of vulnerabilities open-redirection and Cross-Site-Scripting (XSS) with JavaScript URIs. It is recommended to validate user-controllable input before allowing it to control the redirection.
e3da2ddc8d4e33886ae52f2f2cf829e6,1,23,12,files.javascript.rules.lang.security.html-in-template-string,"This template literal looks like HTML and has interpolated variables. These variables are not HTML-encoded by default. If the variables contain HTML tags, these may be interpreted by the browser, resulting in cross-site scripting (XSS)."
e3f7df541326f4e9c4612daecf942432,0,7,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
e3f7df541326f4e9c4612daecf942432,0,54,57,files.javascript.rules.jsonwebtoken.security.hardcoded-jwt-secret,"A hard-coded credential was detected. It is not recommended to store credentials in source-code, as this risks secrets being leaked and used by either an internal or external malicious adversary. It is recommended to use environment variables to securely provide credentials or retrieve credentials from a secure vault or HSM (Hardware Security Module)."
e3f7df541326f4e9c4612daecf942432,0,68,43,files.javascript.rules.jsonwebtoken.security.hardcoded-jwt-secret,"A hard-coded credential was detected. It is not recommended to store credentials in source-code, as this risks secrets being leaked and used by either an internal or external malicious adversary. It is recommended to use environment variables to securely provide credentials or retrieve credentials from a secure vault or HSM (Hardware Security Module)."
e3f970d3d1cc7c63bca87ed3c20f0a0a,7,1,1,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
e3f970d3d1cc7c63bca87ed3c20f0a0a,7,1,1,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `radioBarContainer.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
e45374818c1ead98952cde89201cb650,1,13,9,files.javascript.rules.jquery.security.audit.jquery-insecure-method,User controlled data in a jQuery's `.append(...)` is an anti-pattern that can lead to XSS vulnerabilities
e46228be74e8bbff33b8e64eec4d2332,0,16,10,files.javascript.rules.lang.security.detect-child-process,"Detected calls to child_process from a function argument `req`. This could lead to a command injection if the input is user controllable. Try to avoid calls to child_process, and if it is needed ensure user input is correctly sanitized or sandboxed. "
e47b859ad08c06593af9495c06319d39,0,4,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
e47b859ad08c06593af9495c06319d39,0,18,42,files.javascript.rules.jsonwebtoken.security.hardcoded-jwt-secret,"A hard-coded credential was detected. It is not recommended to store credentials in source-code, as this risks secrets being leaked and used by either an internal or external malicious adversary. It is recommended to use environment variables to securely provide credentials or retrieve credentials from a secure vault or HSM (Hardware Security Module)."
e47b859ad08c06593af9495c06319d39,0,36,21,files.javascript.rules.jsonwebtoken.security.hardcoded-jwt-secret,"A hard-coded credential was detected. It is not recommended to store credentials in source-code, as this risks secrets being leaked and used by either an internal or external malicious adversary. It is recommended to use environment variables to securely provide credentials or retrieve credentials from a secure vault or HSM (Hardware Security Module)."
e4a7dc37bba02cfbde2f84740aa0bdf9,1,36,39,files.javascript.rules.lang.security.html-in-template-string,"This template literal looks like HTML and has interpolated variables. These variables are not HTML-encoded by default. If the variables contain HTML tags, these may be interpreted by the browser, resulting in cross-site scripting (XSS)."
e50de65c115f23949d29d38e8f04e921,4,5,5,files.javascript.rules.lang.security.audit.detect-non-literal-require,"Detected the use of require(variable). Calling require with a non-literal argument might allow an attacker to load and run arbitrary code, or access arbitrary files."
e50de65c115f23949d29d38e8f04e921,4,6,5,files.javascript.rules.lang.security.audit.detect-non-literal-require,"Detected the use of require(variable). Calling require with a non-literal argument might allow an attacker to load and run arbitrary code, or access arbitrary files."
e50de65c115f23949d29d38e8f04e921,5,5,5,files.javascript.rules.lang.security.audit.detect-non-literal-require,"Detected the use of require(variable). Calling require with a non-literal argument might allow an attacker to load and run arbitrary code, or access arbitrary files."
e50de65c115f23949d29d38e8f04e921,5,6,5,files.javascript.rules.lang.security.audit.detect-non-literal-require,"Detected the use of require(variable). Calling require with a non-literal argument might allow an attacker to load and run arbitrary code, or access arbitrary files."
e5690ce5fd51168520ee83d3d72d63e3,2,24,18,files.javascript.rules.browser.security.eval-detected,"Detected the use of eval(). eval() can be dangerous if used to evaluate dynamic content. If this content can be input from outside the program, this may be a code injection vulnerability. Ensure evaluated content is not definable by external sources."
e57e61f8ec1b080ae6caa7ca9bf7a2b2,0,17,14,files.javascript.rules.lang.security.audit.detect-non-literal-regexp,"RegExp() called with a `flags` function argument, this might allow an attacker to cause a Regular Expression Denial-of-Service (ReDoS) within your application as RegExP blocks the main thread. For this reason, it is recommended to use hardcoded regexes instead. If your regex is run on user-controlled input, consider performing input validation or use a regex checking/sanitization library such as https://www.npmjs.com/package/recheck to verify that the regex does not appear vulnerable to ReDoS."
e57e61f8ec1b080ae6caa7ca9bf7a2b2,0,17,14,files.javascript.rules.lang.security.audit.detect-non-literal-regexp,"RegExp() called with a `tagTypes` function argument, this might allow an attacker to cause a Regular Expression Denial-of-Service (ReDoS) within your application as RegExP blocks the main thread. For this reason, it is recommended to use hardcoded regexes instead. If your regex is run on user-controlled input, consider performing input validation or use a regex checking/sanitization library such as https://www.npmjs.com/package/recheck to verify that the regex does not appear vulnerable to ReDoS."
e57e61f8ec1b080ae6caa7ca9bf7a2b2,0,22,14,files.javascript.rules.lang.security.audit.detect-non-literal-regexp,"RegExp() called with a `flags` function argument, this might allow an attacker to cause a Regular Expression Denial-of-Service (ReDoS) within your application as RegExP blocks the main thread. For this reason, it is recommended to use hardcoded regexes instead. If your regex is run on user-controlled input, consider performing input validation or use a regex checking/sanitization library such as https://www.npmjs.com/package/recheck to verify that the regex does not appear vulnerable to ReDoS."
e57e61f8ec1b080ae6caa7ca9bf7a2b2,0,22,14,files.javascript.rules.lang.security.audit.detect-non-literal-regexp,"RegExp() called with a `tagTypes` function argument, this might allow an attacker to cause a Regular Expression Denial-of-Service (ReDoS) within your application as RegExP blocks the main thread. For this reason, it is recommended to use hardcoded regexes instead. If your regex is run on user-controlled input, consider performing input validation or use a regex checking/sanitization library such as https://www.npmjs.com/package/recheck to verify that the regex does not appear vulnerable to ReDoS."
e5824c141ee1244e22ab59ec9d6e8d55,1,27,17,files.javascript.rules.jquery.security.audit.jquery-insecure-method,User controlled data in a jQuery's `.html(...)` is an anti-pattern that can lead to XSS vulnerabilities
e5824c141ee1244e22ab59ec9d6e8d55,1,27,17,files.javascript.rules.jquery.security.audit.prohibit-jquery-html,"JQuery's `html` function is susceptible to Cross Site Scripting (XSS) attacks. If you're just passing text, consider `text` instead. Otherwise, use a function that escapes HTML such as edX's `HtmlUtils.setHtml()`."
e5824c141ee1244e22ab59ec9d6e8d55,1,38,52,files.javascript.rules.jquery.security.audit.jquery-insecure-selector,User controlled data in a `$(...)` is an anti-pattern that can lead to XSS vulnerabilities
e5de9d95f0b13054dc61fee583bd99b4,0,23,25,files.javascript.rules.lang.security.audit.detect-non-literal-regexp,"RegExp() called with a `word` function argument, this might allow an attacker to cause a Regular Expression Denial-of-Service (ReDoS) within your application as RegExP blocks the main thread. For this reason, it is recommended to use hardcoded regexes instead. If your regex is run on user-controlled input, consider performing input validation or use a regex checking/sanitization library such as https://www.npmjs.com/package/recheck to verify that the regex does not appear vulnerable to ReDoS."
e5de9d95f0b13054dc61fee583bd99b4,3,52,25,files.javascript.rules.lang.security.audit.detect-non-literal-regexp,"RegExp() called with a `word` function argument, this might allow an attacker to cause a Regular Expression Denial-of-Service (ReDoS) within your application as RegExP blocks the main thread. For this reason, it is recommended to use hardcoded regexes instead. If your regex is run on user-controlled input, consider performing input validation or use a regex checking/sanitization library such as https://www.npmjs.com/package/recheck to verify that the regex does not appear vulnerable to ReDoS."
e5de9d95f0b13054dc61fee583bd99b4,4,26,35,files.javascript.rules.lang.security.audit.detect-non-literal-regexp,"RegExp() called with a `word` function argument, this might allow an attacker to cause a Regular Expression Denial-of-Service (ReDoS) within your application as RegExP blocks the main thread. For this reason, it is recommended to use hardcoded regexes instead. If your regex is run on user-controlled input, consider performing input validation or use a regex checking/sanitization library such as https://www.npmjs.com/package/recheck to verify that the regex does not appear vulnerable to ReDoS."
e5e3aa4e115c9b51f6789ed00ac8a2c5,1,2,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
e5e3aa4e115c9b51f6789ed00ac8a2c5,7,2,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
e639d84988ee0088694662d3e0b1b9fb,5,7,5,files.javascript.rules.lang.security.audit.detect-non-literal-require,"Detected the use of require(variable). Calling require with a non-literal argument might allow an attacker to load and run arbitrary code, or access arbitrary files."
e639d84988ee0088694662d3e0b1b9fb,6,11,5,files.javascript.rules.lang.security.audit.detect-non-literal-require,"Detected the use of require(variable). Calling require with a non-literal argument might allow an attacker to load and run arbitrary code, or access arbitrary files."
e64f3226cfe2a9a733b98b3648c916b9,2,1,1,files.javascript.rules.grpc.security.grpc-nodejs-insecure-connection,"Found an insecure gRPC connection. This creates a connection without encryption to a gRPC client/server. A malicious attacker could tamper with the gRPC message, which could compromise the machine."
e64f3226cfe2a9a733b98b3648c916b9,4,1,1,files.javascript.rules.grpc.security.grpc-nodejs-insecure-connection,"Found an insecure gRPC connection. This creates a connection without encryption to a gRPC client/server. A malicious attacker could tamper with the gRPC message, which could compromise the machine."
e64f3226cfe2a9a733b98b3648c916b9,7,1,1,files.javascript.rules.grpc.security.grpc-nodejs-insecure-connection,"Found an insecure gRPC connection. This creates a connection without encryption to a gRPC client/server. A malicious attacker could tamper with the gRPC message, which could compromise the machine."
e64f3226cfe2a9a733b98b3648c916b9,8,1,1,files.javascript.rules.grpc.security.grpc-nodejs-insecure-connection,"Found an insecure gRPC connection. This creates a connection without encryption to a gRPC client/server. A malicious attacker could tamper with the gRPC message, which could compromise the machine."
e6bf8156ada48c07beda5bf4670c12d3,0,6,22,files.javascript.rules.lang.security.audit.detect-non-literal-fs-filename,"Detected that function argument `outputPath` has entered the fs module. An attacker could potentially control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are validated."
e6bf8156ada48c07beda5bf4670c12d3,0,8,35,files.javascript.rules.lang.security.audit.detect-non-literal-fs-filename,"Detected that function argument `outputPath` has entered the fs module. An attacker could potentially control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are validated."
e6e2e742c2475f28178d152609aa4a49,0,43,15,files.javascript.rules.playwright.security.audit.playwright-goto-injection,If unverified user data can reach the `goto` method it can result in Server-Side Request Forgery vulnerabilities
e6e2e742c2475f28178d152609aa4a49,0,73,19,files.javascript.rules.playwright.security.audit.playwright-goto-injection,If unverified user data can reach the `goto` method it can result in Server-Side Request Forgery vulnerabilities
e6e65fdceffd78a14cb05987b6e4f4d0,4,8,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
e706a1c153b6b8f96fb59cacf86724a1,1,4,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
e706a1c153b6b8f96fb59cacf86724a1,1,27,14,files.javascript.rules.express.security.audit.xss.direct-response-write,"Detected directly writing to a Response object from user-defined input. This bypasses any HTML escaping and may expose your application to a Cross-Site-scripting (XSS) vulnerability. Instead, use 'resp.render()' to render safely escaped HTML."
e707046ddb90bb77ad490983a7331415,1,5,10,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
e7570a71b08b2e674c8fc5037f85be7f,4,4,10,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
e76724a57b19567c0e74a05e7a0c03a1,0,4,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
e8407b44c4d67f876bb2abb25166d6b8,13,2,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
e8b86f4913cb0833e6d017806f1d072d,0,26,9,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
e8b86f4913cb0833e6d017806f1d072d,0,26,9,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `message.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
e8b86f4913cb0833e6d017806f1d072d,0,38,5,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
e8b86f4913cb0833e6d017806f1d072d,0,38,5,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `closeButton.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
e8b86f4913cb0833e6d017806f1d072d,0,46,9,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
e8b86f4913cb0833e6d017806f1d072d,0,46,9,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `nextButton.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
e8d7bd62176abc1c3f6f91ee5396939c,2,7,22,files.javascript.rules.browser.security.eval-detected,"Detected the use of eval(). eval() can be dangerous if used to evaluate dynamic content. If this content can be input from outside the program, this may be a code injection vulnerability. Ensure evaluated content is not definable by external sources."
e8d7bd62176abc1c3f6f91ee5396939c,2,8,9,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
e8d7bd62176abc1c3f6f91ee5396939c,2,8,9,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `output.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
e8d7bd62176abc1c3f6f91ee5396939c,2,10,9,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
e8d7bd62176abc1c3f6f91ee5396939c,2,10,9,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `output.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
e8f9937294c1fed31f754cf4bbcacf11,0,23,25,files.javascript.rules.lang.security.audit.unsafe-formatstring,"Detected string concatenation with a non-literal variable in a util.format / console.log function. If an attacker injects a format specifier in the string, it will forge the log message. Try to use constant values for the format string."
e95be3d536f7211ddcf4da6528026e7c,1,186,24,files.javascript.rules.lang.security.audit.detect-non-literal-fs-filename,"Detected that function argument `url` has entered the fs module. An attacker could potentially control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are validated."
e95be3d536f7211ddcf4da6528026e7c,1,186,35,files.javascript.rules.lang.security.audit.detect-non-literal-fs-filename,"Detected that function argument `url` has entered the fs module. An attacker could potentially control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are validated."
e9dee455c4bad4b134b7c6da0909574c,0,8,9,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
e9dee455c4bad4b134b7c6da0909574c,0,8,9,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `messageDisplay.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
ea119d6e9e0e59c91949afd2e930cfef,2,2,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
ea31a5384c0d5421b9c251c65c300536,0,1,29,files.javascript.rules.lang.security.detect-insecure-websocket,Insecure WebSocket Detected. WebSocket Secure (wss) should be used for all WebSocket connections.
eac3dae0b5ce72fa81d5c0147520dfef,2,8,3,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
eac3dae0b5ce72fa81d5c0147520dfef,2,8,3,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `resultsDiv.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
eac3dae0b5ce72fa81d5c0147520dfef,2,9,3,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
eac3dae0b5ce72fa81d5c0147520dfef,2,9,3,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `resultsDiv.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
eac3dae0b5ce72fa81d5c0147520dfef,2,10,3,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
eac3dae0b5ce72fa81d5c0147520dfef,2,10,3,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `resultsDiv.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
eafe228557000aa23da115127da03181,2,11,4,files.javascript.rules.lang.security.audit.unsafe-dynamic-method,"Using non-static data to retrieve and run functions from the object is dangerous. If the data is user-controlled, it may allow executing arbitrary code."
eb2cafea963dd096df489ead805fc555,2,11,3,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
eb2cafea963dd096df489ead805fc555,2,11,3,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `paintingDiv.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
eb2cafea963dd096df489ead805fc555,3,35,3,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
eb2cafea963dd096df489ead805fc555,3,35,3,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `paintingDiv.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
eb2cafea963dd096df489ead805fc555,4,5,3,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
eb2cafea963dd096df489ead805fc555,4,5,3,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `paintingDiv.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
eb66e4d63a2347d2bc69881da499231f,1,2,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
eb87da34d98b13e2fa53823cafdb2747,0,2,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
eb88b6400687c0c20c228093d14e4f66,0,6,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
eb88b6400687c0c20c228093d14e4f66,0,47,55,files.javascript.rules.jsonwebtoken.security.hardcoded-jwt-secret,"A hard-coded credential was detected. It is not recommended to store credentials in source-code, as this risks secrets being leaked and used by either an internal or external malicious adversary. It is recommended to use environment variables to securely provide credentials or retrieve credentials from a secure vault or HSM (Hardware Security Module)."
eb88b6400687c0c20c228093d14e4f66,0,55,21,files.javascript.rules.jsonwebtoken.security.hardcoded-jwt-secret,"A hard-coded credential was detected. It is not recommended to store credentials in source-code, as this risks secrets being leaked and used by either an internal or external malicious adversary. It is recommended to use environment variables to securely provide credentials or retrieve credentials from a secure vault or HSM (Hardware Security Module)."
ebe0715a378ea389bf2b97def7142410,0,10,15,files.javascript.rules.lang.security.audit.detect-non-literal-fs-filename,"Detected that function argument `fileName` has entered the fs module. An attacker could potentially control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are validated."
ebe1a5d6b5a02eae78bdaf5521adc57f,2,11,5,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
ebe1a5d6b5a02eae78bdaf5521adc57f,2,11,5,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `document.getElementById('playerTime').innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
ebe1a5d6b5a02eae78bdaf5521adc57f,2,12,5,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
ebe1a5d6b5a02eae78bdaf5521adc57f,2,12,5,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `document.getElementById('playerMood').innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
ebe1a5d6b5a02eae78bdaf5521adc57f,2,19,5,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
ebe1a5d6b5a02eae78bdaf5521adc57f,2,19,5,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `document.getElementById('playerTime').innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
ebe1a5d6b5a02eae78bdaf5521adc57f,2,20,5,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
ebe1a5d6b5a02eae78bdaf5521adc57f,2,20,5,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `document.getElementById('playerMood').innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
ec0642cf7412d580fb751f2743def03a,0,2,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
ec2118d583229aed623fa891caffbc56,0,28,5,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
ec2118d583229aed623fa891caffbc56,0,28,5,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `item.querySelector('.timer_h').innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
ec2118d583229aed623fa891caffbc56,0,29,5,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
ec2118d583229aed623fa891caffbc56,0,29,5,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `item.querySelector('.timer_i').innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
ec2118d583229aed623fa891caffbc56,0,30,5,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
ec2118d583229aed623fa891caffbc56,0,30,5,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `item.querySelector('.timer_s').innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
ec2118d583229aed623fa891caffbc56,0,36,5,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
ec2118d583229aed623fa891caffbc56,0,36,5,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `item.querySelector('.timer_h').nextElementSibling.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
ec2118d583229aed623fa891caffbc56,0,37,5,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
ec2118d583229aed623fa891caffbc56,0,37,5,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `item.querySelector('.timer_i').nextElementSibling.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
ec2118d583229aed623fa891caffbc56,0,38,5,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
ec2118d583229aed623fa891caffbc56,0,38,5,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `item.querySelector('.timer_s').nextElementSibling.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
ec2118d583229aed623fa891caffbc56,0,59,15,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
ec2118d583229aed623fa891caffbc56,0,59,15,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `item.querySelector('.timer_h').innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
ec2118d583229aed623fa891caffbc56,0,60,15,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
ec2118d583229aed623fa891caffbc56,0,60,15,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `item.querySelector('.timer_i').innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
ec2118d583229aed623fa891caffbc56,0,61,15,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
ec2118d583229aed623fa891caffbc56,0,61,15,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `item.querySelector('.timer_s').innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
ec2118d583229aed623fa891caffbc56,0,67,15,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
ec2118d583229aed623fa891caffbc56,0,67,15,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `item.querySelector('.timer_h').nextElementSibling.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
ec2118d583229aed623fa891caffbc56,0,68,15,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
ec2118d583229aed623fa891caffbc56,0,68,15,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `item.querySelector('.timer_i').nextElementSibling.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
ec2118d583229aed623fa891caffbc56,0,69,15,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
ec2118d583229aed623fa891caffbc56,0,69,15,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `item.querySelector('.timer_s').nextElementSibling.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
ec2118d583229aed623fa891caffbc56,0,78,15,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
ec2118d583229aed623fa891caffbc56,0,78,15,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `item.closest('.product_page').querySelector('.current_bet span').innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
ec2118d583229aed623fa891caffbc56,0,79,15,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
ec2118d583229aed623fa891caffbc56,0,79,15,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `item.closest('.product_page').querySelector('.bet_count span').innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
ec2118d583229aed623fa891caffbc56,0,81,15,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
ec2118d583229aed623fa891caffbc56,0,81,15,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `item.nextElementSibling.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
ec2ecaa00a49cbf3bc42e93c8594f0ac,39,2,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
ec2ecaa00a49cbf3bc42e93c8594f0ac,41,18,32,files.javascript.rules.lang.security.audit.path-traversal.path-join-resolve-traversal,"Detected possible user input going into a `path.join` or `path.resolve` function. This could possibly lead to a path traversal vulnerability,  where the attacker can access arbitrary files stored in the file system. Instead, be sure to sanitize or validate user input first."
ec2ecaa00a49cbf3bc42e93c8594f0ac,41,19,20,files.javascript.rules.lang.security.audit.detect-non-literal-fs-filename,"Detected that function argument `basePath` has entered the fs module. An attacker could potentially control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are validated."
ec2ecaa00a49cbf3bc42e93c8594f0ac,5,28,46,files.javascript.rules.lang.security.audit.path-traversal.path-join-resolve-traversal,"Detected possible user input going into a `path.join` or `path.resolve` function. This could possibly lead to a path traversal vulnerability,  where the attacker can access arbitrary files stored in the file system. Instead, be sure to sanitize or validate user input first."
ec48fbcb1d49452e16495744116e8259,0,11,15,files.javascript.rules.lang.security.audit.unsafe-dynamic-method,"Using non-static data to retrieve and run functions from the object is dangerous. If the data is user-controlled, it may allow executing arbitrary code."
ec48fbcb1d49452e16495744116e8259,0,12,15,files.javascript.rules.lang.security.audit.unsafe-dynamic-method,"Using non-static data to retrieve and run functions from the object is dangerous. If the data is user-controlled, it may allow executing arbitrary code."
ec759058ac22cea92e348b08882560ff,2,13,13,files.javascript.rules.lang.security.html-in-template-string,"This template literal looks like HTML and has interpolated variables. These variables are not HTML-encoded by default. If the variables contain HTML tags, these may be interpreted by the browser, resulting in cross-site scripting (XSS)."
ec8035be86f5af6b6b3c5287ea2d6f10,0,4,12,files.javascript.rules.lang.security.audit.detect-non-literal-fs-filename,"Detected that function argument `folderName` has entered the fs module. An attacker could potentially control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are validated."
ec8edc3bd225db06b720980dec58549f,0,19,107,files.javascript.rules.jquery.security.audit.prohibit-jquery-html,"JQuery's `html` function is susceptible to Cross Site Scripting (XSS) attacks. If you're just passing text, consider `text` instead. Otherwise, use a function that escapes HTML such as edX's `HtmlUtils.setHtml()`."
ec8edc3bd225db06b720980dec58549f,0,23,5,files.javascript.rules.jquery.security.audit.jquery-insecure-method,User controlled data in a jQuery's `.after(...)` is an anti-pattern that can lead to XSS vulnerabilities
ecb750a4f6829fabb7bf00714a0b91dc,1,30,7,files.javascript.rules.express.security.audit.remote-property-injection,"Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype. Use literal values for object properties."
ecbd76caa0a1f8c21e479b86a4d9a5be,3,21,11,files.javascript.rules.puppeteer.security.audit.puppeteer-goto-injection,If unverified user data can reach the `goto` method it can result in Server-Side Request Forgery vulnerabilities
ed7820f9ae2b0293df2eaea66411f796,1,13,27,files.javascript.rules.lang.security.html-in-template-string,"This template literal looks like HTML and has interpolated variables. These variables are not HTML-encoded by default. If the variables contain HTML tags, these may be interpreted by the browser, resulting in cross-site scripting (XSS)."
ed7820f9ae2b0293df2eaea66411f796,1,34,9,files.javascript.rules.jquery.security.audit.jquery-insecure-method,User controlled data in a jQuery's `.append(...)` is an anti-pattern that can lead to XSS vulnerabilities
ed7820f9ae2b0293df2eaea66411f796,1,46,25,files.javascript.rules.lang.security.html-in-template-string,"This template literal looks like HTML and has interpolated variables. These variables are not HTML-encoded by default. If the variables contain HTML tags, these may be interpreted by the browser, resulting in cross-site scripting (XSS)."
ed7820f9ae2b0293df2eaea66411f796,1,56,9,files.javascript.rules.jquery.security.audit.jquery-insecure-method,User controlled data in a jQuery's `.append(...)` is an anti-pattern that can lead to XSS vulnerabilities
ed87053fae3d977df3ca0a61fbfe2218,2,42,5,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
ed87053fae3d977df3ca0a61fbfe2218,2,42,5,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `quizContainer.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
ed87053fae3d977df3ca0a61fbfe2218,2,53,3,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
ed87053fae3d977df3ca0a61fbfe2218,2,53,3,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `choices.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
ed87053fae3d977df3ca0a61fbfe2218,3,42,5,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
ed87053fae3d977df3ca0a61fbfe2218,3,42,5,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `quizContainer.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
ed87053fae3d977df3ca0a61fbfe2218,3,53,3,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
ed87053fae3d977df3ca0a61fbfe2218,3,53,3,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `choices.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
ed92d6aae162293bc3b0757ecb680804,13,2,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
ed92d6aae162293bc3b0757ecb680804,4,2,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
eda98d9b9f49e5d24dd979d3d8eb18cd,1,6,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
eed8cdee9c1206f763e80b5d227a8d0d,5,11,46,files.javascript.rules.lang.security.audit.path-traversal.path-join-resolve-traversal,"Detected possible user input going into a `path.join` or `path.resolve` function. This could possibly lead to a path traversal vulnerability,  where the attacker can access arbitrary files stored in the file system. Instead, be sure to sanitize or validate user input first."
eed8cdee9c1206f763e80b5d227a8d0d,5,12,42,files.javascript.rules.lang.security.audit.detect-non-literal-fs-filename,"Detected that function argument `fileName` has entered the fs module. An attacker could potentially control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are validated."
eed8cdee9c1206f763e80b5d227a8d0d,6,13,44,files.javascript.rules.lang.security.audit.path-traversal.path-join-resolve-traversal,"Detected possible user input going into a `path.join` or `path.resolve` function. This could possibly lead to a path traversal vulnerability,  where the attacker can access arbitrary files stored in the file system. Instead, be sure to sanitize or validate user input first."
eed8cdee9c1206f763e80b5d227a8d0d,6,14,40,files.javascript.rules.lang.security.audit.detect-non-literal-fs-filename,"Detected that function argument `slug` has entered the fs module. An attacker could potentially control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are validated."
ef9c5477d99303f7a14de1b7cdd0f708,6,6,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
f001e968bee1069bb15ede6dcbdcff46,1,3,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
f001e968bee1069bb15ede6dcbdcff46,4,4,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
f0409419787e6588764e5cc7981ed8a8,1,6,5,files.javascript.rules.lang.security.audit.unsafe-dynamic-method,"Using non-static data to retrieve and run functions from the object is dangerous. If the data is user-controlled, it may allow executing arbitrary code."
f0409419787e6588764e5cc7981ed8a8,3,6,5,files.javascript.rules.lang.security.audit.unsafe-dynamic-method,"Using non-static data to retrieve and run functions from the object is dangerous. If the data is user-controlled, it may allow executing arbitrary code."
f0509959f444c35a8725329a90f8cd63,15,51,5,files.javascript.rules.lang.security.audit.prototype-pollution.prototype-pollution-assignment,"Possibility of prototype polluting assignment detected. By adding or modifying attributes of an object prototype, it is possible to create attributes that exist on every object, or replace critical attributes with malicious ones. This can be problematic if the software depends on existence or non-existence of certain attributes, or uses pre-defined attributes of object prototype (such as hasOwnProperty, toString or valueOf). Possible mitigations might be: freezing the object prototype, using an object without prototypes (via Object.create(null) ), blocking modifications of attributes that resolve to object prototype, using Map instead of object."
f069388324106b0a05c6a010af0c7c06,6,5,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
f07a7d756f1df338dbcc17688241c8ec,11,32,29,files.javascript.rules.jquery.security.audit.jquery-insecure-method,User controlled data in a jQuery's `.html(...)` is an anti-pattern that can lead to XSS vulnerabilities
f07a7d756f1df338dbcc17688241c8ec,11,32,29,files.javascript.rules.jquery.security.audit.prohibit-jquery-html,"JQuery's `html` function is susceptible to Cross Site Scripting (XSS) attacks. If you're just passing text, consider `text` instead. Otherwise, use a function that escapes HTML such as edX's `HtmlUtils.setHtml()`."
f087a5198786a35afa20c568579aeae4,0,53,9,files.javascript.rules.lang.security.audit.detect-non-literal-require,"Detected the use of require(variable). Calling require with a non-literal argument might allow an attacker to load and run arbitrary code, or access arbitrary files."
f087a5198786a35afa20c568579aeae4,0,54,9,files.javascript.rules.lang.security.audit.detect-non-literal-require,"Detected the use of require(variable). Calling require with a non-literal argument might allow an attacker to load and run arbitrary code, or access arbitrary files."
f087a5198786a35afa20c568579aeae4,0,106,9,files.javascript.rules.lang.security.audit.unsafe-dynamic-method,"Using non-static data to retrieve and run functions from the object is dangerous. If the data is user-controlled, it may allow executing arbitrary code."
f087a5198786a35afa20c568579aeae4,1,60,9,files.javascript.rules.lang.security.audit.detect-non-literal-require,"Detected the use of require(variable). Calling require with a non-literal argument might allow an attacker to load and run arbitrary code, or access arbitrary files."
f087a5198786a35afa20c568579aeae4,1,61,9,files.javascript.rules.lang.security.audit.detect-non-literal-require,"Detected the use of require(variable). Calling require with a non-literal argument might allow an attacker to load and run arbitrary code, or access arbitrary files."
f087a5198786a35afa20c568579aeae4,1,100,9,files.javascript.rules.lang.security.audit.unsafe-dynamic-method,"Using non-static data to retrieve and run functions from the object is dangerous. If the data is user-controlled, it may allow executing arbitrary code."
f1699545bcf4fa918015bb133e33a702,1,7,19,files.javascript.rules.lang.security.audit.unsafe-formatstring,"Detected string concatenation with a non-literal variable in a util.format / console.log function. If an attacker injects a format specifier in the string, it will forge the log message. Try to use constant values for the format string."
f1699545bcf4fa918015bb133e33a702,1,21,21,files.javascript.rules.lang.security.audit.unsafe-formatstring,"Detected string concatenation with a non-literal variable in a util.format / console.log function. If an attacker injects a format specifier in the string, it will forge the log message. Try to use constant values for the format string."
f1699545bcf4fa918015bb133e33a702,3,30,19,files.javascript.rules.lang.security.audit.unsafe-formatstring,"Detected string concatenation with a non-literal variable in a util.format / console.log function. If an attacker injects a format specifier in the string, it will forge the log message. Try to use constant values for the format string."
f1699545bcf4fa918015bb133e33a702,3,43,21,files.javascript.rules.lang.security.audit.unsafe-formatstring,"Detected string concatenation with a non-literal variable in a util.format / console.log function. If an attacker injects a format specifier in the string, it will forge the log message. Try to use constant values for the format string."
f1a4e0bb65ef86a1c4eb4552d965f473,5,5,5,files.javascript.rules.lang.security.audit.detect-non-literal-require,"Detected the use of require(variable). Calling require with a non-literal argument might allow an attacker to load and run arbitrary code, or access arbitrary files."
f1a4e0bb65ef86a1c4eb4552d965f473,7,5,5,files.javascript.rules.lang.security.audit.detect-non-literal-require,"Detected the use of require(variable). Calling require with a non-literal argument might allow an attacker to load and run arbitrary code, or access arbitrary files."
f22e51280c2bd4300dab43e3dac2a2f0,0,2,5,files.javascript.rules.lang.security.audit.detect-non-literal-require,"Detected the use of require(variable). Calling require with a non-literal argument might allow an attacker to load and run arbitrary code, or access arbitrary files."
f22e51280c2bd4300dab43e3dac2a2f0,0,3,5,files.javascript.rules.lang.security.audit.detect-non-literal-require,"Detected the use of require(variable). Calling require with a non-literal argument might allow an attacker to load and run arbitrary code, or access arbitrary files."
f22e51280c2bd4300dab43e3dac2a2f0,0,5,5,files.javascript.rules.lang.security.audit.detect-non-literal-require,"Detected the use of require(variable). Calling require with a non-literal argument might allow an attacker to load and run arbitrary code, or access arbitrary files."
f22e51280c2bd4300dab43e3dac2a2f0,1,2,5,files.javascript.rules.lang.security.audit.detect-non-literal-require,"Detected the use of require(variable). Calling require with a non-literal argument might allow an attacker to load and run arbitrary code, or access arbitrary files."
f22e51280c2bd4300dab43e3dac2a2f0,1,3,5,files.javascript.rules.lang.security.audit.detect-non-literal-require,"Detected the use of require(variable). Calling require with a non-literal argument might allow an attacker to load and run arbitrary code, or access arbitrary files."
f22e51280c2bd4300dab43e3dac2a2f0,1,5,5,files.javascript.rules.lang.security.audit.detect-non-literal-require,"Detected the use of require(variable). Calling require with a non-literal argument might allow an attacker to load and run arbitrary code, or access arbitrary files."
f29d2148cfae201fced9d3f2e409a3c2,5,8,19,files.javascript.rules.lang.security.html-in-template-string,"This template literal looks like HTML and has interpolated variables. These variables are not HTML-encoded by default. If the variables contain HTML tags, these may be interpreted by the browser, resulting in cross-site scripting (XSS)."
f29d2148cfae201fced9d3f2e409a3c2,5,17,3,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
f29d2148cfae201fced9d3f2e409a3c2,5,17,3,files.javascript.rules.browser.security.insecure-innerhtml,"User controlled data in a `document.getElementById(""moviesList"").innerHTML` is an anti-pattern that can lead to XSS vulnerabilities"
f2aaffea58b70445ba519ccf2372e605,1,2,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
f2d6f8ee7ac22a40e7d5fa1570ccc352,0,5,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
f2d6f8ee7ac22a40e7d5fa1570ccc352,5,4,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
f38e2a5fb2e35b0ec08aa51fe507ca83,2,12,5,files.javascript.rules.lang.security.audit.detect-non-literal-require,"Detected the use of require(variable). Calling require with a non-literal argument might allow an attacker to load and run arbitrary code, or access arbitrary files."
f38e2a5fb2e35b0ec08aa51fe507ca83,3,2,5,files.javascript.rules.lang.security.audit.detect-non-literal-require,"Detected the use of require(variable). Calling require with a non-literal argument might allow an attacker to load and run arbitrary code, or access arbitrary files."
f38e2a5fb2e35b0ec08aa51fe507ca83,3,3,5,files.javascript.rules.lang.security.audit.detect-non-literal-require,"Detected the use of require(variable). Calling require with a non-literal argument might allow an attacker to load and run arbitrary code, or access arbitrary files."
f38e2a5fb2e35b0ec08aa51fe507ca83,8,7,2,files.javascript.rules.lang.security.audit.detect-non-literal-require,"Detected the use of require(variable). Calling require with a non-literal argument might allow an attacker to load and run arbitrary code, or access arbitrary files."
f38e2a5fb2e35b0ec08aa51fe507ca83,8,8,2,files.javascript.rules.lang.security.audit.detect-non-literal-require,"Detected the use of require(variable). Calling require with a non-literal argument might allow an attacker to load and run arbitrary code, or access arbitrary files."
f439739a1accc7544a415563918d774b,0,13,10,files.javascript.rules.lang.security.audit.detect-redos,"Detected the use of a regular expression `^\w+([\.-]?\w+)*@\w+([\.-]?\w+)*(\.\w{2,3})+$` which appears to be vulnerable to a Regular expression Denial-of-Service (ReDoS). For this reason, it is recommended to review the regex and ensure it is not vulnerable to catastrophic backtracking, and if possible use a library which offers default safety against ReDoS vulnerabilities."
f469dd85c26d5b6ea221ab72d9f521ce,2,5,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
f469dd85c26d5b6ea221ab72d9f521ce,5,5,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
f4da86f4239d152c92485fc37fc2bff4,1,2,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
f4fbd3737e6189e99871a26220e7650c,0,7,5,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
f4fbd3737e6189e99871a26220e7650c,0,7,5,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `chatContainer.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
f4fbd3737e6189e99871a26220e7650c,4,33,13,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
f4fbd3737e6189e99871a26220e7650c,4,33,13,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `chatContainer.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
f5246b1c94ee6b85ec9dc5c11e772df9,4,11,9,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
f58d8a9fb2a835a12094b5702fc21ad3,2,5,13,files.javascript.rules.jquery.security.audit.jquery-insecure-method,User controlled data in a jQuery's `.append(...)` is an anti-pattern that can lead to XSS vulnerabilities
f67b6c37c98a4561011cbbbab6843447,1,4,10,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
f67b6c37c98a4561011cbbbab6843447,11,4,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
f67b6c37c98a4561011cbbbab6843447,6,4,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
f69d99ecdc10e27220432cff63585ba8,1,19,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
f69d99ecdc10e27220432cff63585ba8,3,2,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
f6caea9760d07616be5c5caa5b8d95ef,1,3,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
f6caea9760d07616be5c5caa5b8d95ef,1,17,12,files.javascript.rules.express.security.audit.xss.direct-response-write,"Detected directly writing to a Response object from user-defined input. This bypasses any HTML escaping and may expose your application to a Cross-Site-scripting (XSS) vulnerability. Instead, use 'resp.render()' to render safely escaped HTML."
f6d8b7ac34e26c1ea55a70714718b85f,0,4,14,files.javascript.rules.lang.security.html-in-template-string,"This template literal looks like HTML and has interpolated variables. These variables are not HTML-encoded by default. If the variables contain HTML tags, these may be interpreted by the browser, resulting in cross-site scripting (XSS)."
f6d8b7ac34e26c1ea55a70714718b85f,0,6,12,files.javascript.rules.lang.security.html-in-template-string,"This template literal looks like HTML and has interpolated variables. These variables are not HTML-encoded by default. If the variables contain HTML tags, these may be interpreted by the browser, resulting in cross-site scripting (XSS)."
f70f171081d6ecf4b3863b0fbb7577c3,1,6,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
f74c6a2e4fa97e7b924e0d2c9ac33738,0,28,9,files.javascript.rules.lang.security.audit.detect-non-literal-require,"Detected the use of require(variable). Calling require with a non-literal argument might allow an attacker to load and run arbitrary code, or access arbitrary files."
f7b3fe69a4bbc70902ab7ae629b85a2d,14,6,15,files.javascript.rules.lang.security.audit.unsafe-dynamic-method,"Using non-static data to retrieve and run functions from the object is dangerous. If the data is user-controlled, it may allow executing arbitrary code."
f7c0c58d10106a61e1820b78ab8080f4,1,2,5,files.javascript.rules.lang.security.audit.detect-non-literal-require,"Detected the use of require(variable). Calling require with a non-literal argument might allow an attacker to load and run arbitrary code, or access arbitrary files."
f815a7dc204d998d2fa9ac65d4ad26d6,3,9,19,files.javascript.rules.lang.security.audit.unsafe-formatstring,"Detected string concatenation with a non-literal variable in a util.format / console.log function. If an attacker injects a format specifier in the string, it will forge the log message. Try to use constant values for the format string."
f815a7dc204d998d2fa9ac65d4ad26d6,5,40,19,files.javascript.rules.lang.security.audit.unsafe-formatstring,"Detected string concatenation with a non-literal variable in a util.format / console.log function. If an attacker injects a format specifier in the string, it will forge the log message. Try to use constant values for the format string."
f8392c63e32fb7858cc3428672eac2bc,5,2,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
f84077c7e0fd461b640039a73c26d750,2,37,31,files.javascript.rules.browser.security.eval-detected,"Detected the use of eval(). eval() can be dangerous if used to evaluate dynamic content. If this content can be input from outside the program, this may be a code injection vulnerability. Ensure evaluated content is not definable by external sources."
f86b4340f9e72ecb57708ce7de9c5893,3,76,5,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
f86b4340f9e72ecb57708ce7de9c5893,3,76,5,files.javascript.rules.browser.security.insecure-innerhtml,"User controlled data in a `document.getElementById(""linesList"").innerHTML` is an anti-pattern that can lead to XSS vulnerabilities"
f86f462d4382ee3e0aa812882e81916e,3,2,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
f8c1d49f3794c50fb6771470ae5c931e,0,116,13,files.javascript.rules.lang.security.audit.unsafe-formatstring,"Detected string concatenation with a non-literal variable in a util.format / console.log function. If an attacker injects a format specifier in the string, it will forge the log message. Try to use constant values for the format string."
f8dd974497651c60b08058a49b67ae2f,0,2,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
f8fb385ade7de3b618cdee02010428d8,0,16,11,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
f8fb385ade7de3b618cdee02010428d8,0,16,11,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `para.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
f8fb385ade7de3b618cdee02010428d8,0,20,11,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
f8fb385ade7de3b618cdee02010428d8,0,20,11,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `para.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
f8fb385ade7de3b618cdee02010428d8,1,16,11,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
f8fb385ade7de3b618cdee02010428d8,1,16,11,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `para.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
f8fb385ade7de3b618cdee02010428d8,1,20,11,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
f8fb385ade7de3b618cdee02010428d8,1,20,11,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `para.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
f8fb385ade7de3b618cdee02010428d8,1,31,5,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
f8fb385ade7de3b618cdee02010428d8,1,31,5,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `para.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
f919ccc012de1344a6e37bdaeeecbfb4,4,92,3,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
f919ccc012de1344a6e37bdaeeecbfb4,4,92,3,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `predictionResults.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
f9c77bd815df6a97bc049e7db7ec710a,0,13,1,files.javascript.rules.browser.security.insufficient-postmessage-origin-validation,No validation of origin is done by the addEventListener API. It may be possible to exploit this flaw to perform Cross Origin attacks such as Cross-Site Scripting(XSS).
fa19373ab4db692e9bd75edb66cb63e5,0,3,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
fac7e711f10b1c34820b18f0c46e1a57,0,13,115,files.javascript.rules.browser.security.js-open-redirect-from-function,The application accepts potentially user-controlled input `postContent` which can control the location of the current window context. This can lead two types of vulnerabilities open-redirection and Cross-Site-Scripting (XSS) with JavaScript URIs. It is recommended to validate user-controllable input before allowing it to control the redirection.
faf7e0ef71bb7db0d9cd86d15198e725,4,4,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
faf87d220542ed84f4c368c97a92d229,4,13,7,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
faf87d220542ed84f4c368c97a92d229,4,13,7,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `infoDiv.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
faf87d220542ed84f4c368c97a92d229,4,15,7,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
faf87d220542ed84f4c368c97a92d229,4,15,7,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `paintingDiv.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
fb0e0517bf7ad3d32b1adeec9a225149,2,2,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
fb535ef0843feef8cee1f42d3db3800c,0,2,5,files.javascript.rules.lang.security.audit.unsafe-dynamic-method,"Using non-static data to retrieve and run functions from the object is dangerous. If the data is user-controlled, it may allow executing arbitrary code."
fb80b75418bd2b8c815cb5fd48ea353c,1,22,25,files.javascript.rules.lang.security.audit.detect-non-literal-fs-filename,"Detected that function argument `filePath` has entered the fs module. An attacker could potentially control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are validated."
fba26083c3170408d0010035bbfae10c,1,16,3,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
fba26083c3170408d0010035bbfae10c,1,16,3,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `freieParkplaetze.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
fbc9662ba22ad25bf8a04c8076b7a23a,0,11,5,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
fbc9662ba22ad25bf8a04c8076b7a23a,0,11,5,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `tripDiv.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
fbc9662ba22ad25bf8a04c8076b7a23a,0,11,25,files.javascript.rules.lang.security.html-in-template-string,"This template literal looks like HTML and has interpolated variables. These variables are not HTML-encoded by default. If the variables contain HTML tags, these may be interpreted by the browser, resulting in cross-site scripting (XSS)."
fbc9662ba22ad25bf8a04c8076b7a23a,0,26,7,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
fbc9662ba22ad25bf8a04c8076b7a23a,0,26,7,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `routeDetailsDiv.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
fbc9662ba22ad25bf8a04c8076b7a23a,0,26,36,files.javascript.rules.lang.security.html-in-template-string,"This template literal looks like HTML and has interpolated variables. These variables are not HTML-encoded by default. If the variables contain HTML tags, these may be interpreted by the browser, resulting in cross-site scripting (XSS)."
fbf052dcdcfd07d93006bd2bd117bc82,4,4,17,files.javascript.rules.lang.security.audit.detect-non-literal-regexp,"RegExp() called with a `letter` function argument, this might allow an attacker to cause a Regular Expression Denial-of-Service (ReDoS) within your application as RegExP blocks the main thread. For this reason, it is recommended to use hardcoded regexes instead. If your regex is run on user-controlled input, consider performing input validation or use a regex checking/sanitization library such as https://www.npmjs.com/package/recheck to verify that the regex does not appear vulnerable to ReDoS."
fc882780bd640e51f48d979a3cbbf6ad,2,2,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
fcb23826489934dcacbe71ee848430d1,1,14,3,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
fcb23826489934dcacbe71ee848430d1,1,14,3,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `document.getElementById('description').innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
fcb23826489934dcacbe71ee848430d1,1,25,7,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
fcb23826489934dcacbe71ee848430d1,1,25,7,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `document.getElementById('description').innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
fdc0375973ff73d553a3ad1127ded74d,5,26,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
fdc07774529905f26041a18d3ee7ce00,0,2,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
fdc07774529905f26041a18d3ee7ce00,0,34,37,files.javascript.rules.jsonwebtoken.security.hardcoded-jwt-secret,"A hard-coded credential was detected. It is not recommended to store credentials in source-code, as this risks secrets being leaked and used by either an internal or external malicious adversary. It is recommended to use environment variables to securely provide credentials or retrieve credentials from a secure vault or HSM (Hardware Security Module)."
fdc07774529905f26041a18d3ee7ce00,0,47,39,files.javascript.rules.jsonwebtoken.security.hardcoded-jwt-secret,"A hard-coded credential was detected. It is not recommended to store credentials in source-code, as this risks secrets being leaked and used by either an internal or external malicious adversary. It is recommended to use environment variables to securely provide credentials or retrieve credentials from a secure vault or HSM (Hardware Security Module)."
fe856fe35d241c6469e48621763ca6e2,2,3,18,files.javascript.rules.jquery.security.audit.prohibit-jquery-html,"JQuery's `html` function is susceptible to Cross Site Scripting (XSS) attacks. If you're just passing text, consider `text` instead. Otherwise, use a function that escapes HTML such as edX's `HtmlUtils.setHtml()`."
fea6e837dfae3ff534b9dc2f15e0c747,6,17,17,files.javascript.rules.lang.security.audit.unsafe-formatstring,"Detected string concatenation with a non-literal variable in a util.format / console.log function. If an attacker injects a format specifier in the string, it will forge the log message. Try to use constant values for the format string."
fea6e837dfae3ff534b9dc2f15e0c747,6,40,19,files.javascript.rules.lang.security.audit.unsafe-formatstring,"Detected string concatenation with a non-literal variable in a util.format / console.log function. If an attacker injects a format specifier in the string, it will forge the log message. Try to use constant values for the format string."
fea6e837dfae3ff534b9dc2f15e0c747,6,42,19,files.javascript.rules.lang.security.audit.unsafe-formatstring,"Detected string concatenation with a non-literal variable in a util.format / console.log function. If an attacker injects a format specifier in the string, it will forge the log message. Try to use constant values for the format string."
ff0bd3d7f1025ced4e9abb678c861405,0,18,21,files.javascript.rules.lang.security.audit.unsafe-formatstring,"Detected string concatenation with a non-literal variable in a util.format / console.log function. If an attacker injects a format specifier in the string, it will forge the log message. Try to use constant values for the format string."
ff0bd3d7f1025ced4e9abb678c861405,0,44,17,files.javascript.rules.lang.security.audit.unsafe-formatstring,"Detected string concatenation with a non-literal variable in a util.format / console.log function. If an attacker injects a format specifier in the string, it will forge the log message. Try to use constant values for the format string."
ff0bd3d7f1025ced4e9abb678c861405,0,49,17,files.javascript.rules.lang.security.audit.unsafe-formatstring,"Detected string concatenation with a non-literal variable in a util.format / console.log function. If an attacker injects a format specifier in the string, it will forge the log message. Try to use constant values for the format string."
ff2f96e0fb0d1d839023d250f5b1d493,9,4,5,files.javascript.rules.browser.security.insecure-document-method,"User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities"
ff2f96e0fb0d1d839023d250f5b1d493,9,4,5,files.javascript.rules.browser.security.insecure-innerhtml,User controlled data in a `p.innerHTML` is an anti-pattern that can lead to XSS vulnerabilities
ff2f96e0fb0d1d839023d250f5b1d493,9,4,19,files.javascript.rules.lang.security.html-in-template-string,"This template literal looks like HTML and has interpolated variables. These variables are not HTML-encoded by default. If the variables contain HTML tags, these may be interpreted by the browser, resulting in cross-site scripting (XSS)."
ff309b600d7e8b9c83d87fa1a09a6b5a,1,2,7,files.javascript.rules.express.security.audit.express-check-csurf-middleware-usage,A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.
ff8351e59f27bc81b55c00adffef6944,6,20,5,files.javascript.rules.jquery.security.audit.jquery-insecure-method,User controlled data in a jQuery's `.html(...)` is an anti-pattern that can lead to XSS vulnerabilities
ff8351e59f27bc81b55c00adffef6944,6,20,5,files.javascript.rules.jquery.security.audit.prohibit-jquery-html,"JQuery's `html` function is susceptible to Cross Site Scripting (XSS) attacks. If you're just passing text, consider `text` instead. Otherwise, use a function that escapes HTML such as edX's `HtmlUtils.setHtml()`."
