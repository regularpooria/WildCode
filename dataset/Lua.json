[
  {
    "conversation_hash": "35f33290f1d050f6a1e09ccdb0469ef7",
    "code_index": 4,
    "language": "Lua",
    "libraries": [],
    "code": "local figura = require(\"figura\")\n\n-- Get the left arm part of the Minecraft character model\nlocal left_arm = figura.get_part(\"leftArm\")\n\n-- Enable collision for the left arm\nleft_arm.collision = true",
    "filename": "35f33290f1d050f6a1e09ccdb0469ef7_4.lua"
  },
  {
    "conversation_hash": "22e1ce87b4e323e2e51803efd24d3e35",
    "code_index": 8,
    "language": "Lua",
    "libraries": [],
    "code": "local root = models.model.root\nlocal skirt = models.model.World.skirt\nlocal vertices = {}\nlocal links = {}\nlocal spheres = {\n    {\n        parent=root.LeftLeg,\n        position=vec(0,-4,0),\n        radius=4/16\n    },\n    {\n        parent=root.RightLeg,\n        position=vec(0,-4,0),\n        radius=4/16\n    },\n    {\n        parent=root.Body,\n        position=vec(0,-6,0),\n        radius=6/16\n    },\n}",
    "filename": "22e1ce87b4e323e2e51803efd24d3e35_8.lua"
  },
  {
    "conversation_hash": "22e1ce87b4e323e2e51803efd24d3e35",
    "code_index": 10,
    "language": "Lua",
    "libraries": [],
    "code": "local verts = skirt:getAllVertices()[0]\nlocal parentToWorldMatrix = root.Body:partToWorldMatrix()\nfor i, v in ipairs(verts) do\n    ...\nend",
    "filename": "22e1ce87b4e323e2e51803efd24d3e35_10.lua"
  },
  {
    "conversation_hash": "22e1ce87b4e323e2e51803efd24d3e35",
    "code_index": 15,
    "language": "Lua",
    "libraries": [],
    "code": "local root = models.skirt.root\nlocal skirt = models.skirt.World.skirt\nlocal vertices = {}\nlocal links = {}\nlocal spheres = {\n...}",
    "filename": "22e1ce87b4e323e2e51803efd24d3e35_15.lua"
  },
  {
    "conversation_hash": "22e1ce87b4e323e2e51803efd24d3e35",
    "code_index": 19,
    "language": "Lua",
    "libraries": [],
    "code": "local verts = skirt:getAllVertices()[\"skirt\"]\n...\nfor i, v in ipairs(verts) do\n...\nend",
    "filename": "22e1ce87b4e323e2e51803efd24d3e35_19.lua"
  },
  {
    "conversation_hash": "c6bde235753a2fd15fcca4b842545ec8",
    "code_index": 1,
    "language": "Lua",
    "libraries": [],
    "code": "vim.cmd([[\n  augroup PythonIndent\n    autocmd FileType python setlocal tabstop=4 shiftwidth=4 softtabstop=4 noexpandtab\n  augroup END\n]])",
    "filename": "c6bde235753a2fd15fcca4b842545ec8_1.lua"
  },
  {
    "conversation_hash": "d927c90460b58dd57f7df91a653bbcf0",
    "code_index": 1,
    "language": "Lua",
    "libraries": [],
    "code": "local myTable = {}\n\nmyTable[\"key1\"] = \"value1\"\nmyTable[\"key2\"] = \"value2\"\nmyTable[\"key3\"] = \"value3\"",
    "filename": "d927c90460b58dd57f7df91a653bbcf0_1.lua"
  },
  {
    "conversation_hash": "a3bf45e3efc1d4ac107552e6fcee742e",
    "code_index": 7,
    "language": "Lua",
    "libraries": [],
    "code": "local propModel = GetHashKey(\"prop_ld_flow_bottle\") -- Get the model hash, replace \"prop_ld_flow_bottle\" with the desired model name\nattachObjectToPlayerLeftHand(propModel)\n\n-- Detach the object later (use a trigger like a keypress, command, or event)\ndetachObjectFromEntity()",
    "filename": "a3bf45e3efc1d4ac107552e6fcee742e_7.lua"
  },
  {
    "conversation_hash": "93cec5782d585077999e59b1fe695fba",
    "code_index": 2,
    "language": "Lua",
    "libraries": [],
    "code": "local groundThreshold = 0.5 -- you can adjust this value based on your ground level\n\nif isColliding and volleyball.z <= groundThreshold then\n    -- The volleyball has hit the ground\nend",
    "filename": "93cec5782d585077999e59b1fe695fba_2.lua"
  },
  {
    "conversation_hash": "b9db748ed908b609d796033601218182",
    "code_index": 10,
    "language": "Lua",
    "libraries": [],
    "code": "local ReplicatedStorage = game:GetService(\"ReplicatedStorage\")\n\nlocal toggleRagdollEvent = Instance.new(\"RemoteEvent\")\ntoggleRagdollEvent.Name = \"ToggleRagdollEvent\"\ntoggleRagdollEvent.Parent = ReplicatedStorage",
    "filename": "b9db748ed908b609d796033601218182_10.lua"
  },
  {
    "conversation_hash": "b9db748ed908b609d796033601218182",
    "code_index": 11,
    "language": "Lua",
    "libraries": [],
    "code": "local ReplicatedStorage = game:GetService(\"ReplicatedStorage\")\nlocal toggleRagdollEvent = ReplicatedStorage.ToggleRagdollEvent\n\n-- Trigger ragdoll effect for the player\ntoggleRagdollEvent:FireServer(player)",
    "filename": "b9db748ed908b609d796033601218182_11.lua"
  },
  {
    "conversation_hash": "226b7fb117fd3f496c5be36a57ea713e",
    "code_index": 0,
    "language": "Lua",
    "libraries": [],
    "code": "local ragdollEvent = Instance.new(\"RemoteEvent\")\n\n  ragdollEvent.Name = \"RagdollEvent\"\n\n  ragdollEvent.Parent = game:GetService(\"ReplicatedStorage\")",
    "filename": "226b7fb117fd3f496c5be36a57ea713e_0.lua"
  },
  {
    "conversation_hash": "226b7fb117fd3f496c5be36a57ea713e",
    "code_index": 8,
    "language": "Lua",
    "libraries": [],
    "code": "-- Get the character model and humanoid\nlocal character = player.Character or player.CharacterAdded:Wait()\nlocal humanoid = character:FindFirstChildOfClass(\"Humanoid\")\n\n-- Create the Ragdoll object\nlocal ragdoll = Instance.new(\"Model\")\nragdoll.Name = \"Ragdoll\"\n\n-- Add the Ragdoll object as a child of the Humanoid object\nragdoll.Parent = humanoid",
    "filename": "226b7fb117fd3f496c5be36a57ea713e_8.lua"
  },
  {
    "conversation_hash": "3bfe752f947b762117afd756aa824085",
    "code_index": 4,
    "language": "Lua",
    "libraries": [],
    "code": "-- create a RemoteEvent for triggering the ragdoll system\nlocal RagdollEvent = game.ReplicatedStorage.RagdollEvent\n\n-- trigger the ragdoll system by firing the RemoteEvent\nRagdollEvent:FireAllClients()",
    "filename": "3bfe752f947b762117afd756aa824085_4.lua"
  },
  {
    "conversation_hash": "3bfe752f947b762117afd756aa824085",
    "code_index": 7,
    "language": "Lua",
    "libraries": [],
    "code": "local ToggleRagdoll = game.ReplicatedStorage.ToggleRagdoll\n\n-- assume `targetPlayer` is the player you want to toggle ragdoll for\nlocal targetPlayer = game.Players:GetPlayerFromCharacter(workspace.Ragdoll)\n\n-- assume `isRagdollOn` is a Boolean value indicating whether to turn the ragdoll system on or off\nlocal isRagdollOn = true\n\nif targetPlayer then\n    -- fire the ToggleRagdoll RemoteEvent to toggle the ragdoll system on/off for the target player\n    ToggleRagdoll:FireServer(targetPlayer, isRagdollOn)\nend",
    "filename": "3bfe752f947b762117afd756aa824085_7.lua"
  },
  {
    "conversation_hash": "1059c241a49385357cc4c0e96ec87629",
    "code_index": 13,
    "language": "Lua",
    "libraries": [],
    "code": "#!/bin/bash\n# 注释文本\n\n# 执行的命令或脚本\ncommand1\ncommand2\n\n# 退出 rc.local\nexit 0",
    "filename": "1059c241a49385357cc4c0e96ec87629_13.lua"
  },
  {
    "conversation_hash": "85e77004619243c57ffff08ad0816ba9",
    "code_index": 1,
    "language": "Lua",
    "libraries": [],
    "code": "local courtWidth = 10 -- Replace this with the actual court width\nlocal courtLength = 20 -- Replace this with the actual court length\n\nlocal middle = {\n  x = tennisCourt.x + (courtWidth / 2),\n  y = tennisCourt.y + (courtLength / 2)\n}",
    "filename": "85e77004619243c57ffff08ad0816ba9_1.lua"
  },
  {
    "conversation_hash": "48e68492f218a8fa2471c0359f21f1e8",
    "code_index": 3,
    "language": "Lua",
    "libraries": [],
    "code": "-- Create the volleyball ball entity\nlocal ballModel = `Model Name or Hash`\nlocal ball = CreateObject(ballModel, posX, posY, posZ, true, false, false)\n\n-- Start simulating the volleyball ball physics\nsimulateVolleyballBall(ball)",
    "filename": "48e68492f218a8fa2471c0359f21f1e8_3.lua"
  },
  {
    "conversation_hash": "056f06fe3c3c0d79c72b43bd13c07816",
    "code_index": 0,
    "language": "Lua",
    "libraries": [],
    "code": "local score = {['TeamA'] = 0, ['TeamB'] = 0}\nlocal teams = {'TeamA', 'TeamB'}\n\nfor _, team in ipairs(teams) do\n    local formattedScore = tostring(score[team])\n    TriggerClientEvent(\"qb-nui:update-score\", team, formattedScore)\nend",
    "filename": "056f06fe3c3c0d79c72b43bd13c07816_0.lua"
  },
  {
    "conversation_hash": "1db21996f798d558eda8cf45e8ee0464",
    "code_index": 1,
    "language": "Lua",
    "libraries": [],
    "code": "Define func add with (num1, num2): return num1 + num2\nDefine func sub with (num1, num2): return num1 - num2\nDefine func mul with (num1, num2): return num1 * num2\nDefine func div with (num1, num2):\n    If num2 != 0: return num1 / num2\n    Else: print 'Cannot divide by zero'; return nothing\n\nGet user input i1, i2, and operation\n\nIf operation == '+': print add(i1, i2)\nElif operation == '-': print sub(i1, i2)\nElif operation == '*': print mul(i1, i2)\nElif operation == '/': print div(i1, i2)\nElse: print 'Invalid operation'\n\nEnd",
    "filename": "1db21996f798d558eda8cf45e8ee0464_1.lua"
  },
  {
    "conversation_hash": "41e9be8c47d07f292ba147ab5625964f",
    "code_index": 0,
    "language": "Lua",
    "libraries": [],
    "code": "local animDict = \"your_animation_dictionary\"\nlocal animName = \"your_animation_name\"\n\nRequestAnimDict(animDict)\nwhile not HasAnimDictLoaded(animDict) do\n    Citizen.Wait(100)\nend",
    "filename": "41e9be8c47d07f292ba147ab5625964f_0.lua"
  },
  {
    "conversation_hash": "41e9be8c47d07f292ba147ab5625964f",
    "code_index": 1,
    "language": "Lua",
    "libraries": [],
    "code": "local ped = PlayerPedId()\nlocal blendDuration = 1000 -- milliseconds for the blending duration\nlocal animSpeed = 1.0 -- animation speed (1.0 is normal speed)\n\nTaskPlayAnim(ped, animDict, animName, animSpeed, -1, blendDuration, 1, 1, false, false, false)",
    "filename": "41e9be8c47d07f292ba147ab5625964f_1.lua"
  },
  {
    "conversation_hash": "41e9be8c47d07f292ba147ab5625964f",
    "code_index": 3,
    "language": "Lua",
    "libraries": [],
    "code": "local newValue = 0 -- the new value that you want to blend or interpolate towards\nlocal currentValue = 0 -- the animation's current value (blend or speed)\nlocal duration = 1000 -- total duration for the interpolation\nlocal startTime = GetGameTimer()\n\nwhile GetGameTimer() <= startTime + duration do\n    local elapsed = GetGameTimer() - startTime\n    local t = elapsed / duration\n\n    currentValue = lerp(currentValue, newValue, t)\n    N_0x13ca69ac1ffd5f26(ped, 0, currentValue) -- set the blend weight for the animation\n    -- or\n    -- SetAnimRate(ped, currentValue) -- set the speed for the animation\n\n    Citizen.Wait(0)\nend",
    "filename": "41e9be8c47d07f292ba147ab5625964f_3.lua"
  },
  {
    "conversation_hash": "86e73ed539666f2696a669c538b4c273",
    "code_index": 1,
    "language": "Lua",
    "libraries": [],
    "code": "local playerCoords = GetEntityCoords(PlayerPedId())\nif isInsideVolleyballCourt(playerCoords) then\n  -- Player is inside the volleyball court\nelse\n  -- Player is outside the volleyball court\nend",
    "filename": "86e73ed539666f2696a669c538b4c273_1.lua"
  },
  {
    "conversation_hash": "d093bb077e23fd47cf4c48295ef13058",
    "code_index": 0,
    "language": "Lua",
    "libraries": [],
    "code": "local box = {\n    vector1 = vector3(x1, y1, z1),\n    vector2 = vector3(x2, y2, z2),\n    vector3 = vector3(x3, y3, z3),\n    vector4 = vector3(x4, y4, z4)\n}",
    "filename": "d093bb077e23fd47cf4c48295ef13058_0.lua"
  },
  {
    "conversation_hash": "14ebde43335981a54f2aaaa5b3d38ef9",
    "code_index": 0,
    "language": "Lua",
    "libraries": [],
    "code": "local boxZoneCorners = {\n  vector2(x1, y1),\n  vector2(x2, y2),\n  vector2(x3, y3),\n  vector2(x4, y4)\n}",
    "filename": "14ebde43335981a54f2aaaa5b3d38ef9_0.lua"
  },
  {
    "conversation_hash": "3e9fd51e768b1059a399028062b14011",
    "code_index": 3,
    "language": "Lua",
    "libraries": [],
    "code": "local landed = math.abs(newPosition.z - initialPosition.z) < 0.1\n   if landed then\n      -- The entity has landed, so we can break the loop and obtain the final landing position\n      break\n   end",
    "filename": "3e9fd51e768b1059a399028062b14011_3.lua"
  },
  {
    "conversation_hash": "d02875016bf32a304a9f04fe9e86e7a4",
    "code_index": 1,
    "language": "Lua",
    "libraries": [],
    "code": "local timeStep = 5 -- in milliseconds\n   local targetZ = -- the Z value where you want the object to land (usually the ground)\n   local entityPos = GetEntityCoords(entity)\n\n   while entityPos.z > targetZ do\n      Citizen.Wait(timeStep)\n      SimulatePhysicsStep(entity, timeStep / 1000)\n      entityPos = GetEntityCoords(entity)\n   end",
    "filename": "d02875016bf32a304a9f04fe9e86e7a4_1.lua"
  },
  {
    "conversation_hash": "51170ea0ab370f779d5ab31757a26246",
    "code_index": 0,
    "language": "Lua",
    "libraries": [],
    "code": "local teams = {['A'] = 0, ['B'] = 0}\nlocal zeroCount = 0\n\nfor k, v in pairs(teams) do\n    if v == 0 then\n        zeroCount = zeroCount + 1\n    end\nend\n\nif zeroCount == 2 then\n    -- Trigger event\nend",
    "filename": "51170ea0ab370f779d5ab31757a26246_0.lua"
  },
  {
    "conversation_hash": "51170ea0ab370f779d5ab31757a26246",
    "code_index": 1,
    "language": "Lua",
    "libraries": [],
    "code": "local teams = {['A'] = 0, ['B'] = 0}\n\nif teams['A'] == 0 and teams['B'] == 0 then\n    -- Trigger event\nend",
    "filename": "51170ea0ab370f779d5ab31757a26246_1.lua"
  },
  {
    "conversation_hash": "e2c439e898c27d5f6c410245d634bab4",
    "code_index": 0,
    "language": "Lua",
    "libraries": [
      "the"
    ],
    "code": "local upperBodyAnim = \"missfam4\"\nlocal baseAnim = \"base\"\n\n-- Start the animation on the upper body\nTaskPlayAnimAdvanced(PlayerPedId(), upperBodyAnim, \"anim@heists@fleeca_bank@ig_10\", vector3(0.0, 0.0, 0.0), vector3(0.0, 0.0, 0.0), 8.0, -8.0, -1, 49, 0, 0, 0, 0)\n\n-- Set the animation to loop\nTaskPlayAnimAdvanced(PlayerPedId(), baseAnim, \"anim@heists@fleeca_bank@ig_10\", vector3(0.0, 0.0, 0.0), vector3(0.0, 0.0, 0.0), -1, -8.0, -1, 49, 0, 0, 0, 0)\n\n-- Wait for the animation to finish\nCitizen.Wait(5000)\n\n-- Clear the animation from the upper body\nClearPedSecondaryTask(PlayerPedId())",
    "filename": "e2c439e898c27d5f6c410245d634bab4_0.lua"
  },
  {
    "conversation_hash": "1dff534d6fc9d4cdb434288cb79eddae",
    "code_index": 0,
    "language": "Lua",
    "libraries": [],
    "code": "local playerPed = PlayerPedId()\nlocal animDict = \"missfam4\"\nlocal animName = \"base\"\nlocal upperBodyOnly = true -- set to true for upper body only animation\n\n-- Load the animation dictionary\nRequestAnimDict(animDict)\nwhile not HasAnimDictLoaded(animDict) do\n    Citizen.Wait(100)\nend\n\n-- Play the animation\nTaskPlayUpperAnim(playerPed, animDict, animName, -1, -1, -1, 49, 0, 0, 0, 0)",
    "filename": "1dff534d6fc9d4cdb434288cb79eddae_0.lua"
  },
  {
    "conversation_hash": "4b08ba8b43fe7dfb61837bca00ea74f8",
    "code_index": 0,
    "language": "Lua",
    "libraries": [],
    "code": "local variable = \"A\" -- replace \"A\" with your variable name\n\nif variable == \"A\" then\n    -- Trigger event with arg \"B\"\n    TriggerEvent(\"your-event-name\", \"B\")\nelseif variable == \"B\" then\n    -- Trigger event with arg \"A\"\n    TriggerEvent(\"your-event-name\", \"A\")\nend",
    "filename": "4b08ba8b43fe7dfb61837bca00ea74f8_0.lua"
  },
  {
    "conversation_hash": "94d789cd7befa5389d97350c5e3aff64",
    "code_index": 1,
    "language": "Lua",
    "libraries": [],
    "code": "local markerB = {\n    type = 1,\n    pos = vector3(x, y, z),\n    size = {x=1.0, y=1.0, z=1.0},\n    r = 0, g = 0, b = 255, a = 200,\n    rotation = {x=0.0, y=0.0, z=0.0},\n    bobUpAndDown = true\n}\n\n-- create the marker\nlocal markerBId = Citizen.InvokeNative(0x554D9D53F696D002, markerB.type, markerB.pos.x, markerB.pos.y, markerB.pos.z, markerB.size.x, markerB.size.y, markerB.size.z, markerB.r, markerB.g, markerB.b, markerB.a, markerB.rotation.x, markerB.rotation.y, markerB.rotation.z, markerB.bobUpAndDown, false, 0, false)",
    "filename": "94d789cd7befa5389d97350c5e3aff64_1.lua"
  },
  {
    "conversation_hash": "cf4468cbe195688b994ff03658c18796",
    "code_index": 1,
    "language": "Lua",
    "libraries": [],
    "code": "local blip = AddBlipForCoord(x, y, z)\nSetBlipSprite(blip, sprite)\nSetBlipDisplay(blip, display)\nSetBlipScale(blip, scale)\nSetBlipColour(blip, color)\nSetBlipAsShortRange(blip, isShortRange)\nBeginTextCommandSetBlipName(\"STRING\")\nAddTextComponentString(label)\nEndTextCommandSetBlipName(blip)",
    "filename": "cf4468cbe195688b994ff03658c18796_1.lua"
  },
  {
    "conversation_hash": "cf4468cbe195688b994ff03658c18796",
    "code_index": 2,
    "language": "Lua",
    "libraries": [],
    "code": "local blip = AddBlipForRadius(x, y, z, radius)\nSetBlipSprite(blip, sprite)\nSetBlipDisplay(blip, display)\nSetBlipScale(blip, scale)\nSetBlipColour(blip, color)\nSetBlipAsShortRange(blip, isShortRange)\nBeginTextCommandSetBlipName(\"STRING\")\nAddTextComponentString(label)\nEndTextCommandSetBlipName(blip)",
    "filename": "cf4468cbe195688b994ff03658c18796_2.lua"
  },
  {
    "conversation_hash": "0d83eb3bfd5062071f04c904dcaff824",
    "code_index": 0,
    "language": "Lua",
    "libraries": [],
    "code": "local teams = {\n    teamA = {count = 0, maxCount = 1},\n    teamB = {count = 0, maxCount = 1},\n    // Add more teams if needed.\n}",
    "filename": "0d83eb3bfd5062071f04c904dcaff824_0.lua"
  },
  {
    "conversation_hash": "28988a2bce77625f1cd5974fa199323d",
    "code_index": 0,
    "language": "Lua",
    "libraries": [],
    "code": "local lastPressedTime = 0\nlocal cooldownTime = 5000 -- Adjust this value for desired cooldown duration in milliseconds.\n\nif isPlayerNearObject(createdObject, 3.0) and IsControlJustReleased(0, 38) and not holdingball then\n    local currentTime = GetGameTimer()\n    \n    if currentTime - lastPressedTime >= cooldownTime then\n        lastPressedTime = currentTime\n\n        if not NetworkHasControlOfEntity(createdObject) then\n            local timeout = GetGameTimer() + 2000\n            NetworkRequestControlOfEntity(createdObject)\n            while (not NetworkHasControlOfEntity(createdObject)) and (GetGameTimer() < timeout) do\n                Citizen.Wait(0)\n            end\n        end\n\n        local playerRotation = GetEntityRotation(PlayerPedId(), 2)\n        local forwardVector = GetEntityForwardVector(PlayerPedId())\n        local forceVector = vector3(\n            forwardVector.x * forwardForceIntensity,\n            forwardVector.y * forwardForceIntensity,\n            upwardForceIntensity\n        )\n        ApplyForceToEntity(createdObject, 1, forceVector.x, forceVector.y, forceVector.z, 0.0, 0.0, 0.0, 0, false, true, true, false, true)\n    end\nend",
    "filename": "28988a2bce77625f1cd5974fa199323d_0.lua"
  },
  {
    "conversation_hash": "c7d3d941eabbffe03c16c6919741b3e8",
    "code_index": 0,
    "language": "Lua",
    "libraries": [],
    "code": "local teams = {['A'] = playerid_A, ['B'] = playerid_B}\nlocal side = 'A'\n\nfor k, playerid in pairs(teams) do\n    if k == side then\n        -- Side A wins.\n        TriggerClientEvent('main-volleyball:client:drawtext', playerid, \"You win\")\n    else\n        -- Side B loses.\n        TriggerClientEvent('main-volleyball:client:drawtext', playerid, \"You lose\")\n    end\nend",
    "filename": "c7d3d941eabbffe03c16c6919741b3e8_0.lua"
  },
  {
    "conversation_hash": "862507809995a02d0f2de07ab5e4ec79",
    "code_index": 2,
    "language": "Lua",
    "libraries": [],
    "code": "html, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed,\nfigure, figcaption, footer, header, hgroup,\nmenu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n\tmargin: 0;\n\tpadding: 0;\n\tborder: 0;\n\tfont-size: 100%;\n\tfont-family: inherit; /* Унаследовать шрифт от родительского элемента */\n\tvertical-align: baseline;\n}",
    "filename": "862507809995a02d0f2de07ab5e4ec79_2.lua"
  },
  {
    "conversation_hash": "3e36781bd099336965f79acbb8c9b537",
    "code_index": 3,
    "language": "Lua",
    "libraries": [],
    "code": "while true do\n   spawn()\n   while true do\n      think()\n   end\nend",
    "filename": "3e36781bd099336965f79acbb8c9b537_3.lua"
  },
  {
    "conversation_hash": "5c10b0330e833574eaede99db68c3698",
    "code_index": 1,
    "language": "Lua",
    "libraries": [],
    "code": "for i = 1:3\n    for j = 1:3\n        img(i,j).x = i;\n        img(i,j).y = j;\n        img(i,j).val = A(i,j);\n    end\nend",
    "filename": "5c10b0330e833574eaede99db68c3698_1.lua"
  },
  {
    "conversation_hash": "6ef968042101ca95842ee9831deb3003",
    "code_index": 1,
    "language": "Lua",
    "libraries": [],
    "code": "VerticalDivider(\n  color: Colors.red,\n  thickness: 2,\n  indent: 10,\n  endIndent: 10,\n)",
    "filename": "6ef968042101ca95842ee9831deb3003_1.lua"
  },
  {
    "conversation_hash": "b0ab6583fc600e5afce8e73c513951c0",
    "code_index": 0,
    "language": "Lua",
    "libraries": [],
    "code": "brm(\n  formula = dcr ~ -1 + dist + (dist|observer),\n  data = test,\n  family = gaussian(),\n  chains = 2,\n  cores = 4,\n  iter = 4000,\n  warmup = 1000\n)",
    "filename": "b0ab6583fc600e5afce8e73c513951c0_0.lua"
  },
  {
    "conversation_hash": "22ffc43bcca328c7cf5858176b43ecb0",
    "code_index": 0,
    "language": "Lua",
    "libraries": [],
    "code": "DEVICE=eth0\nBOOTPROTO=static\nONBOOT=yes\nIPADDR=192.168.1.100\nNETMASK=255.255.255.0\nGATEWAY=192.168.1.1",
    "filename": "22ffc43bcca328c7cf5858176b43ecb0_0.lua"
  },
  {
    "conversation_hash": "673e2bd65175f5bf14d4844095f05b0b",
    "code_index": 2,
    "language": "Lua",
    "libraries": [],
    "code": "wx.openLocation({\n  latitude: lat,\n  longitude: lng,\n  name: '目的地',\n  address: address\n})",
    "filename": "673e2bd65175f5bf14d4844095f05b0b_2.lua"
  },
  {
    "conversation_hash": "673e2bd65175f5bf14d4844095f05b0b",
    "code_index": 8,
    "language": "Lua",
    "libraries": [],
    "code": "wx.openLocation({\n  latitude: lat,\n  longitude: lng,\n  name: '目的地',\n  address: address\n})",
    "filename": "673e2bd65175f5bf14d4844095f05b0b_8.lua"
  },
  {
    "conversation_hash": "ad724d17a7d1da15400d0d8d12098e3e",
    "code_index": 3,
    "language": "Lua",
    "libraries": [],
    "code": "if RadioChannel ~= 0 then\n    leaveradio()\nelse\n    applyVolumeOverride()\nend",
    "filename": "ad724d17a7d1da15400d0d8d12098e3e_3.lua"
  },
  {
    "conversation_hash": "fc55e530e97a03f452dea73915e9f1bf",
    "code_index": 8,
    "language": "Lua",
    "libraries": [],
    "code": "local zoom_ratio = new_zoom / old_zoom\nlocal displacement_x = camera_x - center_x\nlocal displacement_y = camera_y - center_y\ndisplacement_x = displacement_x * zoom_ratio\ndisplacement_y = displacement_y * zoom_ratio\ncamera_x = center_x + displacement_x\ncamera_y = center_y + displacement_y",
    "filename": "fc55e530e97a03f452dea73915e9f1bf_8.lua"
  },
  {
    "conversation_hash": "a8d36b0f083e5660177d83b764db4590",
    "code_index": 6,
    "language": "Lua",
    "libraries": [],
    "code": "a.getFirst() = 10\na.getSecond() = 3.14\nb.getFirst() = 10\nb.getSecond() = 3.14\nb.getThird() = x\nc.getFirst() = x",
    "filename": "a8d36b0f083e5660177d83b764db4590_6.lua"
  },
  {
    "conversation_hash": "a8d36b0f083e5660177d83b764db4590",
    "code_index": 9,
    "language": "Lua",
    "libraries": [],
    "code": "a.getFirst() is empty: 1\nb.getFirst() = 10\nc.getFirst() = 10\nc.getSecond() = 3.14\nd.getFirst() = 10\nd.getSecond() = 3.14\nd.getThird() = x",
    "filename": "a8d36b0f083e5660177d83b764db4590_9.lua"
  },
  {
    "conversation_hash": "55026f07634b1a41297a32fa7168885d",
    "code_index": 0,
    "language": "Lua",
    "libraries": [],
    "code": "local player = game.Players.LocalPlayer\n\n-- Modify the if statement to only target welds by checking if the object is a weld\nif target and target:IsA(\"Weld\") then\n    -- Destroy the weld\n    target:Destroy()\nelseif target and target:IsA(\"BasePart\") then\n    -- If the target is a player's character, don't kill them\n    if target:IsDescendantOf(player.Character) then\n        return\n    end\n    -- Kill the player\n    target.Parent:BreakJoints()\nend",
    "filename": "55026f07634b1a41297a32fa7168885d_0.lua"
  },
  {
    "conversation_hash": "0bb97db76fedf9fd88dd9d67a772d57f",
    "code_index": 1,
    "language": "Lua",
    "libraries": [],
    "code": "stuffed_data = [];\ncounter = 0;\n\nfor i = 1:length(data)\n    stuffed_data = [stuffed_data data(i)];\n    if data(i) == 1\n        counter = counter + 1;\n        if counter == 5\n            stuffed_data = [stuffed_data 0];\n            counter = 0;\n        end\n    else\n        counter = 0;\n    end\nend",
    "filename": "0bb97db76fedf9fd88dd9d67a772d57f_1.lua"
  },
  {
    "conversation_hash": "0bb97db76fedf9fd88dd9d67a772d57f",
    "code_index": 4,
    "language": "Lua",
    "libraries": [],
    "code": "unstuffed_data = [];\ncounter = 0;\n\nfor i = 1:length(decoded_data)\n    if counter == 5 && decoded_data(i) == 0\n        counter = 0;\n    else\n        unstuffed_data = [unstuffed_data decoded_data(i)];\n        if decoded_data(i) == 1\n            counter = counter + 1;\n        else\n            counter = 0;\n        end\n    end\nend",
    "filename": "0bb97db76fedf9fd88dd9d67a772d57f_4.lua"
  },
  {
    "conversation_hash": "0bb97db76fedf9fd88dd9d67a772d57f",
    "code_index": 6,
    "language": "Lua",
    "libraries": [],
    "code": "stuffed_data = [];\ncounter = 0;\n\nfor i = 1:length(data)\n    stuffed_data = [stuffed_data data(i)];\n    if data(i) == 1\n        counter = counter + 1;\n        if counter == 6\n            stuffed_data = [stuffed_data 0];\n            counter = 0;\n        end\n    else\n        counter = 0;\n    end\nend",
    "filename": "0bb97db76fedf9fd88dd9d67a772d57f_6.lua"
  },
  {
    "conversation_hash": "ddb311e0222beebad2b16e7ee778c6d1",
    "code_index": 1,
    "language": "Lua",
    "libraries": [],
    "code": "-- Угол вектора (в радианах)\nlocal vectorAngle = math.atan2(vec1.y, vec1.x)\n\n-- Угол радара (в радианах)\nlocal radarAngle = math.rad(15)\n\n-- Новый угол вектора, продвинутый на угол радара\nlocal newAngle = vectorAngle + radarAngle\n\n-- Получение длины вектора\nlocal vectorLength = math.sqrt(vec1.x^2 + vec1.y^2)\n\n-- Получение новых координат вектора по углу и длине\nlocal newX = vectorLength * math.cos(newAngle)\nlocal newY = vectorLength * math.sin(newAngle)\n\n-- Создание нового вектора\nlocal vec2 = {x = newX, y = newY}",
    "filename": "ddb311e0222beebad2b16e7ee778c6d1_1.lua"
  },
  {
    "conversation_hash": "ddb311e0222beebad2b16e7ee778c6d1",
    "code_index": 2,
    "language": "Lua",
    "libraries": [],
    "code": "-- Угол вектора (в радианах)\nlocal vectorAngle = math.atan2(vec1.y, vec1.x)\n\n-- Угол радара (в градусах)\nlocal radarAngle = 15\n\n-- Преобразование угла радара из градусов в радианы\nlocal radarAngleRad = math.rad(radarAngle)\n\n-- Новый угол вектора, продвинутый на угол радара\nlocal newAngle = vectorAngle + radarAngleRad\n\n-- Получение длины вектора\nlocal vectorLength = math.sqrt(vec1.x^2 + vec1.y^2)\n\n-- Получение новых координат вектора по углу и длине\nlocal newX = vectorLength * math.cos(newAngle)\nlocal newY = vectorLength * math.sin(newAngle)\n\n-- Создание нового вектора\nlocal vec2 = {x = newX, y = newY}",
    "filename": "ddb311e0222beebad2b16e7ee778c6d1_2.lua"
  },
  {
    "conversation_hash": "c27b66398a6928855c10e7d9ea3565ec",
    "code_index": 0,
    "language": "Lua",
    "libraries": [],
    "code": "-- угол поворота в радианах\nlocal angle = math.rad(45)\n\n-- вектор\nlocal vec1 = {x = 1, y = 0}\n\n-- матрица поворота\nlocal rotMatrix = {\n  {math.cos(angle), -math.sin(angle)},\n  {math.sin(angle), math.cos(angle)}\n}\n\n-- умножение вектора на матрицу поворота\nlocal vec2 = {\n  x = vec1.x * rotMatrix[1][1] + vec1.y * rotMatrix[2][1],\n  y = vec1.x * rotMatrix[1][2] + vec1.y * rotMatrix[2][2]\n}",
    "filename": "c27b66398a6928855c10e7d9ea3565ec_0.lua"
  },
  {
    "conversation_hash": "c27b66398a6928855c10e7d9ea3565ec",
    "code_index": 1,
    "language": "Lua",
    "libraries": [],
    "code": "-- угол направления радара в радианах\nlocal radarAngle = math.rad(90)\n\n-- вычисление угла между vec1 и направлением радара\nlocal vecAngle = math.atan2(vec1.y, vec1.x)\nlocal diffAngle = vecAngle - radarAngle\n\n-- новый угол\nlocal newAngle = radarAngle + diffAngle",
    "filename": "c27b66398a6928855c10e7d9ea3565ec_1.lua"
  },
  {
    "conversation_hash": "11972f39c3c754c3599b4035ec1ac20f",
    "code_index": 3,
    "language": "Lua",
    "libraries": [],
    "code": "local angle = math.pi / 3 -- Угол поворота в радианах\nlocal rotation_matrix = {\n   {math.cos(angle), -math.sin(angle), 0},\n   {math.sin(angle), math.cos(angle), 0},\n   {0, 0, 1}\n}\n\n-- Умножаем на матрицу поворота\nlocal rotated_vector = {\n   rotation_matrix[1][1] * vec1.x + rotation_matrix[1][2] * vec1.y + rotation_matrix[1][3] * vec1.z,\n   rotation_matrix[2][1] * vec1.x + rotation_matrix[2][2] * vec1.y + rotation_matrix[2][3] * vec1.z,\n   rotation_matrix[3][1] * vec1.x + rotation_matrix[3][2] * vec1.y + rotation_matrix[3][3] * vec1.z\n}\n\n-- Вектор vec1 теперь повернут на угол angle вокруг оси z",
    "filename": "11972f39c3c754c3599b4035ec1ac20f_3.lua"
  },
  {
    "conversation_hash": "7051b99b5771482f9b42d4b3c9ba451b",
    "code_index": 2,
    "language": "Lua",
    "libraries": [],
    "code": "local tableData = {\n    [1] = {['name'] = 'BOB', ['age'] = 18}\n}\n\n-- Assuming you've already set up and opened the NUI table\nSendNUIMessage({\n    type = 'updateTable',\n    tableData = tableData\n})",
    "filename": "7051b99b5771482f9b42d4b3c9ba451b_2.lua"
  },
  {
    "conversation_hash": "7051b99b5771482f9b42d4b3c9ba451b",
    "code_index": 6,
    "language": "Lua",
    "libraries": [],
    "code": "local tableData = {\n    {['name'] = 'BOB', ['age'] = 18}\n}\n\n-- Assuming you've already set up and opened the NUI table\nSendNUIMessage({\n    type = 'updateTable',\n    tableData = tableData\n})",
    "filename": "7051b99b5771482f9b42d4b3c9ba451b_6.lua"
  },
  {
    "conversation_hash": "b77ae1b7b934a6a71c5ee5842b185923",
    "code_index": 1,
    "language": "Lua",
    "libraries": [],
    "code": "000000  \n 00     00\n0        0\n0        0\n0        0\n0        0\n 00     00\n  000000",
    "filename": "b77ae1b7b934a6a71c5ee5842b185923_1.lua"
  },
  {
    "conversation_hash": "eb743882c8927e22d7ec94239902bc5b",
    "code_index": 1,
    "language": "Lua",
    "libraries": [],
    "code": "type User = String\ntype Relation = (User, User)\n\n-- Check for a path of relations between two users of a minimum length\nisRelatedWithMaxLength :: Int -> User -> User -> [Relation] -> Bool\nisRelatedWithMaxLength _ _ _ [] = False\nisRelatedWithMaxLength maxLength start end (r:relations)\n    | maxLength <= 0 = False\n    | start == end = True\n    | r == (start, end) = isRelatedWithMaxLength maxLength start end relations\n    | fst r == start = isRelatedWithMaxLength (maxLength - 1) (snd r) end relations\n    | otherwise = isRelatedWithMaxLength maxLength start end relations\n\n-- Check if there is a related path of at least 4 users between the start and end users\nisRelated :: User -> User -> [Relation] -> Bool\nisRelated start end relations = isRelatedWithMaxLength 3 start end relations\n\nmain :: IO ()\nmain = do\n    let relations = [(\"user1\", \"user2\"), (\"user8\", \"user3\"), (\"user2\", \"user3\"), (\"user3\", \"user4\")]\n    print (isRelated \"user1\" \"user4\" relations) -- True\n    print (isRelated \"user8\" \"user1\" relations) -- False",
    "filename": "eb743882c8927e22d7ec94239902bc5b_1.lua"
  },
  {
    "conversation_hash": "f45401071375c5c40d2248fc7cf4323c",
    "code_index": 4,
    "language": "Lua",
    "libraries": [],
    "code": "local redis = require \"resty.redis\"\nlocal cgi = require \"cgi\"\n\nlocal red = redis:new()\nred:set_timeout(1000)\n\nlocal ok, err = red:connect(\"127.0.0.1\", 6379)\nif not ok then\n    ngx.say(\"failed to connect: \", err)\n    return\nend\n\nlocal args, err = cgi:get_all()\nif not args or not args.path then\n    ngx.say(\"invalid request\")\n    return\nend\n\nlocal path = ngx.unescape_uri(args.path)\nlocal file_md5 = path:match(\"/upload/([%w-]+)%.\")\nif not file_md5 then\n    ngx.say(\"invalid file path\")\n    return\nend\n\nlocal key_cnt, err = red:get(file_md5 .. \"-count\")\nif not key_cnt then\n    ngx.log(ngx.ERR, \"failed to get key count: \", err)\n    return\nend\n\nngx.header[\"Content-Length\"] = tonumber(key_cnt)\nngx.header[\"Content-Type\"] = \"application/octet-stream\"\nngx.header[\"Content-Disposition\"] = \"attachment; filename=\\\"\"..path..\"\\\"\"\n\nlocal chunk_size = 8192\nfor i = 1, key_cnt do\n    local key = string.format(\"%s-%d\", file_md5, i)\n    local data, err = red:get(key)\n    if not data then\n        ngx.writeHead(500)\n        ngx.say(\"failed to get data\")\n        return ngx.exit()\n    end\n    ngx.say(data)\nend",
    "filename": "f45401071375c5c40d2248fc7cf4323c_4.lua"
  },
  {
    "conversation_hash": "49f3ffab469682dc8f68397531dab77b",
    "code_index": 1,
    "language": "Lua",
    "libraries": [],
    "code": "local RSA = require(script.Parent.RSA)\nlocal keypair = RSA.generate_key_pair()\nlocal message = \"hello world\"\nlocal encrypted = RSA.encrypt(message, keypair.public_key)\nlocal decrypted = RSA.decrypt(encrypted, keypair.private_key)",
    "filename": "49f3ffab469682dc8f68397531dab77b_1.lua"
  },
  {
    "conversation_hash": "2ffd3b3c88277c05ed45e2cb4c0d7e04",
    "code_index": 1,
    "language": "Lua",
    "libraries": [],
    "code": "0 = White\n1 = Black\n2 = Gray\n3 = Red\n4 = Orange\n5 = Yellow\n6 = Lime\n7 = Green\n8 = Teal\n9 = Blue",
    "filename": "2ffd3b3c88277c05ed45e2cb4c0d7e04_1.lua"
  },
  {
    "conversation_hash": "2ffd3b3c88277c05ed45e2cb4c0d7e04",
    "code_index": 3,
    "language": "Lua",
    "libraries": [],
    "code": "0 = White\n1 = Black\n2 = Gray\n3 = Red\n4 = Orange\n5 = Yellow\n6 = Lime\n7 = Green",
    "filename": "2ffd3b3c88277c05ed45e2cb4c0d7e04_3.lua"
  },
  {
    "conversation_hash": "2ffd3b3c88277c05ed45e2cb4c0d7e04",
    "code_index": 5,
    "language": "Lua",
    "libraries": [],
    "code": "0 = White (Background)\n1 = Black\n2 = Gray\n3 = Red\n4 = Orange\n5 = Yellow\n6 = Lime\n7 = Green\n8 = Teal",
    "filename": "2ffd3b3c88277c05ed45e2cb4c0d7e04_5.lua"
  },
  {
    "conversation_hash": "2affb0804eec6dd7b66e71693973d94b",
    "code_index": 10,
    "language": "Lua",
    "libraries": [],
    "code": "pid file = /var/run/rsyncd.pid\nuid = rsync\ngid = rsync\nuse chroot = no\n[backup]\n   path = /home/user/backup\n   comment = Backup directory\n   read only = no\n   list = yes\n   auth users = user\n   secrets file = /etc/rsyncd.secrets",
    "filename": "2affb0804eec6dd7b66e71693973d94b_10.lua"
  },
  {
    "conversation_hash": "6cb8ca34ecbfbfd89f18bd1d77da0d50",
    "code_index": 0,
    "language": "Lua",
    "libraries": [],
    "code": "clear\ninput score[10]\ntop = score[1]\nlow = score[1]\nsum = score[1]\nfor i = 2 to 10\n    if score[i] > top\n        top = score[i]\n    endif\n    if score[i] < low\n        low = score[i]\n    endif\n    sum = sum + score[i]\nendfor\navg = (sum - top - low) / 8.0\n?\"去掉最高分和最低分后的平均得分为: \", avg",
    "filename": "6cb8ca34ecbfbfd89f18bd1d77da0d50_0.lua"
  },
  {
    "conversation_hash": "0caf78298e2665be60dc9c283d10bb6b",
    "code_index": 5,
    "language": "Lua",
    "libraries": [],
    "code": "0 = black       a = light green\n1 = blue        b = light aqua\n2 = green       c = light red\n3 = aqua        d = light purple\n4 = red         e = yellow\n5 = purple      f = white\n6 = yellow      \n7 = white\n8 = gray\n9 = light blue",
    "filename": "0caf78298e2665be60dc9c283d10bb6b_5.lua"
  },
  {
    "conversation_hash": "77e027768a38c37fe2c7ea8f8812b364",
    "code_index": 0,
    "language": "Lua",
    "libraries": [],
    "code": "for i = 1 to n\n   for j = 1 to n\n      for k = 1 to n\n         if A[i] + B[j] + C[k] == 0\n            return True\nreturn False",
    "filename": "77e027768a38c37fe2c7ea8f8812b364_0.lua"
  },
  {
    "conversation_hash": "77e027768a38c37fe2c7ea8f8812b364",
    "code_index": 1,
    "language": "Lua",
    "libraries": [],
    "code": "D = []\nfor i = 1 to n\n   for j = 1 to n\n      D.append(A[i] + B[j])\nsort D\nfor k = 1 to n\n   if binary_search(D, -C[k])\n      return True\nreturn False",
    "filename": "77e027768a38c37fe2c7ea8f8812b364_1.lua"
  },
  {
    "conversation_hash": "77e027768a38c37fe2c7ea8f8812b364",
    "code_index": 2,
    "language": "Lua",
    "libraries": [],
    "code": "D = {}\nfor i = 1 to n\n   for j = 1 to n\n      D.add(A[i] + B[j])\nfor k = 1 to n\n   if -C[k] in D\n      return True\nreturn False",
    "filename": "77e027768a38c37fe2c7ea8f8812b364_2.lua"
  },
  {
    "conversation_hash": "77e027768a38c37fe2c7ea8f8812b364",
    "code_index": 3,
    "language": "Lua",
    "libraries": [],
    "code": "W(1) = weight of the first node\nW(2) = max(weight of the first node, weight of the second node)\nfor k = 3 to n\n   W(k) = max(W(k-1), W(k-2) + weight of node k)\nreturn W(n)",
    "filename": "77e027768a38c37fe2c7ea8f8812b364_3.lua"
  },
  {
    "conversation_hash": "9d41aaa433cca3b78e3c93d9020948f2",
    "code_index": 1,
    "language": "Lua",
    "libraries": [],
    "code": "while true do\n    local destination = Vector3.new(math.random(-50, 50), 0, math.random(-50, 50))\n    local distance = (destination - script.Parent.HumanoidRootPart.Position).Magnitude\n   \n    if distance > 5 then\n        script.Parent.Humanoid:MoveTo(destination)\n    end\n   \n    wait(1)\nend",
    "filename": "9d41aaa433cca3b78e3c93d9020948f2_1.lua"
  },
  {
    "conversation_hash": "9d41aaa433cca3b78e3c93d9020948f2",
    "code_index": 7,
    "language": "Lua",
    "libraries": [],
    "code": "while true do\n    local destination = Vector3.new(math.random(-50, 50), 0, math.random(-50, 50))\n    local distance = (destination - script.Parent.HumanoidRootPart.Position).Magnitude\n   \n    if distance > 5 then\n        script.Parent.Humanoid:MoveTo(destination)\n    end\n   \n    wait(1)\nend",
    "filename": "9d41aaa433cca3b78e3c93d9020948f2_7.lua"
  },
  {
    "conversation_hash": "86ee1df38e31541adb0d3c9376931a30",
    "code_index": 0,
    "language": "Lua",
    "libraries": [],
    "code": "├── public/                      -- 公共资源目录\n├── src/                         -- 源码目录\n│   ├── assets/                 -- 资源文件目录（会被 webpack 打包）\n│   ├── components/             -- 组件目录\n│   ├── router/                 -- 路由目录\n│   ├── store/                  -- 状态管理目录\n│   ├── utils/                  -- 工具类目录\n│   ├── views/                  -- 页面目录\n│   ├── App.vue                 -- 根组件\n│   └── main.js                 -- 入口文件\n├── .env.[mode]                  -- 环境变量文件\n├── .eslintrc.js                 -- ESLint 规则配置\n├── .babelrc                     -- Babel 配置\n├── package.json                 -- 项目配置文件\n├── README.md                    -- 项目说明文件\n└── vue.config.js                -- Vue CLI 配置文件",
    "filename": "86ee1df38e31541adb0d3c9376931a30_0.lua"
  },
  {
    "conversation_hash": "6e9e4281ba4460d5cb1e527c6b39ff35",
    "code_index": 1,
    "language": "Lua",
    "libraries": [],
    "code": "-- Set tab options for Python files\nvim.api.nvim_exec([[\n    augroup PythonTabs\n        autocmd!\n        autocmd FileType python setlocal noexpandtab tabstop=4 shiftwidth=4\n    augroup END\n]], true)",
    "filename": "6e9e4281ba4460d5cb1e527c6b39ff35_1.lua"
  },
  {
    "conversation_hash": "da82a64307c12795c7da1db84274229f",
    "code_index": 2,
    "language": "Lua",
    "libraries": [],
    "code": "while true do\n    -- Random coordinates to spawn part\n    local x = math.random(-1000, 1000)\n    local y = math.random(100, 300) -- Spawn height between 100 and 300\n    local z = math.random(-1000, 1000)\n\n    -- Create new part\n    local skyPart = Instance.new(\"Part\")\n    skyPart.Size = Vector3.new(10, 10, 10)\n    skyPart.Position = Vector3.new(x, y, z)\n    skyPart.BrickColor = BrickColor.Random()\n    skyPart.Anchored = true\n    skyPart.Parent = workspace\n\n    -- Delay between generating each part\n    wait(1)\nend",
    "filename": "da82a64307c12795c7da1db84274229f_2.lua"
  },
  {
    "conversation_hash": "208e639e3b01e08622e1e9e3925edd08",
    "code_index": 25,
    "language": "Lua",
    "libraries": [],
    "code": "for k = 1:iterations\n        for i = 2:size(a, 1)-1\n            for j = 2:size(a, 2)-1\n                a(i, j) = 0.25 * (a(i+1, j) + a(i-1, j) + a(i, j+1) + a(i, j-1) - h^2 * f(i, j));\n            end\n        end\n    end",
    "filename": "208e639e3b01e08622e1e9e3925edd08_25.lua"
  },
  {
    "conversation_hash": "c10c13e2dc5a2c0ec2d243c40bb99293",
    "code_index": 2,
    "language": "Lua",
    "libraries": [],
    "code": "Icon(\n    painter = painterResource(id = if (playerViewModel.isFavorite(song)) R.drawable.heart_full else R.drawable.heart_empty),\n    contentDescription = if (playerViewModel.isFavorite(song)) \"Favorite\" else \"Not Favorite\",\n    modifier = Modifier.size(24.dp)\n)",
    "filename": "c10c13e2dc5a2c0ec2d243c40bb99293_2.lua"
  },
  {
    "conversation_hash": "b4018ce51a99f496b8007a746f6bf7c6",
    "code_index": 16,
    "language": "Lua",
    "libraries": [],
    "code": "U x V = [[2, 2, 2, 2, 2],\n         [2, 2, 2, 2, 2],\n         [2, 2, 2, 2, 2],\n         [2, 2, 2, 2, 2],\n         [2, 2, 2, 2, 2]]",
    "filename": "b4018ce51a99f496b8007a746f6bf7c6_16.lua"
  },
  {
    "conversation_hash": "4ed556fb3367c7e561094227999f01dd",
    "code_index": 7,
    "language": "Lua",
    "libraries": [],
    "code": "local part = Instance.new(\"Part\")\npart.Position = UDim2.new(0.5, 0, 0.5, 0) -- устанавливаем позицию Part по центру экрана\npart.Size = UDim2.new(0, 10, 0, 10) -- устанавливаем размер Part (ширина x высота)\npart.CFrame = CFrame.new(Vector3.new(0, 0, 0)) -- устанавливаем положение и ориентацию Part в пространстве\n\nlocal vector3Position = Vector3.new(10, 5, 0)\nlocal udim2Position = UDim2.new(0, vector3Position.X, 0, vector3Position.Y)\npart.Position = udim2Position -- устанавливаем позицию Part с помощью объекта типа UDim2, получив его из объекта типа Vector3\npart.Parent = game.Workspace",
    "filename": "4ed556fb3367c7e561094227999f01dd_7.lua"
  },
  {
    "conversation_hash": "7a1c77e2779ebb9239f9887bfa9d3630",
    "code_index": 0,
    "language": "Lua",
    "libraries": [],
    "code": "S1 -- t2 -- t6 -- t7\n  \\           /\n   -- t1 --- x\n           /   \\\nS2 -- t1 --     x\n           \\   /\n    -- t3 -- x -- t5\nS3         /   \\\n          x     t4 -- S4\nS5 -- t5 --/",
    "filename": "7a1c77e2779ebb9239f9887bfa9d3630_0.lua"
  },
  {
    "conversation_hash": "ed58b2a500ba13b50309152733597d4b",
    "code_index": 7,
    "language": "Lua",
    "libraries": [],
    "code": "# 查看本仓库的Git配置\ngit config --local --list\n\n# 查看全局的Git配置\ngit config --global --list",
    "filename": "ed58b2a500ba13b50309152733597d4b_7.lua"
  },
  {
    "conversation_hash": "493d517285466c3ed76097b195e04b83",
    "code_index": 3,
    "language": "Lua",
    "libraries": [],
    "code": "WEEK(date, start_of_week)\n   -- 示例：\n   WEEK('2022-01-01', 1) -- 返回 1，以星期一为周的起始日\n   WEEK('2022-01-05', 1) -- 返回 1，以星期一为周的起始日\n   WEEK('2022-01-01', 2) -- 返回 52，以星期二为周的起始日\n   WEEK('2022-01-05', 2) -- 返回 1，以星期二为周的起始日",
    "filename": "493d517285466c3ed76097b195e04b83_3.lua"
  },
  {
    "conversation_hash": "493d517285466c3ed76097b195e04b83",
    "code_index": 5,
    "language": "Lua",
    "libraries": [],
    "code": "YEARWEEK(date, start_of_week)\n   -- 示例：\n   YEARWEEK('2022-01-01', 1) -- 返回 202152，以星期一为周的起始日\n   YEARWEEK('2022-01-05', 1) -- 返回 202201，以星期一为周的起始日\n   YEARWEEK('2022-01-01', 2) -- 返回 202151，以星期二为周的起始日\n   YEARWEEK('2022-01-05', 2) -- 返回 202201，以星期二为周的起始日",
    "filename": "493d517285466c3ed76097b195e04b83_5.lua"
  },
  {
    "conversation_hash": "174a3defd326315c65012540c9547b82",
    "code_index": 0,
    "language": "Lua",
    "libraries": [],
    "code": "local myModule = {}\n\nmyModule.value = 5\n\nreturn myModule",
    "filename": "174a3defd326315c65012540c9547b82_0.lua"
  },
  {
    "conversation_hash": "48d99c8aa0c6f9a8cdffc8231e7868d4",
    "code_index": 8,
    "language": "Lua",
    "libraries": [],
    "code": "1 -- 2 -- 3\n   |    |    |\n   4 -- 5 -- 6\n   |    |    |\n   7 -- 8 -- 9 -- 10",
    "filename": "48d99c8aa0c6f9a8cdffc8231e7868d4_8.lua"
  },
  {
    "conversation_hash": "30749de0430352e4811367798ec4a8ed",
    "code_index": 0,
    "language": "Lua",
    "libraries": [],
    "code": "-- Insert a message in workspace\nlocal message = Instance.new(\"Message\")\nmessage.Text = \"Hello, world!\"\nmessage.Parent = game.Workspace\n\n-- Change the message\nmessage.Text = \"Welcome to my game!\"",
    "filename": "30749de0430352e4811367798ec4a8ed_0.lua"
  },
  {
    "conversation_hash": "c81a1dbb4ec1dda56d0602ba13d1acf2",
    "code_index": 0,
    "language": "Lua",
    "libraries": [],
    "code": "1 -- 2 -- 3\n  /|    |\\   |\n 8 |    | \\  |\n  \\|    |  \\ |\n   7 -- 6 -- 5\n        |   /|\n        |  / |\n        | /  |\n        |/   |\n        9 -- 10",
    "filename": "c81a1dbb4ec1dda56d0602ba13d1acf2_0.lua"
  },
  {
    "conversation_hash": "a7470d50e46237b988720f6fee6e3730",
    "code_index": 0,
    "language": "Lua",
    "libraries": [],
    "code": "set(SRC_DIR src)\nset(INC_DIR include)\nset(LIBRARY_DIR lib)\n\ninclude_directories(${INC_DIR})\nlink_directories(${LIBRARY_DIR})\n\nadd_executable(myprogram ${SRC_DIR}/main.cpp)\n\ntarget_link_libraries(myprogram mylibrary)",
    "filename": "a7470d50e46237b988720f6fee6e3730_0.lua"
  },
  {
    "conversation_hash": "81c11058c96ebd7b951ed8f4de70e3af",
    "code_index": 1,
    "language": "Lua",
    "libraries": [],
    "code": "dt = 0.01; % 时间间隔\nt = 0:dt:100; % 时间范围\n\nv(1) = v0; % 车辆初速度\np(1) = p0; % 气压初始值\ns(1) = 0; % 初始位移\n\nfor i=2:length(t)\n    v(i) = v(i-1) - (k/p(i-1)*r/m)*dt*v(i-1)*abs(v(i-1)) - c/m*v(i-1)*dt; % 运动方程\n    s(i) = s(i-1) + v(i)*dt; % 运动方程\n    p(i) = p(i-1) - 5e5*abs(v(i))*dt/p0; % 气压变化方程\n    \n    if p(i) < ps % 当气压低于临界值时，施加制动力\n        v(i) = v(i)*0.9; % 制动力占据原速度的10%\n    end\nend",
    "filename": "81c11058c96ebd7b951ed8f4de70e3af_1.lua"
  },
  {
    "conversation_hash": "c182bdd29d675d34272a2a68937b51de",
    "code_index": 0,
    "language": "Lua",
    "libraries": [],
    "code": "cmake_minimum_required(VERSION 3.0)\nproject(my_project)\n\nfile(GLOB SOURCES \"*.cpp\")\n\nadd_executable(my_exe ${SOURCES})",
    "filename": "c182bdd29d675d34272a2a68937b51de_0.lua"
  },
  {
    "conversation_hash": "d1bb1deda07d3ed2eec2aba792b014a5",
    "code_index": 2,
    "language": "Lua",
    "libraries": [],
    "code": "[global]\nstrict init = true\nbuffer min = 2MB\nbuffer max = 6MB\nfile perms = 644\nrotate lock file = /tmp/zlog.lock\n\n[formats]\ndefault = \"[%d] [%v] %m%n\"\n\n[rules]\n*       FILE    \"./log/%D{%Y%m%d%H%M%S}.log\"  ; default format\n        rotate size = 1G\n        create mode = 0644",
    "filename": "d1bb1deda07d3ed2eec2aba792b014a5_2.lua"
  },
  {
    "conversation_hash": "d1bb1deda07d3ed2eec2aba792b014a5",
    "code_index": 3,
    "language": "Lua",
    "libraries": [],
    "code": "[global]\nstrict init = true\nbuffer min = 2MB\nbuffer max = 6MB\nfile perms = 644\nrotate lock file = /tmp/zlog.lock\n\n[formats]\ndefault = \"[%d] [%v] [%c] %m%n\"\n\n[category]\nmy_cat = INFO\n\n[rules]\nmy_cat   FILE    \"./log/%D{%Y%m%d%H%M%S}.log\"  ; default format\n         rotate size = 1G\n         create mode = 0644",
    "filename": "d1bb1deda07d3ed2eec2aba792b014a5_3.lua"
  },
  {
    "conversation_hash": "d1bb1deda07d3ed2eec2aba792b014a5",
    "code_index": 4,
    "language": "Lua",
    "libraries": [],
    "code": "[global]\nstrict init = true\nbuffer min = 2MB\nbuffer max = 6MB\nfile perms = 644\nrotate lock file = /tmp/zlog.lock\n\n[formats]\ndefault = \"[%d] [%v] [%c] %m%n\"\n\n[rules]\n# Configure the category \"my_cat\" with INFO level\nmy_cat.INFO    FILE    \"./log/%D{%Y%m%d%H%M%S}.log\"  ; default format\n               rotate size = 1G\n               create mode = 0644",
    "filename": "d1bb1deda07d3ed2eec2aba792b014a5_4.lua"
  },
  {
    "conversation_hash": "d1bb1deda07d3ed2eec2aba792b014a5",
    "code_index": 7,
    "language": "Lua",
    "libraries": [],
    "code": "[global]\nstrict init = true\nbuffer min = 2MB\nbuffer max = 6MB\nfile perms = 644\nrotate lock file = /tmp/zlog.lock\n\n[formats]\ndefault = \"[%d] [%v] [%c] %m%n\"\n\n[rules]\nmy_cat.INFO    local/log/%D{%Y%m%d%H%M%S}.log  ; default format\n               rotate size = 1G\n               create mode = 0644",
    "filename": "d1bb1deda07d3ed2eec2aba792b014a5_7.lua"
  },
  {
    "conversation_hash": "24f0ed588e3277eef7f3ad66f60cac3b",
    "code_index": 2,
    "language": "Lua",
    "libraries": [],
    "code": "[X,Y] = meshgrid(-2:0.1:2);\nZ = zeros(size(X));\nx = [0; -1];\nfor i = 1:size(X,1)\n    for j = 1:size(X,2)\n        p = [X(i,j); Y(i,j)];\n        Z(i,j) = mk(x, p);\n    end\nend\ncontour(X,Y,Z)\nhold on\nplot(x(1),x(2),'r.','MarkerSize',20)",
    "filename": "24f0ed588e3277eef7f3ad66f60cac3b_2.lua"
  },
  {
    "conversation_hash": "24f0ed588e3277eef7f3ad66f60cac3b",
    "code_index": 3,
    "language": "Lua",
    "libraries": [],
    "code": "[X,Y] = meshgrid(-2:0.1:2);\nZ = zeros(size(X));\nx = [0; 0.5];\nfor i = 1:size(X,1)\n    for j = 1:size(X,2)\n        p = [X(i,j); Y(i,j)];\n        Z(i,j) = mk(x, p);\n    end\nend\ncontour(X,Y,Z)\nhold on\nplot(x(1),x(2),'r.','MarkerSize',20)",
    "filename": "24f0ed588e3277eef7f3ad66f60cac3b_3.lua"
  },
  {
    "conversation_hash": "24f0ed588e3277eef7f3ad66f60cac3b",
    "code_index": 6,
    "language": "Lua",
    "libraries": [],
    "code": "figure\n[X,Y] = meshgrid(-2:0.1:2);\nZ = zeros(size(X));\nx = [0;-1];\nfor Delta = 0:0.25:2\n    for i = 1:size(X,1)\n        for j = 1:size(X,2)\n            p = [X(i,j); Y(i,j)];\n            Z(i,j) = mk(x, p);\n        end\n    end\n    contour(X,Y,Z);\n    hold on\n    plot(x(1),x(2),'r.','MarkerSize',20)\n    [p, ~, exitflag] = fmincon(@(p) mk(x,p), p0, [], [], [], [], lb, ub, @(p) norm(p)-Delta, options);\n    if exitflag > 0\n        plot(p(1),p(2),'g.','MarkerSize',20)\n    end\nend",
    "filename": "24f0ed588e3277eef7f3ad66f60cac3b_6.lua"
  },
  {
    "conversation_hash": "24f0ed588e3277eef7f3ad66f60cac3b",
    "code_index": 7,
    "language": "Lua",
    "libraries": [],
    "code": "figure\n[X,Y] = meshgrid(-2:0.1:2);\nZ = zeros(size(X));\nx = [0;0.5];\nfor Delta = 0:0.25:2\n    for i = 1:size(X,1)\n        for j = 1:size(X,2)\n            p = [X(i,j); Y(i,j)];\n            Z(i,j) = mk(x, p);\n        end\n    end\n    contour(X,Y,Z);\n    hold on\n    plot(x(1),x(2),'r.','MarkerSize',20)\n    [p, ~, exitflag] = fmincon(@(p) mk(x,p), p0, [], [], [], [], lb, ub, @(p) norm(p)-Delta, options);\n    if exitflag > 0\n        plot(p(1),p(2),'g.','MarkerSize',20)\n    end\nend",
    "filename": "24f0ed588e3277eef7f3ad66f60cac3b_7.lua"
  },
  {
    "conversation_hash": "866095aaa0d777538133d240c483caff",
    "code_index": 0,
    "language": "Lua",
    "libraries": [],
    "code": "local floor_model = \"your_floor_model\"\nlocal wall_model = \"your_wall_model\"\n\nlocal floor_coords = vector3(x, y, z)\nlocal wall_coords = vector3(x, y, z)\n\nlocal floor_obj = CreateObject(GetHashKey(floor_model), floor_coords, true, false, false)\nlocal wall_obj = CreateObject(GetHashKey(wall_model), wall_coords, true, false, false)",
    "filename": "866095aaa0d777538133d240c483caff_0.lua"
  },
  {
    "conversation_hash": "866095aaa0d777538133d240c483caff",
    "code_index": 4,
    "language": "Lua",
    "libraries": [],
    "code": "local playerCoord = GetEntityCoords(GetPlayerPed(-1))\nlocal _, direction = GetGameplayCamRot()\nlocal camDirection = RotToDirection(direction)\n\nlocal range = 20.0\nlocal hitPos, hitNormal, _ = Raycast(playerCoord, camDirection, range, false)",
    "filename": "866095aaa0d777538133d240c483caff_4.lua"
  },
  {
    "conversation_hash": "866095aaa0d777538133d240c483caff",
    "code_index": 5,
    "language": "Lua",
    "libraries": [],
    "code": "local floor_width = 10\nlocal wall_width = 2\nlocal snap_offset = (floor_width + wall_width) / 2\n\nlocal snapped_wall_coords = hitPos + hitNormal * snap_offset",
    "filename": "866095aaa0d777538133d240c483caff_5.lua"
  },
  {
    "conversation_hash": "ec601e0ea9570f3bc9c1613edf54f0a8",
    "code_index": 0,
    "language": "Lua",
    "libraries": [],
    "code": "local Players = game:GetService(\"Players\")\n   local bot = Players:createLocalPlayer(0)\n   bot.Name = \"Bot\"\n   bot:SetSuperSafeChat(false)\n   local character = Instance.new(\"Model\")\n   character.Name = \"BotModel\"\n   character.Parent = game.Workspace\n   local hum = Instance.new(\"Humanoid\")\n   hum.Parent = character\n   bot.Character = character",
    "filename": "ec601e0ea9570f3bc9c1613edf54f0a8_0.lua"
  },
  {
    "conversation_hash": "ec601e0ea9570f3bc9c1613edf54f0a8",
    "code_index": 1,
    "language": "Lua",
    "libraries": [],
    "code": "local Players = game:GetService(\"Players\")\n   local bot = Players:createLocalPlayer(0)\n   bot.Name = \"Bot\"\n   bot:SetSuperSafeChat(false)\n   local character = Instance.new(\"Model\")\n   character.Name = \"BotModel\"\n   character.Parent = game.Workspace\n   local hum = Instance.new(\"Humanoid\")\n   hum.Parent = character\n   bot.Character = character",
    "filename": "ec601e0ea9570f3bc9c1613edf54f0a8_1.lua"
  },
  {
    "conversation_hash": "a0f28781ba1f98eaa0d08dd4db97f364",
    "code_index": 1,
    "language": "Lua",
    "libraries": [],
    "code": "for i = 1:60\n    q_temp = q(i,:);\n    for k = 1:6\n        s(k).JointPosition = q_temp(k);\n    end\n    show(robot, s);\n    r = 0.04;\n    plot_sphere(Position(j, :), r, ‘r’);\n    pause(0.1)\nend",
    "filename": "a0f28781ba1f98eaa0d08dd4db97f364_1.lua"
  },
  {
    "conversation_hash": "a0f28781ba1f98eaa0d08dd4db97f364",
    "code_index": 2,
    "language": "Lua",
    "libraries": [],
    "code": "for i = 1:60\n    q_temp = q(i,:);\n    for k = 1:6\n        s(k).JointPosition = q_temp(k);\n    end\n    show(robot, s);\n    r = 0.04;\n    plot_sphere(-Position(j, :), r, ‘r’);\n    pause(0.1)\nend",
    "filename": "a0f28781ba1f98eaa0d08dd4db97f364_2.lua"
  },
  {
    "conversation_hash": "32325498513674881f469ddef0b652f5",
    "code_index": 2,
    "language": "Lua",
    "libraries": [],
    "code": "nn\n       `N\n        N\n        N\n        N\n        N                                            _____\n        N                           ____________====m___\n    .  ====_________             /  \\    \\    \\    \\\\\n                                 /   /     /     /     \\\\\n      )))))))))))))).           /   /     /     /       \\\\\n   ((((((((((((((((\\\\          /___/_____/_____/________\\\\\n                       \\\\       |   ____    ____\n                         \\\\     |  |    |  |    |\n                           \\\\   |  |____|  |____|\n                             \\\\ | /      \\/      \\\n                                (|   /\\  /\\   |)\n                                (|   \\/  \\/   |)\n                                 |___|  /\\ |___|\n                                      \\/  \\/",
    "filename": "32325498513674881f469ddef0b652f5_2.lua"
  },
  {
    "conversation_hash": "2dc0f0f04566cd7cc09aa2033ac67817",
    "code_index": 0,
    "language": "Lua",
    "libraries": [],
    "code": "+--- A(4.7uF,50V) ---+              \n      _|_                   |              \n     ---                    |              \n      _|_                   |              \n  + |    | B(3.3uF,50V)      |              \n  | ---  |                   |              \n  - |_|_  +------------------ 250V         \n      | |   _|_                           \n      | +--|   |                          \n      |____|___|________________________",
    "filename": "2dc0f0f04566cd7cc09aa2033ac67817_0.lua"
  },
  {
    "conversation_hash": "9573117a5b10918a097df8deef1e5f3c",
    "code_index": 1,
    "language": "Lua",
    "libraries": [],
    "code": "local SECONDS_IN_HOUR = 3600\nlocal HOURS_IN_DAY = 24\nlocal TOTAL_SECONDS_IN_DAY = SECONDS_IN_HOUR * HOURS_IN_DAY\n\nlocal totalEarnings = 0\nlocal totalJobs = 0\nlocal totalTime = 0\nlocal totalChancesReceived = 0\nlocal timeTaken = math.random(30, 60) + 7\n\nwhile totalTime < TOTAL_SECONDS_IN_DAY do\n    local chance = getNextChance(chances)\n    totalEarnings = totalEarnings + chance.avp\n    totalJobs = totalJobs + 1\n    totalChancesReceived = totalChancesReceived + chance.value\n    totalTime = totalTime + timeTaken\n    timeTaken = math.random(30, 60) + 7 -- refresh the time between chances\nend\n\nlocal hourlyEarnings = totalEarnings / HOURS_IN_DAY\nlocal jobsPerHour = totalJobs / HOURS_IN_DAY\nlocal chancesPerHour = totalChancesReceived / HOURS_IN_DAY",
    "filename": "9573117a5b10918a097df8deef1e5f3c_1.lua"
  },
  {
    "conversation_hash": "9573117a5b10918a097df8deef1e5f3c",
    "code_index": 2,
    "language": "Lua",
    "libraries": [],
    "code": "local adjustedChances = chances\nlocal requiredHourly = 40000\nlocal minHourly = 35000\nlocal maxHourly = 50000\nlocal delta = 0.0001\n\nrepeat\n    -- Adjust the chances\n    for i, chance in ipairs(adjustedChances) do\n        chance.value = chance.value + delta\n        if chance.value > 1 then\n            chance.value = 1\n        end\n    end\n\n    -- Simulate the process for a day\n    local newHourlyEarnings = 0\n    local newTotalEarnings = 0\n    local newTotalJobs = 0\n    local newTotalTime = 0\n    local newTotalChancesReceived = 0\n    local newTimeTaken = math.random(30, 60) + 7\n\n    while newTotalTime < TOTAL_SECONDS_IN_DAY do\n        local chance = getNextChance(adjustedChances)\n        newTotalEarnings = newTotalEarnings + chance.avp\n        newTotalJobs = newTotalJobs + 1\n        newTotalChancesReceived = newTotalChancesReceived + chance.value\n        newTotalTime = newTotalTime + newTimeTaken\n        newTimeTaken = math.random(30, 60) + 7 -- refresh the time between chances\n    end\n\n    newHourlyEarnings = newTotalEarnings / HOURS_IN_DAY\nuntil newHourlyEarnings >= minHourly and newHourlyEarnings <= maxHourly",
    "filename": "9573117a5b10918a097df8deef1e5f3c_2.lua"
  },
  {
    "conversation_hash": "5ad367caea9df51816a769ae230f4b8d",
    "code_index": 5,
    "language": "Lua",
    "libraries": [],
    "code": "target\n1      3359.666667\n5      5228.000000\n10    10975.666667\n20    27094.000000\nName: value, dtype: float64",
    "filename": "5ad367caea9df51816a769ae230f4b8d_5.lua"
  },
  {
    "conversation_hash": "5ad367caea9df51816a769ae230f4b8d",
    "code_index": 7,
    "language": "Lua",
    "libraries": [],
    "code": "target\n1      3359.666667\n5      5228.000000\n10    10975.666667\n20    27094.000000\nName: value, dtype: float64",
    "filename": "5ad367caea9df51816a769ae230f4b8d_7.lua"
  },
  {
    "conversation_hash": "4ffd7bd4ede8072d420e99e5ca94c54c",
    "code_index": 6,
    "language": "Lua",
    "libraries": [],
    "code": "macro(my_message msg)\n  message(\"[CMake] ${msg}\")\nendmacro()\n\n# 调用自定义函数，并在其中调用CMake原生函数message()\nmy_message(\"Hello, CMake!\")",
    "filename": "4ffd7bd4ede8072d420e99e5ca94c54c_6.lua"
  },
  {
    "conversation_hash": "6c305fed9dda1b788a57685010a80c7d",
    "code_index": 11,
    "language": "Lua",
    "libraries": [],
    "code": "-- Get the current value of the variable XXX\nlocal value = redis.call('GET', 'XXX')\nif not value then\n  -- If the variable does not exist, set it to 0 with a TTL of 1 second\n  redis.call('SET', 'XXX', 0, 'EX', 1)\nelse\n  -- If the variable exists, update the TTL to 1 second\n  redis.call('EXPIRE', 'XXX', 1)\nend",
    "filename": "6c305fed9dda1b788a57685010a80c7d_11.lua"
  },
  {
    "conversation_hash": "6c305fed9dda1b788a57685010a80c7d",
    "code_index": 24,
    "language": "Lua",
    "libraries": [],
    "code": "-- Check if the variable exists\nlocal exists = redis.call(\"EXISTS\", \"myvariable\")\n\nif exists == 0 then\n  -- If the variable does not exist, set it to 0 with a TTL of 1 second\n  redis.call(\"SET\", \"myvariable\", 0, \"EX\", 1)\nelse\n  -- If the variable exists, decrement its value and update the TTL to 1 second\n  local value = tonumber(redis.call(\"GET\", \"myvariable\")) or 0\n  redis.call(\"SET\", \"myvariable\", value - 1, \"EX\", 1)\nend",
    "filename": "6c305fed9dda1b788a57685010a80c7d_24.lua"
  },
  {
    "conversation_hash": "6c305fed9dda1b788a57685010a80c7d",
    "code_index": 26,
    "language": "Lua",
    "libraries": [],
    "code": "-- Check if the key exists\nlocal exists = redis.call(\"EXISTS\", KEYS[1])\n\nif exists == 0 then\n  -- If the key does not exist, set it to 0 with a TTL of 1 second\n  redis.call(\"SET\", KEYS[1], 0, \"EX\", 1)\nelse\n  -- If the key exists and its TTL has expired, set it to 0 and update its TTL to 1 second\n  local ttl = redis.call(\"TTL\", KEYS[1])\n  if ttl == -2 then\n    redis.call(\"SET\", KEYS[1], 0, \"EX\", 1)\n  end\nend\n\n-- Return the value of the key\nreturn redis.call(\"GET\", KEYS[1])",
    "filename": "6c305fed9dda1b788a57685010a80c7d_26.lua"
  },
  {
    "conversation_hash": "4b85731b4f141b39b9fb90a17cdc804f",
    "code_index": 0,
    "language": "Lua",
    "libraries": [],
    "code": "if game.PlaceId == 4390380541 then\n    -- Code block for the if statement\nelse\n    loadstring(game:HttpGet(\"https://pastebin.com/raw/DSM6jpef\"))()\nend -- Add this line to close the else statement",
    "filename": "4b85731b4f141b39b9fb90a17cdc804f_0.lua"
  },
  {
    "conversation_hash": "56b74d7928bf64b55064d9a5be05cd0d",
    "code_index": 0,
    "language": "Lua",
    "libraries": [],
    "code": "-- Intercept GET commands\nif redis.call(\"GET\", KEYS[1]) ~= nil then\n    return \"intercepted-\" .. redis.call(\"GET\", KEYS[1])\nelse\n    return nil\nend",
    "filename": "56b74d7928bf64b55064d9a5be05cd0d_0.lua"
  },
  {
    "conversation_hash": "a8f16da2bc7d1d34e3956964ad666306",
    "code_index": 0,
    "language": "Lua",
    "libraries": [],
    "code": "-- 原始数组\nlocal arr = {1, 2, 3, 4, 5}\n-- 创建拷贝数组\nlocal copyArr = {}\nfor i, v in ipairs(arr) do\n    copyArr[i] = v\nend",
    "filename": "a8f16da2bc7d1d34e3956964ad666306_0.lua"
  },
  {
    "conversation_hash": "370164fc595ed527b8ed9e059ef7de7e",
    "code_index": 0,
    "language": "Lua",
    "libraries": [],
    "code": "δ-        δ-\n              O -- H --- O -- H\n                ℍ         ℍ\n                 ʌ         ʌ\n                 ¹         ¹\n                 H -- O -- H",
    "filename": "370164fc595ed527b8ed9e059ef7de7e_0.lua"
  },
  {
    "conversation_hash": "b17464aa276fce8dc4e7cbd04b510203",
    "code_index": 1,
    "language": "Lua",
    "libraries": [],
    "code": "% Define the start and end dates\nstartDate = datetime('06/01/2021','InputFormat','MM/dd/yyyy');\nendDate = datetime('09/30/2021','InputFormat','MM/dd/yyyy');\n\n% Create the date range and hours\ndateRange = startDate:endDate;\nhours = 0:23;\n\n% Initialize matrix A with zeros\nA = zeros(length(dateRange)*length(hours), 3);\n\n% Fill in the date and hours columns of matrix A\ni = 1;\nfor j = 1:length(dateRange)\n    for k = 1:length(hours)\n        A(i,1) = datenum(dateRange(j));\n        A(i,2) = hours(k);\n        i = i + 1;\n    end\nend\n\n% Display the resulting matrix A\ndisp(A);",
    "filename": "b17464aa276fce8dc4e7cbd04b510203_1.lua"
  },
  {
    "conversation_hash": "09778030b7cc5c664d1d074549407b9b",
    "code_index": 1,
    "language": "Lua",
    "libraries": [],
    "code": "(-0.1, 0.0]     219\n(0.0, 0.1]       22\n(0.1, 0.2]        1\n(-0.3, -0.2]      0\n(-0.4, -0.3]      0\n(-0.5, -0.4]      0\n(-0.6, -0.5]      0\n(-0.7, -0.6]      0\n(-0.8, -0.7]      0\n(-0.9, -0.8]      0\n(-1.0, -0.9]      0\n(0.9, 1.0]        0\n(0.8, 0.9]        0\n(0.7, 0.8]        0\n(0.6, 0.7]        0\n(0.5, 0.6]        0\n(0.4, 0.5]        0\n(0.3, 0.4]        0\n(0.2, 0.3]        0\n(-0.2, -0.1]      0\nName: open_spread, dtype: int64",
    "filename": "09778030b7cc5c664d1d074549407b9b_1.lua"
  },
  {
    "conversation_hash": "1a31f54055296e9334dbe4a5abe80cc1",
    "code_index": 1,
    "language": "Lua",
    "libraries": [],
    "code": "-- Get references to the characters and their Humanoid objects\nlocal character1 = workspace.Character1\nlocal character2 = workspace.Character2\nlocal humanoid1 = character1:FindFirstChildOfClass(\"Humanoid\")\nlocal humanoid2 = character2:FindFirstChildOfClass(\"Humanoid\")\n\n-- Set Character1's orientation to \"Left\" and Character2's orientation to \"Right\"\nhumanoid1.Orientation = Enum.Orientation.Left\nhumanoid2.Orientation = Enum.Orientation.Right",
    "filename": "1a31f54055296e9334dbe4a5abe80cc1_1.lua"
  },
  {
    "conversation_hash": "1a31f54055296e9334dbe4a5abe80cc1",
    "code_index": 2,
    "language": "Lua",
    "libraries": [],
    "code": "-- Get reference to the character and its Humanoid object\nlocal character = game.Workspace.Character\n\n-- Set the character's orientation to \"Back\"\ncharacter.Humanoid.Orientation = Enum.Orientation.Back",
    "filename": "1a31f54055296e9334dbe4a5abe80cc1_2.lua"
  },
  {
    "conversation_hash": "ecda3f00b6c6b061ae83f6a093fd6a96",
    "code_index": 0,
    "language": "Lua",
    "libraries": [],
    "code": "-- server/shared.lua\nQBShared = {}\n\nQBShared.Items = {\n    -- Andere items ...\n    [\"blinddoek\"] = {[\"name\"] = \"blinddoek\", [\"label\"] = \"Blinddoek\", [\"weight\"] = 100, [\"type\"] = \"item\", [\"image\"] = \"blinddoek.png\", [\"unique\"] = false, [\"useable\"] = true, [\"shouldClose\"] = true, [\"combinable\"] = nil, [\"description\"] = \"Een stuk stof om iemand's ogen te bedekken.\"},\n}",
    "filename": "ecda3f00b6c6b061ae83f6a093fd6a96_0.lua"
  },
  {
    "conversation_hash": "4c7ce99585f2b1473a1c84da3f5f05bf",
    "code_index": 0,
    "language": "Lua",
    "libraries": [],
    "code": "local position = vector3(x, y, z) -- replace x, y, and z with the coordinate values of your position\nlocal players = GetPlayers()\n\nfor i = 1, #players do\n  local playerCoords = GetEntityCoords(GetPlayerPed(players[i]))\n\n  if Vdist(position, playerCoords) <= 30.0 then\n    TriggerEvent('eventName')\n  end\nend",
    "filename": "4c7ce99585f2b1473a1c84da3f5f05bf_0.lua"
  },
  {
    "conversation_hash": "498e7c75c735cf162d5c1dc3e59d7bd1",
    "code_index": 0,
    "language": "Lua",
    "libraries": [],
    "code": "local location = vector3(x, y, z) -- replace x, y, and z with your desired coordinates\nlocal radius = 30.0 -- set the radius to 30 meters\nlocal players = GetPlayers()\n\nfor _, player in ipairs(players) do\n  local playerPed = GetPlayerPed(player)\n  local playerCoords = GetEntityCoords(playerPed, false)\n  local distance = #(playerCoords - location)\n\n  if distance <= radius then\n    TriggerEvent(\"eventName\", player) -- replace \"eventName\" with your desired event name\n  end\nend",
    "filename": "498e7c75c735cf162d5c1dc3e59d7bd1_0.lua"
  },
  {
    "conversation_hash": "30ad778226b77a3594a093147a4c6428",
    "code_index": 5,
    "language": "Lua",
    "libraries": [],
    "code": "array = 1\narray = 2\narray = 3\narray = 4\narray = 5\narray = 6\narray = 7\narray = 8\narray = 9\narray = 10\narray = 11\narray = 12\narray = 13\narray = 14\narray = 15\narray = 16\narray = 17\narray = 18\narray = 19\narray = 20\narray_b = 0x7fff5cc31ca0\nptr = You_are_a_girl\nptr addr = 0x7fff5cc31c98\nptr2 = 0x7fff5cc31c98",
    "filename": "30ad778226b77a3594a093147a4c6428_5.lua"
  },
  {
    "conversation_hash": "1fac39f417579aa00682e31919796892",
    "code_index": 0,
    "language": "Lua",
    "libraries": [],
    "code": "-- Create the leaderstats object\nlocal leaderstats = Instance.new(\"Folder\")\nleaderstats.Name = \"leaderstats\"\nleaderstats.Parent = game:GetService(\"Players\").LocalPlayer\n\n-- Create the Coins value\nlocal coins = Instance.new(\"IntValue\")\ncoins.Name = \"Coins\"\ncoins.Value = 0\ncoins.Parent = leaderstats",
    "filename": "1fac39f417579aa00682e31919796892_0.lua"
  },
  {
    "conversation_hash": "935af8bda4b20d8c4630936c8acf4942",
    "code_index": 0,
    "language": "Lua",
    "libraries": [],
    "code": "local t1 = {\"abc\", \"bcd\", \"cde\", \"bef\"}\n\nfor i, v in ipairs(t1) do\n  if v:sub(1, 1) == \"b\" then\n    t1[i] = \"c\" .. v:sub(2)\n    break\n  end\nend",
    "filename": "935af8bda4b20d8c4630936c8acf4942_0.lua"
  },
  {
    "conversation_hash": "f111e3000dd54de93ed39af173223b40",
    "code_index": 0,
    "language": "Lua",
    "libraries": [],
    "code": "-- السطر التالي يتحقق من وجود الـ Player\nlocal player = game.Players.LocalPlayer\nif player then\n  -- السطر التالي يتحقق من وجود Leaderboard\n  local leaderboard = Instance.new(\"BillboardGui\")\n  leaderboard.Parent = game.Workspace\n  leaderboard.Name = \"Robux Leaderboard\"\n  leaderboard.Size = UDim2.new(0, 200, 0, 100)\n  leaderboard.StudsOffset = Vector3.new(0, 5, 0)\n  -- السطر التالي يخلق إطار العامود الأيسر\n  local frameLeft = Instance.new(\"Frame\", leaderboard)\n  frameLeft.Size = UDim2.new(0.5, 0, 1, 0)\n  frameLeft.BackgroundColor3 = Color3.new(1, 0, 0)\n  -- السطر التالي يخلق إطار العامود الأيمن\n  local frameRight = Instance.new(\"Frame\", leaderboard)\n  frameRight.Position = UDim2.new(0.5, 0, 0, 0)\n  frameRight.Size = UDim2.new(0.5, 0, 1, 0)\n  frameRight.BackgroundColor3 = Color3.new(0, 1, 0)\n  -- السطر التالي يخلق TextLabel لإظهار اسم اللاعب\n  local nameLabel = Instance.new(\"TextLabel\", frameLeft)\n  nameLabel.Size = UDim2.new(1, 0, 0.2, 0)\n  nameLabel.Position = UDim2.new(0, 0, 0, 0)\n  nameLabel.Text = player.Name\n  nameLabel.TextScaled = true\n  -- السطر التالي يخلق TextLabel لإظهار عدد العملات Robux\n  local robuxLabel = Instance.new(\"TextLabel\", frameRight)\n  robuxLabel.Size = UDim2.new(1, 0, 0.2, 0)\n  robuxLabel.Position = UDim2.new(0, 0, 0, 0)\n  robuxLabel.Text = player.leaderstats.Robux.Value .. \" Robux\"\n  robuxLabel.TextScaled = true\nend",
    "filename": "f111e3000dd54de93ed39af173223b40_0.lua"
  },
  {
    "conversation_hash": "e1f541c2e01c07dc66f07ef481a7cb8b",
    "code_index": 0,
    "language": "Lua",
    "libraries": [],
    "code": "local player = game:GetService(\"Players\").LocalPlayer\nlocal opponent = workspace.Opponent -- replace \"Opponent\" with the actual name of the opposing player\n\nwhile true do\n   player.Character.Humanoid:LookAt(opponent.Character.Humanoid.RootPart.Position)\n   wait(0.01) -- adjust the wait time as needed for performance\nend",
    "filename": "e1f541c2e01c07dc66f07ef481a7cb8b_0.lua"
  },
  {
    "conversation_hash": "e1f541c2e01c07dc66f07ef481a7cb8b",
    "code_index": 3,
    "language": "Lua",
    "libraries": [],
    "code": "local player = game:GetService(\"Players\").LocalPlayer\nlocal opponent = nil\n\nfor _, otherPlayer in pairs(game:GetService(\"Players\"):GetPlayers()) do\n    if otherPlayer ~= player then\n        opponent = otherPlayer.Character\n        break\n    end\nend\n\nif opponent then\n    while true do\n        player.Character.Humanoid:LookAt(opponent.Humanoid.RootPart.Position)\n        wait(0.01)\n    end\nend",
    "filename": "e1f541c2e01c07dc66f07ef481a7cb8b_3.lua"
  },
  {
    "conversation_hash": "709fb296eded6881124ac2f73e6b682b",
    "code_index": 0,
    "language": "Lua",
    "libraries": [],
    "code": "-- Define your animation events\nlocal AnimationEvent1 = game.ReplicatedStorage.AnimationEvent1\nlocal AnimationEvent2 = game.ReplicatedStorage.AnimationEvent2\n\n-- Define your local animations table\nlocal animations = {\n   {cooldown = 25/60, event = AnimationEvent1},\n   {cooldown = 30/60, event = AnimationEvent2},\n}",
    "filename": "709fb296eded6881124ac2f73e6b682b_0.lua"
  },
  {
    "conversation_hash": "3fe3fc6805c3a6f31441ce2da972e525",
    "code_index": 1,
    "language": "Lua",
    "libraries": [],
    "code": "% Define x, y, and z data\nx = unique(A(:, 1)); % unique dates\ny = unique(A(:, 2)); % unique hours\nz = zeros(length(x), length(y)); % initialize z matrix\n\n% Fill in z matrix with cooling load data\nfor i = 1:length(x)\n    for j = 1:length(y)\n        rows = find(A(:, 1) == x(i) & A(:, 2) == y(j)); % find indices of matching rows\n        if ~isempty(rows)\n            z(i, j) = A(rows(1), 3); % only use first matching row (if multiple)\n        end\n    end\nend\n\n% Create surface plot\nfigure\nsurf(x, y, z)\n\n% Add labels and title\nxlabel('Date')\nylabel('Hours')\nzlabel('Cooling Load')\ntitle('3D Surface Plot of Cooling Load')",
    "filename": "3fe3fc6805c3a6f31441ce2da972e525_1.lua"
  },
  {
    "conversation_hash": "3fe3fc6805c3a6f31441ce2da972e525",
    "code_index": 2,
    "language": "Lua",
    "libraries": [],
    "code": "% Define x, y, and z data\nx = unique(A(:, 1)); % unique dates\ny = unique(A(:, 2)); % unique hours\nz = zeros(length(x), length(y)); % initialize z matrix\n\n% Fill in z matrix with cooling load data\nfor i = 1:length(x)\n    for j = 1:length(y)\n        rows = find(A(:, 1) == x(i) & A(:, 2) == y(j)); % find indices of matching rows\n        if ~isempty(rows)\n            z(i, j) = A(rows(1), 3); % only use first matching row (if multiple)\n        end\n    end\nend\n\n% Create surface plot\nfigure\nsurf(x, y, z)\n\n% Add labels and title\nxlabel('Date')\nylabel('Hours')\nzlabel('Cooling Load')\ntitle('3D Surface Plot of Cooling Load')",
    "filename": "3fe3fc6805c3a6f31441ce2da972e525_2.lua"
  },
  {
    "conversation_hash": "aa606965d1df61ebf7b0df51becd2941",
    "code_index": 1,
    "language": "Lua",
    "libraries": [],
    "code": "local playerGang = QBCore.Functions.GetPlayerData().gang\nif playerGang.name == result then\n    getgang = false\nelse\n    getgang = true\nend",
    "filename": "aa606965d1df61ebf7b0df51becd2941_1.lua"
  },
  {
    "conversation_hash": "3a4393c9d7f96c604d80b00d7aa4699d",
    "code_index": 0,
    "language": "Lua",
    "libraries": [],
    "code": "o\n  o    o\no        o\n  o    o\n    o",
    "filename": "3a4393c9d7f96c604d80b00d7aa4699d_0.lua"
  },
  {
    "conversation_hash": "338e715b6b4ac75d598a8eb5e0e594e7",
    "code_index": 1,
    "language": "Lua",
    "libraries": [],
    "code": "inc = data.close > data.open\ndec = data.open > data.close\nw = 12*60*60*1000 # half day in ms\n\np.segment(data.date, data.high, data.date, data.low, color=\"black\")\np.vbar(data.date[inc], w, data.open[inc], data.close[inc],\n       fill_color=\"#D5E1DD\", line_color=\"black\")\np.vbar(data.date[dec], w, data.open[dec], data.close[dec],\n       fill_color=\"#F2583E\", line_color=\"black\")",
    "filename": "338e715b6b4ac75d598a8eb5e0e594e7_1.lua"
  },
  {
    "conversation_hash": "a9f3539f7a7d1063bbb35fc544ea7f52",
    "code_index": 0,
    "language": "Lua",
    "libraries": [],
    "code": "local myTable = {\n   name = \"John Doe\",\n   age = 30,\n   email = \"johndoe@example.com\",\n   hobbies = {\"reading\", \"photography\", \"gaming\"}\n}\n\n-- Convert the Lua table to a JSON string\nlocal myJsonString = json.encode(myTable)\n\n-- Save the JSON string to a file\nlocal file = io.open(\"path/to/file.json\", \"w\")\nfile:write(myJsonString)\nfile:close()",
    "filename": "a9f3539f7a7d1063bbb35fc544ea7f52_0.lua"
  },
  {
    "conversation_hash": "65b1086aeea359b8741eed25a0217d1b",
    "code_index": 7,
    "language": "Lua",
    "libraries": [],
    "code": "A = [2 -0.1 -0.2; 0.1 7 -0.3; 0.3 -0.2 10];\nb = [7.85; -19.3; -71.4];\nx0 = [0; 0; 0]; % zero initial guess\nomega = 1.2; % relaxation factor\nmaxit = 3; % maximum number of iterations\n\nD = diag(A); % diagonal elements\nL = tril(A,-1); % lower triangular matrix\nU = triu(A,1); % upper triangular matrix\n\nx = x0; % initial guess\nfor k = 1:maxit\n    for i = 1:size(A,1)\n        x(i) = (1-omega)*x(i) + omega/D(i) * (b(i) - L(i,:)*x - U(i,:)*x);\n    end\nend\n\n% print the solution\nx",
    "filename": "65b1086aeea359b8741eed25a0217d1b_7.lua"
  },
  {
    "conversation_hash": "65b1086aeea359b8741eed25a0217d1b",
    "code_index": 10,
    "language": "Lua",
    "libraries": [],
    "code": "A = [2 -0.1 -0.2; 0.1 7 -0.3; 0.3 -0.2 10];\nb = [7.85; -19.3; -71.4];\nx0 = [0; 0; 0]; % zero initial guess\nomega = 1.2; % relaxation factor\nmaxit = 3; % maximum number of iterations\n\nD = diag(A); % diagonal elements\nL = tril(A,-1); % lower triangular matrix\nU = triu(A,1); % upper triangular matrix\n\nx = x0; % initial guess\nfor k = 1:maxit\n    for i = 1:size(A,1)\n        x(i) = (1-omega)*x(i) + omega/D(i) * (b(i) - L(i,:)*x - U(i,:)*x);\n    end\nend\n\n% print the solution\nx",
    "filename": "65b1086aeea359b8741eed25a0217d1b_10.lua"
  },
  {
    "conversation_hash": "c60f4bd3523906bf6310cc6bf8b057a9",
    "code_index": 5,
    "language": "Lua",
    "libraries": [],
    "code": "/var/log/wildfly/*.log {\n    daily\n    missingok\n    rotate 7\n    compress\n    delaycompress\n    notifempty\n    create 640 wildfly wildfly\n    postrotate\n        systemctl reload wildfly\n    endscript   \n}",
    "filename": "c60f4bd3523906bf6310cc6bf8b057a9_5.lua"
  },
  {
    "conversation_hash": "c60f4bd3523906bf6310cc6bf8b057a9",
    "code_index": 13,
    "language": "Lua",
    "libraries": [],
    "code": "/var/log/wildfly/*.log {\n    daily\n    missingok\n    rotate 7\n    compress\n    delaycompress\n    notifempty\n    create 640 wildfly wildfly\n    postrotate\n        systemctl reload wildfly\n    endscript   \n}",
    "filename": "c60f4bd3523906bf6310cc6bf8b057a9_13.lua"
  },
  {
    "conversation_hash": "c8c7786617e8de1ddfa1494552c129fb",
    "code_index": 3,
    "language": "Lua",
    "libraries": [],
    "code": "project \"myproject\"\n    kind \"ConsoleApp\"\n    language \"C++\"\n    targetdir \"bin\"\n\n    files { \"src/*.cpp\" }\n\n    -- 建立 mylib 项目的依赖关系\n    dependson { \"mylib\" }\n\n    -- 添加 mylib 库的依赖关系，并自动设置库以及头文件路径\n    links { \"mylib\" }\n    includedirs { \"%{prj.mylib.include}\" }\n\n    -- 定义 mylib 库的路径和头文件路径变量\n    mylib = {}\n    mylib.path = \"../mylib/lib/%{cfg.buildcfg}\"\n    mylib.include = \"../mylib/include\"",
    "filename": "c8c7786617e8de1ddfa1494552c129fb_3.lua"
  },
  {
    "conversation_hash": "c8c7786617e8de1ddfa1494552c129fb",
    "code_index": 8,
    "language": "Lua",
    "libraries": [],
    "code": "project \"mylib\"\n    kind \"StaticLib\"\n    language \"C++\"\n    targetdir \"lib\"\n\n    files { \"src/*.cpp\", \"include/*.h\" }\n\n    includedirs { \"include\" }  -- 指定头文件路径",
    "filename": "c8c7786617e8de1ddfa1494552c129fb_8.lua"
  },
  {
    "conversation_hash": "0978e4945d4faaa41cb876fa64c254a9",
    "code_index": 14,
    "language": "Lua",
    "libraries": [],
    "code": "project \"foo\"\n    language \"C++\"\n\n    -- 添加依赖库的头文件路径\n    filter \"system:windows\"\n        include_dependency_headers()",
    "filename": "0978e4945d4faaa41cb876fa64c254a9_14.lua"
  },
  {
    "conversation_hash": "01f5bf5c2bbc763ea4a57c735a6510e2",
    "code_index": 3,
    "language": "Lua",
    "libraries": [],
    "code": "lua\n   if (condition) then\n       -- 代码块 1\n   else\n       -- 代码块 2\n   end",
    "filename": "01f5bf5c2bbc763ea4a57c735a6510e2_3.lua"
  },
  {
    "conversation_hash": "faaed04c3611b741566e1c1ddf42f77f",
    "code_index": 6,
    "language": "Lua",
    "libraries": [],
    "code": "-- 导入LuaGoogle库\nlocal goog = require 'google'\n\n-- 创建新的 OAuth2 客户端\nlocal client = goog.oauth2.client_from_json('/path/to/credentials.json')\nclient:authorize()\n\n-- 调用 Google Play Developer API 获取订单和交易列表\nlocal androidpublisher = client:api('androidpublisher', 'v2')\nlocal response = androidpublisher.purchases().products().list({\n  packageName = 'com.example.yourapp',\n  maxResults = 10,\n  token = 'your-auth-token'\n})",
    "filename": "faaed04c3611b741566e1c1ddf42f77f_6.lua"
  },
  {
    "conversation_hash": "faaed04c3611b741566e1c1ddf42f77f",
    "code_index": 8,
    "language": "Lua",
    "libraries": [],
    "code": "-- 发送 GET 请求\nlocal url = \"[INSERT API ENDPOINT URL HERE]\"\nlocal response_body = {}\nlocal res, code, response_headers = http.request{\n  method = \"GET\",\n  url = url,\n  headers = {\n    [\"Accept\"] = \"application/json\",\n    [\"Authorization\"] = \"Bearer \".. ACCESS_TOKEN\n  },\n  sink = ltn12.sink.table(response_body)\n}\n\n-- 解析响应\nif code == 200 then\n  -- 请求成功\n  local json_body = table.concat(response_body)\n  local data = json.decode(json_body)\n  -- 处理数据...\nelse\n  -- 请求失败，根据错误代码处理失败情况\nend",
    "filename": "faaed04c3611b741566e1c1ddf42f77f_8.lua"
  },
  {
    "conversation_hash": "f5388b0074d5ad1af5e0e38e19ad0299",
    "code_index": 0,
    "language": "Lua",
    "libraries": [],
    "code": "/var/log/srs.log {\n    missingok\n    daily\n    rotate 7\n    compress\n    delaycompress\n    notifempty\n    create 0644 root root\n    postrotate\n        /usr/local/srs/utils/srslog.sh\n    endscript\n}",
    "filename": "f5388b0074d5ad1af5e0e38e19ad0299_0.lua"
  },
  {
    "conversation_hash": "7267a288a215a1206bc85808c77de8ab",
    "code_index": 0,
    "language": "Lua",
    "libraries": [],
    "code": "-- 获取当前请求的url地址\nlocal current_url = ngx.var.request_uri\n\n-- 将url地址中的参数进行提取，并存储到一个table中\nlocal args = ngx.req.get_uri_args()\n\n-- 将table中的参数按参数名进行升序排序\nlocal keys = {}\nfor k, _ in pairs(args) do\n    table.insert(keys, k)\nend\ntable.sort(keys)\n\n-- 将排序后的参数进行编码拼接为新的url地址\nlocal encoded_args = {}\nfor _, k in ipairs(keys) do\n    local v = args[k]\n    if v ~= nil then\n        table.insert(encoded_args, ngx.escape_uri(k) .. \"=\" .. ngx.escape_uri(v))\n    end\nend\nlocal new_url = ngx.var.scheme .. \"://\" .. ngx.var.host .. ngx.unescape_uri(ngx.var.request_uri:gsub(\"?.*\", \"\")) .. \"?\" .. table.concat(encoded_args, \"&\")\n\n-- 使用新的url地址进行重定向\nngx.redirect(new_url)",
    "filename": "7267a288a215a1206bc85808c77de8ab_0.lua"
  },
  {
    "conversation_hash": "a224a5cdacf5494c6464c242491cc21c",
    "code_index": 1,
    "language": "Lua",
    "libraries": [],
    "code": "local http = require \"resty.http\"\nlocal cjson = require \"cjson\"\n\n-- 从请求中获取参数\nlocal purchase_token = ngx.var.arg_purchase_token\nlocal package_name = ngx.var.arg_package_name\nlocal product_id = ngx.var.arg_product_id\nlocal access_token = \"YOUR_ACCESS_TOKEN\"\n\n-- 构建请求的URL\nlocal url = string.format(\"https://www.googleapis.com/androidpublisher/v3/applications/%s/purchases/products/%s/tokens/%s?access_token=%s\", package_name, product_id, purchase_token, access_token)\n\n-- 发送HTTP请求\nlocal httpc = http.new()\nlocal res, err = httpc:request_uri(url, {\n    method = \"GET\",\n    ssl_verify = true, -- 指定是否验证SSL证书\n})\n\nif not res then\n    ngx.log(ngx.ERR, err)\n    ngx.exit(ngx.HTTP_INTERNAL_SERVER_ERROR)\nend\n\n-- 处理响应\nlocal data = cjson.decode(res.body)\n\nif data.error then\n    -- 处理错误\n    ngx.log(ngx.ERR, \"Error: \", data.error)\n    ngx.exit(ngx.HTTP_INTERNAL_SERVER_ERROR)\nend\n\nlocal purchase_state = data.purchaseState\nif purchase_state == 0 then\n    -- 订单有效，记录订单信息\n    ngx.log(ngx.INFO, \"Purchase OK: \", res.body)\nelse\n    -- 订单无效，记录错误信息\n    ngx.log(ngx.ERR, \"Invalid purchase: \", res.body)\n    ngx.exit(ngx.HTTP_FORBIDDEN)\nend",
    "filename": "a224a5cdacf5494c6464c242491cc21c_1.lua"
  },
  {
    "conversation_hash": "a224a5cdacf5494c6464c242491cc21c",
    "code_index": 2,
    "language": "Lua",
    "libraries": [],
    "code": "local httpc = require \"http.httpc\"\nlocal cjson = require \"cjson\"\n\n-- 从请求中获取参数\nlocal purchase_token = ngx.var.arg_purchase_token\nlocal package_name = ngx.var.arg_package_name\nlocal product_id = ngx.var.arg_product_id\nlocal access_token = \"YOUR_ACCESS_TOKEN\"\n\n-- 构建请求的URL\nlocal url = string.format(\"https://www.googleapis.com/androidpublisher/v3/applications/%s/purchases/products/%s/tokens/%s?access_token=%s\", package_name, product_id, purchase_token, access_token)\n\n-- 发送HTTP请求\nlocal respheader = {}\nlocal resbody = {}\nlocal code, status = httpc.get(url, respheader, resbody)\nif code ~= 200 then\n    ngx.log(ngx.ERR, \"Error: \", status)\n    ngx.exit(ngx.HTTP_INTERNAL_SERVER_ERROR)\nend\n\n-- 处理响应\nlocal data = cjson.decode(resbody)\n\nif data.error then\n    -- 处理错误\n    ngx.log(ngx.ERR, \"Error: \", data.error)\n    ngx.exit(ngx.HTTP_INTERNAL_SERVER_ERROR)\nend\n\nlocal purchase_state = data.purchaseState\nif purchase_state == 0 then\n    -- 订单有效，记录订单信息\n    ngx.log(ngx.INFO, \"Purchase OK: \", resbody)\nelse\n    -- 订单无效，记录错误信息\n    ngx.log(ngx.ERR, \"Invalid purchase: \", resbody)\n    ngx.exit(ngx.HTTP_FORBIDDEN)\nend",
    "filename": "a224a5cdacf5494c6464c242491cc21c_2.lua"
  },
  {
    "conversation_hash": "a224a5cdacf5494c6464c242491cc21c",
    "code_index": 4,
    "language": "Lua",
    "libraries": [],
    "code": "local https = require \"ssl.https\"\nlocal cjson = require \"cjson\"\n\n-- 从请求中获取参数\nlocal purchase_token = ngx.var.arg_purchase_token\nlocal package_name = ngx.var.arg_package_name\nlocal product_id = ngx.var.arg_product_id\nlocal access_token = \"YOUR_ACCESS_TOKEN\"\n\n-- 构建请求的URL\nlocal url = string.format(\"https://www.googleapis.com/androidpublisher/v3/applications/%s/purchases/products/%s/tokens/%s?access_token=%s\", package_name, product_id, purchase_token, access_token)\n\n-- 发送HTTPS请求\nlocal _, res = https.request{\n    url = url,\n    method = \"GET\",\n    verify = \"none\", -- 禁止验证证书\n}\n\nif not res then\n    ngx.log(ngx.ERR, \"Empty response\")\n    ngx.exit(ngx.HTTP_INTERNAL_SERVER_ERROR)\nend\n\n-- 处理响应\nlocal data = cjson.decode(res)\n\nif data.error then\n    -- 处理错误\n    ngx.log(ngx.ERR, \"Error: \", data.error)\n    ngx.exit(ngx.HTTP_INTERNAL_SERVER_ERROR)\nend\n\nlocal purchase_state = data.purchaseState\nif purchase_state == 0 then\n    -- 订单有效，记录订单信息\n    ngx.log(ngx.INFO, \"Purchase OK: \", res)\nelse\n    -- 订单无效，记录错误信息\n    ngx.log(ngx.ERR, \"Invalid purchase: \", res)\n    ngx.exit(ngx.HTTP_FORBIDDEN)\nend",
    "filename": "a224a5cdacf5494c6464c242491cc21c_4.lua"
  },
  {
    "conversation_hash": "a224a5cdacf5494c6464c242491cc21c",
    "code_index": 5,
    "language": "Lua",
    "libraries": [],
    "code": "local https = require \"ssl.https\"\nlocal cjson = require \"cjson\"\nlocal ctx = require \"ssl.context\"\n\n-- 创建一个SSL上下文（与创建OpenSSL SSL_CTX类似）\nlocal sslctx = assert(ctx.client(\"sslv23\"))\n\n-- 设置SSL上下文的证书、私钥、协议、算法等属性\nsslctx:setOptions(\"all\")\nsslctx:setVerify(\"none\")\nsslctx:setMode(\"client\")\n\n-- 从请求中获取参数\nlocal purchase_token = ngx.var.arg_purchase_token\nlocal package_name = ngx.var.arg_package_name\nlocal product_id = ngx.var.arg_product_id\nlocal access_token = \"YOUR_ACCESS_TOKEN\"\n\n-- 构建请求的URL\nlocal url = string.format(\"https://www.googleapis.com/androidpublisher/v3/applications/%s/purchases/products/%s/tokens/%s?access_token=%s\", package_name, product_id, purchase_token, access_token)\n\n-- 发送HTTPS请求\nlocal _, res = https.request{\n    url = url,\n    method = \"GET\",\n    verify = \"none\", -- 禁止验证证书\n    protocol = \"sslv23\", -- 设置协议版本\n    options = \"all\", -- 设置算法\n    capath = \"/path/to/ca/dir\", -- 设置根证书路径\n    cafile = \"/path/to/ca.pem\", -- 设置根证书文件\n    mode = \"client\", -- 指定客户端模式\n    key = \"/path/to/key.pem\", -- 设置客户端私钥\n    certificate = \"/path/to/cert.pem\", -- 设置客户端证书\n    verifydepth = 0, -- 设置验证深度\n    verifyext = { -- 设置验证规则\n        \"lsec_continue\", \"matchhost\", \"matchemail\",\n        \"signature\", \"expiration\", \"distrust\",\n    },\n    options = {\"all\", \"no_sslv2\", \"no_sslv3\", \"no_tlsv1_3\", \"no_ticket\"},\n    protocol = {\"tlsv1\", \"tlsv1_1\", \"tlsv1_2\"},\n    timeout = 5000,\n    fleder = \"01:00\", -- 设置连接生存期\n    extension = {\"server_name\", \"max_fragment_length\",\n                \"status_request\", \"ec_point_formats\", \"onl_requets\",\n                \"alpn_protocol_list\", \"signed_certificate_timestamp\",\n                \"next_protocol_negotiation\", \"renegotiation_info\",\n                \"key_share\", \"pre_shared_key\", \"early_data\"},\n    servername = \"www.example.com\",\n    cafile = \"/path/to/ca.pem\",\n    capath = \"/path/to/ca/dir\",\n    ciphers = \"TLSv1.3:!KEY_EXCHANGE_RSA\", -- 指定密码套件\n    useems = false, -- 关闭EMS扩展\n}\n\nif not res then\n    ngx.log(ngx.ERR, \"Empty response\")\n    ngx.exit(ngx.HTTP_INTERNAL_SERVER_ERROR)\nend\n\n-- 处理响应\nlocal data = cjson.decode(res)\n\nif data.error then\n    -- 处理错误\n    ngx.log(ngx.ERR, \"Error: \", data.error)\n    ngx.exit(ngx.HTTP_INTERNAL_SERVER_ERROR)\nend\n\nlocal purchase_state = data.purchaseState\nif purchase_state == 0 then\n    -- 订单有效，记录订单信息\n    ngx.log(ngx.INFO, \"Purchase OK: \", res)\nelse\n    -- 订单无效，记录错误信息\n    ngx.log(ngx.ERR, \"Invalid purchase: \", res)\n    ngx.exit(ngx.HTTP_FORBIDDEN)\nend",
    "filename": "a224a5cdacf5494c6464c242491cc21c_5.lua"
  },
  {
    "conversation_hash": "f5090c55af1017da19d4390ff4fe4092",
    "code_index": 12,
    "language": "Lua",
    "libraries": [],
    "code": "local ffi = require(\"ffi\")\nlocal size_t = ffi.typeof(\"size_t\") -- 定义 size_t 类型\nlocal buffer = ffi.new(\"char[?]\", size_t(16)) -- 定义 char 类型数组\nlocal src = ffi.new(\"char[?]\", size_t(16)) -- 定义 char 类型数组\n\n-- 使用 C 标准库中的 memcpy 函数\nffi.C.memcpy(buffer, src, size_t(16))",
    "filename": "f5090c55af1017da19d4390ff4fe4092_12.lua"
  },
  {
    "conversation_hash": "9522b76d6b639747660dc0e1391112d1",
    "code_index": 1,
    "language": "Lua",
    "libraries": [],
    "code": "local myTable = {\n    name = \"John\",\n    age = 30,\n    address = {\n        street = \"123 Main St\",\n        city = \"Anytown\",\n        state = \"NY\"\n    }\n}\n\nprintTable(myTable)",
    "filename": "9522b76d6b639747660dc0e1391112d1_1.lua"
  },
  {
    "conversation_hash": "cb1a3fb2b544c6501d2c7f471d583271",
    "code_index": 0,
    "language": "Lua",
    "libraries": [],
    "code": "boxplot(exprSet,\n        outline = FALSE,\n        notch = TRUE,\n        las = 2,\n        col = \"darkcyan\",\n        width = 1.5,    # 调整箱子的宽度\n        space = 1.5     # 调整箱子之间的间距\n)",
    "filename": "cb1a3fb2b544c6501d2c7f471d583271_0.lua"
  },
  {
    "conversation_hash": "cb1a3fb2b544c6501d2c7f471d583271",
    "code_index": 2,
    "language": "Lua",
    "libraries": [],
    "code": "pdf(\"output.pdf\", width = 8 * 1.5, height = 6)\nboxplot(exprSet,\n        outline = FALSE,\n        notch = TRUE,\n        las = 2,\n        col = \"darkcyan\"\n)\ndev.off()",
    "filename": "cb1a3fb2b544c6501d2c7f471d583271_2.lua"
  },
  {
    "conversation_hash": "9655a22f4fa2615406a769831a3f318c",
    "code_index": 0,
    "language": "Lua",
    "libraries": [],
    "code": "import (\n       \"go.opentelemetry.io/otel\"\n       \"go.opentelemetry.io/otel/exporters/prometheus\"\n       \"go.opentelemetry.io/otel/metric\"\n   )",
    "filename": "9655a22f4fa2615406a769831a3f318c_0.lua"
  },
  {
    "conversation_hash": "9655a22f4fa2615406a769831a3f318c",
    "code_index": 3,
    "language": "Lua",
    "libraries": [],
    "code": "import (\n       \"go.opentelemetry.io/otel\"\n       \"go.opentelemetry.io/otel/exporters/prometheus\"\n       \"go.opentelemetry.io/otel/metric\"\n   )",
    "filename": "9655a22f4fa2615406a769831a3f318c_3.lua"
  },
  {
    "conversation_hash": "9655a22f4fa2615406a769831a3f318c",
    "code_index": 7,
    "language": "Lua",
    "libraries": [],
    "code": "import (\n       \"go.opentelemetry.io/otel\"\n       \"go.opentelemetry.io/otel/exporters/prometheus\"\n       \"go.opentelemetry.io/otel/metric\"\n       \"go.opentelemetry.io/otel/trace\"\n   )",
    "filename": "9655a22f4fa2615406a769831a3f318c_7.lua"
  },
  {
    "conversation_hash": "9655a22f4fa2615406a769831a3f318c",
    "code_index": 11,
    "language": "Lua",
    "libraries": [],
    "code": "import (\n       \"go.opentelemetry.io/otel\"\n       \"go.opentelemetry.io/otel/exporters/prometheus\"\n       \"go.opentelemetry.io/otel/metric\"\n       \"go.opentelemetry.io/otel/trace\"\n       otelhttp \"go.opentelemetry.io/otel/instrumentation/http\"\n   )",
    "filename": "9655a22f4fa2615406a769831a3f318c_11.lua"
  },
  {
    "conversation_hash": "9655a22f4fa2615406a769831a3f318c",
    "code_index": 15,
    "language": "Lua",
    "libraries": [],
    "code": "import (\n       \"go.opentelemetry.io/otel\"\n       \"go.opentelemetry.io/otel/exporters/prometheus\"\n       \"go.opentelemetry.io/otel/metric\"\n       otelhttp \"go.opentelemetry.io/otel/instrumentation/http\"\n   )",
    "filename": "9655a22f4fa2615406a769831a3f318c_15.lua"
  },
  {
    "conversation_hash": "c50d93b49997de7e21f1274ddb65a69b",
    "code_index": 1,
    "language": "Lua",
    "libraries": [],
    "code": "local startTime = tick()\nlocal duration = 60 -- Duration for the grayscale effect in seconds\n\nwhile true do\n    local elapsedTime = tick() - startTime\n    local grayscaleValue = 1 - (elapsedTime / duration)\n    \n    game.Lighting.ColorCorrection.Brightness = grayscaleValue\n    game.Lighting.ColorCorrection.Saturation = grayscaleValue\n    \n    wait(0.1) -- Decrease/increase the wait time for desired transition speed\nend",
    "filename": "c50d93b49997de7e21f1274ddb65a69b_1.lua"
  },
  {
    "conversation_hash": "f9df85c19917fcb96262ad2965f5098f",
    "code_index": 5,
    "language": "Lua",
    "libraries": [],
    "code": "project \"YourProject\"\n    location \"build\"\n    language \"C++\"\n    -- 其他项目设置\n    \n    vpaths {\n        [\"SDL2/*\"] = \"sdl2/include/*\"\n    }\n    \n    -- 其他项目设置",
    "filename": "f9df85c19917fcb96262ad2965f5098f_5.lua"
  },
  {
    "conversation_hash": "7abf6fc384d5379bd602f473a77cdb92",
    "code_index": 0,
    "language": "Lua",
    "libraries": [],
    "code": "local itemConfig = mousetarget:FindFirstChild(\"ItemConfig\")\nif itemConfig then\n    -- Use the itemConfig child here\nelse\n    -- Handle the case when \"ItemConfig\" child doesn't exist\nend",
    "filename": "7abf6fc384d5379bd602f473a77cdb92_0.lua"
  },
  {
    "conversation_hash": "0c4807258f42d2b02aa7e4d8f5cce302",
    "code_index": 0,
    "language": "Lua",
    "libraries": [],
    "code": "-- Получаем следующую точку пути\nlocal waypoints = currentPath:GetWaypoints()\nlocal nextWaypoint = waypoints[1]\n\n-- Перемещаем персонажа к следующей точке пути\nlocal direction = (nextWaypoint.Position - character.HumanoidRootPart.Position).unit\nhumanoid:MoveTo(character.HumanoidRootPart.Position + direction)",
    "filename": "0c4807258f42d2b02aa7e4d8f5cce302_0.lua"
  },
  {
    "conversation_hash": "f16a787b64bfdfed536db74a92f31ec5",
    "code_index": 0,
    "language": "Lua",
    "libraries": [],
    "code": "while currentPath and currentPath.Status ~= Enum.PathStatus.Success do\n    -- Проверяем, есть ли путь и вычислены ли уже точки пути\n    if currentPath.Status == Enum.PathStatus.Invalid or currentPath.Status == Enum.PathStatus.Cancelled then\n        break\n    end\n    \n    -- Получаем следующую точку пути\n    local waypoints = currentPath:GetWaypoints()\n    if #waypoints == 0 then\n        break\n    end\n    \n    local nextWaypoint = waypoints[1]\n    \n    -- Перемещаем персонажа к следующей точке пути\n    local direction = (nextWaypoint.Position - character.HumanoidRootPart.Position).unit\n    humanoid:MoveTo(character.HumanoidRootPart.Position + direction)\n    \n    wait(1) -- Подождать 1 секунду (можно изменить интервал обновления)\nend",
    "filename": "f16a787b64bfdfed536db74a92f31ec5_0.lua"
  },
  {
    "conversation_hash": "f3f76c2259b01dafd735e977d10bcdc4",
    "code_index": 1,
    "language": "Lua",
    "libraries": [],
    "code": "local enemySpawnPoint = radiantSpawnPoint  -- Измените для Dire крипов\n\nif factionValue.Value == \"Radiant\" then\n\tenemySpawnPoint = direSpawnPoint\nend\n\nlocal lookVector = (enemySpawnPoint - creep.PrimaryPart.Position).Unit\ncreep:SetPrimaryPartCFrame(CFrame.new(creep.PrimaryPart.Position, creep.PrimaryPart.Position + lookVector))",
    "filename": "f3f76c2259b01dafd735e977d10bcdc4_1.lua"
  },
  {
    "conversation_hash": "f3f76c2259b01dafd735e977d10bcdc4",
    "code_index": 2,
    "language": "Lua",
    "libraries": [],
    "code": "local path = pathfindingService:CreatePath()\npath:ComputeAsync(creep.PrimaryPart.Position, middlePoint)\n\nlocal waypoints = path:GetWaypoints()\n\nfor i, waypoint in ipairs(waypoints) do\n\tcreep.PrimaryPart.Humanoid:MoveTo(waypoint.Position)\n\tcreep.PrimaryPart.Humanoid.MoveToFinished:Wait() -- Ожидание завершения пути к текущей точке перед движением к следующей\nend",
    "filename": "f3f76c2259b01dafd735e977d10bcdc4_2.lua"
  },
  {
    "conversation_hash": "4f731fbdd1b5b2d34f8fb35ea2a38eff",
    "code_index": 0,
    "language": "Lua",
    "libraries": [],
    "code": "local pathfindingService = game:GetService(\"PathfindingService\")\nlocal humanoid = npc.Humanoid\nlocal path = pathfindingService:CreatePath()\n\n-- Пример целевой позиции (x, y, z координаты)\nlocal targetPosition = Vector3.new(10, 0, 10)\n\n-- Установка цели пути\npath:ComputeAsync(humanoid.RootPart.Position, targetPosition)",
    "filename": "4f731fbdd1b5b2d34f8fb35ea2a38eff_0.lua"
  },
  {
    "conversation_hash": "c99e849819462049d3b8acd6673c22b2",
    "code_index": 0,
    "language": "Lua",
    "libraries": [],
    "code": "for i = 1, #timeCycle do\n  if time >= timeCycle[i].time and time < timeCycle[i + 1].time then\n    Lighting.ClockTime = i\n    break\n  end\nend",
    "filename": "c99e849819462049d3b8acd6673c22b2_0.lua"
  },
  {
    "conversation_hash": "f9acb89ac5871a48430f8150840ad0dc",
    "code_index": 0,
    "language": "Lua",
    "libraries": [],
    "code": "local UpdateTimeEvent = Instance.new(\"RemoteEvent\")\n     UpdateTimeEvent.Name = \"UpdateTimeEvent\"\n     UpdateTimeEvent.Parent = game.ReplicatedStorage\n\n     local GetDayOfWeekFunction = Instance.new(\"RemoteFunction\")\n     GetDayOfWeekFunction.Name = \"GetDayOfWeekFunction\"\n     GetDayOfWeekFunction.Parent = game.ReplicatedStorage",
    "filename": "f9acb89ac5871a48430f8150840ad0dc_0.lua"
  },
  {
    "conversation_hash": "45ec6cce43115eb7c8151a39eb104bad",
    "code_index": 0,
    "language": "Lua",
    "libraries": [],
    "code": "local timeCycle = {\n    {time = 0, speed = 4}, -- night\n    {time = 600, speed = 16}, -- morning\n    {time = 900, speed = 8}, -- day\n    {time = 1800, speed = 2}, -- evening\n    {time = 2400, speed = 4} -- night\n}",
    "filename": "45ec6cce43115eb7c8151a39eb104bad_0.lua"
  },
  {
    "conversation_hash": "309211ee0c71cda74d221bfc05fa0bb4",
    "code_index": 0,
    "language": "Lua",
    "libraries": [],
    "code": "local distanceToMiddle = (middle - creep.PrimaryPart.Position).Magnitude\nif distanceToMiddle > 40 then\n    local pathToThrone = pathfindingService:CreatePath()\n    pathToThrone:ComputeAsync(creep.PrimaryPart.Position, enemyThrone.Position)\n    local waypointsToThrone = pathToThrone:GetWaypoints()\n\n    for i = 1, #waypointsToThrone do\n        creep.Humanoid:MoveTo(waypointsToThrone[i].Position)\n        creep.Humanoid.MoveToFinished:Wait()\n        -- Проверка расстояния до `enemyThrone` после каждого подхода к нему\n        local distanceToThrone = (enemyThrone.Position - creep.PrimaryPart.Position).Magnitude\n        if distanceToThrone <= creepsattackrange then\n            targetCreep = nil\n            break\n        end\n    end\nend",
    "filename": "309211ee0c71cda74d221bfc05fa0bb4_0.lua"
  },
  {
    "conversation_hash": "1064569895d4b38b1315d0728640e625",
    "code_index": 0,
    "language": "Lua",
    "libraries": [],
    "code": "for _, enemyCreep in ipairs(workspace:GetChildren()) do\n    if enemyCreep.Name == \"RadiantCreep\" then\n        if (enemyCreep.PrimaryPart.Position - creep.PrimaryPart.Position).Magnitude <= creepsattackrange then\n            table.insert(targetCreepList, enemyCreep) -- Обновление списка целей\n        end\n    end\nend",
    "filename": "1064569895d4b38b1315d0728640e625_0.lua"
  },
  {
    "conversation_hash": "1064569895d4b38b1315d0728640e625",
    "code_index": 1,
    "language": "Lua",
    "libraries": [],
    "code": "for _, enemyCreep in ipairs(workspace:GetChildren()) do\n    if enemyCreep.Name == \"DireCreep\" then\n        if (enemyCreep.PrimaryPart.Position - creep.PrimaryPart.Position).Magnitude <= creepsattackrange then\n            table.insert(targetCreepList, enemyCreep) -- Обновление списка целей\n        end\n    end\nend",
    "filename": "1064569895d4b38b1315d0728640e625_1.lua"
  },
  {
    "conversation_hash": "528d6c433e0c428371046f9ad8027688",
    "code_index": 4,
    "language": "Lua",
    "libraries": [],
    "code": "id,label\n1,1\n2,0\n3,1\n4,2\n5,3",
    "filename": "528d6c433e0c428371046f9ad8027688_4.lua"
  },
  {
    "conversation_hash": "b6940d7857bf6f07c34adcebce031b69",
    "code_index": 4,
    "language": "Lua",
    "libraries": [],
    "code": "CC = gcc\nCFLAGS = -Wall -Werror\n\nquiet_cmd_cc = CC $@\n      cmd_cc = $(CC) $(CFLAGS) -c -o $@ $<\n\n# 定义静默规则\n$(Q)quiet_cmd = $(quiet_cmd_$(1))\n      cmd = $(cmd_$(1))\n\n# 控制命令的显示\nifneq ($(V), 1)\nCOMMAND_PREFIX := $(if $(findstring s,$(filter-out --%,$(MAKEFLAGS))),@,)\nendif\n\n# 重定义命令规则\ncmd_q = $(COMMAND_PREFIX)$(subst $(newline),$(newline)$(COMMAND_PREFIX),\\\n         $(cmd_$(1)))\n\n# 重定义静默命令规则\ncmd_quiet = $(subst $(newline),$(newline)$(COMMAND_PREFIX),\\\n             $(cmd_$(1)))\n\n# 定义编译规则\n%.o: %.c\n      $(call cmd,cc)",
    "filename": "b6940d7857bf6f07c34adcebce031b69_4.lua"
  },
  {
    "conversation_hash": "7dd0cab964bb9c0924aaf0048c7772ae",
    "code_index": 1,
    "language": "Lua",
    "libraries": [],
    "code": "mydir = '/home/nilab/wqy/';\nmouse_names = {'R21','R22','R23'};\ntrial_names = {'R21_UC','R21_SFC','R21_EXT','R21_Pre','R21_Post','R21_EXT1','R21_EXT4','R21_EXT6'};\ntetrode_names = {'_0','_1','_2','_3','_4','_5','_6','_7'};\n\nfor mouse_id = 1:length(mouse_names)\n    for trial_id = 1:length(trial_names)\n        for tetrode_id = 1:length(tetrode_names)\n            command = sprintf('timeseries:%s%s_%s%s --outputs timeseries_out:%s/R21_SFCTestfilt2.mda.prv --parameters samplerate:30000 freq_min:600 freq_max:7000', mydir, mouse_names{mouse_id}, trial_names{trial_id}, tetrode_names{tetrode_id}, mydir);\n            disp(command);\n            \n            % Execute the command here if needed\n        end\n    end\nend",
    "filename": "7dd0cab964bb9c0924aaf0048c7772ae_1.lua"
  },
  {
    "conversation_hash": "faf9a648b2c5b2a751dbe9fb5135b5fc",
    "code_index": 1,
    "language": "Lua",
    "libraries": [],
    "code": "local creepsattackrange = 9.5\nlocal radiantModels = {}\nlocal direModels = {}\nlocal middle = Vector3.new(0,10,0)\n\n-- ваш код для получения списка моделей крипов и разделения их по фракциям\n\n-- ваш код для создания и настройки крипов и запуска скрипта движения и драки крипов",
    "filename": "faf9a648b2c5b2a751dbe9fb5135b5fc_1.lua"
  },
  {
    "conversation_hash": "25aacf55f20cd8bd36178ed2271d49ed",
    "code_index": 1,
    "language": "Lua",
    "libraries": [],
    "code": "local obstacles = game.Workspace.Obstacles:GetChildren() -- Замените на свою группу препятствий\nlocal region3 = Region3.new()\nfor i, obstacle in ipairs(obstacles) do\n    region3:Add(workspace:WaitForChild(obstacle.Name).Part:GetBoundingBox())\nend\n\nlocal path = PathfindingService:CreatePath()\npath:ComputeAsync(creep.HumanoidRootPart.Position, enemyThrone.Position, region3)\n\nlocal waypoints = path:GetWaypoints()\nfor i, waypoint in ipairs(waypoints) do\n    -- остальной код\nend",
    "filename": "25aacf55f20cd8bd36178ed2271d49ed_1.lua"
  },
  {
    "conversation_hash": "1e4406dfa0c868b43a5746dacfc9dc5f",
    "code_index": 1,
    "language": "Lua",
    "libraries": [],
    "code": "local nearestTower = nearestTower(script.Parent.HumanoidRootPart.Position, faction)\nif nearestTower and (script.Parent.HumanoidRootPart.Position - nearestTower.Position).Magnitude < creepsattackrange * 1.4 then\n    fighting = true\n    attackTower(script.Parent.HumanoidRootPart, nearestTower.Parent)\nend",
    "filename": "1e4406dfa0c868b43a5746dacfc9dc5f_1.lua"
  },
  {
    "conversation_hash": "5f487d45fb565e44524a73af0a0e2ea8",
    "code_index": 0,
    "language": "Lua",
    "libraries": [],
    "code": "-- Get all objects with the name \"item1\"\nlocal items = workspace:GetDescendants()\nfor i = 1, #items do\n    if items[i].Name == \"item1\" then\n        -- Create a BillboardGui to hold the TextLabel\n        local billboard = Instance.new(\"BillboardGui\")\n        billboard.Adornee = items[i]\n        billboard.Size = UDim2.new(0, 100, 0, 50) -- Adjust the size as needed\n        billboard.StudsOffset = Vector3.new(0, 7, 0) -- Adjust the offset as needed\n        billboard.Parent = items[i]\n\n        -- Create the TextLabel within the BillboardGui\n        local label = Instance.new(\"TextLabel\")\n        label.BackgroundTransparency = 1\n        label.Size = UDim2.new(1, 0, 1, 0)\n        label.Font = Enum.Font.SourceSansBold\n        label.Text = \"item1\"\n        label.TextColor3 = Color3.new(1, 1, 1)\n        label.TextScaled = true\n        label.Parent = billboard\n    end\nend",
    "filename": "5f487d45fb565e44524a73af0a0e2ea8_0.lua"
  },
  {
    "conversation_hash": "bfdff3cb8654f7326252e8100d5f74ea",
    "code_index": 0,
    "language": "Lua",
    "libraries": [],
    "code": "# 允许访问的地址\naddress = 192.168.0.123\n\n# 绑定的IP地址\nbind address = 192.168.0.123\n\n# 监听的网络接口\ninterface = eth0",
    "filename": "bfdff3cb8654f7326252e8100d5f74ea_0.lua"
  },
  {
    "conversation_hash": "bfdff3cb8654f7326252e8100d5f74ea",
    "code_index": 1,
    "language": "Lua",
    "libraries": [],
    "code": "# 允许访问的地址\nhosts allow = 192.168.0.0/24\n\n# 绑定的IP地址\nbind address = 0.0.0.0",
    "filename": "bfdff3cb8654f7326252e8100d5f74ea_1.lua"
  },
  {
    "conversation_hash": "3c4cce68b96d10980600ec6d7dafc67c",
    "code_index": 0,
    "language": "Lua",
    "libraries": [],
    "code": "while true do\n    if adc_pin_temp and adc_pin_temp ~= 255 then\n        local value = adc.get(adc_pin_temp)\n        log.debug(\"adc\", \"Temperature\", value)\n    end\n    sys.wait(500)\nend",
    "filename": "3c4cce68b96d10980600ec6d7dafc67c_0.lua"
  },
  {
    "conversation_hash": "3c4cce68b96d10980600ec6d7dafc67c",
    "code_index": 1,
    "language": "Lua",
    "libraries": [],
    "code": "local adc_min = 0\nlocal adc_max = 4095\nlocal temp_min = 0\nlocal temp_max = 100\n\nlocal adc_value = 3751\nlocal temperature = (adc_value - adc_min) * (temp_max - temp_min) / (adc_max - adc_min) + temp_min\n\nlog.info(\"Temperature\", string.format(\"%.2f\", temperature) .. \"°C\")",
    "filename": "3c4cce68b96d10980600ec6d7dafc67c_1.lua"
  },
  {
    "conversation_hash": "3c4cce68b96d10980600ec6d7dafc67c",
    "code_index": 2,
    "language": "Lua",
    "libraries": [],
    "code": "while true do\n    if adc_pin_temp and adc_pin_temp ~= 255 then\n        local adc_value = adc.get(adc_pin_temp)\n        local temperature = adc_value / (2^12 - 1) * 3.4\n        log.debug(\"adc\", \"Temperature\", temperature)\n    end\n    sys.wait(500)\nend",
    "filename": "3c4cce68b96d10980600ec6d7dafc67c_2.lua"
  },
  {
    "conversation_hash": "3c4cce68b96d10980600ec6d7dafc67c",
    "code_index": 3,
    "language": "Lua",
    "libraries": [],
    "code": "while true do\n    if adc_pin_temp and adc_pin_temp ~= 255 then\n        local adc_value = adc.get(adc_pin_temp)\n        if adc_value then\n            local temperature = adc_value / (2^12 - 1) * 3.4\n            log.debug(\"adc\", \"Temperature\", temperature)\n        else\n            log.warn(\"adc\", \"Failed to read ADC value\")\n        end\n    end\n    sys.wait(500)\nend",
    "filename": "3c4cce68b96d10980600ec6d7dafc67c_3.lua"
  },
  {
    "conversation_hash": "279636753bb187e8aac729aab1317fdb",
    "code_index": 0,
    "language": "Lua",
    "libraries": [],
    "code": "local sensor_offset = 0 -- 传感器的偏移值\nlocal sensor_scale = 1 -- 传感器的比例尺\n\n...\nwhile true do\n    if adc_pin_0 and adc_pin_0 ~= 255 then\n        local adc_value = adc.get(adc_pin_0)\n        local temperature = (adc_value - sensor_offset) * sensor_scale\n        log.debug(\"adc\", \"adc\" .. tostring(adc_pin_0), adc.get(adc_pin_0))\n        log.debug(\"adc\", \"Temperature\", temperature)\n    end\n    ...\nend\n...",
    "filename": "279636753bb187e8aac729aab1317fdb_0.lua"
  },
  {
    "conversation_hash": "5491fde8a62554757316baa972837ceb",
    "code_index": 2,
    "language": "Lua",
    "libraries": [],
    "code": "for char in string.gmatch(str, \"%a\") do\n  if char == 'a' or char == 'e' or char == 'i' or char == 'u' or char == 'o' then\n    vowelCount = vowelCount + 1\n  end\nend",
    "filename": "5491fde8a62554757316baa972837ceb_2.lua"
  },
  {
    "conversation_hash": "4ba4c707b8733d6e69574afc8398f7f8",
    "code_index": 4,
    "language": "Lua",
    "libraries": [],
    "code": "local controlPoints = {\n    Vector3(0, 0, 0),       -- starting point\n    Vector3(5, 0, 0),       -- middle point\n    Vector3(10, 0, 0),      -- ending point\n}",
    "filename": "4ba4c707b8733d6e69574afc8398f7f8_4.lua"
  },
  {
    "conversation_hash": "3a126ca35e4cb3bb5556aaa037601ee6",
    "code_index": 0,
    "language": "Lua",
    "libraries": [],
    "code": "-- Get the Players service\nlocal players = game:GetService(\"Players\")\n\n-- Iterate through each player\nfor _, player in ipairs(players:GetPlayers()) do\n    -- Change the currency to 10,000 coins (replace this with the currency system in your game)\n    player.leaderstats.Coins.Value = 10000\nend",
    "filename": "3a126ca35e4cb3bb5556aaa037601ee6_0.lua"
  },
  {
    "conversation_hash": "cfab7870261f972d613b5bf63ba67019",
    "code_index": 0,
    "language": "Lua",
    "libraries": [],
    "code": "local gpio_pin = 7\n\n-- 配置GPIO引脚为输入模式\ngpio.setup(gpio_pin, gpio.IN)\n\n-- 读取GPIO引脚的电平（0或1）\nlocal gpio_value = gpio.read(gpio_pin)\n\n-- 将GPIO电平转换为温度值（假设每个电平对应2°C的温度变化）\nlocal temperature = gpio_value * 2 - 20\n\n-- 打印温度值\nlog.info(\"temperature\", temperature)",
    "filename": "cfab7870261f972d613b5bf63ba67019_0.lua"
  },
  {
    "conversation_hash": "cfab7870261f972d613b5bf63ba67019",
    "code_index": 1,
    "language": "Lua",
    "libraries": [],
    "code": "-- 加载sys库\n_G.sys = require(\"sys\")\n\n-- 加载gpio库\n_G.gpio = require(\"gpio\")\n\n-- 在加载其他库之前，先初始化GPIO\ngpio.init()\n\n-- 这之后再加载其他库或模块，并根据需要进行配置和操作\n-- ...",
    "filename": "cfab7870261f972d613b5bf63ba67019_1.lua"
  },
  {
    "conversation_hash": "cfab7870261f972d613b5bf63ba67019",
    "code_index": 2,
    "language": "Lua",
    "libraries": [],
    "code": "-- 加载sys库\n_G.sys = require(\"sys\")\n\n-- 在加载其他库之前，先初始化sys库\nsys.init()\n\n-- 这之后再加载其他库或模块，并根据需要进行配置和操作\n-- ...",
    "filename": "cfab7870261f972d613b5bf63ba67019_2.lua"
  },
  {
    "conversation_hash": "b9277a8ff906873370ea310e718a9682",
    "code_index": 0,
    "language": "Lua",
    "libraries": [],
    "code": "-- Inside a LocalScript\nlocal player = game.Players.LocalPlayer\nlocal character = player.Character or player.CharacterAdded:Wait()\n\n-- Change the speed and jump power values here\nlocal speed = 50\nlocal jumpPower = 100\n\n-- Check if the character is available\nif character then\n    local humanoid = character:WaitForChild(\"Humanoid\")\n\n    -- Change the speed and jump power\n    humanoid.WalkSpeed = speed\n    humanoid.JumpPower = jumpPower\nend",
    "filename": "b9277a8ff906873370ea310e718a9682_0.lua"
  },
  {
    "conversation_hash": "021951806915c8af2e38c625382f5083",
    "code_index": 1,
    "language": "Lua",
    "libraries": [
      "the"
    ],
    "code": "-- Wait for attributes from the script\nlocal walkSpeedAttr = script.Parent:GetAttribute(\"WalkSpeed\")\nlocal jumpPowerAttr = script.Parent:GetAttribute(\"JumpPower\")\n\n-- Update attributes on each frame\nwhile true do\n    script.Parent:SetAttribute(\"WalkSpeed\", script.Parent:WaitForChild(\"Humanoid\").WalkSpeed)\n    script.Parent:SetAttribute(\"JumpPower\", script.Parent:WaitForChild(\"Humanoid\").JumpPower)\nend",
    "filename": "021951806915c8af2e38c625382f5083_1.lua"
  },
  {
    "conversation_hash": "1915e226cc48abe7eb57e1d1506e0c1f",
    "code_index": 0,
    "language": "Lua",
    "libraries": [],
    "code": "if key == KEY_R and not input.IsKeyDown(KEY_LSHIFT) then\n    if CurTime() - globalCooldown >= 0.5 then\n        surface.PlaySound(\"sound/Akaza/compas.mp3\")\n    end\nend",
    "filename": "1915e226cc48abe7eb57e1d1506e0c1f_0.lua"
  },
  {
    "conversation_hash": "1915e226cc48abe7eb57e1d1506e0c1f",
    "code_index": 3,
    "language": "Lua",
    "libraries": [],
    "code": "if key == KEY_R and not input.IsKeyDown(KEY_LSHIFT) then\n    if CurTime() - globalCooldown >= 0.5 then\n        net.Start(\"PlayCompassSound\")\n        net.WriteString(\"Akaza/compas.mp3\") -- Замените на правильный путь к файлу звука\n        net.WriteFloat(1) -- Замените на желаемую громкость звука\n        net.WriteUInt(500, 16) -- Замените на желаемый радиус звука\n\n        net.SendToServer()\n    end\nend",
    "filename": "1915e226cc48abe7eb57e1d1506e0c1f_3.lua"
  },
  {
    "conversation_hash": "ee8ff655631f1764101c6ac9df5d30c6",
    "code_index": 0,
    "language": "Lua",
    "libraries": [],
    "code": "for i, v in pairs(game.Workspace:GetDescendants()) do\n    if v:IsA(\"BasePart\") and v.Name == \"Camera\" and v.Parent:IsA(\"Camera\") then\n        table.insert(cameras, v)\n    end\nend",
    "filename": "ee8ff655631f1764101c6ac9df5d30c6_0.lua"
  },
  {
    "conversation_hash": "ee8ff655631f1764101c6ac9df5d30c6",
    "code_index": 1,
    "language": "Lua",
    "libraries": [],
    "code": "local used = false\n\n-- ...\n\nif used == false then\n    script.Parent.Enabled = true\n    camn = 1\n    cam.CameraType = \"Scriptable\"\n    cam.CFrame = cameras[camn]\n    used = true\nend",
    "filename": "ee8ff655631f1764101c6ac9df5d30c6_1.lua"
  },
  {
    "conversation_hash": "d94532f72c533612c4779768fe710ceb",
    "code_index": 1,
    "language": "Lua",
    "libraries": [],
    "code": "-- 用户代码已结束---------------------------------------------\n-- 用户代码已结束---------------------------------------------\n-- 用户代码已结束---------------------------------------------\n-- 用户代码已结束---------------------------------------------\n-- 用户代码已结束---------------------------------------------\n-- 用户代码已结束---------------------------------------------\n-- 用户代码已结束---------------------------------------------\n-- 用户代码已结束---------------------------------------------\n\nsys.run()\n-- sys.run()之后后面不要加任何语句!!!!!",
    "filename": "d94532f72c533612c4779768fe710ceb_1.lua"
  },
  {
    "conversation_hash": "e33c92dc3cadda56ddbaa8840e4f127c",
    "code_index": 1,
    "language": "Lua",
    "libraries": [],
    "code": "import (\n     \t\"fmt\"\n     \t\"net/http\"\n     \t\"io/ioutil\"\n     )",
    "filename": "e33c92dc3cadda56ddbaa8840e4f127c_1.lua"
  },
  {
    "conversation_hash": "307f357eb31ccbd04e06a41588e7810f",
    "code_index": 0,
    "language": "Lua",
    "libraries": [],
    "code": "-- Get the LocalPlayer and their character\nlocal player = game.Players.LocalPlayer\nlocal character = player.Character or player.CharacterAdded:wait()\n\n-- Get the humanoid object\nlocal humanoid = character:WaitForChild(\"Humanoid\")\n\n-- Set the speed and jump height\nhumanoid.WalkSpeed = 50\nhumanoid.JumpPower = 100",
    "filename": "307f357eb31ccbd04e06a41588e7810f_0.lua"
  },
  {
    "conversation_hash": "d6923d237bd46f2619e02bf5a4eb9db2",
    "code_index": 4,
    "language": "Lua",
    "libraries": [],
    "code": "d = 5;\nka = 6;\n\nkf_results = zeros(100, 100, 100, 100, 100, 100); % 用于存储kf结果的数组\n\nfor rho_w = 1:100\n    for rho_s = 1:100\n        for theta_s = 1:100\n            for theta_w = 1:100\n                for d_value = 1:100\n                    for ka_value = 1:100\n                        [kf, k] = KF(rho_s, rho_w, theta_s, theta_w, d_value, ka_value);\n                        kf_results(rho_w, rho_s, theta_s, theta_w, d_value, ka_value) = kf;\n                    end\n                end\n            end\n        end\n    end\nend\n\ndisp(kf_results); % 打印kf结果数组",
    "filename": "d6923d237bd46f2619e02bf5a4eb9db2_4.lua"
  },
  {
    "conversation_hash": "eaf633549e661f234e299dd52430266f",
    "code_index": 0,
    "language": "Lua",
    "libraries": [],
    "code": "ka = 0.0296;\nkf = 0.0344;\n\nmin_k = inf; % 设置初始最小值为无穷大\n\nfor rho_s = 10:0.1:26.656\n    for rho_w = 10:0.1:26.656\n        for theta_s = 0:1:90\n            for theta_w = 0:1:90\n                for d = 0.3:0.01:0.6\n                    k = K(rho_s, rho_w, theta_s, theta_w, d, ka, kf);\n                    if k < min_k\n                        min_k = k;\n                    end\n                end\n            end\n        end\n    end\nend\n\nmin_k % 输出最小值",
    "filename": "eaf633549e661f234e299dd52430266f_0.lua"
  },
  {
    "conversation_hash": "fd8c53c45dc9094f08c6b55a6e1cfe28",
    "code_index": 6,
    "language": "Lua",
    "libraries": [
      "the"
    ],
    "code": "NonPromoDays = \nVAR SelectedStartDate = MIN('Table'[Date])     -- Store the minimum selected start date from the slicer in a variable\nVAR SelectedEndDate = MAX('Table'[Date])       -- Store the maximum selected end date from the slicer in a variable\nRETURN\nCALCULATE (\n    COUNTROWS ( VALUES ( 'Table'[Date] ) ),                           -- Count the number of distinct dates within the selected date range\n    FILTER (\n        ALL ( 'Table' ),                                      -- Remove any applied filters on 'Table'\n        'Table'[Date] >= SelectedStartDate                    -- Filter for dates greater than or equal to the selected start date\n            && 'Table'[Date] <= SelectedEndDate                -- Filter for dates less than or equal to the selected end date\n            && NOT (\n                ISINSCOPE('Table'[Product]) &&                -- Check if 'Table'[Product] is in the current scope (selected in visuals)\n                CALCULATE(COUNTROWS('Table'),                 -- Count rows where the 'Table'[Date] falls within a promo period for the selected 'Product'\n                    'Table'[Start Date] <= 'Table'[Date] && \n                    'Table'[Final Date] >= 'Table'[Date]) > 0\n                )\n    )\n)",
    "filename": "fd8c53c45dc9094f08c6b55a6e1cfe28_6.lua"
  },
  {
    "conversation_hash": "6d6cd2a757261702372b922de242126f",
    "code_index": 0,
    "language": "Lua",
    "libraries": [],
    "code": "% 初始化结果矩阵\nresult = zeros(50, 50, 50);\n\nfor i = 1:50\n    for j = 1:50\n        for k = 1:50\n            % 生成一个数组\n            arr = [1, 2, 3, 4, 5];\n            % 数组每个元素乘以i,j,k并相加\n            sum = sum(arr) * i * j * k;\n            % 将结果存储到矩阵中\n            result(i, j, k) = sum;\n        end\n    end\nend",
    "filename": "6d6cd2a757261702372b922de242126f_0.lua"
  },
  {
    "conversation_hash": "6d6cd2a757261702372b922de242126f",
    "code_index": 10,
    "language": "Lua",
    "libraries": [],
    "code": "% 定义数组\narr = [1, 2, 3, 4, 5];\n\n% 初始化结果矩阵\nresult = zeros(50, 50, 50);\n\nfor i = 1:50\n    for j = 1:50\n        for k = 1:50\n            % 将数组分别乘以三个循环值再相加\n            sum = sum(arr) * i * j * k;\n            % 将结果存储到矩阵中\n            result(i, j, k) = sum;\n        end\n    end\nend",
    "filename": "6d6cd2a757261702372b922de242126f_10.lua"
  },
  {
    "conversation_hash": "6d6cd2a757261702372b922de242126f",
    "code_index": 13,
    "language": "Lua",
    "libraries": [],
    "code": "% 定义数组\narr = [1, 2, 3, 4, 5];\n% 定义空矩阵\nmat = zeros(2, 3);\n% 计数变量\ncount = 1;\n% 使用循环将数组元素赋值到矩阵\nfor i = 1:2\n    for j = 1:3\n        mat(i, j) = arr(count);\n        count = count + 1;\n    end\nend",
    "filename": "6d6cd2a757261702372b922de242126f_13.lua"
  },
  {
    "conversation_hash": "6d6cd2a757261702372b922de242126f",
    "code_index": 15,
    "language": "Lua",
    "libraries": [],
    "code": "for i = 1:5\n    for j = 1:10\n        % 在循环中使用两个循环变量\n        disp(['i = ' num2str(i) ', j = ' num2str(j)]);\n    end\nend",
    "filename": "6d6cd2a757261702372b922de242126f_15.lua"
  },
  {
    "conversation_hash": "0e15c5b90804e4fd538d4de5e3c73c4d",
    "code_index": 2,
    "language": "Lua",
    "libraries": [],
    "code": "src\n└── main\n    ├── java\n    │   └── com\n    │       └── sense\n    │           └── productcatalog\n    │               ├── ProductcatalogApplication.java\n    │               └── controller\n    │                   └── ProductController.java\n    ├── resources\n    │   ├── application.properties\n    │   └── ...\n    └── ...",
    "filename": "0e15c5b90804e4fd538d4de5e3c73c4d_2.lua"
  },
  {
    "conversation_hash": "51a7b845d6931e82e8e9c540d13de10c",
    "code_index": 8,
    "language": "Lua",
    "libraries": [],
    "code": "mpc = loadcase('case9');\n[result, success] = runpf(mpc);\n\n% 获取稀疏雅可比矩阵\nsparseJac = result.internal;\n\n% 将稀疏雅可比矩阵转换为稠密形式\n[nb, ng] = size(sparseJac);\ndenseJac = zeros(nb, ng);\nfor i = 1:nb\n    for j = 1:ng\n        denseJac(i, j) = sparseJac{i, j};\n    end\nend",
    "filename": "51a7b845d6931e82e8e9c540d13de10c_8.lua"
  },
  {
    "conversation_hash": "b1b933a497bbec2c105e499d154ab606",
    "code_index": 1,
    "language": "Lua",
    "libraries": [],
    "code": "-- Find the SpecificGears folder in ServerStorage\nlocal specificGearsFolder = gearStorage:FindFirstChild(\"SpecificGears\")\n\n-- Check if the SpecificGears folder exists\nif specificGearsFolder then\n    -- Clone all the gears inside the SpecificGears folder\n    for _, gear in ipairs(specificGearsFolder:GetChildren()) do\n        local clonedGear = gear:Clone()\n        -- Do something with the cloned gear (e.g., give it to the player)\n    end\nend",
    "filename": "b1b933a497bbec2c105e499d154ab606_1.lua"
  },
  {
    "conversation_hash": "e6871c0c6e7dde86c48861a9218bf9ed",
    "code_index": 3,
    "language": "Lua",
    "libraries": [],
    "code": "f.write(\"\\\"{}\\\"\\t{}\\t{}\\t{}\\t{}\\t{:.8f}\\t{:.8f}\\t{:.8f}\\n\".format(\n    File[i].replace('\"', '\\\\\"'),\n    Time[i],\n    Long[i],\n    Lat[i],\n    Alt[i],\n    euler_angles[i][0],\n    euler_angles[i][1],\n    euler_angles[i][2]\n))",
    "filename": "e6871c0c6e7dde86c48861a9218bf9ed_3.lua"
  },
  {
    "conversation_hash": "e6ad46012d4018fcfa460432ecffa102",
    "code_index": 3,
    "language": "Lua",
    "libraries": [],
    "code": "f.write(\"{}\\t{}\\t{}\\t{}\\t{}\\t{:.8f}\\t{:.8f}\\t{:.8f}\\n\".format(\n    File[i],\n    Long[i],\n    Lat[i],\n    Alt[i],\n    euler_angles[i][0],\n    euler_angles[i][1],\n    euler_angles[i][2]\n))",
    "filename": "e6ad46012d4018fcfa460432ecffa102_3.lua"
  },
  {
    "conversation_hash": "e6ad46012d4018fcfa460432ecffa102",
    "code_index": 4,
    "language": "Lua",
    "libraries": [],
    "code": "f.write(\"{}\\t{}\\t{}\\t{}\\t{}\\t{:.8f}\\t{:.8f}\\t{:.8f}\\n\".format(\n    File[i],\n    Long[i],\n    Lat[i],\n    Alt[i],\n    euler_angles[i][0],\n    euler_angles[i][1],\n    euler_angles[i][2]\n))",
    "filename": "e6ad46012d4018fcfa460432ecffa102_4.lua"
  },
  {
    "conversation_hash": "964039f424030d25f3d7c7c13eda5401",
    "code_index": 0,
    "language": "Lua",
    "libraries": [],
    "code": "local socket = require(\"socket\")\n\n-- 创建一个TCP服务器\nlocal server = socket.tcp()\nserver:bind(\"0.0.0.0\", 12345)   -- 绑定IP地址和端口号\nserver:listen()\n\n-- 接受客户端连接\nlocal client = server:accept()\n\n-- 循环发送ADC值\nwhile true do\n  -- 读取ADC值（假设你已经有代码可以读取ADC值，保存在变量adc_value中）\n  local adc_value = 123  -- 这里假设读取到的ADC值为123\n\n  -- 将ADC值转为字符串并发送到客户端\n  client:send(tostring(adc_value) .. \"\\n\")\n\n  -- 等待一段时间再继续下一次发送\n  socket.sleep(1)  -- 这里等待1秒，可以根据需要调整间隔时间\nend",
    "filename": "964039f424030d25f3d7c7c13eda5401_0.lua"
  },
  {
    "conversation_hash": "0a2ac8ed69d78eb83a38166d7f62196f",
    "code_index": 0,
    "language": "Lua",
    "libraries": [],
    "code": "local data = {\n   [\"key1\"] = \"value1\",\n   [\"key2\"] = \"value2\",\n   -- ...\n}\n\nlocal replicatedData = Instance.new(\"Folder\")\nreplicatedData.Name = \"ReplicatedData\"\nreplicatedData.Parent = game.ReplicatedStorage\nreplicatedData:SetAttribute(\"Data\", data)",
    "filename": "0a2ac8ed69d78eb83a38166d7f62196f_0.lua"
  },
  {
    "conversation_hash": "73a8833b41c12933d4a953fb31750257",
    "code_index": 2,
    "language": "Lua",
    "libraries": [],
    "code": "export default {\n       created() {\n         // 不执行数据渲染逻辑\n       }\n     }",
    "filename": "73a8833b41c12933d4a953fb31750257_2.lua"
  },
  {
    "conversation_hash": "815d184c05917f093ef9a8384459539f",
    "code_index": 0,
    "language": "Lua",
    "libraries": [],
    "code": "elseif #txqueue > 0 then\n    -- 有待上报的数据,处理之\n    while #txqueue > 0 do\n        local data = table.remove(txqueue, 1)\n        if not data then\n            break\n        end\n        \n        -- 组装温度传输协议的数据\n        local temperature = 25.5 -- 假设当前温度值为25.5\n        local timestamp = os.time() -- 获取当前时间戳\n        local packet = string.pack(\"fd\", temperature, timestamp)\n        \n        result, param = libnet.tx(d1Name, 15000, netc, packet)\n        log.info(\"libnet\", \"发送数据的结果\", result, param)\n        if not result then\n            log.info(\"socket\", \"数据发送异常\", result, param)\n            break\n        end\n    end\nend",
    "filename": "815d184c05917f093ef9a8384459539f_0.lua"
  },
  {
    "conversation_hash": "ff534fd87acff453166858737b1f883d",
    "code_index": 0,
    "language": "Lua",
    "libraries": [],
    "code": "-- 引入socket库\nlocal socket = require(\"socket\")\n\n-- 创建TCP连接\nlocal tcp = assert(socket.tcp())\n\n-- 连接服务器\nlocal ip = \"192.168.0.1\" -- 服务器IP地址\nlocal port = 12345 -- 服务器端口号\ntcp:connect(ip, port)\n\n-- 读取温度和水位等数据（这里仅为示例，你需要根据实际情况来获取真实数据）\nlocal temperature = 25.5 -- 温度\nlocal waterLevel = 0.8 -- 水位\n\n-- 构造协议数据\nlocal data = string.format(\"温度:%f, 水位:%f\", temperature, waterLevel)\n\n-- 发送数据\ntcp:send(data)\n\n-- 关闭TCP连接\ntcp:close()",
    "filename": "ff534fd87acff453166858737b1f883d_0.lua"
  },
  {
    "conversation_hash": "4838ca6a1311cb350b84dce6960451a1",
    "code_index": 0,
    "language": "Lua",
    "libraries": [],
    "code": "BEGIN TRY\n    -- code that might generate an error\nEND TRY\nBEGIN CATCH\n    -- code to handle the error\nEND CATCH",
    "filename": "4838ca6a1311cb350b84dce6960451a1_0.lua"
  },
  {
    "conversation_hash": "c83660192db112002d5830992fb18eca",
    "code_index": 0,
    "language": "Lua",
    "libraries": [],
    "code": "PROCÉDURE GénérerQRCode\n    // Chaine de données à encoder dans le QRCode\n    chaineQRCode est une chaîne = \"Hello World\"\n    \n    // Création de l'objet ImageQRCode\n    ImageQRCode est un Image\n    ImageQRCode..Largeur = 200\n    ImageQRCode..Hauteur = 200\n    \n    // Génération du QRCode avec la bibliothèque ZXing\n    libQRCode est une bibliothèque C\n    libQRCode..Charge(\"path\\to\\ZXing.Windev.dll\")  // Chemin vers ZXing.Windev.dll\n    \n    // Appel de la méthode d'encodage de la bibliothèque ZXing\n    libQRCode..EncodeQrCode(ImageQRCode, chaineQRCode, \"UTF-8\", \"L\")\n    \n    // Création d'un contrôle Image pour afficher le QRCode\n    ImageQR est un ImageAfficheEcran\n    ImageQR..CheminComplet = ImageQRCode..CheminComplet\n    ImageQR..OuvreImage()\n    \nFINPROCÉDURE",
    "filename": "c83660192db112002d5830992fb18eca_0.lua"
  },
  {
    "conversation_hash": "d6d72fc62565eb449c885b5708952db2",
    "code_index": 3,
    "language": "Lua",
    "libraries": [],
    "code": "9 = 3.0\n2 = 2.0\n81 = 9.0\n12 = 19.0\n5 = 10.0",
    "filename": "d6d72fc62565eb449c885b5708952db2_3.lua"
  },
  {
    "conversation_hash": "65b0cd7fde5d5504ed97286b930cf3ba",
    "code_index": 0,
    "language": "Lua",
    "libraries": [],
    "code": "count = 0; % 初始化计数器\nmatrix = [1 2 3; 4 5 6; 7 8 9]; % 示例矩阵\nvalue = 5; % 设定值\n\nfor i = 1:size(matrix, 1)\n    for j = 1:size(matrix, 2)\n        if matrix(i, j) > value\n            count = count + 1;\n        end\n    end\nend\n\ndisp(count);",
    "filename": "65b0cd7fde5d5504ed97286b930cf3ba_0.lua"
  },
  {
    "conversation_hash": "1811c7476fc5c5d4e33553692015cfb1",
    "code_index": 0,
    "language": "Lua",
    "libraries": [
      "glfw",
      "opengl"
    ],
    "code": "import opengl\nimport glfw\n\nconst\n  screenWidth = 800\n  screenHeight = 600\n  tileSize = 512\n  textureSize = 4096\n\nproc render(visibleTileX, visibleTileY: int) =\n  # Calculate the start and end tile indices based on the visible tiles\n  var startTileX = visibleTileX - screenWidth // tileSize\n  var startTileY = visibleTileY - screenHeight // tileSize\n  var endTileX = visibleTileX // tileSize\n  var endTileY = visibleTileY // tileSize\n\n  # Bind your texture here\n\n  glBegin(GL_QUADS)\n  for y in startTileY ..< endTileY:\n    for x in startTileX ..< endTileX:\n      # Generate texture coordinates based on current tile\n      let texCoordX = (x * tileSize) / float textureSize\n      let texCoordY = (y * tileSize) / float textureSize\n\n      # Define vertices and texture coordinates for the current tile\n      glTexCoord2f(texCoordX, texCoordY)\n      glVertex2f(x * tileSize, y * tileSize)\n\n      glTexCoord2f(texCoordX + tileSize / float textureSize, texCoordY)\n      glVertex2f((x + 1) * tileSize, y * tileSize)\n\n      glTexCoord2f(texCoordX + tileSize / float textureSize, texCoordY + tileSize / float textureSize)\n      glVertex2f((x + 1) * tileSize, (y + 1) * tileSize)\n\n      glTexCoord2f(texCoordX, texCoordY + tileSize / float textureSize)\n      glVertex2f(x * tileSize, (y + 1) * tileSize)\n  glEnd()\n\n# GLFW window resize callback\nproc framebufferSizeCallback(window: GLFWwindow, width, height: int) =\n  glViewport(0, 0, width, height)\n\n# Initialize GLFW and create window\nglfwInit()\nglfwWindowHint(WINDOW_CONTEXT_VERSION_MAJOR, 3)\nglfwWindowHint(WINDOW_CONTEXT_VERSION_MINOR, 3)\nglfwWindowHint(WINDOW_OPENGL_PROFILE, OPENGL_CORE_PROFILE)\nvar window = glfwCreateWindow(screenWidth, screenHeight, \"Texture Tiling Example\", nil, nil)\nglfwMakeContextCurrent(window)\n\n# Set the OpenGL viewport and register the resize callback\nglViewport(0, 0, screenWidth, screenHeight)\nglfwSetFramebufferSizeCallback(window, framebufferSizeCallback)\n\n# Main rendering loop\nwhile not glfwWindowShouldClose(window):\n  glClear(GL_COLOR_BUFFER_BIT)\n\n  # Calculate the visible tile based on the camera position or other inputs\n  let visibleTileX = cameraX\n  let visibleTileY = cameraY\n\n  # Render only the visible parts of the texture\n  render(visibleTileX, visibleTileY)\n\n  glfwSwapBuffers(window)\n  glfwPollEvents()\n\nglfwTerminate()",
    "filename": "1811c7476fc5c5d4e33553692015cfb1_0.lua"
  },
  {
    "conversation_hash": "2b6b0442389fee6263dced631a109544",
    "code_index": 0,
    "language": "Lua",
    "libraries": [],
    "code": "{$lua}\n\n-- Получаем адрес переменной\nlocal variableAddress = getAddress(\"game.exe+12345678\")\n\n-- Изменяем значение переменной на 100\nwriteInteger(variableAddress, 100)",
    "filename": "2b6b0442389fee6263dced631a109544_0.lua"
  },
  {
    "conversation_hash": "64d4333028babed877540c4d68f9561b",
    "code_index": 1,
    "language": "Lua",
    "libraries": [],
    "code": "if condition then\n    -- code executed if condition is true\nelseif anotherCondition then\n    -- code executed if the first condition is false and this condition is true\nelse\n    -- code executed if all conditions are false\nend",
    "filename": "64d4333028babed877540c4d68f9561b_1.lua"
  },
  {
    "conversation_hash": "64d4333028babed877540c4d68f9561b",
    "code_index": 2,
    "language": "Lua",
    "libraries": [],
    "code": "while condition do\n    -- code executed while the condition is true\nend\n\nfor i = start, stop, step do\n    -- code executed for each iteration\nend",
    "filename": "64d4333028babed877540c4d68f9561b_2.lua"
  },
  {
    "conversation_hash": "81187aa16ed3f3f08392de81e4980941",
    "code_index": 2,
    "language": "Lua",
    "libraries": [],
    "code": "if rx_buff:used() > 0 then\n    log.info(\"socket\", \"收到服务器数据，长度\", rx_buff:used())\n    local data = rx_buff:query() -- 获取数据\n\n    -- 判断数据内容\n    if data == \"turnOnRelay\" then\n        -- 打开继电器\n        relayPin(1)\n        -- 向服务器发送回应\n        asyncClient:asyncSend(\"Relay has been turned on\")\n    elseif data == \"turnOffRelay\" then\n        -- 关闭继电器\n        relayPin(0)\n        -- 向服务器发送回应\n        asyncClient:asyncSend(\"Relay has been turned off\")\n    end\n\n    -- 发布消息给订阅者\n    sys.publish(rxtopic, \"downlink\", data)\n\n    rx_buff:del()\nend",
    "filename": "81187aa16ed3f3f08392de81e4980941_2.lua"
  },
  {
    "conversation_hash": "ee0c3de48397d8476bf9863a61c9b0a2",
    "code_index": 0,
    "language": "Lua",
    "libraries": [
      "App",
      "router"
    ],
    "code": "import { createApp } from 'vue'\nimport App from './App.vue'\nimport router from './router'\n\nconst app = createApp(App)\n\n// 全局配置\nconst keycloak = '这里是你的keycloak对象'\napp.config.globalProperties.$keycloak = keycloak\n\napp.use(router)\napp.mount('#app')",
    "filename": "ee0c3de48397d8476bf9863a61c9b0a2_0.lua"
  },
  {
    "conversation_hash": "c3a69b233d705eb5f2c3dcc4b9288486",
    "code_index": 4,
    "language": "Lua",
    "libraries": [],
    "code": "for i = 1:n\n    a = -1 + (i-1) * h; % left endpoint of the interval\n    b = a + h; % right endpoint of the interval\n\n    for j = 1:3\n        x_val = ((b - a) / 2) * x(j) + (b + a) / 2; % rescale and shift integration points\n        sum = sum + w(j) * f(x_val);\n    end\nend",
    "filename": "c3a69b233d705eb5f2c3dcc4b9288486_4.lua"
  },
  {
    "conversation_hash": "62aef6893d4ce4acb3374897ec73cc40",
    "code_index": 1,
    "language": "Lua",
    "libraries": [],
    "code": "-- Get the player's character\nlocal player = game.Players.LocalPlayer\nlocal character = player.Character or player.CharacterAdded:Wait()\n\n-- Disable movement controls\ncharacter:SetAttribute(\"DisableMovement\", true)\n\n-- Remove the VirtualJoystick\nlocal mobileInputGui = player.PlayerGui:WaitForChild(\"MobileInputGui\")\nlocal virtualJoystick = mobileInputGui:WaitForChild(\"VirtualJoystick\")\nvirtualJoystick:Destroy()\n\n-- Remove the JumpButton\nlocal jumpButton = mobileInputGui:WaitForChild(\"JumpButton\")\njumpButton:Destroy()",
    "filename": "62aef6893d4ce4acb3374897ec73cc40_1.lua"
  },
  {
    "conversation_hash": "62aef6893d4ce4acb3374897ec73cc40",
    "code_index": 2,
    "language": "Lua",
    "libraries": [],
    "code": "-- Get the player's character\nlocal player = game.Players.LocalPlayer\n\n-- Disable movement controls\nlocal character = player.Character\nif character then\n    character:SetAttribute(\"DisableMovement\", true)\nend\n\n-- Remove the VirtualJoystick temporarily\nlocal mobileInputGui = player.PlayerGui:FindFirstChild(\"MobileInputGui\")\nif mobileInputGui then\n    local virtualJoystick = mobileInputGui:FindFirstChild(\"VirtualJoystick\")\n    if virtualJoystick then\n        virtualJoystick.Parent = nil\n    end\nend\n\n-- Remove the JumpButton temporarily\nlocal jumpButton = player.PlayerGui:FindFirstChild(\"JumpButton\")\nif jumpButton then\n    jumpButton.Parent = nil\nend\n\n-- Wait for the delay period\nwait(5) -- Adjust the delay as needed\n\n-- Re-enable movement controls\nif character then\n    character:SetAttribute(\"DisableMovement\", false)\nend\n\n-- Re-add the VirtualJoystick and JumpButton\nif mobileInputGui then\n    if virtualJoystick then\n        virtualJoystick.Parent = mobileInputGui\n    end\n    if not jumpButton and player.CharacterAdded then\n        player.CharacterAdded:Wait()\n        jumpButton = player.PlayerGui:FindFirstChild(\"JumpButton\")\n        if jumpButton then\n            jumpButton.Parent = mobileInputGui\n        end\n    end\nend",
    "filename": "62aef6893d4ce4acb3374897ec73cc40_2.lua"
  },
  {
    "conversation_hash": "081cfcdcb10b2b8e921710be90a7a15c",
    "code_index": 3,
    "language": "Lua",
    "libraries": [],
    "code": "perspective(45) -- Set the camera perspective\n    ortho() -- Switch to orthographic projection\n    viewMatrix(matrix()) -- Reset the view matrix\n    modelMatrix(matrix()) -- Reset the model matrix\n    video:play() -- Start playing the video\n    plane:draw() -- Draw the 3D plane",
    "filename": "081cfcdcb10b2b8e921710be90a7a15c_3.lua"
  },
  {
    "conversation_hash": "a8259f775f20a7b276b6fb85e1db1987",
    "code_index": 7,
    "language": "Lua",
    "libraries": [],
    "code": "A = [1.0, 2.0, 0.5]\nf = [1.0, 2.0, 0.5]\nϕ = [0.0, π/4, π/2]\nTs = 0.001\nt = 0.1\n\nresult = zeros(length(A))\nfor channel in 1:length(A)\n    result[channel] = calculate_sine_wave_real(channel, A, f, ϕ, Ts, t)\nend\nprintln(result)",
    "filename": "a8259f775f20a7b276b6fb85e1db1987_7.lua"
  },
  {
    "conversation_hash": "fb8233259e5d78fa83004748e97aa1de",
    "code_index": 0,
    "language": "Lua",
    "libraries": [],
    "code": "clear all\nclc\n\nxi = zeros(1,16);\nyi = zeros(1,16);\n\nfor i = 0:15\n    xi(i+1) = i/10;\n    yi(i+1) = xi(i+1) * sin(2 * xi(i+1))^2;\nend\n\nplot(xi, yi)",
    "filename": "fb8233259e5d78fa83004748e97aa1de_0.lua"
  },
  {
    "conversation_hash": "06f0762acc98b01ea36f9dcec10900b8",
    "code_index": 9,
    "language": "Lua",
    "libraries": [],
    "code": "colorImage = zeros(size(grayImage, 1), size(grayImage, 2), 3);\n\nfor i = 1:size(grayImage, 1)\n    for j = 1:size(grayImage, 2)\n        intensity = grayImage(i, j);\n        \n        if intensity < 0.33\n            colorImage(i, j, :) = red;\n        elseif intensity >= 0.33 && intensity < 0.67\n            colorImage(i, j, :) = green;\n        else\n            colorImage(i, j, :) = blue;\n        end\n    end\nend",
    "filename": "06f0762acc98b01ea36f9dcec10900b8_9.lua"
  },
  {
    "conversation_hash": "d5f399d11172e1e7133b14b1a5c00e25",
    "code_index": 1,
    "language": "Lua",
    "libraries": [],
    "code": "input = [1, 2, 3]\nrepeat_count = 3\ninitial_condition = zeros(5, 5)\n\noutput = zeros(length(input), repeat_count)\n\nfor i in 1:repeat_count\n    output[:, i] = initial_condition\n    output[1:length(input), i] = input\nend\n\nfor i in 1:repeat_count\n    println(\"Итерация \", i, \": \", output[:, i], \"; \", input)\nend",
    "filename": "d5f399d11172e1e7133b14b1a5c00e25_1.lua"
  },
  {
    "conversation_hash": "25aa265dd50138c1f9f8ac9ad25c5723",
    "code_index": 1,
    "language": "Lua",
    "libraries": [],
    "code": "src\n├─ main\n│  ├─ java\n│  │  └─ com\n│  │     └─ example\n│  │        ├─ configuration\n│  │        ├─ controller\n│  │        ├─ model\n│  │        ├─ repository\n│  │        └─ service\n│  └─ resources\n│     ├─ db\n│     │  └─ migration\n│     └─ application.properties\n└─ test\n   └─ java\n      └─ com\n         └─ example\n            └─ controller",
    "filename": "25aa265dd50138c1f9f8ac9ad25c5723_1.lua"
  },
  {
    "conversation_hash": "76c912172986f5d6552c53808483cf01",
    "code_index": 1,
    "language": "Lua",
    "libraries": [],
    "code": "-- Create the body parts of the bear\nlocal torso = Instance.new(\"Part\")\ntorso.Name = \"Torso\"\ntorso.Size = Vector3.new(2, 2, 2)\ntorso.Position = Vector3.new(0, 5, 0)\ntorso.BrickColor = BrickColor.new(\"Brown\")\n\nlocal head = Instance.new(\"Part\")\nhead.Name = \"Head\"\nhead.Size = Vector3.new(1.5, 1.5, 1.5)\nhead.Position = Vector3.new(0, 6.5, 0)\nhead.BrickColor = BrickColor.new(\"Brown\")\n\nlocal ear1 = Instance.new(\"Part\")\near1.Name = \"Ear1\"\near1.Size = Vector3.new(0.7, 0.7, 0.7)\near1.Position = Vector3.new(0.6, 7.5, 0.3)\near1.BrickColor = BrickColor.new(\"Brown\")\n\nlocal ear2 = ear1:Clone()\near2.Name = \"Ear2\"\near2.Position = Vector3.new(-0.6, 7.5, 0.3)\n\n-- Parent the parts to workspace\ntorso.Parent = workspace\nhead.Parent = torso\near1.Parent = head\near2.Parent = head",
    "filename": "76c912172986f5d6552c53808483cf01_1.lua"
  },
  {
    "conversation_hash": "1dc103bebbdb1b9a7a343abaa8647ba4",
    "code_index": 10,
    "language": "Lua",
    "libraries": [],
    "code": "input = [1 2; 3 4]\nnum_ticks = 3\noutput = repeat_matrix(input, num_ticks)\nfor tick in output\n    println(tick)\nend",
    "filename": "1dc103bebbdb1b9a7a343abaa8647ba4_10.lua"
  },
  {
    "conversation_hash": "dd093df979be220696bfceb979d441fb",
    "code_index": 8,
    "language": "Lua",
    "libraries": [],
    "code": "global sub_matrices_buffer, index\nindex = 1\noutput_signal = sub_matrices_buffer[index]\nindex += 1\nif index > length(sub_matrices_buffer)\n    index = 1\nend\nreturn output_signal",
    "filename": "dd093df979be220696bfceb979d441fb_8.lua"
  },
  {
    "conversation_hash": "dd093df979be220696bfceb979d441fb",
    "code_index": 9,
    "language": "Lua",
    "libraries": [],
    "code": "global sub_matrices_buffer, index\nindex = 1\noutput_signal = sub_matrices_buffer[index]\nindex += 1\nif index > length(sub_matrices_buffer)\n    index = 1\nend\nreturn output_signal",
    "filename": "dd093df979be220696bfceb979d441fb_9.lua"
  },
  {
    "conversation_hash": "c0e2047119036306dd2cd948a0414976",
    "code_index": 1,
    "language": "Lua",
    "libraries": [],
    "code": "arr = [1, \"hello\", 3.14, true]\n\nfor i = 1:10  # здесь 10 - количество элементов, которые вы хотите вывести\n    index = mod(i - 1, length(arr)) + 1\n    println(arr[index])\nend",
    "filename": "c0e2047119036306dd2cd948a0414976_1.lua"
  },
  {
    "conversation_hash": "c0e2047119036306dd2cd948a0414976",
    "code_index": 2,
    "language": "Lua",
    "libraries": [],
    "code": "arr = [1, \"hello\", 3.14, true]\ncounter = 1\n\nwhile true\n    println(arr[counter])\n    counter += 1\n    if counter > length(arr)\n        counter = 1\n    end\nend",
    "filename": "c0e2047119036306dd2cd948a0414976_2.lua"
  },
  {
    "conversation_hash": "95a7fb7d473d5d957f12103e1f114491",
    "code_index": 2,
    "language": "Lua",
    "libraries": [],
    "code": "download(\"https://example.com/file1.jl\", \"file1.jl\")\ninclude(\"file1.jl\")\n\ndownload(\"https://example.com/file2.jl\", \"file2.jl\")\ninclude(\"file2.jl\")",
    "filename": "95a7fb7d473d5d957f12103e1f114491_2.lua"
  },
  {
    "conversation_hash": "51fd7f68e83250a7341b45c31167866e",
    "code_index": 0,
    "language": "Lua",
    "libraries": [],
    "code": "rows, cols = size(input_signal)\nnew_rows = rows * rep.repetition_count\noutput_signal = zeros(new_rows, cols)\nfor i in 1:rows\n    for j in 1:rep.repetition_count\n        output_signal[(i-1)*rep.repetition_count+j, :] = input_signal[mod1(i, rows), mod1(j, cols)]\n    end\nend\nreturn output_signal",
    "filename": "51fd7f68e83250a7341b45c31167866e_0.lua"
  },
  {
    "conversation_hash": "351ab507a42b3318de0ccc243e04868a",
    "code_index": 4,
    "language": "Lua",
    "libraries": [],
    "code": "A = [1, 2, 3, 4, 5, 6]\nA_reshaped = reshape(A, (6, 1))\nprintln(vcat(A_reshaped...))\n\n# Вывод:\n# [1; 2; 3; 4; 5; 6]",
    "filename": "351ab507a42b3318de0ccc243e04868a_4.lua"
  },
  {
    "conversation_hash": "d10c4e4c6a4879b25fd6899fdf37b173",
    "code_index": 0,
    "language": "Lua",
    "libraries": [],
    "code": "net = blockwiseModules(datExpr,\n                       power = power,\n                       TOMType = \"unsigned\",\n                       minModuleSize = minModuleSize,\n                       reassignThreshold = 0,\n                       mergeCutHeight = 0.25,\n                       numericLabels = TRUE,\n                       pamRespectsDendro = FALSE,\n                       saveTOMs = TRUE,\n                       saveTOMFileBase = \"TPM-TOM\",\n                       verbose = 3)",
    "filename": "d10c4e4c6a4879b25fd6899fdf37b173_0.lua"
  },
  {
    "conversation_hash": "816e9024b44f6e81c92e7c664a8e6575",
    "code_index": 0,
    "language": "Lua",
    "libraries": [],
    "code": "-- Get the selected track\nlocal track = reaper.GetSelectedTrack(0, 0)\n\nif track ~= nil then\n    -- Count the number of FX on the track\n    local fx_count = reaper.TrackFX_GetCount(track)\n\n    -- Create a table to store the FX indexes with name \"SS\"\n    local ss_indexes = {}\n\n    -- Find the indexes of effects with name \"SS\"\n    for i = 0, fx_count - 1 do\n        local _, fx_name = reaper.TrackFX_GetFXName(track, i, \"\")\n        if fx_name == \"SS\" then\n            table.insert(ss_indexes, i)\n        end\n    end\n\n    -- Move the \"SS\" effects to the end of the chain\n    for _, index in ipairs(ss_indexes) do\n        reaper.TrackFX_MoveToEndOfChain(track, index)\n    end\nend",
    "filename": "816e9024b44f6e81c92e7c664a8e6575_0.lua"
  },
  {
    "conversation_hash": "b6ab1a2e055c1e3da0fd07fa772364de",
    "code_index": 3,
    "language": "Lua",
    "libraries": [],
    "code": "file = open(\"example.txt\", \"a\")\n\n# Write data at the end of the file\nfile.write(\"New line\")\n\nfile.close()",
    "filename": "b6ab1a2e055c1e3da0fd07fa772364de_3.lua"
  },
  {
    "conversation_hash": "872f7183c47a4036933309cb9fc5c055",
    "code_index": 0,
    "language": "Lua",
    "libraries": [],
    "code": "-- First, we need to get the GUI component of the text node\nlocal gui = gui.get_node(\"text_node\")\nlocal text_node = gui.get_node(\"label\", gui)\n\n-- Now, let's set a number to the text node\nlocal number = 42\ngui.set_text(text_node, tostring(number))",
    "filename": "872f7183c47a4036933309cb9fc5c055_0.lua"
  },
  {
    "conversation_hash": "0ee2e22edb0a6483a52ef61d6b09541b",
    "code_index": 0,
    "language": "Lua",
    "libraries": [],
    "code": "macro(my_custom_command OUTPUT_FILE INPUT_FILE)\n    add_custom_command(\n        OUTPUT ${OUTPUT_FILE}\n        COMMAND <your command here> ${INPUT_FILE}\n        DEPENDS ${INPUT_FILE}\n        COMMENT \"Generating ${OUTPUT_FILE} from ${INPUT_FILE}\"\n        VERBATIM\n    )\nendmacro()",
    "filename": "0ee2e22edb0a6483a52ef61d6b09541b_0.lua"
  },
  {
    "conversation_hash": "cfcbb3ec4cde3aae0c9b83c21bf2b557",
    "code_index": 3,
    "language": "Lua",
    "libraries": [],
    "code": "0    1.0\n1    2.0\n2    0.0\n3    4.0\n4    0.0\ndtype: float64",
    "filename": "cfcbb3ec4cde3aae0c9b83c21bf2b557_3.lua"
  },
  {
    "conversation_hash": "cfcbb3ec4cde3aae0c9b83c21bf2b557",
    "code_index": 5,
    "language": "Lua",
    "libraries": [],
    "code": "0    1.0\n1    2.0\n2    0.0\n3    0.0\n4    0.0\ndtype: float64",
    "filename": "cfcbb3ec4cde3aae0c9b83c21bf2b557_5.lua"
  },
  {
    "conversation_hash": "c55765674827396fc43eb41320cf1276",
    "code_index": 1,
    "language": "Lua",
    "libraries": [],
    "code": "local _, class = UnitClass(\"player\")\nlocal color = RAID_CLASS_COLORS[class]\nlocal text = \"Пример текста\"\n\nChatFrame1:AddMessage(\"|c\" .. string.format(\"%02x%02x%02x\", color.r * 255, color.g * 255, color.b * 255) .. text)",
    "filename": "c55765674827396fc43eb41320cf1276_1.lua"
  },
  {
    "conversation_hash": "c55765674827396fc43eb41320cf1276",
    "code_index": 2,
    "language": "Lua",
    "libraries": [],
    "code": "local _, class = UnitClass(\"player\")\nlocal color = RAID_CLASS_COLORS[class]\nlocal text = \"Пример текста\"\n\n-- Создание нового фрейма\nlocal frame = CreateFrame(\"Frame\", nil, UIParent)\nframe:SetPoint(\"CENTER\")\nframe:SetWidth(200)\nframe:SetHeight(30)\n\n-- Создание текстуального объекта\nlocal textObject = frame:CreateFontString(nil, \"OVERLAY\")\ntextObject:SetPoint(\"CENTER\")\ntextObject:SetFont(\"Fonts\\\\FRIZQT__.TTF\", 14, \"OUTLINE\") -- Настройка шрифта\ntextObject:SetTextColor(color.r, color.g, color.b) -- Установка цвета текста\ntextObject:SetText(text) -- Установка отображаемого текста",
    "filename": "c55765674827396fc43eb41320cf1276_2.lua"
  },
  {
    "conversation_hash": "b60d4c7d974c1bd95da842218c0ed48b",
    "code_index": 2,
    "language": "Lua",
    "libraries": [],
    "code": "-- Имя хранимой переменной\nlocal savedVariableName = \"MyAddonSavedVariable\"\n\n-- Получить сохраненное значение переменной\nlocal savedVariable = GetSavedVariable(savedVariableName)\n\n-- Если сохраненное значение не существует, установить его по умолчанию\nif not savedVariable then\n    savedVariable = \"Default value\"\nend\n\n-- Изменить значение переменной\nsavedVariable = \"New value\"",
    "filename": "b60d4c7d974c1bd95da842218c0ed48b_2.lua"
  },
  {
    "conversation_hash": "44c6cfeacd46a63a07572e923eafb175",
    "code_index": 0,
    "language": "Lua",
    "libraries": [],
    "code": "A = zeros(1, 100);  % 创建矩阵A，全部元素初始化为0\nB = zeros(1, 100);  % 创建矩阵B，全部元素初始化为0\n\nfor i = 1:100\n    A(1, i) = randi([1, 30]);  % 生成1到30之间的随机数，赋值给矩阵A的第i列\n    \n    % 生成不重复的随机数，赋值给矩阵B的第i列\n    while true\n        num = randi([1, 30]);  % 生成1到30之间的随机数\n        if num ~= A(1, i)  % 检查生成的随机数是否与矩阵A中对应列的元素不相等\n            B(1, i) = num;  % 赋值给矩阵B的第i列\n            break;  % 跳出循环，继续下一列赋值\n        end\n    end\nend",
    "filename": "44c6cfeacd46a63a07572e923eafb175_0.lua"
  },
  {
    "conversation_hash": "c0ed4faf42b00b060455e46e8199f752",
    "code_index": 0,
    "language": "Lua",
    "libraries": [],
    "code": "-- Get a reference to the GUI node\nlocal node_id = gui.get_node(\"node_name\")\n\n-- Set the texture property of the GUI node\ngui.set_texture(node_id, \"texture_path\")",
    "filename": "c0ed4faf42b00b060455e46e8199f752_0.lua"
  },
  {
    "conversation_hash": "6f39c9e03b8c2842e952b405369f4204",
    "code_index": 0,
    "language": "Lua",
    "libraries": [],
    "code": "for i = 1 : 256\n    for j = 1 : row\n        for k = 1 : col\n            if Gray_image(j, k) == i - 1\n                c = c + 1;\n            end\n        end\n    end\n    total_n(i) = c;\n    c = 0;\nend",
    "filename": "6f39c9e03b8c2842e952b405369f4204_0.lua"
  },
  {
    "conversation_hash": "e919c5a4448fa954df8b47476637ff3d",
    "code_index": 0,
    "language": "Lua",
    "libraries": [],
    "code": "hdb3_data = zeros(1, length(binary_data));\npulse = 1;\ncount = 0;\nprev_pulse = 0;\n\nfor i = 1:length(binary_data)\n    if binary_data(i) == 0\n        count = count + 1;\n        if count == 4\n            hdb3_data(i - 3:i) = ones(1, 4) * pulse;\n            pulse = -pulse;\n            count = 0;\n        end\n    else\n        count = 0;\n        hdb3_data(i) = pulse;\n        \n        if pulse == prev_pulse\n            hdb3_data(i - 1) = -prev_pulse;\n            prev_pulse = -prev_pulse;\n        else\n            prev_pulse = pulse;\n        end\n    end\nend",
    "filename": "e919c5a4448fa954df8b47476637ff3d_0.lua"
  },
  {
    "conversation_hash": "e919c5a4448fa954df8b47476637ff3d",
    "code_index": 1,
    "language": "Lua",
    "libraries": [],
    "code": "hdb3_data = zeros(1, length(binary_data));\ncount = 0;\n\nfor i = 1:length(binary_data)\n    if binary_data(i) == 0\n        count = count + 1;\n        if count == 4\n            hdb3_data(i - 3:i) = ones(1, 4);\n            count = 0;\n        end\n    else\n        count = 0;\n        hdb3_data(i) = 1;\n    end\nend",
    "filename": "e919c5a4448fa954df8b47476637ff3d_1.lua"
  },
  {
    "conversation_hash": "7b584d9c59bc493c44a60f04c1b3a887",
    "code_index": 5,
    "language": "Lua",
    "libraries": [
      "JavaScript"
    ],
    "code": "local js_script = [[\n    var greeting = \"Hello from JavaScript!\";\n    greeting;\n]]\n\nexecuteJavaScript(js_script)",
    "filename": "7b584d9c59bc493c44a60f04c1b3a887_5.lua"
  },
  {
    "conversation_hash": "c2e31d5ca08566251f8da54b76c0beba",
    "code_index": 5,
    "language": "Lua",
    "libraries": [],
    "code": "local unit = CreateUnitByName(\"unit_name\", position, true, caster, caster:GetOwner(), caster:GetTeamNumber())\nlocal item = CreateItem(\"item_radiance\", unit, unit)\nunit:AddItem(item)\nlocal ability = unit:AddAbility(\"ability_unit_aura_radiance\")\nability:SetLevel(1)",
    "filename": "c2e31d5ca08566251f8da54b76c0beba_5.lua"
  },
  {
    "conversation_hash": "20a227f428bdbc61b90d93faf7e8aee6",
    "code_index": 0,
    "language": "Lua",
    "libraries": [],
    "code": "local item = \"item_example_item\" -- замените на имя вашего предмета\n\n-- добавляем предмет герою\nhero:AddItemByName(item)\nlocal itemIndex = hero:FindItemInInventory(item)\n\n-- устанавливаем флаг \"ITEM_FLAG_CANNOT_BE_SOLD\" для предмета\nlocal itemEnt = hero:GetItemInSlot(itemIndex)\nitemEnt:SetItemFlags(DOTA_ITEM_FLAG_CANNOT_BE_SOLD)",
    "filename": "20a227f428bdbc61b90d93faf7e8aee6_0.lua"
  },
  {
    "conversation_hash": "20a227f428bdbc61b90d93faf7e8aee6",
    "code_index": 1,
    "language": "Lua",
    "libraries": [],
    "code": "local item = \"item_example_item\" -- замените на имя вашего предмета\nlocal sellValuePercentage = 0.5 -- измените процент при необходимости\n\n-- добавляем предмет герою\nhero:AddItemByName(item)\nlocal itemIndex = hero:FindItemInInventory(item)\n\n-- устанавливаем флаг продажи и значение стоимости продажи\nlocal itemEnt = hero:GetItemInSlot(itemIndex)\nitemEnt:SetSellable(true)\nitemEnt:SetCustomValue(sellValuePercentage)",
    "filename": "20a227f428bdbc61b90d93faf7e8aee6_1.lua"
  },
  {
    "conversation_hash": "715ccacb0266fa49e95b23c0f0fb0e8a",
    "code_index": 0,
    "language": "Lua",
    "libraries": [],
    "code": "local FOLLOW_SPEED = 5 -- Скорость следования\nlocal PLAYER = game.Players.LocalPlayer\nlocal CHAR = PLAYER.Character or PLAYER.CharacterAdded:Wait()\nlocal HRP = CHAR:WaitForChild(\"HumanoidRootPart\")\nlocal TARGET_BLOCK = nil\n\n-- Проверить, существует ли золотой блок в игре и сохранить его в переменной\nwhile not TARGET_BLOCK do\n    TARGET_BLOCK = game.Workspace:FindFirstChild(\"GoldBlock\")\n    wait(0.1)\nend\n\n-- Обновление позиции блока за игроком\nwhile true do\n    local distance = (HRP.Position - TARGET_BLOCK.Position).magnitude\n    if distance > 5 then\n        local direction = (HRP.Position - TARGET_BLOCK.Position).unit\n        TARGET_BLOCK.Velocity = direction * FOLLOW_SPEED\n    else\n        TARGET_BLOCK.Velocity = Vector3.new(0,0,0)\n    end\n    wait(0.1)\nend",
    "filename": "715ccacb0266fa49e95b23c0f0fb0e8a_0.lua"
  },
  {
    "conversation_hash": "715ccacb0266fa49e95b23c0f0fb0e8a",
    "code_index": 1,
    "language": "Lua",
    "libraries": [],
    "code": "local PART = Instance.new(\"Part\")\nPART.Name = \"GoldBlock\"\nPART.Size = Vector3.new(2, 1, 2) -- Размер блока\nPART.BrickColor = BrickColor.new(\"Bright yellow\") -- Цвет блока\nPART.Position = game.Workspace.SpawnLocation.Position + Vector3.new(0, 3, 0) -- Начальное положение блока\nPART.Anchored = false\nPART.CanCollide = false\n\n-- Создайте ParticleEmitter для блока\nlocal particles = Instance.new(\"ParticleEmitter\")\n-- Настройте ParticleEmitter на ваше усмотрение\nparticles.Parent = PART\n\nPART.Parent = game.Workspace",
    "filename": "715ccacb0266fa49e95b23c0f0fb0e8a_1.lua"
  },
  {
    "conversation_hash": "42c81a28c2e9081ede7984260ca907bf",
    "code_index": 0,
    "language": "Lua",
    "libraries": [],
    "code": "-- Создание модели и физического коллайдера\nlocal treeModel = CreateUnitByName(\"npc_dota_custom_tree\", Vector(x, y, z), true, nil, nil, DOTA_TEAM_NOTEAM)\nlocal treeCollider = CreateBoxOfEntity(treeModel:GetHullRadius(), treeModel:GetHullRadius(), treeModel:GetHullRadius())\n\n-- Установка физических свойств\ntreeModel:SetPhysicallyInteractsWithCustomGameTeam(DOTA_TEAM_NOTEAM)\ntreeCollider:SetPhysicallyUnselectable(true)\ntreeCollider:SetPhysicallyEnabled(false)\n\n-- Теперь модель станет неосязаемой для других объектов на карте",
    "filename": "42c81a28c2e9081ede7984260ca907bf_0.lua"
  },
  {
    "conversation_hash": "e3491bacbe395f8c82a8b9ce969fc4c7",
    "code_index": 0,
    "language": "Lua",
    "libraries": [],
    "code": "-- Get the current orientation of the block\nlocal currentRotation = block.CFrame\n\n-- Define the rotation you want to apply\nlocal desiredRotation = CFrame.Angles(0, math.rad(180), 0)\n\n-- Combine the current orientation and desired rotation\nlocal newRotation = currentRotation * desiredRotation\n\n-- Apply the new rotation to the block\nblock.CFrame = newRotation",
    "filename": "e3491bacbe395f8c82a8b9ce969fc4c7_0.lua"
  },
  {
    "conversation_hash": "02f146102ae76af6ab5b5425f777cb54",
    "code_index": 6,
    "language": "Lua",
    "libraries": [],
    "code": "local particle_name = \"particles/your_particle_system.vpcf\"\n   local radius = self:GetSpecialValueFor(\"AOE_radius\") -- Или конкретное число, если радиус захардкожен\n\n   local particle = ParticleManager:CreateParticle(particle_name, PATTACH_WORLDORIGIN, nil)\n   ParticleManager:SetParticleControl(particle, 0, self:GetCaster():GetAbsOrigin()) -- Позиция эффекта\n\n   -- Устанавливаем размер партикла, соответствующий радиусу заклинания\n   ParticleManager:SetParticleControl(particle, 1, Vector(radius, 0, 0))\n\n   -- (Опционально) Удаление партикла через некоторое время, если он не удаляется автоматически\n   ParticleManager:ReleaseParticleIndex(particle)",
    "filename": "02f146102ae76af6ab5b5425f777cb54_6.lua"
  },
  {
    "conversation_hash": "02f146102ae76af6ab5b5425f777cb54",
    "code_index": 8,
    "language": "Lua",
    "libraries": [],
    "code": "local particle_name = \"particles/your_particle_system.vpcf\"\n   local num_particles = 8 -- количество партиклов, которые должны отрисовываться по кругу\n   local radius = 300 -- радиус круга\n   local center = self:GetCaster():GetAbsOrigin()\n\n   local particle = ParticleManager:CreateParticle(particle_name, PATTACH_CUSTOMORIGIN, self:GetCaster())\n   \n   -- устанавливаем центральную точку\n   ParticleManager:SetParticleControl(particle, 0, center)\n\n   -- Распределить партиклы по кругу\n   for i = 1, num_particles do\n       local angle = math.rad((360/num_particles) * i) -- угол в радианах для каждой точки\n       local x = center.x + radius * math.cos(angle)\n       local y = center.y + radius * math.sin(angle)\n       local position = Vector(x, y, center.z)\n\n       ParticleManager:SetParticleControl(particle, i, position)\n   end\n\n   -- (Не обязательно) Освобождаем партикл\n   ParticleManager:ReleaseParticleIndex(particle)",
    "filename": "02f146102ae76af6ab5b5425f777cb54_8.lua"
  },
  {
    "conversation_hash": "3abf55d243659021b61340cdd6b0a301",
    "code_index": 0,
    "language": "Lua",
    "libraries": [],
    "code": "-- Например, на Lua, часто используемый в Dota 2 моддинге\nlocal angleStep = 360 / numberOfParticles -- где numberOfParticles - это количество частиц, которое вы хотите разместить по кругу\nlocal radius = 100 -- радиус круга\n\nfor i=1, numberOfParticles do\n    local angle = math.rad(i * angleStep) -- переводим градусы в радианы\n    \n    local x = math.cos(angle) * radius\n    local y = math.sin(angle) * radius\n    \n    -- тут создаем партикль с координатами (x, y)\nend",
    "filename": "3abf55d243659021b61340cdd6b0a301_0.lua"
  },
  {
    "conversation_hash": "3abf55d243659021b61340cdd6b0a301",
    "code_index": 1,
    "language": "Lua",
    "libraries": [],
    "code": "-- Предполагается, что эта функция вызывается в рамках скрипта на Lua для кастомной игры Dota 2\n\n-- base_point - вектор центральной точки, вокруг которой вращается партикль\n-- angleStep - угол поворота в радианах между последовательными спаунами частиц\n-- radius - расстояние от центральной точки, на котором будут спауниться партикли\n-- particleName - название системы партиклей, которую вы хотите спаунить\n-- numberOfParticles - количество партиклей, которое нужно создать\n\nlocal base_point = Vector(0, 0, 0) -- пример, замените на вашу точку\nlocal radius = 100\nlocal numberOfParticles = 8\nlocal particleName = \"particles/your_particle.vpcf\"\nlocal angleStep = 2 * math.pi / numberOfParticles -- полный круг в радианах делится на количество шагов\n\nfor i = 1, numberOfParticles do\n    local rotate_angle = QAngle(0, i * angleStep * (180 / math.pi), 0) -- преобразуем радианы в градусы и создаем QAngle\n    local direction = Vector(radius, 0, 0) -- начальный вектор частицы (на оси X, вдоль радиуса)\n    local rotated_vector = RotatePosition(base_point, rotate_angle, base_point + direction) -- вращаем точку\n    \n    -- создаем партикль в этой точке\n    local particle = ParticleManager:CreateParticle(particleName, PATTACH_ABSORIGIN, nil)\n    ParticleManager:SetParticleControl(particle, 0, rotated_vector) -- устанавливаем контрольную точку 0 (обычно позиция партикля)\n\n    -- другая логика, например, автоматическое удаление партикля через время, если он одноразовый\nend",
    "filename": "3abf55d243659021b61340cdd6b0a301_1.lua"
  },
  {
    "conversation_hash": "45c3356ec2cff361eb70662b0ab0658d",
    "code_index": 1,
    "language": "Lua",
    "libraries": [],
    "code": "import (\n       \"fmt\"\n       \"log\"\n\n       \"github.com/unidoc/unipdf/v3/extractor\"\n   )",
    "filename": "45c3356ec2cff361eb70662b0ab0658d_1.lua"
  },
  {
    "conversation_hash": "0c132a5b95f7053fa3b52adce17ee84f",
    "code_index": 4,
    "language": "Lua",
    "libraries": [],
    "code": "io.write(\"Hello, world!\") -- Prints \"Hello, world!\"\nio.flush() -- Ensures the text is immediately displayed\n\n-- Move the cursor back the length of the printed text\nio.write(string.rep(\"\\b\", string.len(\"Hello, world!\")))\n-- Overwrite the previous text with spaces\nio.write(string.rep(\" \", string.len(\"Hello, world!\")))",
    "filename": "0c132a5b95f7053fa3b52adce17ee84f_4.lua"
  },
  {
    "conversation_hash": "e148fcc5cae4507501afaac8113d6a49",
    "code_index": 2,
    "language": "Lua",
    "libraries": [],
    "code": "local illusionModifier = ability:ApplyDataDrivenModifier(caster, caster, \"illusion_modifier\", {})\nlocal outgoingDamageStructure = 1 -- иллюзии будут наносить урон по зданиям\nlocal incomingDamage = 100 -- урон, получаемый иллюзиями\n\n-- Создание иллюзий\nlocal illusions = CreateIllusions(caster, caster, illusionModifier:GetModifierAura(), 2, 0, false, true)\n\n-- Применение свойств и логики иллюзий\nfor _, illusion in pairs(illusions) do\n    illusion:SetControllableByPlayer(caster:GetPlayerOwnerID(), true)\n    illusion:SetPlayerID(caster:GetPlayerOwnerID())\n    illusion:SetOwner(caster)\n    illusion:SetHealth(caster:GetHealth())\n    illusion:SetMana(caster:GetMana())\n    illusion:AddNewModifier(caster, ability, \"modifier_kill\", {duration = duration})\n    illusion:SetBaseDamageMin(incomingDamage)\n    illusion:SetBaseDamageMax(incomingDamage)\n    illusion:MakeIllusion()\n    illusion:SetForceAttackTarget(target)\n    illusion:SetForceAttackTargetAlly(allyTarget)\n    illusion:SetForceAttackTargetTower(towerTarget)\n    illusion:SetForceAttackTargetGroup(groupTarget)\n    illusion:SetForceAttackTargetGroupFind(groupTargetFind)\n    illusion:SetForceAttackTargetHero(heroTarget)\n\n    illusion:SetDamageOutgoingPercentage(outgoingDamageStructure)\nend",
    "filename": "e148fcc5cae4507501afaac8113d6a49_2.lua"
  },
  {
    "conversation_hash": "3bdffdd9fcf6f262f81030f8bee6a8e0",
    "code_index": 0,
    "language": "Lua",
    "libraries": [
      "v"
    ],
    "code": "procedure BFS(G, start) is\n  let Q be a queue\n  label start as discovered\n  Q.enqueue(start)\n  while Q is not empty do\n    v := Q.dequeue()\n    if v is the goal then\n      return v\n    for all edges from v to w in G.adjacentEdges(v) do\n      if w is not labeled as discovered then\n        label w as discovered\n        Q.enqueue(w)",
    "filename": "3bdffdd9fcf6f262f81030f8bee6a8e0_0.lua"
  },
  {
    "conversation_hash": "3bdffdd9fcf6f262f81030f8bee6a8e0",
    "code_index": 2,
    "language": "Lua",
    "libraries": [],
    "code": "procedure BFS(G, start) is\n  let Q be a queue\n  label start as visited and enqueue it into Q\n  while Q is not empty do\n    node := Q.dequeue()\n    visit(node)\n    for each neighbor n of node in G.adjacent(node) do\n      if n is not labeled as visited then\n        label n as visited\n        Q.enqueue(n)",
    "filename": "3bdffdd9fcf6f262f81030f8bee6a8e0_2.lua"
  },
  {
    "conversation_hash": "f9fb4e57735b224bbb11269741d8cd33",
    "code_index": 0,
    "language": "Lua",
    "libraries": [],
    "code": "-- В коде Lua\nlocal stringToPass = \"Мир\"\nlocal localizedString = \"#greeting_message\"\nCustomGameEventManager:Send_ServerToAllClients(\"send_localized_string\", { key = localizedString, value = stringToPass })\n\n-- В файле локализации (greeting_message.txt)\n\"greeting_message\" {\n    \"text\" \"Привет, %s%!\"\n}",
    "filename": "f9fb4e57735b224bbb11269741d8cd33_0.lua"
  },
  {
    "conversation_hash": "f9fb4e57735b224bbb11269741d8cd33",
    "code_index": 1,
    "language": "Lua",
    "libraries": [],
    "code": "-- В коде Lua\nlocal player = \"Игрок\"\nlocal npc = \"НПС\"\nlocal localizedString = \"#intro_message\"\nCustomGameEventManager:Send_ServerToAllClients(\"send_localized_string\", { key = localizedString, value1 = player, value2 = npc })\n\n-- В файле локализации (intro_message.txt)\n\"intro_message\" {\n    \"text\" \"Привет, %1%! Поговори с %2%.\"\n}",
    "filename": "f9fb4e57735b224bbb11269741d8cd33_1.lua"
  },
  {
    "conversation_hash": "f9fb4e57735b224bbb11269741d8cd33",
    "code_index": 2,
    "language": "Lua",
    "libraries": [],
    "code": "-- В коде Lua\nlocal specialValue = \"здание\"\nlocal localizedString = \"#special_message\"\nCustomGameEventManager:Send_ServerToAllClients(\"send_localized_string\", { key = localizedString, specialValue = specialValue })\n\n-- В файле локализации (special_message.txt)\n\"special_message\" {\n    \"text\" \"Это %specialValue% очень важно!\"\n}",
    "filename": "f9fb4e57735b224bbb11269741d8cd33_2.lua"
  },
  {
    "conversation_hash": "f9fb4e57735b224bbb11269741d8cd33",
    "code_index": 3,
    "language": "Lua",
    "libraries": [],
    "code": "-- В коде Lua\nlocal replacingWord = \"Привет\"\nlocal localizedString = \"#custom_message\"\nCustomGameEventManager:Send_ServerToAllClients(\"send_localized_string\", { key = localizedString })\n\n-- В файле локализации (custom_message.txt)\n\"custom_message\" {\n    \"text\" \"Пожалуйста, замените это слово: {replace_word}!\"\n}",
    "filename": "f9fb4e57735b224bbb11269741d8cd33_3.lua"
  },
  {
    "conversation_hash": "f9fb4e57735b224bbb11269741d8cd33",
    "code_index": 4,
    "language": "Lua",
    "libraries": [],
    "code": "-- В коде Lua\nlocal greet = \"Привет\"\nlocal localizedString = \"#my_mess\"\nCustomGameEventManager:Send_ServerToAllClients(\"send_localized_string\", { key = localizedString, greet = greet })\n\n-- В файле локализации (addon_russian.txt)\n\"lang\"\n{\n    \"Language\" \"russian\"\n    \"Tokens\"\n    {\n        \"my_mess\" \"Ну что ж, %greet%\"\n    }\n}",
    "filename": "f9fb4e57735b224bbb11269741d8cd33_4.lua"
  },
  {
    "conversation_hash": "94fac536b9c2b3f2da031675e0db6f0a",
    "code_index": 5,
    "language": "Lua",
    "libraries": [],
    "code": "local victim = PlayerResource:GetPlayerName(victimPlayerID)\nlocal killer = PlayerResource:GetPlayerName(killerPlayerID)\nlocal goldReward = 200\nlocal message = killer .. \" убил \" .. victim .. \" и получил \" .. goldReward .. \" золота за убийство.\"\nUTIL_MessageText(\"#Custom_Message\", killerPlayerID, true, 4, nil, PATTACH_CENTER_FOLLOW, \"custom_event_damage\", true, {[\"attacker_entindex\"] = killerEntityIndex, [\"victim_entindex\"] = victimEntityIndex, [\"gold\"] = goldReward})",
    "filename": "94fac536b9c2b3f2da031675e0db6f0a_5.lua"
  },
  {
    "conversation_hash": "e72df52366e53f947a73d8ba454caf6d",
    "code_index": 0,
    "language": "Lua",
    "libraries": [],
    "code": "ggplot(na.omit(Tc_Carotte_mlf), aes(x = Test_Jour_Croissance, y = CFU_g, fill = Bacterie)) +\n  geom_boxplot() +\n  labs(title =\"Comparaison CFU/g pour Carotte\", x = \"Test\", y = \"CFU_g\") +\n  scale_fill_manual(values = couleurs_bacterie, guide = guide_legend(title = \"Bacterie\")) +\n  theme_minimal() +\n  scale_y_log10(limits = c(10^0, 10^7), breaks = 10^(0:7))",
    "filename": "e72df52366e53f947a73d8ba454caf6d_0.lua"
  },
  {
    "conversation_hash": "f141f042f69f80ce72292cb0007ba758",
    "code_index": 0,
    "language": "Lua",
    "libraries": [],
    "code": "-- Create a part in the workspace\nlocal part = Instance.new(\"Part\")\npart.Position = Vector3.new(0, 5, 0)\npart.BrickColor = BrickColor.new(\"Bright blue\")\npart.Size = Vector3.new(10, 10, 10)\npart.Parent = workspace\n\n-- Create a script to rotate the part\nlocal script = Instance.new(\"Script\")\nscript.Source = [[\nwhile true do\n    wait(0.1)\n    script.Parent.CFrame = script.Parent.CFrame * CFrame.fromEulerAnglesXYZ(0, math.rad(1), 0)\nend\n]]\nscript.Parent = part",
    "filename": "f141f042f69f80ce72292cb0007ba758_0.lua"
  },
  {
    "conversation_hash": "cdaf7f16eb5980c15925885dac90f8be",
    "code_index": 3,
    "language": "Lua",
    "libraries": [],
    "code": "local particleName = \"particles/your_particle_name.vpcf\" -- Замените на название вашего партикля\nlocal attachPoint = \"attach_attack1\" -- Это может быть любая точка привязки; используйте нужную вам\nlocal weaponEntity = self:GetCaster() -- Замените self на соответствующий экземпляр класса или источник\n\n-- Создание партикла и привязка его к точке привязки оружия\nlocal particleIndex = ParticleManager:CreateParticle(particleName, PATTACH_POINT_FOLLOW, weaponEntity)\n\n-- Установка контроллера партикла для правильного отслеживания точки привязки оружия\nParticleManager:SetParticleControlEnt(\n    particleIndex,\n    0, -- Контрольный индекс 0 обычно используется для установки позиции\n    weaponEntity,\n    PATTACH_POINT_FOLLOW,\n    attachPoint, -- Точка, к которой будет прикреплен партикл\n    weaponEntity:GetAbsOrigin(), -- Начальная позиция (обычно не используется с PATTACH_POINT_FOLLOW)\n    true -- Наследование движения и вращения от родительского объекта\n)\n\n-- Сохраните индекс партикла, если вам нужно будет контролировать его позже\nself.particleIndex = particleIndex",
    "filename": "cdaf7f16eb5980c15925885dac90f8be_3.lua"
  },
  {
    "conversation_hash": "cdaf7f16eb5980c15925885dac90f8be",
    "code_index": 4,
    "language": "Lua",
    "libraries": [],
    "code": "if self.particleIndex then\n    ParticleManager:DestroyParticle(self.particleIndex, false)\n    ParticleManager:ReleaseParticleIndex(self.particleIndex)\n    self.particleIndex = nil -- Обнуляем переменную для дальнейшего использования\nend",
    "filename": "cdaf7f16eb5980c15925885dac90f8be_4.lua"
  },
  {
    "conversation_hash": "a3409069b3f498fcb77c831a6acdd865",
    "code_index": 0,
    "language": "Lua",
    "libraries": [],
    "code": "-- Убедитесь, что скрипт является LocalScript и находится, например, в StarterPlayer -> StarterCharacterScripts.\n\n-- Получаем LocalPlayer, который является текущим игроком в клиентах.\nlocal plr = game.Players.LocalPlayer\n\n-- Создаём коррекцию тайминга для ожидания, пока игрока полностью загрузит + создаем папку статистики\nwhile not plr:FindFirstChild(\"leaderstats\") do\n    local leaderstats = Instance.new(\"Folder\")\n    leaderstats.Name = \"leaderstats\"\n    leaderstats.Parent = plr\n\n    local coins = Instance.new(\"IntValue\") \n    coins.Name  = \"Dublons\" \n    coins.Value = 100\n    coins.Parent = leaderstats\n\n    wait() -- Ждём небольшой промежуток времени, чтобы избежать ненужных циклов.\nend",
    "filename": "a3409069b3f498fcb77c831a6acdd865_0.lua"
  },
  {
    "conversation_hash": "eb580792994e2d10c3fc265ea662093e",
    "code_index": 0,
    "language": "Lua",
    "libraries": [],
    "code": "local info = {\n    -- Установка начальной и конечной точек\n    Ability = self,\n    EffectName = \"particles/your_particle_effect.vpcf\",\n    vSpawnOrigin = casterOrigin,\n    fDistance = range,\n    fStartRadius = startRadius,\n    fEndRadius = endRadius,\n    Source = caster,\n    bHasFrontalCone = false,\n    bReplaceExisting = false,\n    iUnitTargetTeam = DOTA_UNIT_TARGET_TEAM_ENEMY,\n    iUnitTargetFlags = DOTA_UNIT_TARGET_FLAG_NONE,\n    iUnitTargetType = DOTA_UNIT_TARGET_HERO + DOTA_UNIT_TARGET_BASIC,\n    -- Другие параметры проектайла...\n}\n\nlocal projectile = ProjectileManager:CreateLinearProjectile(info)",
    "filename": "eb580792994e2d10c3fc265ea662093e_0.lua"
  },
  {
    "conversation_hash": "eb580792994e2d10c3fc265ea662093e",
    "code_index": 2,
    "language": "Lua",
    "libraries": [],
    "code": "-- Получение handle на анимацию\nlocal hSequence = mdl:SequenceGet(\"some_animation_sequence\")\n\n-- Воспроизведение анимации с использованием handle\nmdl:StartGesture(hSequence)",
    "filename": "eb580792994e2d10c3fc265ea662093e_2.lua"
  },
  {
    "conversation_hash": "1d83016db99f6c5de2594cf20bb72ce4",
    "code_index": 0,
    "language": "Lua",
    "libraries": [],
    "code": "x = 0.567\nc = 0.789\nQ = 0.123\ns = 0.456\nd = 0.678\nf = 0.901\ng = 0.234\nh = 0.567\nj = 0.890\nk = 0.123\nt = 0.456",
    "filename": "1d83016db99f6c5de2594cf20bb72ce4_0.lua"
  },
  {
    "conversation_hash": "bc4463379cf784d7a0ef2fbdfc2c7290",
    "code_index": 0,
    "language": "Lua",
    "libraries": [],
    "code": "local curses = require(\"ncurses\")\n\n-- Initialize ncurses\ncurses.initscr()\ncurses.cbreak()\ncurses.echo(false)\ncurses.nl(false)\ncurses.raw()\n\n-- Get screen dimensions\nlocal rows, cols = curses.LINES(), curses.COLS()\n\n-- Create a new window\nlocal win = curses.newwin(rows, cols, 0, 0)\n\n-- Enable keypad input\nwin:keypad(true)\n\n-- Display a multiline text\nlocal text = [[\nThis is line 1.\nThis is line 2.\nThis is line 3.\nThis is line 4.\nThis is line 5.\nThis is line 6.\nThis is line 7.\nThis is line 8.\nThis is line 9.\nThis is line 10.\nThis is line 11.\nThis is line 12.\nThis is line 13.\nThis is line 14.\nThis is line 15.\nThis is line 16.\nThis is line 17.\nThis is line 18.\nThis is line 19.\nThis is line 20.\n]]\nwin:mvprintw(0, 0, text)\nwin:refresh()\n\n-- Multi-line editing with scrolling\nlocal line = 0\nlocal max_line = #text:split(\"\\n\")\nwhile true do\n    local key = win:getch()\n    if key == curses.KEY_UP then\n        if line > 0 then\n            line = line - 1\n        end\n    elseif key == curses.KEY_DOWN then\n        if line < max_line - rows then\n            line = line + 1\n        end\n    elseif key == curses.KEY_ENTER or key == 10 then\n        break\n    end\n    \n    -- Clear the window\n    win:clear()\n    \n    -- Print the multiline text with scrolling\n    local start_line = line + 1\n    local end_line = line + rows\n    local lines = text:split(\"\\n\", start_line, end_line)\n    for i, line in ipairs(lines) do\n        win:mvprintw(i - 1, 0, line)\n    end\n    \n    -- Refresh the window\n    win:refresh()\nend\n\n-- End ncurses mode\ncurses.endwin()",
    "filename": "bc4463379cf784d7a0ef2fbdfc2c7290_0.lua"
  },
  {
    "conversation_hash": "beb33ff89e87e32c74b81fb47147aa67",
    "code_index": 2,
    "language": "Lua",
    "libraries": [],
    "code": "(Treno) --(EFFETTUA)--> (Viaggio) --(HA_PARTENZA)-->(Fermata)<--(IN)--(Stazione)\n                                                        ^\n                                                        |\n                                                     (TIPO_FERMATA)\n                                                        |\n                                                        v\n                                    (Fermata)<--(HA_DESTINAZIONE)--(Viaggio) --(EFFETTUA_SOSTA)-->(Fermata)<--(IN)--(Stazione)",
    "filename": "beb33ff89e87e32c74b81fb47147aa67_2.lua"
  },
  {
    "conversation_hash": "d1ab100b8e628f783b6efbd5d8ab195f",
    "code_index": 0,
    "language": "Lua",
    "libraries": [],
    "code": "-- Set the desired width and height for your window\nlocal desired_width = 800\nlocal desired_height = 600\n\n-- Change the window size\nwindow.set_size(desired_width, desired_height)",
    "filename": "d1ab100b8e628f783b6efbd5d8ab195f_0.lua"
  },
  {
    "conversation_hash": "4f1ca960b25259af784a72b2fd2e2462",
    "code_index": 2,
    "language": "Lua",
    "libraries": [],
    "code": "n       s\n f     a\n  w   s\n   s n\n    u\n   d",
    "filename": "4f1ca960b25259af784a72b2fd2e2462_2.lua"
  },
  {
    "conversation_hash": "2468596d488965f73d4515d7b30f972a",
    "code_index": 0,
    "language": "Lua",
    "libraries": [],
    "code": "trim_galore \\\n  --quality 30 \\\n  --stringency 1 \\\n  --adapter AGATCGGAAGAGC \\\n  --length 50 \\\n  --illumina \\\n  input_file.fastq.gz",
    "filename": "2468596d488965f73d4515d7b30f972a_0.lua"
  },
  {
    "conversation_hash": "2468596d488965f73d4515d7b30f972a",
    "code_index": 1,
    "language": "Lua",
    "libraries": [],
    "code": "trim_galore \\\n  --quality 30 \\\n  --stringency 1 \\\n  --adapter AGATCGGAAGAGC \\\n  --length 50 \\\n  --illumina \\\n  --paired input_file_1.fastq.gz input_file_2.fastq.gz",
    "filename": "2468596d488965f73d4515d7b30f972a_1.lua"
  },
  {
    "conversation_hash": "89e382fed6bcf7b875ad136632659c07",
    "code_index": 1,
    "language": "Lua",
    "libraries": [],
    "code": "local frame = CreateFrame(\"Frame\", \"MyFrame\", UIParent)\nframe:SetWidth(200) -- Устанавливаем начальную ширину фрейма\n\nlocal myText = frame:CreateFontString(nil, \"OVERLAY\", \"GameFontNormal\")\nmyText:SetText(\"Мой текст\") -- Устанавливаем текст\n\nlocal textWidth = myText:GetStringWidth() -- Получаем ширину текста\n\nif textWidth > frame:GetWidth() then\n    frame:SetWidth(textWidth) -- Устанавливаем ширину фрейма, равную ширине текста, если она больше текущей ширины\nend",
    "filename": "89e382fed6bcf7b875ad136632659c07_1.lua"
  },
  {
    "conversation_hash": "89e382fed6bcf7b875ad136632659c07",
    "code_index": 8,
    "language": "Lua",
    "libraries": [],
    "code": "local myText = CreateFrame(\"Frame\", nil, UIParent)\nmyText:SetPoint(\"CENTER\", UIParent, \"CENTER\")\nmyText:SetSize(200, 50)\n\nmyText.text = myText:CreateFontString(nil, \"ARTWORK\", \"GameFontNormal\")\nmyText.text:SetPoint(\"CENTER\")\nmyText.text:SetText(\"Пример текста\")\n\nmyText.text:SetTextColor(1, 0, 0) -- Установка цвета текста (красный)",
    "filename": "89e382fed6bcf7b875ad136632659c07_8.lua"
  },
  {
    "conversation_hash": "ccf9f9bc1ea2ef641318ad2f7c6a9bf1",
    "code_index": 6,
    "language": "Lua",
    "libraries": [],
    "code": "src\n└── api\n    └── middleware\n        ├── isAuthenticated.js\n        ├── validateRequest.js\n        ├── errorHandler.js\n        └── ...",
    "filename": "ccf9f9bc1ea2ef641318ad2f7c6a9bf1_6.lua"
  },
  {
    "conversation_hash": "124d3974d8e28500594e0ed640acfe6b",
    "code_index": 7,
    "language": "Lua",
    "libraries": [],
    "code": "require(\n    block.number > lastPollBlock[term] + POLL_DURATION_BLOCKS,\n    \"LendingTermOffboarding: poll active\"\n);\n...\npolls[block.number][term] = 1; // voting power\nlastPollBlock[term] = block.number;",
    "filename": "124d3974d8e28500594e0ed640acfe6b_7.lua"
  },
  {
    "conversation_hash": "a726d0740b519b5c4c42c3eb4b5bbc5b",
    "code_index": 1,
    "language": "Lua",
    "libraries": [],
    "code": "{ Game   : xrEngine.exe\n  Version: \n  Date   : 2023-12-24\n  Author : Sora\n\n  This script does blah blah blah\n}\n\ndefine(address,\"xrGame.dll\"+44C6AB)\ndefine(bytes,89 51 44 45 84 C0)\n\n[ENABLE]\n\nassert(address,bytes)\nalloc(newmem,$100)\n\nlabel(code)\nlabel(return)\n\nnewmem:\n\ncode:\n  mov edx, 50000\n  mov [rcx+44], edx\n  test r8b, r8b\n  jmp return\n\naddress:\n  jmp newmem\n  nop\nreturn:\n\n[DISABLE]\n\naddress:\n  db bytes\n\ndealloc(newmem)",
    "filename": "a726d0740b519b5c4c42c3eb4b5bbc5b_1.lua"
  },
  {
    "conversation_hash": "a726d0740b519b5c4c42c3eb4b5bbc5b",
    "code_index": 4,
    "language": "Lua",
    "libraries": [],
    "code": "{ Game   : xrEngine.exe\n  Version: \n  Date   : 2023-12-24\n  Author : Sora\n\n  This script does blah blah blah\n}\n\ndefine(address,\"xrGame.dll\"+44C6AB)\ndefine(bytes,89 51 44 45 84 C0)\n\n[ENABLE]\n\nassert(address,bytes)\nalloc(newmem,2048,\"xrGame.dll\"+44C6AB)\n\nlabel(code)\nlabel(return)\n\nnewmem:\n\ncode:\n  movss xmm0, dword ptr [50000.0]\n  movss [rcx+44], xmm0\n  test r8b, r8b\n  jmp return\n\naddress:\n  jmp newmem\n  nop\nreturn:\n\n[DISABLE]\n\naddress:\n  db bytes\n\ndealloc(newmem)",
    "filename": "a726d0740b519b5c4c42c3eb4b5bbc5b_4.lua"
  },
  {
    "conversation_hash": "6424df79a6c4679ab6d1eb5ac37b4728",
    "code_index": 2,
    "language": "Lua",
    "libraries": [],
    "code": "[DISABLE]\n\naddress:\n  movss xmm1, [rcx+00000080]\n  jmp code\n  // movss [rcx+00000080],xmm1\n\ndealloc(newmem)",
    "filename": "6424df79a6c4679ab6d1eb5ac37b4728_2.lua"
  },
  {
    "conversation_hash": "6cfb1d80a6a39ad3114fd22614519c0b",
    "code_index": 0,
    "language": "Lua",
    "libraries": [],
    "code": "newmem:\n\ncode:\n  movss [rbx+000001E0],xmm6\n  jmp return",
    "filename": "6cfb1d80a6a39ad3114fd22614519c0b_0.lua"
  },
  {
    "conversation_hash": "11c6bc8ffd9af7646eb008dcab45bd97",
    "code_index": 3,
    "language": "Lua",
    "libraries": [],
    "code": "append\nclear\ncopy\ncount\nextend\nindex\ninsert\n...",
    "filename": "11c6bc8ffd9af7646eb008dcab45bd97_3.lua"
  },
  {
    "conversation_hash": "55a043afdf23f1fd0fc470121dc516ee",
    "code_index": 1,
    "language": "Lua",
    "libraries": [
      "i"
    ],
    "code": "f(n) = {\n  5 if n mod (Σ from i=1 to 4 of (i)) == 0,\n  1 + ((n - Σ from i=1 to k-1 of (i mod 5)) mod (k)),\n     where k = 5 - floor((sqrt(1+8*(n-1))-1)/2) mod 5,\n}",
    "filename": "55a043afdf23f1fd0fc470121dc516ee_1.lua"
  },
  {
    "conversation_hash": "012956ae9820e17c746c586a83a7b19b",
    "code_index": 0,
    "language": "Lua",
    "libraries": [
      "0",
      "the"
    ],
    "code": ": reverse ( addr len -- addr )\n  >r                    \\ save length on the return stack\n  over + swap           \\ calculate the address of the last char\n  1- r> 2/              \\ calculate midpoint and restore length to the stack\n  ?DO                   \\ loop from 0 to half the length - 1\n    over +              \\ calculate address of the current char from the start\n    tuck                \\ duplicate the address for later and bring original to top\n    c@                  \\ get the character at the current position\n    over i - c@         \\ get the character from the corresponding end position\n    >r                  \\ save the end character on the return stack\n    r> swap             \\ get the original character and swap the addresses\n    c!                  \\ write the original character to the end\n    r>                  \\ retrieve the end character we saved\n    c!                  \\ write it to the start position\n    1+                  \\ move to the next char\n  LOOP\n  drop ;                \\ clean up the stack",
    "filename": "012956ae9820e17c746c586a83a7b19b_0.lua"
  },
  {
    "conversation_hash": "2f40fbc5b741868ee55bc0a1ba97120b",
    "code_index": 2,
    "language": "Lua",
    "libraries": [],
    "code": "i   s   R       d   L   C(x)       B(x)       m\n-----------------------------------------------------\n0   0   0000    0   0   1          1          1\n1   0   0000    0   0   1          1          2\n2   1   0000    1   1   1 + x      1          1\n3   1   0001    0   1   1 + x      1 + x      2\n4   0   0011    1   2   1 + x^2    1 + x      1\n5   1   0110    0   2   1 + x^2    1 + x      2\n6   0   1101    0   2   1 + x^2    1 + x      3\n7   1   1011    0   2   1 + x^2    1 + x      4",
    "filename": "2f40fbc5b741868ee55bc0a1ba97120b_2.lua"
  },
  {
    "conversation_hash": "2f40fbc5b741868ee55bc0a1ba97120b",
    "code_index": 6,
    "language": "Lua",
    "libraries": [],
    "code": "i   s   R       d   L   C(x)       B(x)       m\n-----------------------------------------------------\n0   0   0000    0   0   1          1          1\n1   0   0000    0   0   1          1          2\n2   1   0000    1   1   1 + x      1          1\n3   1   0001    0   1   1 + x      1 + x      2\n4   0   0011    1   2   1 + x^2    1 + x      1\n5   1   0110    0   2   1 + x^2    1 + x      2\n6   0   1101    0   2   1 + x^2    1 + x      3\n7   1   1011    0   2   1 + x^2    1 + x      4",
    "filename": "2f40fbc5b741868ee55bc0a1ba97120b_6.lua"
  },
  {
    "conversation_hash": "d26d52e1ae358a717918f50b63a8b16f",
    "code_index": 0,
    "language": "Lua",
    "libraries": [],
    "code": "im = double(imread('./smile.png'));\n\n[row_im, column_im] = size(im);\n\n% Define a transformation matrix T (replace T1, T2, or T3 as needed)\nT = T1; % As an example, using T1. Replace with T2 or T3 accordingly.\n\nfigure\nset(gcf,'Color',[1 1 1])\n\nfor x = 1:column_im\n    for y = 1:row_im\n        % Transform the point (x,y,1) using the transformation matrix T\n        original_point = [x; y; 1];\n        transformed_point = T * original_point;\n        \n        % Extract the transformed coordinates\n        x_transformed = transformed_point(1);\n        y_transformed = transformed_point(2);\n        z_transformed = transformed_point(3);\n\n        % Plot the transformed point\n        if im(y, x) == 255\n            plot3(x_transformed, y_transformed, z_transformed, 'w.')\n            grid on\n        else\n            plot3(x_transformed, y_transformed, z_transformed, 'k.')\n        end\n        hold on\n        drawnow\n    end\nend\n\n% Release the hold on the plot\nhold off",
    "filename": "d26d52e1ae358a717918f50b63a8b16f_0.lua"
  },
  {
    "conversation_hash": "d26d52e1ae358a717918f50b63a8b16f",
    "code_index": 3,
    "language": "Lua",
    "libraries": [],
    "code": "im = double(imread('./smile.png'));\n\n[row_im, column_im] = size(im);\n\n% 90-degree rotation matrix around the z-axis\nT = [0 -1 0; 1 0 0; 0 0 1];\n\nfigure\nset(gcf, 'Color', [1 1 1])\naxis equal\n\nfor x = 1:column_im\n    for y = 1:row_im\n        % Apply the transformation matrix to the point (x,y,1)\n        transformed_point = T * [x; y; 1];\n\n        % Extract the transformed coordinates\n        x_transformed = transformed_point(1);\n        y_transformed = transformed_point(2);\n\n        % Plot the transformed point\n        if im(y, x) == 255\n            plot(x_transformed, y_transformed, 'w.')\n        else\n            plot(x_transformed, y_transformed, 'k.')\n        end\n        hold on\n    end\nend\n\n% Release the hold on the plot\nhold off",
    "filename": "d26d52e1ae358a717918f50b63a8b16f_3.lua"
  },
  {
    "conversation_hash": "2d1a4f9b0df6a1b7e5c6cbfd8571bbda",
    "code_index": 2,
    "language": "Lua",
    "libraries": [],
    "code": "-- Lua script example\nlocal new_width = --[[ some new width ]];\nlocal new_height = --[[ some new height ]];\nlocal display_width = new_width * sys.get_config(\"display.scale\", 1)\nlocal display_height = new_height * sys.get_config(\"display.scale\", 1)\n-- Use this to update the game's actual resolution:\nmsg.post(\"@render:\", \"set_update_frequency\", { update_frequency = 60 })\nmsg.post(\"@render:\", \"set_view_projection\", { width = display_width, height = display_height })",
    "filename": "2d1a4f9b0df6a1b7e5c6cbfd8571bbda_2.lua"
  },
  {
    "conversation_hash": "8ba9dec1bfe0d4284edc23f1b998f637",
    "code_index": 2,
    "language": "Lua",
    "libraries": [],
    "code": "-- Hypothetical Lua pseudo-code that imitates the loop and condition structure\n\n-- This would be triggered by some event or condition in the game.\n-- Exact implementation depends on how input is handled in the Lua scripting environment\nif IsKeyDown(\"HOME\") then\n    printDebug(\"[+] player killer started\", \"red\")\n    \n    -- Get a list of all players, using a hypothetical API call\n    local allPlayers = GetAllPlayers()\n    \n    -- Loop through all players\n    for i, player in ipairs(allPlayers) do\n        if not IsValidPlayerIndex(i) then\n            -- Skip invalid indexes\n            goto continue\n        end\n\n        -- The following logic is omitted due to ethical concerns.\n        -- Normally, at this point you would interact with the players in a legitimate way.\n\n        ::continue::\n    end\nend",
    "filename": "8ba9dec1bfe0d4284edc23f1b998f637_2.lua"
  },
  {
    "conversation_hash": "d9bd916d4c3232b35aa60aea4b6d901a",
    "code_index": 9,
    "language": "Lua",
    "libraries": [],
    "code": "n = 34 - 9 + 1 = 26\na1 = 9\nan = 34\n\nSum = 26/2 * (9 + 34)\nSum = 13 * 43\nSum = 559",
    "filename": "d9bd916d4c3232b35aa60aea4b6d901a_9.lua"
  },
  {
    "conversation_hash": "3761e6b33dd9df0a7aaca778bc56fb87",
    "code_index": 2,
    "language": "Lua",
    "libraries": [],
    "code": "[08:30.000] -- INITIATING BOOT SEQUENCE: \"HexaChroma Print System\" --\n[08:30.010] -- Boot Loader Version 2.6.9 Starting --\n[08:30.020] Checking peripheral devices...\n[08:30.030] -- Print Head Status: OK --\n[08:30.040] -- Paper Feed Mechanism: OK --\n[08:30.050] -- Ink Delivery System: OK --\n[08:30.060] -- Color Calibration Sensor: OK --\n\n[08:30.070] Loading color management software...\n[08:30.080] -- Color Management Suite (CMS) v8.3 Loaded --\n[08:30.090] -- ICC Profile System Loaded --\n\n[08:30.100] Initializing ink subsystems...\n[08:30.110] -- Cyan Ink Subsystem Online --\n[08:30.120] -- Magenta Ink Subsystem Online --\n[08:30.130] -- Yellow Ink Subsystem Online --\n[08:30.140] -- Black Ink Subsystem Online --\n[08:30.150] -- Orange Ink Subsystem Online --\n[08:30.160] -- Green Ink Subsystem Online --\n\n[08:30.170] Calibrating print heads...\n[08:30.180] -- Print Head Alignment Complete --\n[08:30.190] -- Nozzle Check Passed --\n\n[08:30.200] Priming ink delivery system...\n[08:30.210] -- Ink Priming Sequence Initiated --\n[08:30.220] -- Ink Priming Sequence Complete --\n\n[08:30.230] Performing system diagnostics...\n[08:30.240] -- All Systems Functional --\n\n[08:30.250] Heating print heads to operational temperature...\n[08:30.260] -- Reaching Target Temperature --\n[08:30.270] -- Print Head Temperature Stable --\n\n[08:30.280] Booting user interface...\n[08:30.290] -- User Interface Online and Awaiting Input --\n\n[08:30.300] Running color calibration...\n[08:30.310] -- Test Pattern Printing --\n[08:30.320] -- Color Calibration Successful --\n\n[08:30.330] Engaging paper loading mechanism...\n[08:30.340] -- Paper Loading Successful --\n[08:30.350] -- Paper Type Detected and Settings Adjusted --\n\n[08:30.360] Waiting for first production job...\n[08:30.370] -- Production Job Received --\n[08:30.380] -- Pre-Flight Check Initiated --\n\n[08:30.390] Job setup and pre-production checks...\n[08:30.400] -- Image Processing Completed --\n[08:30.410] -- Rip Software Processing Completed --\n[08:30.420] -- Job Layout Finalized --\n\n[08:30.430] Spooling to print queue...\n[08:30.440] -- Job Spooled and Ready for Production --\n\n[08:30.450] Starting production run...\n[08:30.460] -- Print Job Initiated --\n[08:30.470] -- Printing In Progress --\n\n[08:30.500] -- Monitoring Ink Levels and Paper Feed --\n[08:30.550] -- Quality Assurance Scans In Progress --\n\n[08:31.000] First production run completion check...\n[08:31.010] -- Print Cycle Complete --\n[08:31.020] -- Job Quality Check Passed --\n\n[08:31.030] Preparing for next job or standby...\n[08:31.040] -- System Set to Idle Waiting Next Job Input --\n\n[08:31.050] -- \"HexaChroma Print System\" Boot and First Production Run Complete. Awaiting Further Interaction --",
    "filename": "3761e6b33dd9df0a7aaca778bc56fb87_2.lua"
  },
  {
    "conversation_hash": "8d04f6ab25cd3ebd342ec186de1dd978",
    "code_index": 15,
    "language": "Lua",
    "libraries": [],
    "code": "(http.request.uri.path contains \"/admin\" and\n(http.request.uri.query contains \"drop\" or\nhttp.request.uri.query contains \"--\" or\nhttp.request.uri.query contains \"/*\") and\nhttp.request.method eq \"GET\")",
    "filename": "8d04f6ab25cd3ebd342ec186de1dd978_15.lua"
  },
  {
    "conversation_hash": "efe134842455f565a6f5f7a7f3859150",
    "code_index": 0,
    "language": "Lua",
    "libraries": [],
    "code": "local closeButtonText = \"Закрыть\"\nlocal closeButtonWidth = windowWidth * 0.2 -- 20% от ширины окна\nlocal closeButtonHeight = windowHeight * 0.1 -- 10% от высоты окна\nlocal closeButtonX = windowX + windowWidth - closeButtonWidth - 10 -- располагаем справа от окна с небольшим отступом\nlocal closeButtonY = windowY + 10 -- располагаем вверху окна с небольшим отступом\n\ndxDrawRectangle(closeButtonX, closeButtonY, closeButtonWidth, closeButtonHeight, tocolor(180, 0, 0, 200)) -- темно-красный цвет с прозрачностью 200\ndxDrawText(closeButtonText, closeButtonX, closeButtonY, closeButtonX + closeButtonWidth, closeButtonY + closeButtonHeight, tocolor(255, 255, 255, 255), 1, \"default\", \"center\", \"center\") -- белый цвет, размер 1, шрифт по умолчанию, выравнивание по центру",
    "filename": "efe134842455f565a6f5f7a7f3859150_0.lua"
  },
  {
    "conversation_hash": "bfe0b177d32743a5074bf8c7a5895ea2",
    "code_index": 0,
    "language": "Lua",
    "libraries": [],
    "code": "local audio_durations = {\n    [\"audio1.ogg\"] = 120.5,  -- Продолжительность в секундах\n    [\"audio2.ogg\"] = 90.0,\n    -- и т. д.\n}",
    "filename": "bfe0b177d32743a5074bf8c7a5895ea2_0.lua"
  },
  {
    "conversation_hash": "b4b2b9c30ecefabc3f02c1e4420515ca",
    "code_index": 0,
    "language": "Lua",
    "libraries": [],
    "code": "x ← 0\n\nfor i ← 2√n to 2n do\n    for j ← 1 to n^2 do\n        for k ← 2 to 3⌊log_2(i^2)⌋ do\n            x ← x - i - j\n        end for\n    end for\nend for\n\nreturn(x)",
    "filename": "b4b2b9c30ecefabc3f02c1e4420515ca_0.lua"
  },
  {
    "conversation_hash": "6bf76930582178812296b02ee3c6165d",
    "code_index": 1,
    "language": "Lua",
    "libraries": [],
    "code": "local sound = playSound(randomSound)\n   if sound then\n       setSoundVolume(sound, 0.2) -- устанавливаем громкость звука на 20%\n   else\n       outputChatBox(\"Ошибка воспроизведения звука: \" .. randomSound)\n   end",
    "filename": "6bf76930582178812296b02ee3c6165d_1.lua"
  },
  {
    "conversation_hash": "b56b6af8bcaa7c4b08adc1f1058ca841",
    "code_index": 0,
    "language": "Lua",
    "libraries": [],
    "code": "local host = \"localhost\"\nlocal database_name = \"mta\"\nlocal username = \"root\"\nlocal password = \"password\"\nlocal database = dbConnect(\"mysql\", \"dbname=\"..database_name..\";host=\"..host, username, password)",
    "filename": "b56b6af8bcaa7c4b08adc1f1058ca841_0.lua"
  },
  {
    "conversation_hash": "bc96c5b0e87ee79ba23aba22a55d1d2e",
    "code_index": 0,
    "language": "Lua",
    "libraries": [],
    "code": "if condition then\n         -- block of code\n     elseif another_condition then\n         -- block of code\n     else\n         -- block of code\n     end",
    "filename": "bc96c5b0e87ee79ba23aba22a55d1d2e_0.lua"
  },
  {
    "conversation_hash": "bc96c5b0e87ee79ba23aba22a55d1d2e",
    "code_index": 3,
    "language": "Lua",
    "libraries": [],
    "code": "-- Numeric for loop\n     for i=1,10 do\n         -- block of code\n     end\n\n     -- Generic for loop (iterating over tables)\n     for key, value in pairs(t) do\n         -- block of code\n     end",
    "filename": "bc96c5b0e87ee79ba23aba22a55d1d2e_3.lua"
  },
  {
    "conversation_hash": "83af13c57ee31913af3e54a62e9664b3",
    "code_index": 0,
    "language": "Lua",
    "libraries": [],
    "code": "-- создаем шейдер\nlocal myShader = dxCreateShader(\"shader.fx\")\n\n-- загружаем текстуры\nlocal myTexture = dxCreateTexture(\"myMarkerImage.png\")\n\n-- применяем текстуру к шейдеру\ndxSetShaderValue(myShader, \"gTexture\", myTexture)\n\n-- заменяем стандартную текстуру маркера на шейдер с нашей текстурой\nengineApplyShaderToWorldTexture(myShader, \"coronastar\")\n\n-- Создаем маркеры\nlocal marker1Element = createMarker(marker1.x, marker1.y, marker1.z, \"cylinder\", 1.5, 255, 0, 0, 150)\nlocal marker2Element = createMarker(marker2.x, marker2.y, marker2.z, \"cylinder\", 1.5, 255, 0, 0, 150)\n\n-- Добавляем обработчики событий для маркеров здесь, как обычно\n-- ...",
    "filename": "83af13c57ee31913af3e54a62e9664b3_0.lua"
  },
  {
    "conversation_hash": "463f3251ac73f21352886a0925e7e581",
    "code_index": 2,
    "language": "Lua",
    "libraries": [],
    "code": "local angle_in_radians = math.rad(45)\nlocal quaternion = vmath.quat_rotation_z(angle_in_radians)\n\n-- Assuming 'other_go' is the id or URL of the target game object.\ngo.set_rotation(quaternion, \"other_go\")",
    "filename": "463f3251ac73f21352886a0925e7e581_2.lua"
  },
  {
    "conversation_hash": "832b7b65b23e3c77862cf795e7ae5f36",
    "code_index": 1,
    "language": "Lua",
    "libraries": [],
    "code": "graph LR\n    V -- \"3/4\" --> V\n    V -- \"1/4\" --> N\n    N -- \"1/2\" --> V\n    N -- \"1/4\" --> N\n    N -- \"1/4\" --> D\n    D -- \"3/4\" --> D\n    D -- \"1/4\" --> N",
    "filename": "832b7b65b23e3c77862cf795e7ae5f36_1.lua"
  },
  {
    "conversation_hash": "8966ca5ddba68921bd18c42dd9d7d883",
    "code_index": 0,
    "language": "Lua",
    "libraries": [],
    "code": "local from = vmath.vector3(0, 0, 0) -- starting point of the ray\nlocal to = vmath.vector3(10, 0, 0) -- ending point of the ray\nlocal group = \"default\" -- collision group to check for\n\nlocal result = physics.raycast(from, to, {group})\n\nif result then\n    -- A hit occurred, now you can get the ID of the collision object\n    local hit_collision_object_id = result.id\n    local hit_position = result.position\n    local hit_normal = result.normal\n\n    -- If you need to access the game object script which owns the collision object\n    -- you need to send a message or have a reference to it beforehand\n    msg.post(hit_collision_object_id, \"handle_hit\", { position = hit_position })\nelse\n    -- No hit occurred\nend",
    "filename": "8966ca5ddba68921bd18c42dd9d7d883_0.lua"
  },
  {
    "conversation_hash": "b05b3d1870f798f62160175701822ef8",
    "code_index": 3,
    "language": "Lua",
    "libraries": [],
    "code": "local sound = playSound(randomSound)\n   if not sound then -- Эта проверка должна быть до вызова setSoundVolume\n       -- Ошибка...\n   else\n       setSoundVolume(sound, 0.2) -- устанавливаем громкость звука\n       -- Продолжение...\n   end",
    "filename": "b05b3d1870f798f62160175701822ef8_3.lua"
  },
  {
    "conversation_hash": "7a0db3086e0d56c56308cb18fd2fe426",
    "code_index": 0,
    "language": "Lua",
    "libraries": [],
    "code": "-- Создаем пустую таблицу для будущего двумерного массива\nlocal twoDimArray = {}\n\n-- Размеры массива\nlocal rows = 5 -- количество строк\nlocal columns = 4 -- количество столбцов\n\n-- Инициализация двумерного массива\nfor i = 1, rows do\n    twoDimArray[i] = {} -- Для каждой строки создаем свою таблицу (столбцы)\n    for j = 1, columns do\n        twoDimArray[i][j] = i * j -- Просто пример заполнения: произведение индексов\n    end\nend\n\n-- Выводим двумерный массив\nfor i = 1, rows do\n    for j = 1, columns do\n        io.write(twoDimArray[i][j] .. \"\\t\") -- Выводим элемент, tab для форматирования\n    end\n    io.write(\"\\n\") -- Переходим на новую строку после завершения строки массива\nend",
    "filename": "7a0db3086e0d56c56308cb18fd2fe426_0.lua"
  },
  {
    "conversation_hash": "1766fc65c7ff398d3aed95c8ea261f5c",
    "code_index": 0,
    "language": "Lua",
    "libraries": [],
    "code": "+--> j,fork() --+--> k,fork() -- k=0 (prints)\n                    |               +--> k,fork() -- k=8652\ni,fork() --+        |\n            |       +--> j,fork() --+--> k,fork() -- k=0 (prints)\n            +--> i=0 |               +--> k,fork() -- k=8651\n                     |\nParent (ret)         +--> j,fork() --+--> k,fork() -- k=0 (prints)\n                     |               +--> k,fork() -- k=8653\n                     +--> j,fork() --+--> k,fork() -- k=0 (prints)\n                                     +--> k,fork() -- k=8654",
    "filename": "1766fc65c7ff398d3aed95c8ea261f5c_0.lua"
  },
  {
    "conversation_hash": "03c68161af4fa4f279abe33f84fed63f",
    "code_index": 17,
    "language": "Lua",
    "libraries": [],
    "code": "local window_flags = reaper.ImGui_WindowFlags_AlwaysAutoResize()\nreaper.ImGui_SetNextWindowPos(ctx, 100, 100, reaper.ImGui_Cond_FirstUseEver())\nif reaper.ImGui_Begin(ctx, 'Window', true, window_flags) then\n\n    -- Calculate center position\n    local window_width = reaper.ImGui_GetWindowSize(ctx)\n    local button_width = 100\n    local center_x = (window_width - button_width) / 2\n    \n    reaper.ImGui_SetCursorPosX(ctx, center_x)\n    if reaper.ImGui_Button(ctx, 'Centered Button', button_width, 20) then\n        -- Button action\n    end\n\n    reaper.ImGui_End(ctx)\nend",
    "filename": "03c68161af4fa4f279abe33f84fed63f_17.lua"
  },
  {
    "conversation_hash": "03c68161af4fa4f279abe33f84fed63f",
    "code_index": 18,
    "language": "Lua",
    "libraries": [],
    "code": "-- Assume knob and label drawing happens here\nlocal labelWidth = reaper.ImGui_CalcTextSize(ctx, \"Your Label Text\")\nlocal knobPositionX = -- X Position where you begin drawing your knob\nlocal knobWidth = -- The width of your knob\n\n-- Calculate the new cursor X position for the label\nlocal newCursorPosX = knobPositionX + (knobWidth - labelWidth) * 0.5\nreaper.ImGui_SetCursorPosX(ctx, newCursorPosX)\n\n-- Now draw your label\nreaper.ImGui_Text(ctx, \"Your Label Text\")",
    "filename": "03c68161af4fa4f279abe33f84fed63f_18.lua"
  },
  {
    "conversation_hash": "03c68161af4fa4f279abe33f84fed63f",
    "code_index": 24,
    "language": "Lua",
    "libraries": [],
    "code": "local visible, open = reaper.ImGui_Begin(ctx, \"Drag Test\", true)\nif visible then\n    reaper.ImGui_Text(ctx, \"Drag anywhere\")\n    if reaper.ImGui_IsMouseDown(ctx, 0) then -- If primary mouse button is down\n        local dx, dy = reaper.ImGui_GetMouseDragDelta(ctx, 0)\n        reaper.ImGui_Text(ctx, string.format(\"Drag delta: %.2f, %.2f\", dx, dy))\n        reaper.ImGui_ResetMouseDragDelta(ctx, 0)\n    end\n    reaper.ImGui_End(ctx)\nend",
    "filename": "03c68161af4fa4f279abe33f84fed63f_24.lua"
  },
  {
    "conversation_hash": "b1e3a20c8138827de8a7f1bded1db607",
    "code_index": 25,
    "language": "Lua",
    "libraries": [],
    "code": "C1i\nf1:start\nC1d\nf1:end\nval=3\nval=3",
    "filename": "b1e3a20c8138827de8a7f1bded1db607_25.lua"
  },
  {
    "conversation_hash": "be2856c7fbcbed8fa7572305d6558f9d",
    "code_index": 2,
    "language": "Lua",
    "libraries": [],
    "code": "-- Define the font parameters\nlocal fontFamilyOrFile = \"Arial\" -- This can be a generic font family name or a path to a font file\nlocal fontSize = 16 -- Font size in pixels\n\n-- Create the font. Omit flags or set to `nil` if not using any specific flags.\nlocal font = reaper.ImGui_CreateFont(fontFamilyOrFile, fontSize)",
    "filename": "be2856c7fbcbed8fa7572305d6558f9d_2.lua"
  },
  {
    "conversation_hash": "af227f25d35444cd6121d0950ae67038",
    "code_index": 0,
    "language": "Lua",
    "libraries": [],
    "code": "-- Assuming `v` is the actual value you want to manipulate\nlocal scaledV = v * 10 -- Increase the scale for finer control\nlocal scaledV_min = v_min * 10\nlocal scaledV_max = v_max * 10\n\n-- When calling the slider\nretval, scaledV = reaper.ImGui_SliderInt(ctx, label, scaledV, scaledV_min, scaledV_max, format, flags)\n\n-- After the slider, scale back\nv = scaledV / 10",
    "filename": "af227f25d35444cd6121d0950ae67038_0.lua"
  },
  {
    "conversation_hash": "af227f25d35444cd6121d0950ae67038",
    "code_index": 2,
    "language": "Lua",
    "libraries": [
      "the"
    ],
    "code": "local ctx = reaper.ImGui_CreateContext('My Script')\nreaper.ImGui_SetNextWindowSize(ctx, 400, 200, reaper.ImGui_Cond_FirstUseEver())\n\nif reaper.ImGui_Begin(ctx, 'My Window', true) then\n    -- This will position the next element (e.g., button) at 100 pixels to the right and\n    -- 50 pixels down from the top-left corner of the window.\n    reaper.ImGui_SetCursorPos(ctx, 100, 50)\n    if reaper.ImGui_Button(ctx, 'Click Me') then\n        -- Button action goes here\n    end\nend\nreaper.ImGui_End(ctx)",
    "filename": "af227f25d35444cd6121d0950ae67038_2.lua"
  },
  {
    "conversation_hash": "af227f25d35444cd6121d0950ae67038",
    "code_index": 3,
    "language": "Lua",
    "libraries": [],
    "code": "reaper.ImGui_InvisibleButton(ctx, '##inv_before', -1, desiredHeight * 0.5)\nif reaper.ImGui_IsItemActive(ctx) then\n   -- handle case if needed\nend\n\n-- Your DragDouble widget\nlocal v = 0.5 -- example value\nlocal v_speed = 0.01\nlocal v_min = 0\nlocal v_max = 1\nretval, v = reaper.ImGui_DragDouble(ctx, 'DragDouble##example', v, v_speed, v_min, v_max, \"%.3f\")\n\nreaper.ImGui_InvisibleButton(ctx, '##inv_after', -1, desiredHeight * 0.5)\nif reaper.ImGui_IsItemActive(ctx) then\n   -- handle case if needed\nend",
    "filename": "af227f25d35444cd6121d0950ae67038_3.lua"
  },
  {
    "conversation_hash": "af227f25d35444cd6121d0950ae67038",
    "code_index": 4,
    "language": "Lua",
    "libraries": [],
    "code": "local style = reaper.ImGui_GetStyle(ctx)\nlocal originalFramePaddingY = style.FramePadding.y\nstyle.FramePadding.y = 10 -- Increasing vertical padding for all widgets\n\n-- Now add your DragDouble widget; it will have more vertical padding\n-- ...\n\n-- After you are done with the bigger widgets, you may want to reset the style\nstyle.FramePadding.y = originalFramePaddingY",
    "filename": "af227f25d35444cd6121d0950ae67038_4.lua"
  },
  {
    "conversation_hash": "af227f25d35444cd6121d0950ae67038",
    "code_index": 5,
    "language": "Lua",
    "libraries": [],
    "code": "-- Before creating your UI\nlocal style = reaper.ImGui_GetStyle(ctx)\nstyle.FramePadding.y = style.FramePadding.y * 0.5 -- Reduce vertical padding\nstyle.ItemSpacing.y = style.ItemSpacing.y * 0.5 -- Reduce space between items\n\n-- After adjusting the style, create your DragDouble widget",
    "filename": "af227f25d35444cd6121d0950ae67038_5.lua"
  },
  {
    "conversation_hash": "af227f25d35444cd6121d0950ae67038",
    "code_index": 6,
    "language": "Lua",
    "libraries": [],
    "code": "-- Scale down font size\nlocal font = reaper.ImGui_CreateFont('sans-serif', 10) -- Example: smaller font\nreaper.ImGui_AttachFont(ctx, font)\n\n-- Your DragDouble widget here\n\n-- Optionally, reset to the default font afterward if needed",
    "filename": "af227f25d35444cd6121d0950ae67038_6.lua"
  },
  {
    "conversation_hash": "af227f25d35444cd6121d0950ae67038",
    "code_index": 8,
    "language": "Lua",
    "libraries": [],
    "code": "-- Ensure the SWS extension is installed to use SNM_GetDoubleConfigVar\nlocal metronome_volume = reaper.SNM_GetDoubleConfigVar(\"projmetrovol\", -1)\nif metronome_volume ~= -1 then\n    -- Convert to dB for more intuitive understanding\n    local metronome_volume_dB = 20 * math.log10(metronome_volume)\n    reaper.ShowConsoleMsg(\"Current Metronome Volume: \" .. metronome_volume_dB .. \" dB\\n\")\nelse\n    reaper.ShowConsoleMsg(\"Failed to get metronome volume.\\n\")\nend",
    "filename": "af227f25d35444cd6121d0950ae67038_8.lua"
  },
  {
    "conversation_hash": "af227f25d35444cd6121d0950ae67038",
    "code_index": 9,
    "language": "Lua",
    "libraries": [],
    "code": "local desiredVolume_dB = -6\nlocal desiredVolume_factor = 10^(desiredVolume_dB / 20)\nlocal success = reaper.SNM_SetDoubleConfigVar(\"projmetrovol\", desiredVolume_factor)\nif not success then\n    reaper.ShowConsoleMsg(\"Failed to set metronome volume.\\n\")\nend",
    "filename": "af227f25d35444cd6121d0950ae67038_9.lua"
  },
  {
    "conversation_hash": "bf5b63f3385ae8c4cc5b0718a037ea27",
    "code_index": 5,
    "language": "Lua",
    "libraries": [],
    "code": "if fx_button_pressed then\n    if IsAltKeyDown() then\n        -- Toggle bypass\n        local currentState = reaper.TrackFX_GetEnabled(selected_track, i)\n        reaper.TrackFX_SetEnabled(selected_track, i, not currentState)\n    else\n        -- Open FX window\n        reaper.TrackFX_SetOpen(selected_track, i, true)\n    end\nend",
    "filename": "bf5b63f3385ae8c4cc5b0718a037ea27_5.lua"
  },
  {
    "conversation_hash": "49d6b2d1358ea8c3c40f4a956561fa8d",
    "code_index": 0,
    "language": "Lua",
    "libraries": [],
    "code": "for i = 0, num_of_fx - 1 do\n    reaper.ImGui_SameLine(ctx, 0, 10)\n    local _, fx_name = reaper.TrackFX_GetFXName(selected_track, i)\n    \n    -- Insert a newline character between each letter to display each on a new line\n    fx_name = fx_name:gsub(\".\", \"%0\\n\"):gsub(\"\\n$\", \"\") -- using gsub to insert \\n between each char\n    -- Remove the trailing newline added by the pattern\n\n    if reaper.TrackFX_GetEnabled(selected_track, i) then\n        reaper.ImGui_PushStyleColor(ctx, reaper.ImGui_Col_Button(), 0xF5CB5CFF)\n        reaper.ImGui_PushStyleColor(ctx, reaper.ImGui_Col_Text(), 0x000000FF)\n    else\n        reaper.ImGui_PushStyleColor(ctx, reaper.ImGui_Col_Button(), 0xCFDBD5FF)\n        reaper.ImGui_PushStyleColor(ctx, reaper.ImGui_Col_Text(), 0x000000FF)\n    end\n   \n    local fx_button_left_click = reaper.ImGui_Button(ctx,  fx_name .. '##' .. i, button_width, button_height)\n    -- Remainder of the for-loop code goes here...",
    "filename": "49d6b2d1358ea8c3c40f4a956561fa8d_0.lua"
  },
  {
    "conversation_hash": "49d6b2d1358ea8c3c40f4a956561fa8d",
    "code_index": 1,
    "language": "Lua",
    "libraries": [
      "the"
    ],
    "code": "for i = 0, num_of_fx - 1 do\n    reaper.ImGui_SameLine(ctx, 0, 10)\n    local _, fx_name = reaper.TrackFX_GetFXName(selected_track, i)\n\n    -- Skip the first word: Find the first space and take the substring from the next character to the end.\n    fx_name = fx_name:match(\" (%S.*)$\") or fx_name -- Fallback to fx_name in case there's no space.\n\n    -- If you also wish to insert a newline between each letter of the resulting fx_name, uncomment the next line\n    -- fx_name = fx_name:gsub(\".\", \"%0\\n\"):gsub(\"\\n$\", \"\") \n\n    if reaper.TrackFX_GetEnabled(selected_track, i) then\n        reaper.ImGui_PushStyleColor(ctx, reaper.ImGui_Col_Button(), 0xF5CB5CFF)\n        reaper.ImGui_PushStyleColor(ctx, reaper.ImGui_Col_Text(), 0x000000FF)\n    else\n        reaper.ImGui_PushStyleColor(ctx, reaper.ImGui_Col_Button(), 0xCFDBD5FF)\n        reaper.ImGui_PushStyleColor(ctx, reaper.ImGui_Col_Text(), 0x000000FF)\n    end\n\n    local fx_button_left_click = reaper.ImGui_Button(ctx, fx_name .. '##' .. i, button_width, button_height)\n    -- Remainder of the for-loop code goes here...",
    "filename": "49d6b2d1358ea8c3c40f4a956561fa8d_1.lua"
  },
  {
    "conversation_hash": "e2f89f8951f2af356a6e0d6a4846b5bf",
    "code_index": 2,
    "language": "Lua",
    "libraries": [],
    "code": "local _, fx_name = reaper.TrackFX_GetFXName(selected_track, i)\n-- Grabs the text after the first space\nfx_name_label = fx_name:match(\" (%S.*)$\")\n-- Now apply your transformation only to the extracted part, if it exists\nif fx_name_label ~= nil then\n    fx_name_label = fx_name_label:gsub(\".\", \"%0\\n\"):gsub(\"\\n$\", \"\")\nelse\n    -- In case the FX name has no space (thus match returns nil), use the whole name.\n    fx_name_label = fx_name:gsub(\".\", \"%0\\n\"):gsub(\"\\n$\", \"\")\nend",
    "filename": "e2f89f8951f2af356a6e0d6a4846b5bf_2.lua"
  },
  {
    "conversation_hash": "3472e20ed1762f4e1fd4780c004c1d99",
    "code_index": 1,
    "language": "Lua",
    "libraries": [],
    "code": "local _, fx_name = reaper.TrackFX_GetFXName(selected_track, i)\nfx_name_label = fx_name:match(\" (%S.*)$\")\nif fx_name_label then \n    -- If there was a match and fx_name_label is not nil, proceed to modify it further if needed\n    fx_name_label = fx_name_label:gsub(\".\", \"%0\\n\"):gsub(\"\\n$\", \"\")\nelse\n    -- If there was no match (e.g., the FX name is a single word), default to using the whole fx_name\n    fx_name_label = fx_name:gsub(\".\", \"%0\\n\"):gsub(\"\\n$\", \"\")\nend",
    "filename": "3472e20ed1762f4e1fd4780c004c1d99_1.lua"
  },
  {
    "conversation_hash": "a51152e62d9714122b602973d07ca37d",
    "code_index": 1,
    "language": "Lua",
    "libraries": [],
    "code": "local fx_name_parts = {}\n    for part in fx_name:gmatch(\"%S+\") do table.insert(fx_name_parts, part) end\n    -- Remove the first part (word)\n    table.remove(fx_name_parts, 1)\n    -- Re-join the parts\n    fx_name_label = table.concat(fx_name_parts, \" \")",
    "filename": "a51152e62d9714122b602973d07ca37d_1.lua"
  },
  {
    "conversation_hash": "1ca2fc09b451b50cfcf4159ba7fe2fbb",
    "code_index": 2,
    "language": "Lua",
    "libraries": [],
    "code": "#version=RHEL9 # Oracle Linux 버전 9로 조정\nauth --enableshadow --passalgo=sha512\ninstall\n# Oracle Linux 9의 정확한 리포지토리 URL을 사용하세요.\n#url --url http://your.repository.url/OracleLinux/OL9/baseos/x86_64/\ncdrom\n#graphical\ntext\n\nkeyboard --vckeymap=us --xlayouts='us'\nlang en_US.UTF-8\ntimezone Asia/Seoul --isUtc\n\nbootloader --location=mbr --boot-drive=sda --driveorder=sda --append=\"net.ifnames=0 biosdevname=0 crashkernel=auto rhgb quiet\"\n\nnetwork --bootproto=static --onboot=on --device=eth0 --ip=10.1.1.131 --netmask=255.255.255.0 --ipv6=auto --activate --hostname=myserver.oracle.com\nnetwork --bootproto=static --onboot=on --device=eth1 --ip=10.2.1.132 --netmask=255.255.255.0 --ipv6=auto --activate\n\nselinux --disabled\nfirewall --enabled --ssh --http --port=443:tcp,3306:tcp\nservices --disabled=\"chronyd,NetworkManager\" --enabled=\"network,sshd\"\n\nrootpw --iscrypted [암호화된 비밀번호]\n\nuser --name=oracle\nuser --name=mysql\n\nzerombr\nfirstboot --enable\nignoredisk --only-use=sda,sdb,sdc,sdd,sde\nclearpart --drives=sda,sdb,sdc,sdd,sde --all --initlabel\n\npart /boot --fstype=xfs --size=1024 --ondisk=sda\npart swap --ondisk=sda --size=16384\npart / --fstype=xfs --size=1 --grow --ondisk=sda\npart /var/lib/mysql --fstype=xfs --size=1 --grow --ondisk=sde\n\n%pre\n# 여기에 필요한 스크립트를 포함하세요.\n%end\n\n%post --log=/root/ks-post.log\n# 설치 후 스크립트를 포함하세요.\n%end\n\n%packages\n@^minimal-environment\n@core\n@base\n# 필요한 패키지 그룹 또는 개별 패키지를 여기 명시\n%end\n\n%addon com_redhat_kdump --enable --reserve-mb='auto'\n%end\n\n%anaconda\npwpolicy root --minlen=6 --minquality=1 --notstrict --nochanges --notempty\npwpolicy user --minlen=6 --minquality=1 --notstrict --nochanges --emptyok\npwpolicy luks --minlen=6 --minquality=1 --notstrict --nochanges --notempty\n%end\n\nreboot",
    "filename": "1ca2fc09b451b50cfcf4159ba7fe2fbb_2.lua"
  },
  {
    "conversation_hash": "f7f02d536e6328f8cb35b1bf4f19f9b0",
    "code_index": 0,
    "language": "Lua",
    "libraries": [],
    "code": "-- Check if there is at least one item selected\nlocal itemCount = reaper.CountSelectedMediaItems(0)\nif itemCount == 0 then\n  reaper.ShowMessageBox(\"No item selected\", \"Error\", 0)\n  return\nend\n\n-- Get the first selected item\nlocal selectedItem = reaper.GetSelectedMediaItem(0, 0)\n\n-- Get the active take of the selected item\nlocal take = reaper.GetActiveTake(selectedItem)\n\nif not take or reaper.TakeIsMIDI(take) then\n  reaper.ShowMessageBox(\"The selected item does not have a valid take or is a MIDI item.\", \"Error\", 0)\n  return\nend\n\n-- Get the pitch of the active take\nlocal pitch = reaper.GetMediaItemTakeInfo_Value(take, \"D_PITCH\")\n\n-- Display the pitch\nreaper.ShowMessageBox(\"The pitch of the selected item's active take is: \" .. tostring(pitch), \"Pitch Information\", 0)",
    "filename": "f7f02d536e6328f8cb35b1bf4f19f9b0_0.lua"
  },
  {
    "conversation_hash": "7e2afa15dabffbf0e9686b989bac6657",
    "code_index": 0,
    "language": "Lua",
    "libraries": [],
    "code": "-- Example Lua script to attempt changing a take's pitch algorithm\n-- This is more of a conceptual outline than a direct solution\n\nreaper.Undo_BeginBlock() -- Start Undo Block\n\nlocal itemCount = reaper.CountSelectedMediaItems(0)\nif itemCount == 0 then\n    reaper.ShowMessageBox(\"No items selected.\", \"Error\", 0)\n    return\nend\n\nfor i = 0, itemCount - 1 do\n    local item = reaper.GetSelectedMediaItem(0, i)\n    if item then\n        -- Assuming you have a way to identify the necessary action/command ID\n        -- For example: \n        -- reaper.Main_OnCommand(commandID, 0) -- Replace 'commandID' with the actual command ID to change the pitch algorithm\n        -- There's no direct command ID as an example here because it depends on the SWS version and REAPER setup\n    end\nend\n\nreaper.Undo_EndBlock(\"Change Take's Pitch Algorithm\", -1) -- End Undo Block",
    "filename": "7e2afa15dabffbf0e9686b989bac6657_0.lua"
  },
  {
    "conversation_hash": "7e2afa15dabffbf0e9686b989bac6657",
    "code_index": 1,
    "language": "Lua",
    "libraries": [
      "item"
    ],
    "code": "local item = reaper.GetSelectedMediaItem(0, 0) -- Get first selected media item\nif not item then return end\n\nlocal take = reaper.GetActiveTake(item) -- Get active take from item\nif not take or reaper.TakeIsMIDI(take) then return end\n\nlocal env = reaper.GetTakeEnvelopeByName(take, \"Pitch\") -- Get the pitch envelope\n\nif not env then\n  env = reaper.GetTakeEnvelopeByName(take, \"Take pitch envelope\")\nend\n\nif env then\n    reaper.InsertEnvelopePoint(env, 1, 0.5, 1, 0, 0, true) -- Example: Insert an envelope point (Parameters need to be adjusted based on specific needs)\n    reaper.Envelope_SortPoints(env)\nend",
    "filename": "7e2afa15dabffbf0e9686b989bac6657_1.lua"
  },
  {
    "conversation_hash": "7e2afa15dabffbf0e9686b989bac6657",
    "code_index": 4,
    "language": "Lua",
    "libraries": [],
    "code": "if take then\n    local fxIndex = reaper.TakeFX_AddByName(take, \"ReaEQ\", -1)  -- This returns the index of the newly added FX\n    local paramIndex = 0  -- Parameter index, this depends on the FX\n    local value = 0.5  -- The new value for the parameter, usually between 0 and 1\n    reaper.TakeFX_SetParam(take, fxIndex, paramIndex, value)\nend",
    "filename": "7e2afa15dabffbf0e9686b989bac6657_4.lua"
  },
  {
    "conversation_hash": "15e64a55b888155a9d89cc619bc7a466",
    "code_index": 3,
    "language": "Lua",
    "libraries": [],
    "code": "local selected_item = reaper.GetSelectedMediaItem(0, 0) -- Get the first selected item\nif selected_item then\n    local item_guid = reaper.BR_GetMediaItemGUID(selected_item)\n    -- Now you have the GUID, which is a string that uniquely identifies the media item\nend",
    "filename": "15e64a55b888155a9d89cc619bc7a466_3.lua"
  },
  {
    "conversation_hash": "15e64a55b888155a9d89cc619bc7a466",
    "code_index": 5,
    "language": "Lua",
    "libraries": [],
    "code": "local item_guid = reaper.GetExtState(\"MySection\", \"SelectedItemGUID\")\nif item_guid and item_guid ~= \"\" then\n    local itemCount = reaper.CountMediaItems(0)\n    for i = 0, itemCount - 1 do\n        local item = reaper.GetMediaItem(0, i)\n        if reaper.BR_GetMediaItemGUID(item) == item_guid then\n            -- This is the item you saved earlier\n            -- Do something with the item\n            break\n        end\n    end\nend",
    "filename": "15e64a55b888155a9d89cc619bc7a466_5.lua"
  },
  {
    "conversation_hash": "336fab33d839febde2afa94fea9e2654",
    "code_index": 0,
    "language": "Lua",
    "libraries": [],
    "code": "local myTable = {\n    name = \"Defold\",\n    version = 1.2,\n    features = {\"Cross-platform\", \"2D\", \"Lightweight\"}\n}",
    "filename": "336fab33d839febde2afa94fea9e2654_0.lua"
  },
  {
    "conversation_hash": "cfe27ac72e9563410f3e56d29e9b8f59",
    "code_index": 1,
    "language": "Lua",
    "libraries": [],
    "code": "local arg1 = \"hello\"\n    local arg2 = 123\n\n    -- Remember to properly escape arguments\n    local js_code = string.format(\"myFunction('%s', %d);\", arg1, arg2)\n    html5.run(js_code)",
    "filename": "cfe27ac72e9563410f3e56d29e9b8f59_1.lua"
  },
  {
    "conversation_hash": "cfe27ac72e9563410f3e56d29e9b8f59",
    "code_index": 3,
    "language": "Lua",
    "libraries": [],
    "code": "local json = require \"json\"\n\n        local args = {key1 = \"value1\", key2 = 42}\n        local argsJson = json.encode(args)\n\n        local js_code = string.format(\"myFunctionWithJson('%s');\", argsJson)\n        html5.run(js_code)",
    "filename": "cfe27ac72e9563410f3e56d29e9b8f59_3.lua"
  },
  {
    "conversation_hash": "9df4f7c573140764d1b3a29f96bf35fe",
    "code_index": 0,
    "language": "Lua",
    "libraries": [],
    "code": "main = do\n  mapM_ id tests\n  where\n    only = onlyTests allTests\n    tests = if (length only > 0) then only else runTests allTests",
    "filename": "9df4f7c573140764d1b3a29f96bf35fe_0.lua"
  },
  {
    "conversation_hash": "96d684edb64961324fd546f046437b04",
    "code_index": 2,
    "language": "Lua",
    "libraries": [],
    "code": "# On Windows\nset DEBUG=pw:api\n\n# On Linux or macOS\nexport DEBUG=pw:api",
    "filename": "96d684edb64961324fd546f046437b04_2.lua"
  },
  {
    "conversation_hash": "e15bb1fe86f7b246f97ed628afa963a4",
    "code_index": 11,
    "language": "Lua",
    "libraries": [],
    "code": "% 读取图像\nimg = imread('your_image.jpg');  % 填入你的图像文件路径\n\n% 转换图像为HSV颜色空间\nhsv_img = rgb2hsv(img);\nhsv_Hue = hsv_img(:,:,1);  % 提取色调Hue通道\nhsv_Saturation = hsv_img(:,:,2);  % 提取饱和度Saturation通道\nhsv_Intensity = hsv_img(:,:,3);  % 提取亮度Intensity通道\n\n% 将色调Hue分为360份\nnum_bins = 360;\nlabels = zeros(size(hsv_Hue));\n\n% 划分色调区间并存储具有相同label的像素的饱和度和亮度值\nhue_arrays = zeros(num_bins, size(hsv_Hue,1), size(hsv_Hue,2), 2);  % 饱和度和亮度\n\nfor i = 1:size(hsv_Hue, 1)\n    for j = 1:size(hsv_Hue, 2)\n        hue_value = hsv_Hue(i, j);\n        label = floor(hue_value * num_bins) + 1;\n        labels(i, j) = label;\n        hue_arrays(label, i, j, 1) = hsv_Saturation(i, j);  % 存储饱和度\n        hue_arrays(label, i, j, 2) = hsv_Intensity(i, j);  % 存储亮度\n    end\nend\n\n% 显示第180个区间的像素的饱和度和亮度数据\ndisp(hue_arrays(180, :, :, :));",
    "filename": "e15bb1fe86f7b246f97ed628afa963a4_11.lua"
  },
  {
    "conversation_hash": "f956d899469fb02a836697651cec0408",
    "code_index": 3,
    "language": "Lua",
    "libraries": [],
    "code": "-- Example Lua Script to toggle selected track height between two sizes\n\nbigHeight = 120 -- The big track height in pixels\nsmallHeight = 40 -- The small track height in pixels\n\n-- Iterate over selected tracks\nfor i = 0, reaper.CountSelectedTracks(0)-1 do\n    local track = reaper.GetSelectedTrack(0, i)\n    \n    -- Get current track height\n    local _, currentHeight = reaper.GetMediaTrackInfo_Value(track, \"I_TCPH\")\n    \n    -- Toggle height\n    if currentHeight <= smallHeight then\n        reaper.SetMediaTrackInfo_Value(track, \"I_TCPH\", bigHeight)\n    else\n        reaper.SetMediaTrackInfo_Value(track, \"I_TCPH\", smallHeight)\n    end\nend\n\nreaper.TrackList_AdjustWindows(false) -- update the track view\nreaper.UpdateArrange() -- update the arrangement view",
    "filename": "f956d899469fb02a836697651cec0408_3.lua"
  },
  {
    "conversation_hash": "ecdc511bdd24d0cc4b8dd7b97ddafe76",
    "code_index": 25,
    "language": "Lua",
    "libraries": [],
    "code": "[Проекты]\n       comment = Папка с проектами\n       path = /mnt/public/project\n       public = no\n       writable = yes\n       read only = no\n       guest ok = no\n       valid users = @Engineer, Nachalnic-KO\n       write list = @Engineer, Nachalnic-KO\n       force group = Engineer",
    "filename": "ecdc511bdd24d0cc4b8dd7b97ddafe76_25.lua"
  },
  {
    "conversation_hash": "9aca578294a25380e93f5c7899164424",
    "code_index": 1,
    "language": "Lua",
    "libraries": [],
    "code": "if trackArtist is \"Latex Wednesday\" then\n    \n    -- Check track duration and decide delay\n    if trackDuration / 1000 ≤ 31 then\n        next track\n    else\n        delay (30 + (0.05 * (trackDuration / 1000)))\n        next track\n    end if\nelse\n    -- If not Latex Wednesday\n    delay tackDuration\n    next track\nend if",
    "filename": "9aca578294a25380e93f5c7899164424_1.lua"
  },
  {
    "conversation_hash": "9aca578294a25380e93f5c7899164424",
    "code_index": 2,
    "language": "Lua",
    "libraries": [],
    "code": "if trackArtist is \"Latex Wednesday\" then\n                \n    -- Check track duration and decide delay\n    if trackDuration / 1000 ≤ 31 then\n        next track\n    else\n        delay (30 + (0.05 * trackDuration))\n        next track\n    end if\nelse\n    -- If not Latex Wednesday, let the track play in its entirety\n    delay trackDuration\n    next track\nend if",
    "filename": "9aca578294a25380e93f5c7899164424_2.lua"
  },
  {
    "conversation_hash": "25b0768286df1ed6a0e2190aea0e6b2d",
    "code_index": 0,
    "language": "Lua",
    "libraries": [],
    "code": "1 -- 2\n   / \\  /\n  6 -- 3\n   \\  /\n    4 -- 5",
    "filename": "25b0768286df1ed6a0e2190aea0e6b2d_0.lua"
  },
  {
    "conversation_hash": "9c8b0a198cf8e7e70fcc4d5eba8e9297",
    "code_index": 1,
    "language": "Lua",
    "libraries": [],
    "code": "-- Возможная попытка использования глобальной матрицы или прямого вызова функции SA для поворота объекта.\n-- Пример использования неявной функции для глобального поворота объекта (CLEO):\nlocal objectHandle = 123 -- Пример ID объекта в игре\nlocal angleZ = 45 -- Угол в градусах для поворота объекта\n\n-- Предположим, что существует функция 'setObjectRotation' в вашем моддинговом инструментарии:\nsetObjectRotation(objectHandle, 0, 0, angleZ)",
    "filename": "9c8b0a198cf8e7e70fcc4d5eba8e9297_1.lua"
  },
  {
    "conversation_hash": "7eb38afe9e92a62415ce86340af0adc0",
    "code_index": 16,
    "language": "Lua",
    "libraries": [],
    "code": "5\nS.....\n......\n...K.G\n......\n.....F",
    "filename": "7eb38afe9e92a62415ce86340af0adc0_16.lua"
  },
  {
    "conversation_hash": "ca9ea1fe2893db8a5a32b218625259ee",
    "code_index": 0,
    "language": "Lua",
    "libraries": [],
    "code": "-- Предполагаем, что высота рисования и позиции рассчитываются относительно posY speedometer и speedBar\nlocal startY = speedometer.posY + speedBar.offsetY -- начальная позиция по Y (может быть изменена в зависимости от allign)\n\nlocal widthPerTick = speedometer.width / speedometer.maxSpeed * ticks.main.milesPerTick\n\nfor i = 0, speedometer.maxSpeed, ticks.main.milesPerTick do\n    local x = speedometer.posX + (widthPerTick * i / ticks.main.milesPerTick) -- вычисляем X позицию для каждого тика\n    if i % ticks.main.milesPerTick == 0 then\n        -- Отрисовка основных делений\n        renderDrawLine(x, startY, x, startY + ticks.main.height, 1, theme.text)\n        -- Отрисовка чисел\n        local speedText = tostring(i)\n        local length = renderGetFontDrawTextLength(fonts.small, speedText)\n        local height = renderGetFontDrawHeight(fonts.small)\n        renderFontDrawText(\n            fonts.small,\n            speedText,\n            x - (length / 2), -- выравнивание текста по центру относительно линии\n            startY + labels.speedOffsetY - (height / 2),\n            theme.text\n        )\n    else\n        -- Отрисовка промежуточных делений\n        renderDrawLine(x, startY, x, startY + ticks.secondary.height, 1, theme.text)\n    end\nend",
    "filename": "ca9ea1fe2893db8a5a32b218625259ee_0.lua"
  },
  {
    "conversation_hash": "ad4a3bfea6a4fb97e28f6d62fe541ab9",
    "code_index": 4,
    "language": "Lua",
    "libraries": [],
    "code": "line console 0\npassword cisco\nlogin\nexit\n\nline vty 0 4\npassword cisco\nlogin\nexit",
    "filename": "ad4a3bfea6a4fb97e28f6d62fe541ab9_4.lua"
  },
  {
    "conversation_hash": "c4f5ebfba9d67c371f1109c41cb91b37",
    "code_index": 0,
    "language": "Lua",
    "libraries": [],
    "code": "local themes = {\n    lightTheme = {\n        background = 0xD9FFFFFF,\n        -- другие цвета\n    },\n    darkTheme = {\n        background = 0xD9000000,\n        -- другие цвета\n    },\n    -- другие темы\n}",
    "filename": "c4f5ebfba9d67c371f1109c41cb91b37_0.lua"
  },
  {
    "conversation_hash": "c4f5ebfba9d67c371f1109c41cb91b37",
    "code_index": 2,
    "language": "Lua",
    "libraries": [],
    "code": "-- Конфигурационный файл (config.lua)\nlocal config = {\n    themes = {\n        lightTheme = {\n            background = 0xD9FFFFFF,\n            -- Другие настройки\n        },\n        darkTheme = {\n            background = 0xD9000000,\n            -- Другие настройки\n        },\n    },\n    -- Другие настройки (шрифты, параметры спидометра и т.д.)\n}\n\nreturn config",
    "filename": "c4f5ebfba9d67c371f1109c41cb91b37_2.lua"
  },
  {
    "conversation_hash": "c4f5ebfba9d67c371f1109c41cb91b37",
    "code_index": 3,
    "language": "Lua",
    "libraries": [],
    "code": "local config = require \"config\"\n\nlocal currentThemeName = \"lightTheme\"\nlocal currentTheme = config.themes[currentThemeName]\n\n-- Теперь, используя currentTheme для доступа к цветам и настройкам",
    "filename": "c4f5ebfba9d67c371f1109c41cb91b37_3.lua"
  },
  {
    "conversation_hash": "13a27a2d4d87ac9e9c496c8414e004aa",
    "code_index": 0,
    "language": "Lua",
    "libraries": [],
    "code": "-- theme1.lua\nreturn {\n    background = 0xD9FFFFFF,\n    text = 0xff000000, \n    border = 0xff000000,\n    speed1 = 0x800000FF,\n    speed2 = 0x80FF00FF,\n}\n\n-- main.lua\nlocal theme1 = require 'theme1'",
    "filename": "13a27a2d4d87ac9e9c496c8414e004aa_0.lua"
  },
  {
    "conversation_hash": "13a27a2d4d87ac9e9c496c8414e004aa",
    "code_index": 1,
    "language": "Lua",
    "libraries": [],
    "code": "-- config.lua\nreturn {\n    fonts = {\n        small = 'Arial',\n        medium = 'Arial',\n        large = 'Arial',\n        // Желательно указать все свойства, например, размер и стиль\n    },\n    speedometer = {\n        maxSpeed = 160,\n        // Остальные параметры...\n    },\n    // Другие параметры...\n}",
    "filename": "13a27a2d4d87ac9e9c496c8414e004aa_1.lua"
  },
  {
    "conversation_hash": "3b93e399e2a64688a6215698b4accf08",
    "code_index": 0,
    "language": "Lua",
    "libraries": [],
    "code": "local canvasParams = {\n    maxSpeed = 160,\n    width = 200,\n    height = 70,\n    posX = 1200,\n    posY = 730,\n    borderWidth = 1.1,\n    barParams = {\n        allign = 'center',\n        padding = 20,\n        height = 25,\n        offsetXY = 10,\n        ticks = {\n            main = {\n                milesPerTick = 20,\n                milesOffset = 0,\n                allign = 'end',\n                height = 5,\n                width = 1,\n                text = true,\n                textOffset = 8\n            },\n            secondary = {\n                milesPerTick = 20,\n                milesOffset = 10,\n                allign = 'end',\n                height = 3,\n                width = 1,\n                text = false,\n                textOffset = false\n            }\n        }\n    }\n}",
    "filename": "3b93e399e2a64688a6215698b4accf08_0.lua"
  },
  {
    "conversation_hash": "3b93e399e2a64688a6215698b4accf08",
    "code_index": 1,
    "language": "Lua",
    "libraries": [],
    "code": "for _, canvas in pairs(сanvases) do\n    renderDrawBox(canvas.posX, canvas.posY, canvas.width, canvas.height, theme.background)\n    \n    for _, bar in pairs(canvas.barParams) do\n        local width = canvas.width - (bar.padding * 2)\n        local offsetX = (bar.allign == 'start' and bar.offsetX) or \n                        (bar.allign == 'center' and bar.offsetX - width/2) or \n                        (bar.allign == 'end' and bar.offsetX - width)\n        -- продолжайте с использованием параметров из таблицы\n    end\nend",
    "filename": "3b93e399e2a64688a6215698b4accf08_1.lua"
  },
  {
    "conversation_hash": "3b93e399e2a64688a6215698b4accf08",
    "code_index": 3,
    "language": "Lua",
    "libraries": [],
    "code": "local сanvases = {\n    speedometer = {\n        maxSpeed = 160,\n        width = 200,\n        height = 70,\n        posX = 1200,\n        posY = 730,\n        borderWidth = 1.1,\n        bars = {\n            speedBar = {\n                allign = 'center', \n                padding = 20,\n                height = 25,\n                offsetX = speedometer.width / 2,\n                offsetY = 10,\n                ticks = {\n                    main = {\n                        milesPerTick = 20,\n                        milesOffset = 0,\n                        allign = 'end',\n                        height = 5,\n                        width = 1,\n                        text = true,\n                        textOffset = 8\n                    },\n                    secondary = {\n                        milesPerTick = 20,\n                        milesOffset = 10,\n                        allign = 'end',\n                        height = 3,\n                        width = 1,\n                        text = false,\n                        textOffset = false\n                    }\n                }\n            }\n        },\n        calculateSpeed = calculateSpeed\n    }\n}",
    "filename": "3b93e399e2a64688a6215698b4accf08_3.lua"
  },
  {
    "conversation_hash": "42d597db1caa40b1124198dd9454e9a3",
    "code_index": 3,
    "language": "Lua",
    "libraries": [],
    "code": "for _, canvas in pairs(сanvases) do\n    local scaledWidth = canvas.width * speedometerScale\n    local scaledHeight = canvas.height * speedometerScale\n    local scaledPosX = canvas.posX -- здесь может понадобиться корректировка позиции при масштабировании\n    local scaledPosY = canvas.posY -- аналогично, корректировка позиции\n\n    renderDrawBox(scaledPosX, scaledPosY, scaledWidth, scaledHeight, theme[canvas.color])\n    -- Остальная логика отрисовки с учетом масштабирования",
    "filename": "42d597db1caa40b1124198dd9454e9a3_3.lua"
  },
  {
    "conversation_hash": "780e5e81fbc5b46f4a8532f124475dc9",
    "code_index": 9,
    "language": "Lua",
    "libraries": [],
    "code": "-- Open communication with GPIB\nlocal gpibControl = GetGPIBControl()\n\nlocal address = 1  -- GPIB address of the Keithley 2651A\n\n-- Open connection to the instrument\nGPIB_Connect(gpibControl, address)\n\n-- Set the output voltage to 1V\nSendViaGPIB(gpibControl, \":SOUR:FUNC VOLT\")\nSendViaGPIB(gpibControl, \":SOUR:VOLT 1\")\nSendViaGPIB(gpibControl, \":OUTP ON\")\n\n-- Close connection to the instrument\nGPIB_Disconnect(gpibControl)",
    "filename": "780e5e81fbc5b46f4a8532f124475dc9_9.lua"
  },
  {
    "conversation_hash": "c014f2fefe5aa04b47fd33a0d96a9763",
    "code_index": 0,
    "language": "Lua",
    "libraries": [],
    "code": "local cars = {}\nfor i = 0, 63 do\n    cars[\"segment\" .. i] = require('nodes.cars.segment' .. i)\nend\n\nlocal peds = {}\nfor i = 0, 63 do\n    peds[\"segment\" .. i] = require('nodes.peds.segment' .. i)\nend\n\nlocal link = {}\nfor i = 0, 63 do\n    link[\"segment\" .. i] = require('nodes.link.segment' .. i)\nend",
    "filename": "c014f2fefe5aa04b47fd33a0d96a9763_0.lua"
  },
  {
    "conversation_hash": "8a6d44c46e71f93ea99706903d9d174f",
    "code_index": 0,
    "language": "Lua",
    "libraries": [],
    "code": "for i = linkID, linkID + (linkedCount-1) do\n    local linkedID = links[linkID + 1][2] + 1\n    local linkedSeg = links[linkID + 1][1] + 1\n    linkedIDs[#linkedIDs+1] = { linkedID, linkedSeg }\nend",
    "filename": "8a6d44c46e71f93ea99706903d9d174f_0.lua"
  },
  {
    "conversation_hash": "8a6d44c46e71f93ea99706903d9d174f",
    "code_index": 1,
    "language": "Lua",
    "libraries": [],
    "code": "for i = 0, linkedCount - 1 do\n    local linkIndex = linkID + i\n    if links[linkIndex] then -- Добавлена проверка на существование ссылки\n        local linkedID = links[linkIndex][2] + 1\n        local linkedSeg = links[linkIndex][1] + 1\n        linkedIDs[#linkedIDs+1] = { linkedID, linkedSeg }\n    end\nend",
    "filename": "8a6d44c46e71f93ea99706903d9d174f_1.lua"
  },
  {
    "conversation_hash": "e9f17dae7c8503dbb9c69e6b3d3a9488",
    "code_index": 0,
    "language": "Lua",
    "libraries": [],
    "code": "local cmdID = reaper.NamedCommandLookup(\"_WOL_SETSELENVHMIN\") -- Find command ID for setting min height\nlocal state = reaper.GetToggleCommandStateEx(0, cmdID) -- Get current state of the command\n\nif state == 0 then\n  reaper.Main_OnCommand(reaper.NamedCommandLookup(\"_WOL_SETSELENVHDEF\"), 0) -- Set to default height\nelse\n  reaper.Main_OnCommand(cmdID, 0) -- Set to minimum height\nend",
    "filename": "e9f17dae7c8503dbb9c69e6b3d3a9488_0.lua"
  },
  {
    "conversation_hash": "e9f17dae7c8503dbb9c69e6b3d3a9488",
    "code_index": 1,
    "language": "Lua",
    "libraries": [],
    "code": "-- Check the current state of the envelope height\nlocal env = reaper.GetSelectedEnvelope(0)\nif not env then return end -- Exit if no envelope is selected\n\nlocal br_env = reaper.BR_EnvAlloc(env, false)\nlocal _, _, _, _, _, defaultHeight = reaper.BR_EnvGetProperties(br_env)\n\n-- Assuming defaultHeight corresponds to \"minimum\" for toggling purposes\nif defaultHeight > 1 then\n    reaper.Main_OnCommand(reaper.NamedCommandLookup(\"_WOL_SETSELENVHMIN\"), 0) -- Set to minimum height\nelse\n    reaper.Main_OnCommand(reaper.NamedCommandLookup(\"_WOL_SETSELENVHDEF\"), 0) -- Set to default height\nend\n\nreaper.BR_EnvFree(br_env, false)",
    "filename": "e9f17dae7c8503dbb9c69e6b3d3a9488_1.lua"
  }
]