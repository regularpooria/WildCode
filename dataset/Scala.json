[
  {
    "conversation_hash": "eb873a2c331b6d5937833db6bd93a40d",
    "code_index": 9,
    "language": "Scala",
    "libraries": [],
    "code": "spring.datasource.url=jdbc:h2:mem:testdb\nspring.datasource.driverClassName=org.h2.Driver\nspring.datasource.username=sa\nspring.datasource.password=\n\nspring.jpa.database-platform=org.hibernate.dialect.H2Dialect\nspring.jpa.hibernate.ddl-auto=update\n\nspring.h2.console.enabled=true\nspring.h2.console.path=/h2-console\n\nspring.main.allow-bean-definition-overriding=true",
    "filename": "eb873a2c331b6d5937833db6bd93a40d_9.scala"
  },
  {
    "conversation_hash": "dc60715264a5078cf4f9f4526aa7ae43",
    "code_index": 15,
    "language": "Scala",
    "libraries": [],
    "code": "val userId = \"userId1\"\nval name = \"Item1\" // replace with the actual item name\nval quantity = 5 // replace with the actual quantity\nval expenses = 250 // replace with the actual expenses for given quantity and item\n\ninitUserExpenses(userId, name, quantity, expenses)",
    "filename": "dc60715264a5078cf4f9f4526aa7ae43_15.scala"
  },
  {
    "conversation_hash": "bb582bcd378265a1cbb8115849167b32",
    "code_index": 3,
    "language": "Scala",
    "libraries": [],
    "code": "// Create a reference to a document\nval docRef = db.collection(\"cities\").document(\"LA\")\n\n// Set the data and merge it with existing fields if document exists\nval data = hashMapOf(\n    \"name\" to \"Los Angeles\",\n    \"state\" to \"CA\",\n    \"country\" to \"USA\",\n    \"population\" to 4000000\n)\n\ndocRef.set(data, SetOptions.merge())\n        .addOnSuccessListener { Log.d(TAG, \"Document updated successfully!\") }\n        .addOnFailureListener { e -> Log.w(TAG, \"Error updating document\", e) }",
    "filename": "bb582bcd378265a1cbb8115849167b32_3.scala"
  },
  {
    "conversation_hash": "bb582bcd378265a1cbb8115849167b32",
    "code_index": 8,
    "language": "Scala",
    "libraries": [],
    "code": "val dailyExpensesRef = firestore\n    .collection(\"expenses\")\n    .document(\"Yearly/Monthly/monthly_expenses/Weekly/weekly_expenses/Daily/daily_expenses\")\n\ndailyExpensesRef.update(mapOf(\n    \"field1.value1\" to updatedValue1,\n    \"field2.value2\" to updatedValue2,\n    \"field3.value3\" to updatedValue3\n)).addOnSuccessListener {\n    Log.d(TAG, \"Document successfully updated!\")\n}.addOnFailureListener {\n    Log.e(TAG, \"Error updating document\", it)\n}",
    "filename": "bb582bcd378265a1cbb8115849167b32_8.scala"
  },
  {
    "conversation_hash": "bb582bcd378265a1cbb8115849167b32",
    "code_index": 9,
    "language": "Scala",
    "libraries": [],
    "code": "val dailyExpensesRef = firestore\n    .collection(\"expenses\")\n    .document(\"Yearly/Monthly/monthly_expenses/Weekly/weekly_expenses/Daily/daily_expenses\")\n\ndailyExpensesRef.update(mapOf(\n    \"field1\" to FieldValue.arrayUnion(\"new value 1\", \"new value 2\")\n)).addOnSuccessListener {\n    Log.d(TAG, \"Document successfully updated!\")\n}.addOnFailureListener {\n    Log.e(TAG, \"Error updating document\", it)\n}",
    "filename": "bb582bcd378265a1cbb8115849167b32_9.scala"
  },
  {
    "conversation_hash": "bb582bcd378265a1cbb8115849167b32",
    "code_index": 10,
    "language": "Scala",
    "libraries": [],
    "code": "val dailyExpensesRef = firestore\n    .collection(\"expenses\")\n    .document(\"Yearly/Monthly/monthly_expenses/Weekly/weekly_expenses/Daily/daily_expenses\")\n\ndailyExpensesRef.update(mapOf(\n    \"field1\" to FieldValue.arrayRemove(\"remove value 1\", \"remove value 2\")\n)).addOnSuccessListener {\n    Log.d(TAG, \"Document successfully updated!\")\n}.addOnFailureListener {\n    Log.e(TAG, \"Error updating document\", it)\n}",
    "filename": "bb582bcd378265a1cbb8115849167b32_10.scala"
  },
  {
    "conversation_hash": "86ea16227c57d015ff8dfd37d9dbd370",
    "code_index": 5,
    "language": "Scala",
    "libraries": [],
    "code": "service cloud.firestore {\n  match /databases/{database}/documents {\n      // Allow anyone to read the businesses collection.\n      match /businesses/{document=**} {\n        allow read: if true;\n      }\n        \n      // Allow authenticated users to add or update businesses.\n      match /businesses/{document=**} {\n        allow create, update: if request.auth.uid != null;\n      }\n\n      // Deny all delete operations.\n      match /businesses/{document=**} {\n        allow delete: if false;\n      }\n  }\n}",
    "filename": "86ea16227c57d015ff8dfd37d9dbd370_5.scala"
  },
  {
    "conversation_hash": "e2eaa1c57100b28647c38258259d8b3a",
    "code_index": 2,
    "language": "Scala",
    "libraries": [],
    "code": "val yearlyTask = db.collection(\"expenses\")\n    .document(userId)\n    .collection(\"yearly\")\n    .document(currentDate[Calendar.YEAR].toString())\n    .set(initData)\n\nval monthlyTask = db.collection(\"expenses\")\n    .document(userId)\n    .collection(\"monthly\")\n    .document(currentMonth())\n    .set(initData)\n\nval weeklyTask = db.collection(\"expenses\")\n    .document(userId)\n    .collection(\"weekly\")\n    .document(currentWeek())\n    .set(initData)\n\nval dailyTask = db.collection(\"expenses\")\n    .document(userId)\n    .collection(\"daily\")\n    .document(currentDay())\n    .set(initData)\n\nhandleTask(yearlyTask, \"Yearly data saved successfully\", \"Error saving yearly data\")\nhandleTask(monthlyTask, \"Monthly data saved successfully\", \"Error saving monthly data\")\nhandleTask(weeklyTask, \"Weekly data saved successfully\", \"Error saving weekly data\")\nhandleTask(dailyTask, \"Daily data saved successfully\", \"Error saving daily data\")",
    "filename": "e2eaa1c57100b28647c38258259d8b3a_2.scala"
  },
  {
    "conversation_hash": "e2eaa1c57100b28647c38258259d8b3a",
    "code_index": 3,
    "language": "Scala",
    "libraries": [
      "com.google.firebase.firestore.FieldValue",
      "com.google.firebase.firestore.FirebaseFirestore"
    ],
    "code": "import com.google.firebase.firestore.FieldValue\nimport com.google.firebase.firestore.FirebaseFirestore\n\nval db = FirebaseFirestore.getInstance()\nval expensesRef = db.collection(\"expenses\").document(userId)\n\nval newData = hashMapOf(\n    \"expenses\" to FieldValue.increment(1),\n    \"quantity\" to FieldValue.increment(1)\n)\n\n// Performs addition if the fields already exist or creates new fields if they don't.\nexpensesRef.update(newData)\n    .addOnSuccessListener {\n        Log.d(\"TAG\", \"Document updated successfully\")\n    }\n    .addOnFailureListener { exception ->\n        Log.e(\"TAG\", \"Error updating document\", exception)\n    }",
    "filename": "e2eaa1c57100b28647c38258259d8b3a_3.scala"
  },
  {
    "conversation_hash": "e2eaa1c57100b28647c38258259d8b3a",
    "code_index": 4,
    "language": "Scala",
    "libraries": [
      "com.google.firebase.firestore.FieldValue",
      "com.google.firebase.firestore.FirebaseFirestore"
    ],
    "code": "import com.google.firebase.firestore.FieldValue\nimport com.google.firebase.firestore.FirebaseFirestore\n\n// Replace these values with the actual name and quantity of the new item\nval newItemName = \"CBA\"\nval newItemQuantity = 1\n\n// Replace the document id with your userId\nval userId = \"your_user_id\"\n\nval db = FirebaseFirestore.getInstance()\n\nval docRef = db.collection(\"expenses\").document(userId)\n\ndocRef.get()\n    .addOnSuccessListener { document ->\n        if (document.exists()) {\n            val items = document.get(\"items\") as MutableList<HashMap<String, Any>>\n\n            var itemFound = false\n            items.forEach { item ->\n                if (item[\"name\"] == newItemName) {\n                    item[\"quantity\"] = (item[\"quantity\"] as Int) + newItemQuantity\n                    itemFound = true\n                }\n            }\n\n            if (!itemFound) {\n                val newItem = hashMapOf(\"name\" to newItemName, \"quantity\" to newItemQuantity)\n                items.add(newItem)\n            }\n\n            docRef.update(\"items\", items)\n                .addOnSuccessListener {\n                    Log.d(\"TAG\", \"Document updated successfully\")\n                }\n                .addOnFailureListener { exception ->\n                    Log.e(\"TAG\", \"Error updating document\", exception)\n                }\n        } else {\n            Log.d(\"TAG\", \"No such document\")\n        }\n    }\n    .addOnFailureListener { exception ->\n        Log.e(\"TAG\", \"Error getting the document\", exception)\n    }",
    "filename": "e2eaa1c57100b28647c38258259d8b3a_4.scala"
  },
  {
    "conversation_hash": "e2eaa1c57100b28647c38258259d8b3a",
    "code_index": 13,
    "language": "Scala",
    "libraries": [],
    "code": "val updateData: Map<String, Any> = hashMapOf(\n    \"name\" to names,\n    \"quantity\" to quantities,\n    \"expenses\" to expenses\n)\n\ndocRef.update(updateData)\n    .addOnSuccessListener {\n        Log.d(\"TAG\", \"Document updated successfully\")\n    }\n    .addOnFailureListener { exception ->\n        Log.e(\"TAG\", \"Error updating document\", exception)\n    }",
    "filename": "e2eaa1c57100b28647c38258259d8b3a_13.scala"
  },
  {
    "conversation_hash": "e2eaa1c57100b28647c38258259d8b3a",
    "code_index": 14,
    "language": "Scala",
    "libraries": [],
    "code": "val updateData: Map<String, Any> = hashMapOf(\n    \"name\" to mutableNames,\n    \"quantity\" to mutableQuantities,\n    \"expenses\" to mutableExpenses\n)\n\ndocRef.update(updateData)\n    .addOnSuccessListener {\n        Log.d(\"TAG\", \"Document updated successfully\")\n    }\n    .addOnFailureListener { exception ->\n        Log.e(\"TAG\", \"Error updating document\", exception)\n    }",
    "filename": "e2eaa1c57100b28647c38258259d8b3a_14.scala"
  },
  {
    "conversation_hash": "e020643b30612cf889f63acc91eb4c75",
    "code_index": 8,
    "language": "Scala",
    "libraries": [],
    "code": "firestore.runTransaction { transaction ->\n    // ...Rest of the transaction\n    // Update the stock in the parent collection\n    transaction.update(stockRef, name, FieldValue.increment(-stockChange.toLong()))\n}.addOnSuccessListener {\n    // ...\n}",
    "filename": "e020643b30612cf889f63acc91eb4c75_8.scala"
  },
  {
    "conversation_hash": "e020643b30612cf889f63acc91eb4c75",
    "code_index": 14,
    "language": "Scala",
    "libraries": [],
    "code": "firestore.runTransaction { transaction ->\n    if (document.exists()) {\n        transaction.update(docRef, updateData)\n        transaction.update(docRef, \"total\", FieldValue.increment(expense))\n    } else {\n        transaction.set(docRef, updateData + mapOf(\"total\" to expense))\n    }\n\n    // Update the stock field in the inventory document\n    transaction.update(stockRef, \"stock\", FieldValue.increment(inventoryStockChange.toLong()))\n}.addOnSuccessListener {\n    // ...\n}",
    "filename": "e020643b30612cf889f63acc91eb4c75_14.scala"
  },
  {
    "conversation_hash": "e020643b30612cf889f63acc91eb4c75",
    "code_index": 18,
    "language": "Scala",
    "libraries": [],
    "code": "val db = FirebaseFirestore.getInstance()\nval docRef = db\n    .collection(\"someCollection\")\n    .document(\"someDocument\")\n\ndocRef.get()\n    .addOnSuccessListener { document ->\n        if (document != null) {\n            Log.d(\"TAG\", \"DocumentSnapshot data: ${document.data}\")\n        } else {\n            Log.d(\"TAG\", \"No such document\")\n        }\n    }\n    .addOnFailureListener { exception ->\n        Log.e(\"TAG\", \"Error getting document\", exception)\n    }",
    "filename": "e020643b30612cf889f63acc91eb4c75_18.scala"
  },
  {
    "conversation_hash": "c2d79cace6c1e6eef8fc8036dfa71981",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "import { Construct, Stack, StackProps } from 'aws-cdk-lib';\nimport { Cluster, ContainerImage, FargateService } from 'aws-cdk-lib/aws-ecs';\n\nexport class ECSStack extends Stack {\n  constructor(scope: Construct, id: string, props?: StackProps) {\n    super(scope, id, props);\n\n    const cluster = new Cluster(this, 'Cluster');\n\n    const fargateService = new FargateService(this, 'Service', {\n      cluster,\n      taskDefinition: imageTaskDefinition,\n      desiredCount: 2,\n      serviceName: 'my-service',\n    });\n  }\n}",
    "filename": "c2d79cace6c1e6eef8fc8036dfa71981_1.scala"
  },
  {
    "conversation_hash": "205aeb6792d7abda9f1ecfb114d7bf9b",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "node_modules\nnpm-debug.log\n.dockerignore\n.dockerenv\nDockerfile",
    "filename": "205aeb6792d7abda9f1ecfb114d7bf9b_1.scala"
  },
  {
    "conversation_hash": "493df7191ff8a1aeac01137e51a18aeb",
    "code_index": 4,
    "language": "Scala",
    "libraries": [],
    "code": "val intent = intent\nval uri: Uri? = intent?.data\n\nif (uri != null) {\n    val host: String? = uri.host // получаем имя хоста\n    val query: String? = uri.query // получаем параметры ссылки\n    \n    // Дальнейшая обработка полученных данных\n}",
    "filename": "493df7191ff8a1aeac01137e51a18aeb_4.scala"
  },
  {
    "conversation_hash": "07ad16b4621469b3f48a816d6d14db1c",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "sealed class Expr {\n    data class Num(val value: Int): Expr()\n    data class Str(val value: String): Expr()\n    data class Var(val name: String): Expr()\n    data class BinOp(val op: String, val left: Expr, val right: Expr): Expr()\n    data class FunCall(val name: String, val args: List<Expr>): Expr()\n    data class Assign(val name: String, val value: Expr): Expr()\n}",
    "filename": "07ad16b4621469b3f48a816d6d14db1c_1.scala"
  },
  {
    "conversation_hash": "a3487bf32bf01052cf4eee3d46e0cba0",
    "code_index": 2,
    "language": "Scala",
    "libraries": [],
    "code": "val sharedPrefs = sharedViewModel.prefs\nval access = sharedPrefs.getString(\"jwt\", null)\nif (access != null) {\n    // Do something with the access token\n} else {\n    Log.d(TAG, \"Value of access is null\")\n}",
    "filename": "a3487bf32bf01052cf4eee3d46e0cba0_2.scala"
  },
  {
    "conversation_hash": "5e99de6c81d415b6ef51da844adfc5b4",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "enum class TimePeriod {\n    WEEKLY,\n    MONTHLY,\n    YEARLY\n}",
    "filename": "5e99de6c81d415b6ef51da844adfc5b4_1.scala"
  },
  {
    "conversation_hash": "5e99de6c81d415b6ef51da844adfc5b4",
    "code_index": 8,
    "language": "Scala",
    "libraries": [
      "com.patrykandpatrick.framework.Entry"
    ],
    "code": "import com.patrykandpatrick.framework.Entry\n\ndata class Report(\n    val title: String,\n    val data: List<Entry>\n)",
    "filename": "5e99de6c81d415b6ef51da844adfc5b4_8.scala"
  },
  {
    "conversation_hash": "c11ce47c421f4ea20347ea6732807fb1",
    "code_index": 4,
    "language": "Scala",
    "libraries": [],
    "code": "val inputData = workDataOf(\"prefs\" to mySharedPreferences)\n\nval updateLocationWorkRequest = OneTimeWorkRequestBuilder<UpdateLocationWorker>()\n    .setInputData(inputData)\n    .build()\n\nworkManager.enqueue(updateLocationWorkRequest)",
    "filename": "c11ce47c421f4ea20347ea6732807fb1_4.scala"
  },
  {
    "conversation_hash": "c11ce47c421f4ea20347ea6732807fb1",
    "code_index": 7,
    "language": "Scala",
    "libraries": [],
    "code": "// Define a constant String for the name of your shared preferences file\nprivate const val SHARED_PREFERENCES_NAME = \"MySharedPreferences\"\n\n// Create an instance of the SharedPreferences interface:\nval mySharedPreferences = context.getSharedPreferences(SHARED_PREFERENCES_NAME, Context.MODE_PRIVATE)",
    "filename": "c11ce47c421f4ea20347ea6732807fb1_7.scala"
  },
  {
    "conversation_hash": "80cb52be8873c38a10814f4f1d78c390",
    "code_index": 2,
    "language": "Scala",
    "libraries": [
      "androidx.compose.runtime.getValue",
      "androidx.compose.runtime.mutableStateOf",
      "androidx.compose.runtime.setValue",
      "androidx.lifecycle.ViewModel",
      "androidx.lifecycle.viewModelScope",
      "com.google.firebase.firestore.FirebaseFirestore",
      "com.patrykandpatrick.vico.LineEntry",
      "java.time.LocalDate",
      "java.time.ZoneId",
      "kotlinx.coroutines.launch"
    ],
    "code": "import androidx.compose.runtime.getValue\nimport androidx.compose.runtime.mutableStateOf\nimport androidx.compose.runtime.setValue\nimport androidx.lifecycle.ViewModel\nimport androidx.lifecycle.viewModelScope\nimport com.google.firebase.firestore.FirebaseFirestore\nimport com.patrykandpatrick.vico.LineEntry\nimport kotlinx.coroutines.launch\nimport java.time.LocalDate\nimport java.time.ZoneId",
    "filename": "80cb52be8873c38a10814f4f1d78c390_2.scala"
  },
  {
    "conversation_hash": "a2b3ffde3a4721314e3808ce31ba4937",
    "code_index": 3,
    "language": "Scala",
    "libraries": [],
    "code": "// Collect a treasure\nplayer.collides(\"treasure\", (t) => {\n  destroy(t)\n  score += 10\n  scoreLabel.text = \"Score: \" + score\n})",
    "filename": "a2b3ffde3a4721314e3808ce31ba4937_3.scala"
  },
  {
    "conversation_hash": "6ef5a1576d3dec54e994e985f702f17a",
    "code_index": 3,
    "language": "Scala",
    "libraries": [
      "org.apache.spark.sql.SparkSession",
      "spark.implicits._"
    ],
    "code": "import org.apache.spark.sql.SparkSession\n\n// 创建 SparkSession\nval spark = SparkSession.builder().appName(\"array-to-df\").getOrCreate()\n\n// 创建一个整数数组\nval data = Array(1, 2, 3, 4, 5)\n\n// 将数组转换为RDD\nval rdd = spark.sparkContext.parallelize(data)\n\n// 将 RDD 转换为 DataFrame\nimport spark.implicits._\nval df = rdd.toDF(\"id\")\n\n// 展示 DataFrame 中的数据\ndf.show()",
    "filename": "6ef5a1576d3dec54e994e985f702f17a_3.scala"
  },
  {
    "conversation_hash": "6ef5a1576d3dec54e994e985f702f17a",
    "code_index": 4,
    "language": "Scala",
    "libraries": [
      "org.apache.spark.sql.SparkSession",
      "spark.implicits._"
    ],
    "code": "import org.apache.spark.sql.SparkSession\n\n// 创建 SparkSession\nval spark = SparkSession.builder().appName(\"array-to-df\").getOrCreate()\n\n// 创建一个包含三个元素的数组\nval data = Array(\"apple\", \"banana\", \"orange\")\n\n// 转换数组为 DataFrame\nimport spark.implicits._\nval df = data.toDF(\"fruit\")\n\n// 展示 DataFrame 中的数据\ndf.show()",
    "filename": "6ef5a1576d3dec54e994e985f702f17a_4.scala"
  },
  {
    "conversation_hash": "6ef5a1576d3dec54e994e985f702f17a",
    "code_index": 5,
    "language": "Scala",
    "libraries": [
      "org.apache.spark.sql.",
      "org.apache.spark.sql.types."
    ],
    "code": "import org.apache.spark.sql.types.{IntegerType, StringType, StructField, StructType}\nimport org.apache.spark.sql.{Row, SparkSession}\n\n// 创建 SparkSession\nval spark = SparkSession.builder().appName(\"array-to-df\").getOrCreate()\n\n// 创建数据\nval data = Seq(\n  Row(1, \"apple\", 0.32),\n  Row(2, \"banana\", 0.48),\n  Row(3, \"orange\", 0.26)\n)\n\n// 创建模式\nval schema = StructType(Array(\n  StructField(\"id\", IntegerType, true),\n  StructField(\"fruit\", StringType, true),\n  StructField(\"price\", DoubleType, true)\n))\n\n// 创建 DataFrame\nval df = spark.createDataFrame(spark.sparkContext.parallelize(data), schema)\n\n// 展示 DataFrame 中的数据\ndf.show()",
    "filename": "6ef5a1576d3dec54e994e985f702f17a_5.scala"
  },
  {
    "conversation_hash": "6ef5a1576d3dec54e994e985f702f17a",
    "code_index": 6,
    "language": "Scala",
    "libraries": [
      "org.apache.spark.sql.SparkSession"
    ],
    "code": "import org.apache.spark.sql.SparkSession\n\n// 创建 SparkSession\nval spark = SparkSession.builder()\n  .appName(\"join-tables\")\n  .getOrCreate()\n\n// 从数据库中读取数据，创建DataFrame。\nval df1 = spark.read.jdbc(url, \"table1\", connectionProperties)\nval df2 = spark.read.jdbc(url, \"table2\", connectionProperties)\n\n// 将两个DataFrame按照主键字段连接。\nval joinedDf = df1.join(df2, Seq(\"id\", \"column1\", \"column2\"))\n\n// 比较两个表中相同字段，筛选出差异数据。\nval diffDf = joinedDf.filter($\"table1.field1\" =!= $\"table2.field1\" || $\"table1.field2\" =!= $\"table2.field2\")\n\n// 展示差异数据\ndiffDf.show()",
    "filename": "6ef5a1576d3dec54e994e985f702f17a_6.scala"
  },
  {
    "conversation_hash": "21c5fea4264a8b396a2c37598841a8af",
    "code_index": 6,
    "language": "Scala",
    "libraries": [],
    "code": "val df1 = spark.read.format(\"csv\").load(\"path/to/file1.csv\")\nval df2 = spark.read.format(\"csv\").load(\"path/to/file2.csv\")\n\nval result = df1.join(df2, Seq(\"key\"))\n                .select(df1(\"key\"), \n                        df1(\"value\").as(\"value1\"), \n                        df2(\"value\").as(\"value2\"))",
    "filename": "21c5fea4264a8b396a2c37598841a8af_6.scala"
  },
  {
    "conversation_hash": "21c5fea4264a8b396a2c37598841a8af",
    "code_index": 7,
    "language": "Scala",
    "libraries": [],
    "code": "val df1 = spark.read.format(\"csv\").load(\"path/to/file1.csv\")\nval df2 = spark.read.format(\"csv\").load(\"path/to/file2.csv\")\n\nval result = df1.join(df2, Seq(\"key\"))\n                .select(col(\"key\"), \n                        col(\"value\").alias(\"value1\"), \n                        col(\"value\").alias(\"value2\"))",
    "filename": "21c5fea4264a8b396a2c37598841a8af_7.scala"
  },
  {
    "conversation_hash": "21c5fea4264a8b396a2c37598841a8af",
    "code_index": 8,
    "language": "Scala",
    "libraries": [],
    "code": "val df1 = spark.read.format(\"csv\").load(\"path/to/file1.csv\")\nval df2 = spark.read.format(\"csv\").load(\"path/to/file2.csv\")\n\nval df1Renamed = df1.withColumnRenamed(\"value\", \"value1\")\nval df2Renamed = df2.withColumnRenamed(\"value\", \"value2\")\n\nval result = df1Renamed.join(df2Renamed, Seq(\"key\"))\n                .select(col(\"key\"), \n                        col(\"value1\"), \n                        col(\"value2\"))",
    "filename": "21c5fea4264a8b396a2c37598841a8af_8.scala"
  },
  {
    "conversation_hash": "a26c34033f21043c0134e62509e1058a",
    "code_index": 2,
    "language": "Scala",
    "libraries": [],
    "code": "import { Component } from \"@angular/core\";\nimport { ICellRendererAngularComp } from \"ag-grid-angular\";\n\n@Component({\n    selector: \"app-custom-renderer\",\n    template: `\n    <div>\n        {{ params.value }}\n    </div>\n    `\n})\nexport class CustomRendererComponent implements ICellRendererAngularComp {\n    public params: any;\n\n    agInit(params: any): void {\n        this.params = params;\n    }\n\n    refresh(params: any): boolean {\n        return true;\n    }\n}",
    "filename": "a26c34033f21043c0134e62509e1058a_2.scala"
  },
  {
    "conversation_hash": "65f85b5b7a22106a3e50697a343ce9c4",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "val df = Seq(\n  (\"Alice\", Array(\"A\", \"B\")),\n  (\"Bob\", Array(\"C\", \"D\"))\n).toDF(\"name\", \"items\")\n\nval explodeDf = df.select($\"name\", explode($\"items\").as(\"item\"))\nexplodeDf.show()\n\n//输出结果\n+-----+----+\n| name|item|\n+-----+----+\n|Alice|   A|\n|Alice|   B|\n|  Bob|   C|\n|  Bob|   D|\n+-----+----+",
    "filename": "65f85b5b7a22106a3e50697a343ce9c4_1.scala"
  },
  {
    "conversation_hash": "65f85b5b7a22106a3e50697a343ce9c4",
    "code_index": 2,
    "language": "Scala",
    "libraries": [],
    "code": "val df = Seq(\n  (\"Alice\", Array(\"A\", \"B\"), Array(1, 2)),\n  (\"Bob\", Array(\"C\", \"D\"), Array(3, 4))\n).toDF(\"name\", \"items\", \"values\")\n\nval explodeDf = df\n  .select($\"name\", explode($\"items\").as(\"item\"), explode($\"values\").as(\"value\"))\nexplodeDf.show()\n\n//输出结果\n+-----+----+-----+\n| name|item|value|\n+-----+----+-----+\n|Alice|   A|    1|\n|Alice|   A|    2|\n|Alice|   B|    1|\n|Alice|   B|    2|\n|  Bob|   C|    3|\n|  Bob|   C|    4|\n|  Bob|   D|    3|\n|  Bob|   D|    4|\n+-----+----+-----+",
    "filename": "65f85b5b7a22106a3e50697a343ce9c4_2.scala"
  },
  {
    "conversation_hash": "8efadaf6078ba5ea98e652edb14d54cb",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "val schema = StructType(Seq(\n  StructField(\"Name\", StringType, true),\n  StructField(\"Age\", IntegerType, true),\n  StructField(\"City\", StringType, true)\n))",
    "filename": "8efadaf6078ba5ea98e652edb14d54cb_1.scala"
  },
  {
    "conversation_hash": "8efadaf6078ba5ea98e652edb14d54cb",
    "code_index": 2,
    "language": "Scala",
    "libraries": [],
    "code": "val data = spark.createDataFrame(Seq(\n  (\"Alice\", 25, \"New York\"),\n  (\"Bob\", 30, \"Boston\"),\n  (\"Claire\", 28, \"San Diego\")\n)).toDF(schema.fields.map(_.name): _*)",
    "filename": "8efadaf6078ba5ea98e652edb14d54cb_2.scala"
  },
  {
    "conversation_hash": "50f538ccbc3441bb6b8865fa65d1d0d9",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "val df: DataFrame = Seq(\n  (1, \"a\", 10, 11),\n  (2, \"b\", 20, 21),\n  (3, \"c\", 30, 31)\n).toDF(\"id\", \"name\", \"col1\", \"col2\")\n\ndf.show()",
    "filename": "50f538ccbc3441bb6b8865fa65d1d0d9_1.scala"
  },
  {
    "conversation_hash": "50f538ccbc3441bb6b8865fa65d1d0d9",
    "code_index": 3,
    "language": "Scala",
    "libraries": [],
    "code": "val meltedDf = df.select(\n  $\"id\",\n  $\"name\",\n  array(struct(lit(\"col1\").alias(\"variable\"), $\"col1\".alias(\"value\")),\n    struct(lit(\"col2\").alias(\"variable\"), $\"col2\".alias(\"value\"))\n  ).alias(\"vars\")\n).select($\"id\", $\"name\", $\"vars.*\")\n\nmeltedDf.show()",
    "filename": "50f538ccbc3441bb6b8865fa65d1d0d9_3.scala"
  },
  {
    "conversation_hash": "e99fbeee20d0d6ccad942763661c511e",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "val df = Seq(\n  (1, \"John\", \"Doe\"),\n  (2, \"Jane\", \"Smith\"),\n  (3, \"Bob\", \"Johnson\")\n).toDF(\"id\", \"first_name\", \"last_name\")",
    "filename": "e99fbeee20d0d6ccad942763661c511e_0.scala"
  },
  {
    "conversation_hash": "131ef02b6607739210b706dbf307581c",
    "code_index": 3,
    "language": "Scala",
    "libraries": [],
    "code": "logging.level.jdbc=INFO\n    logging.level.jdbc.resultset=DEBUG\n    logging.level.jdbc.audit=INFO\n    logging.level.jdbc.sqlonly=INFO\n    logging.level.jdbc.resultsettable=INFO\n    logging.level.org.springframework.jdbc.core=DEBUG\n    logging.level.org.springframework.jdbc.datasource=DEBUG\n    logging.level.org.springframework.transaction=TRACE\n    logging.level.org.springframework.transaction.jta=TRACE\n    logging.level.org.hibernate=TRACE\n    logging.level.org.hibernate.SQL=TRACE\n    logging.level.org.hibernate.type.descriptor.sql=TRACE\n    logging.level.org.hibernate.internal=TRACE\n    logging.level.org.hibernate.type.descriptor=TRACE\n    logging.level.org.hibernate.engine=TRACE\n    logging.level.org.hibernate.validator=TRACE\n    logging.level.org.springframework.util=TRACE\n    logging.level.org.springframework.context.annotation=TRACE\n    logging.level.org.springframework.boot.autoconfigure=TRACE\n    logging.level.org.springframework.web.servlet.DispatcherServlet=TRACE\n    logging.level.org.springframework.web.filter.RequestContextFilter=TRACE\n    logging.config=log4jdbc/log4jdbc-log4j2.properties",
    "filename": "131ef02b6607739210b706dbf307581c_3.scala"
  },
  {
    "conversation_hash": "f7d9b34cebdff41b719b5b3e33b9b24e",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "@mixin center-block() {\n  margin-left: auto;\n  margin-right: auto;\n  display: block;\n}\n\n// 转换为less\n.center-block() {\n  margin-left: auto;\n  margin-right: auto;\n  display: block;\n}",
    "filename": "f7d9b34cebdff41b719b5b3e33b9b24e_1.scala"
  },
  {
    "conversation_hash": "8b46ae48c340d8d93fa8189482fe0e04",
    "code_index": 5,
    "language": "Scala",
    "libraries": [
      "org.apache.spark.sql.SparkSession"
    ],
    "code": "import org.apache.spark.sql.SparkSession\n\nval spark: SparkSession = SparkSession.builder()\n      .appName(\"read-athena-data\")\n      .config(\"hive.metastore.client.factory.class\", \"com.amazonaws.glue.catalog.metastore.AWSGlueDataCatalogHiveClientFactory\")\n      .getOrCreate()",
    "filename": "8b46ae48c340d8d93fa8189482fe0e04_5.scala"
  },
  {
    "conversation_hash": "8b46ae48c340d8d93fa8189482fe0e04",
    "code_index": 7,
    "language": "Scala",
    "libraries": [],
    "code": "val sourceDataFrame = spark.read.format(\"awsdatacatalog\")\n      .option(\"catalog\", \"AwsDataCatalog\")\n      .option(\"database\", database)\n      .option(\"table\", tableName)\n      .load()",
    "filename": "8b46ae48c340d8d93fa8189482fe0e04_7.scala"
  },
  {
    "conversation_hash": "f2d264e7b1ec61a64295f58a0b0efe0a",
    "code_index": 0,
    "language": "Scala",
    "libraries": [
      "java.time._",
      "java.time.temporal._"
    ],
    "code": "import java.time._\nimport java.time.temporal._\n\nval timeZone = ZoneId.of(\"Asia/Shanghai\")\n\n// 获取当前时区的当前日期和时间\nval now = LocalDateTime.now(timeZone)\n\n// 获取当前日期\nval today = now.toLocalDate()\n\n// 获取前一天的日期\nval yesterday = today.minus(1, ChronoUnit.DAYS)\n\n// 构造21点的时间\nval twentyOne = LocalTime.of(21, 0)\n\n// 合并日期和时间\nval dateTime = LocalDateTime.of(yesterday, twentyOne)\n\n// 转换到指定时区\nval zdt = ZonedDateTime.of(dateTime, timeZone)\n\n// 获取时间戳\nval timestamp = zdt.toEpochSecond()",
    "filename": "f2d264e7b1ec61a64295f58a0b0efe0a_0.scala"
  },
  {
    "conversation_hash": "f2d264e7b1ec61a64295f58a0b0efe0a",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "val conf = new SparkConf()\n            .setAppName(\"your_app_name\")\n            .setMaster(\"spark://your_spark_master_url\")\n            .set(\"spark.executor.instances\", \"1\")\n\nval sc = new SparkContext(conf)",
    "filename": "f2d264e7b1ec61a64295f58a0b0efe0a_1.scala"
  },
  {
    "conversation_hash": "f2d264e7b1ec61a64295f58a0b0efe0a",
    "code_index": 2,
    "language": "Scala",
    "libraries": [],
    "code": "val conf = new SparkConf().setAppName(\"App Name\").setMaster(\"local\")\nif (someCondition) {\n  conf.set(\"spark.executor.cores\", \"4\")\n} else {\n  conf.set(\"spark.executor.cores\", \"2\")\n}\n\nval sc = new SparkContext(conf)",
    "filename": "f2d264e7b1ec61a64295f58a0b0efe0a_2.scala"
  },
  {
    "conversation_hash": "603f6b3af4ae62f24e8c10d90396648a",
    "code_index": 6,
    "language": "Scala",
    "libraries": [
      "org.apache.spark.SparkConf",
      "org.apache.spark.sql.SparkSession"
    ],
    "code": "import org.apache.spark.SparkConf\nimport org.apache.spark.sql.SparkSession\n\nval conf = new SparkConf()\n  .setAppName(\"YourAppName\")\n  .set(\"spark.executor.instances\", \"8\")\n  .set(\"spark.executor.memory\", \"4g\")\n  .set(\"spark.executor.cores\", \"4\")\n\nval spark = SparkSession.builder().config(conf).getOrCreate()",
    "filename": "603f6b3af4ae62f24e8c10d90396648a_6.scala"
  },
  {
    "conversation_hash": "cf8d6c49ad2d419a36fa59bf6246b7cb",
    "code_index": 2,
    "language": "Scala",
    "libraries": [
      "com.amazonaws.services.glue.GlueContext",
      "com.amazonaws.services.glue.util.GlueArgParser",
      "com.amazonaws.services.glue.util.Job",
      "org.apache.spark.SparkContext",
      "org.apache.spark.sql.SparkSession"
    ],
    "code": "import com.amazonaws.services.glue.GlueContext\nimport com.amazonaws.services.glue.util.GlueArgParser\nimport com.amazonaws.services.glue.util.Job\nimport org.apache.spark.SparkContext\nimport org.apache.spark.sql.SparkSession\n    \n// 创建 Spark 会话\nval spark: SparkSession = SparkSession.builder().getOrCreate()\n    \n// 创建 Glue Context\nval sc: SparkContext = spark.sparkContext\nval glueContext: GlueContext = new GlueContext(sc)\n\n// 设置 S3 存储桶位置\nval input_bucket = \"your-input-bucket\"\nval output_bucket = \"your-output-bucket\"\nval input_path = \"s3://\" + input_bucket + \"/input-data\"\nval output_path = \"s3://\" + output_bucket + \"/output-data\"\n\n// 读取数据，并将其保存到 S3 中\nval source_data = glueContext\n    .getCatalogSource(database = \"your-database\", tableName = \"your-input-table\")\n    .getDynamicFrame()\n        \nval target_data = glueContext\n    .getSinkWithFormat(\n        connectionType = \"s3\",\n        options = Map(\n            \"path\" -> output_path, \n            \"partitionKeys\" -> Seq(\"dt\", \"country\")),\n        format = \"parquet\")\n    .writeDynamicFrame(source_data)",
    "filename": "cf8d6c49ad2d419a36fa59bf6246b7cb_2.scala"
  },
  {
    "conversation_hash": "cf8d6c49ad2d419a36fa59bf6246b7cb",
    "code_index": 3,
    "language": "Scala",
    "libraries": [
      "com.amazonaws.services.glue.GlueContext",
      "org.apache.spark.SparkContext",
      "org.apache.spark.sql.SparkSession"
    ],
    "code": "import org.apache.spark.sql.SparkSession\n  import com.amazonaws.services.glue.GlueContext\n  import org.apache.spark.SparkContext\n  \n  val spark: SparkSession = SparkSession.builder().getOrCreate()\n  \n  val sc: SparkContext = spark.sparkContext\n  val glueContext: GlueContext = new GlueContext(sc)\n  \n  spark.conf.set(\"spark.sql.catalogImplementation\", \"hive\")\n  spark.conf.set(\"hive.metastore.uris\", \"thrift://glue_catalog_endpoint:port\")\n  \n  val dbName = \"your-db-name\"\n  val tableName = \"your-table-name\"\n  \n  // 从数据目录中读取表数据\n  val dbTable = glueContext.getCatalogSource(database = dbName, tableName = tableName)\n    .getDynamicFrame()\n  dbTable.printSchema()",
    "filename": "cf8d6c49ad2d419a36fa59bf6246b7cb_3.scala"
  },
  {
    "conversation_hash": "ed9cb311019e2a71e5267df6997bd07a",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "when (val result = downloadFile(\n            dir,\n            url,\n            \"stmobile-conf-nsc.zip\"\n        )) {\n            is Result.Failure -> {\n                mLogger.error(result.error) { \"NSF Config download failed due to error: \" }\n\n                throw IOException(\"Could not create directory $dir\")\n            }\n            is Result.Success -> {\n                return\n            }\n }",
    "filename": "ed9cb311019e2a71e5267df6997bd07a_0.scala"
  },
  {
    "conversation_hash": "e311e745ca539c9145777a1ea1d0f387",
    "code_index": 2,
    "language": "Scala",
    "libraries": [],
    "code": "output {\n  elasticsearch {\n    hosts => [\"http://localhost:9200\"]\n    index => \"myindex\"\n  }\n}",
    "filename": "e311e745ca539c9145777a1ea1d0f387_2.scala"
  },
  {
    "conversation_hash": "a9a7814ff9786c4521b79987b2f92ba9",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "{ pkgs ? import <nixpkgs> {} }:\n\npkgs.mkShell {\n  buildInputs = [\n    pkgs.hello\n    pkgs.jq\n  ];\n}",
    "filename": "a9a7814ff9786c4521b79987b2f92ba9_0.scala"
  },
  {
    "conversation_hash": "a9a7814ff9786c4521b79987b2f92ba9",
    "code_index": 3,
    "language": "Scala",
    "libraries": [],
    "code": "{ pkgs ? import <nixpkgs> {} }:\n\nlet\n  # Reference the hello package\n  hello = pkgs.hello;\n\nin pkgs.stdenv.mkDerivation {\n  pname = \"hello-symlink\";\n  version = \"1.0\";\n  src = ./.;\n\n  # Create a symlink to the package's store path\n  installPhase = ''\n    ln -s \"${hello}\" $out\n  '';\n}",
    "filename": "a9a7814ff9786c4521b79987b2f92ba9_3.scala"
  },
  {
    "conversation_hash": "eb1d0e870dcc15bb00e5201a1f2be760",
    "code_index": 2,
    "language": "Scala",
    "libraries": [],
    "code": "{showSubtaskModal && (\n  <SubtaskModal\n    task={selectedTask}\n    onCloseModal={handleHideSubtaskModal}\n    onAddSubtask={addSubtask}\n  />\n)}",
    "filename": "eb1d0e870dcc15bb00e5201a1f2be760_2.scala"
  },
  {
    "conversation_hash": "971a878f9445185559503bf5f6748fea",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "{showSubtaskModal && (\n  <SubtaskModal\n    key={selectedTask.id} // add this line\n    task={selectedTask}\n    onCloseModal={handleHideSubtaskModal}\n    onAddSubtask={addSubtask}\n  />\n)}",
    "filename": "971a878f9445185559503bf5f6748fea_1.scala"
  },
  {
    "conversation_hash": "28b99e4fb4800249ec42c44ee37ca630",
    "code_index": 3,
    "language": "Scala",
    "libraries": [],
    "code": "{subtasks.map((subtask) => (\n  <Subtask\n    key={subtask.id}\n    taskId={task.id}\n    subtask={subtask}\n    onUpdateSubtasks={setSubtasks} // new prop\n  />\n))}",
    "filename": "28b99e4fb4800249ec42c44ee37ca630_3.scala"
  },
  {
    "conversation_hash": "f09ea8c78fb7dc132eaac50fc636c2bc",
    "code_index": 2,
    "language": "Scala",
    "libraries": [],
    "code": "data class Person(val name: String, val age: Int)\n\nval gson = Gson()\nval jsonStr = \"\"\"{ \"name\": \"Alice\", \"age\": 20 }\"\"\"\nval person = gson.fromJson(jsonStr, Person::class.java)\n\nprintln(person.name) // 输出 \"Alice\"\nprintln(person.age) // 输出 20",
    "filename": "f09ea8c78fb7dc132eaac50fc636c2bc_2.scala"
  },
  {
    "conversation_hash": "f09ea8c78fb7dc132eaac50fc636c2bc",
    "code_index": 3,
    "language": "Scala",
    "libraries": [],
    "code": "@Serializable\ndata class Person(val name: String, val age: Int)\n\nval jsonStr = \"\"\"{ \"name\": \"Alice\", \"age\": 20 }\"\"\"\nval person = Json.decodeFromString<Person>(jsonStr)\n\nprintln(person.name) // 输出 \"Alice\"\nprintln(person.age) // 输出 20",
    "filename": "f09ea8c78fb7dc132eaac50fc636c2bc_3.scala"
  },
  {
    "conversation_hash": "ab952891b87be5440bddc416dcea7c1f",
    "code_index": 3,
    "language": "Scala",
    "libraries": [],
    "code": "<Resource name=\"jdbc/myDataSource\" auth=\"Container\"\n        type=\"javax.sql.DataSource\" driverClassName=\"com.mysql.jdbc.Driver\"\n        url=\"jdbc:mysql://localhost:3306/mydatabase\"\n        username=\"myuser\" password=\"mypassword\"\n        maxActive=\"100\" maxIdle=\"20\" minIdle=\"5\"\n        global=\"jdbc/myDataSource\"\n        factory=\"org.apache.tomcat.jdbc.pool.DataSourceFactory\"\n        validationQuery=\"SELECT 1\"\n        validationInterval=\"10000\"\n        testWhileIdle=\"true\"\n        removeAbandonedTimeout=\"60\"\n        removeAbandoned=\"true\"\n        logAbandoned=\"true\"\n        jdbcInterceptors=\"org.apache.tomcat.jdbc.pool.interceptor.ConnectionState;org.apache.tomcat.jdbc.pool.interceptor.StatementFinalizer;org.apache.tomcat.jdbc.pool.interceptor.ResetAbandonedTimer;org.apache.tomcat.jdbc.pool.interceptor.ConnectionState;org.apache.tomcat.jdbc.pool.interceptor.SlowQueryReport(threshold=5000)\"\n        poolProperties=\"...;GlobalTransactionsProtocol=LoggingLastResource\"/>",
    "filename": "ab952891b87be5440bddc416dcea7c1f_3.scala"
  },
  {
    "conversation_hash": "417be78a76cbabc6b6986bc4a904c9c8",
    "code_index": 2,
    "language": "Scala",
    "libraries": [],
    "code": "execute_process(\n  COMMAND \"${QMLIMPORTSCANNER_COMMAND}\" ${QMLIMPORTSCANNER_ARGS}\n  WORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}\n  OUTPUT_VARIABLE _imports_string\n)\nstring(JSON _imports PARSE \"${_imports_string}\")",
    "filename": "417be78a76cbabc6b6986bc4a904c9c8_2.scala"
  },
  {
    "conversation_hash": "417be78a76cbabc6b6986bc4a904c9c8",
    "code_index": 3,
    "language": "Scala",
    "libraries": [],
    "code": "file(GENERATE\n    OUTPUT \"${CMAKE_CURRENT_BINARY_DIR}/${target}_qml_plugin_import.cpp\"\n    CONTENT \"${_import_header}\\n${_qml_imports}\\n\"\n)\nset_property(SOURCE ${CMAKE_CURRENT_BINARY_DIR}/${target}_qml_plugin_import.cpp PROPERTY GENERATED 1)\ntarget_sources(${target} PRIVATE ${CMAKE_CURRENT_BINARY_DIR}/${target}_qml_plugin_import.cpp)",
    "filename": "417be78a76cbabc6b6986bc4a904c9c8_3.scala"
  },
  {
    "conversation_hash": "2d53c85e34d7850359fb8bd5fd764e00",
    "code_index": 2,
    "language": "Scala",
    "libraries": [],
    "code": "val schema = StructType(\n  Seq(\n    StructField(\"name\", StringType, true),\n    StructField(\"age\", StringType, true)\n  )\n)",
    "filename": "2d53c85e34d7850359fb8bd5fd764e00_2.scala"
  },
  {
    "conversation_hash": "2d53c85e34d7850359fb8bd5fd764e00",
    "code_index": 5,
    "language": "Scala",
    "libraries": [
      "org.apache.spark.sql.",
      "org.apache.spark.sql.types."
    ],
    "code": "import org.apache.spark.sql.{SparkSession, Row}\nimport org.apache.spark.sql.types.{StructType, StructField, StringType}\n\nval spark = SparkSession.builder()\n                        .appName(\"Convert RDD to DataFrame in Spark\")\n                        .master(\"local[*]\")\n                        .getOrCreate()\n\n// 创建RDD，每个元素是一个字符串\nval rdd = spark.sparkContext.parallelize(Seq(\"Alice\", \"Bob\", \"Charlie\"))\n\n// RDD转换为Row类型的RDD\nval rowRdd = rdd.map(name => Row(name))\n\n// 指定DataFrame的schema\nval schema = StructType(StructField(\"name\", StringType, true) :: Nil)\n\n// 使用sparkSession的createDataFrame方法将Row类型的RDD转换为DataFrame\nval df = spark.createDataFrame(rowRdd, schema)\n\ndf.show()",
    "filename": "2d53c85e34d7850359fb8bd5fd764e00_5.scala"
  },
  {
    "conversation_hash": "2d53c85e34d7850359fb8bd5fd764e00",
    "code_index": 7,
    "language": "Scala",
    "libraries": [
      "org.apache.spark.sql.",
      "org.apache.spark.sql.types."
    ],
    "code": "import org.apache.spark.sql.{SparkSession, Row}\nimport org.apache.spark.sql.types.{StructType, StructField, StringType, IntegerType}\n\nval spark = SparkSession.builder()\n                        .appName(\"Convert RDD to DataFrame in Spark\")\n                        .master(\"local[*]\")\n                        .getOrCreate()\n\n// 创建元素为(name: String, age: Int)类型的RDD\nval rdd = spark.sparkContext.parallelize(Seq((\"Alice\", 20), (\"Bob\", 25), (\"Charlie\", 30)))\n\n// 将RDD转换为DataFrame\nval df = rdd.toDF(\"name\", \"age\")\n\ndf.show()",
    "filename": "2d53c85e34d7850359fb8bd5fd764e00_7.scala"
  },
  {
    "conversation_hash": "6d6be6ef3957e509913eb01974644c0f",
    "code_index": 2,
    "language": "Scala",
    "libraries": [],
    "code": "<property>\n  <name>mapreduce.map.log.level</name>\n  <value>DEBUG</value>\n</property>\n<property>\n  <name>mapreduce.reduce.log.level</name>\n  <value>DEBUG</value>\n</property>",
    "filename": "6d6be6ef3957e509913eb01974644c0f_2.scala"
  },
  {
    "conversation_hash": "be36f905c58f4e331dde92eeeaf355ea",
    "code_index": 2,
    "language": "Scala",
    "libraries": [],
    "code": "class MyApp extends StatelessWidget {\n  @override\n  Widget build(BuildContext context) {\n    return MaterialApp(\n      title: 'Editable Text Example',\n      home: MyEditableText(),\n    );\n  }\n}",
    "filename": "be36f905c58f4e331dde92eeeaf355ea_2.scala"
  },
  {
    "conversation_hash": "499568487f6d00974cf6d08ff15e47da",
    "code_index": 3,
    "language": "Scala",
    "libraries": [],
    "code": "var orderList = dbContext.Orders\n    .Include(o => o.OrderDetails)\n        .ThenInclude(od => od.Product)\n    .Select(o => new OrderViewModel\n    {\n        Id = o.Id,\n        CustomerName = o.CustomerName,\n        OrderDetails = o.OrderDetails.Select(od => new OrderDetailViewModel\n        {\n            Id = od.Id,\n            ProductName = od.Product.Name\n        }).ToList()\n    }).ToList();",
    "filename": "499568487f6d00974cf6d08ff15e47da_3.scala"
  },
  {
    "conversation_hash": "cb094713435ef064c311374b091f6d39",
    "code_index": 1,
    "language": "Scala",
    "libraries": [
      "Home",
      "Login",
      "Router",
      "Vue"
    ],
    "code": "import Vue from 'vue'\nimport Router from 'vue-router'\nimport Login from '@/views/Login.vue'\nimport Home from '@/views/Home.vue'\n\nVue.use(Router)\n\nexport default new Router({\n  routes: [\n    {\n      path: '/',\n      redirect: '/home'\n    },\n    {\n      path: '/login',\n      component: Login\n    },\n    {\n      path: '/home',\n      component: Home,\n      children: [\n        {\n          path: '',\n          component: () => import('@/views/Dashboard.vue'),\n          meta: { title: '首页' }\n        },\n        {\n          path: 'user',\n          component: () => import('@/views/User.vue'),\n          meta: { title: '用户管理' }\n        },\n        {\n          path: 'role',\n          component: () => import('@/views/Role.vue'),\n          meta: { title: '角色管理' }\n        }\n      ]\n    }\n  ]\n})",
    "filename": "cb094713435ef064c311374b091f6d39_1.scala"
  },
  {
    "conversation_hash": "369f35cefee72fb8ba5e15bace206c76",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "val isBackgroundLocationPermissionGranted = locationPermissionsState.isPermissionGranted(android.Manifest.permission.ACCESS_BACKGROUND_LOCATION)\n\nif (isBackgroundLocationPermissionGranted) {\n    // Background location permission is granted\n} else {\n    // Background location permission is not granted\n}",
    "filename": "369f35cefee72fb8ba5e15bace206c76_0.scala"
  },
  {
    "conversation_hash": "369f35cefee72fb8ba5e15bace206c76",
    "code_index": 2,
    "language": "Scala",
    "libraries": [],
    "code": "val isBackgroundLocationPermissionGranted = locationPermissionsState.isPermissionGranted(android.Manifest.permission.ACCESS_BACKGROUND_LOCATION)\n\nif (isBackgroundLocationPermissionGranted) {\n    // Show UI that requires background location permission\n} else {\n    // Show UI that explains the need for background location permission and prompts the user to grant it\n}",
    "filename": "369f35cefee72fb8ba5e15bace206c76_2.scala"
  },
  {
    "conversation_hash": "369f35cefee72fb8ba5e15bace206c76",
    "code_index": 4,
    "language": "Scala",
    "libraries": [],
    "code": "val locationPermissionsState = rememberMultiplePermissionsState(\n    permissions = listOf(\n        android.Manifest.permission.ACCESS_COARSE_LOCATION,\n        android.Manifest.permission.ACCESS_FINE_LOCATION,\n        android.Manifest.permission.ACCESS_BACKGROUND_LOCATION\n    )\n)\n\nif (!locationPermissionsState.permissions[2].hasPermission) {\n    if (locationPermissionsState.shouldShowRationaleForPermission(android.Manifest.permission.ACCESS_BACKGROUND_LOCATION)) {\n        // Show rationale to the user for the background location permission\n        Toast.makeText(context, \"Lokasi background dibutuhkan\", Toast.LENGTH_SHORT).show()\n        // TODO: Show rationale UI and wait for user acceptance\n    } else {\n        // Launch permission request if needed\n        locationPermissionsState.launchMultiplePermissionRequest()\n    }\n}\n\nLaunchedEffect(Unit) {\n    // Here we start the permission request after the user has accepted the rationale or if the rationale is not needed\n    if (locationPermissionsState.permissions[2].hasPermission) {\n        // TODO: Perform action that requires background location permission\n    }\n}",
    "filename": "369f35cefee72fb8ba5e15bace206c76_4.scala"
  },
  {
    "conversation_hash": "369f35cefee72fb8ba5e15bace206c76",
    "code_index": 7,
    "language": "Scala",
    "libraries": [],
    "code": "val locationPermissionsState = rememberMultiplePermissionsState(\n    permissions = listOf(\n        android.Manifest.permission.ACCESS_COARSE_LOCATION,\n        android.Manifest.permission.ACCESS_FINE_LOCATION,\n        android.Manifest.permission.ACCESS_BACKGROUND_LOCATION\n    )\n)\n\nif (!locationPermissionsState.permissions[2].hasPermission) {\n    if (locationPermissionsState.shouldShowRationaleForPermission(android.Manifest.permission.ACCESS_BACKGROUND_LOCATION)) {\n        // Show rationale UI with clear explanation of why the app feature needs access to background location\n        // Include the user-visible label of the settings option that grants background location \n        // Call getBackgroundPermissionOptionLabel() method to get this label, which is localized to device language preference\n        // Add an option for the user to decline the permission\n    } else {\n        // Request permission\n        locationPermissionsState.launchMultiplePermissionRequest()\n    }\n}\n\nLaunchedEffect(Unit) {\n    if (locationPermissionsState.permissions[2].hasPermission) {\n        // Perform action that requires background location permission\n    }\n}",
    "filename": "369f35cefee72fb8ba5e15bace206c76_7.scala"
  },
  {
    "conversation_hash": "369f35cefee72fb8ba5e15bace206c76",
    "code_index": 8,
    "language": "Scala",
    "libraries": [],
    "code": "val locationPermissionsState = rememberMultiplePermissionsState(\n    permissions = listOf(\n        android.Manifest.permission.ACCESS_COARSE_LOCATION,\n        android.Manifest.permission.ACCESS_FINE_LOCATION,\n        android.Manifest.permission.ACCESS_BACKGROUND_LOCATION\n    )\n)\n\nLaunchedEffect(Unit) {\n    locationPermissionsState.launchMultiplePermissionRequest()\n    locationPermissionsState.shouldShowRationaleForPermission(android.Manifest.permission.ACCESS_BACKGROUND_LOCATION)\n}\n\nif (!locationPermissionsState.shouldShowRationaleForPermission(android.Manifest.permission.ACCESS_BACKGROUND_LOCATION)) {\n    // Direct the user to the app settings to enable the permission\n    val intent = Intent(Settings.ACTION_APPLICATION_DETAILS_SETTINGS)\n    intent.data = Uri.fromParts(\"package\", context.packageName, null)\n    intent.flags = Intent.FLAG_ACTIVITY_NEW_TASK\n    context.startActivity(intent)\n}\n\nif (locationPermissionsState.permissions[0].hasPermission && locationPermissionsState.permissions[1].hasPermission && locationPermissionsState.permissions[2].hasPermission) {\n    // Perform action that requires location and background location permission\n}",
    "filename": "369f35cefee72fb8ba5e15bace206c76_8.scala"
  },
  {
    "conversation_hash": "dd55b21c49458aa5f0c7ca820368e1fe",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "<dependency>\n    <groupId>org.springframework.kafka</groupId>\n    <artifactId>spring-kafka</artifactId>\n    <version>2.7.3</version>\n</dependency>",
    "filename": "dd55b21c49458aa5f0c7ca820368e1fe_0.scala"
  },
  {
    "conversation_hash": "099b0364e5bada01e2da1fb954ce867a",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "-- Define the remote event\nlocal ToggleRagdoll = game.ReplicatedStorage.ToggleRagdoll\n\n-- Call the remote event with a boolean argument to toggle the ragdoll state\nToggleRagdoll:FireServer(true)  -- turn on ragdoll\nToggleRagdoll:FireServer(false) -- turn off ragdoll",
    "filename": "099b0364e5bada01e2da1fb954ce867a_1.scala"
  },
  {
    "conversation_hash": "e52b8c49b1fce3186015b6f4b8a6ec77",
    "code_index": 0,
    "language": "Scala",
    "libraries": [
      "java.time.LocalDateTime",
      "java.time.format.DateTimeFormatter"
    ],
    "code": "import java.time.LocalDateTime\nimport java.time.format.DateTimeFormatter\n\nobject Main extends App {\n  val now = LocalDateTime.now()\n  val formatter = DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm:ss\")\n  val formatDateTime = now.format(formatter)\n  println(formatDateTime)\n}",
    "filename": "e52b8c49b1fce3186015b6f4b8a6ec77_0.scala"
  },
  {
    "conversation_hash": "e6cdfa2d38fe66ef7e66459374149156",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "val startCalendar = Calendar.getInstance()\n\n// 1. Prepare an array of days in a week\nval daysOfWeek = startCalendar.getDisplayName(\n    Calendar.DAY_OF_WEEK,\n    Calendar.LONG,\n    Locale.getDefault()\n)\n\n// ...\n\n// process fetched data\nval expenses = mutableListOf<Pair<Float, Date>>()\n// ...\n\n// 2. Create an array of length 7 initialized with 0 values\nval dailyExpenses = Array(7){0f}\n\n// 3. Map the expenses data to the appropriate index in the array based on the day of the week\nexpenses.forEach { (value, date) ->\n    startCalendar.time = date\n    val dayOfWeek = startCalendar.get(Calendar.DAY_OF_WEEK)\n    val index = (dayOfWeek - startCalendar.firstDayOfWeek + 7) % 7\n    dailyExpenses[index] = value\n}\n\nchartEntries.value = entriesOf(*dailyExpenses.mapIndexed { index, value ->\n    index.toFloat() to value\n}.toTypedArray())",
    "filename": "e6cdfa2d38fe66ef7e66459374149156_0.scala"
  },
  {
    "conversation_hash": "76acb02798bb652d5929d43fb8391227",
    "code_index": 0,
    "language": "Scala",
    "libraries": [
      "java.time.LocalDate",
      "java.time.format.DateTimeFormatter"
    ],
    "code": "import java.time.LocalDate\nimport java.time.format.DateTimeFormatter\n\nval xAxisLabels: List<String> = ... // Initialize xAxisLabels with a list of strings\nval dateFormat = DateTimeFormatter.ofPattern(\"yyyy-MM-dd\")\nval chartEntries: MutableLiveData<List<FloatEntry>> = MutableLiveData()\n\nchartEntries.value = entriesOf(\n    *xAxisLabels.mapIndexed { index, label ->\n        FloatEntry(\n            LocalDate.parse(label, dateFormat),\n            index.toFloat(),\n            expenses[label]?.toFloat() ?: 0f\n        )\n    }.toTypedArray()\n)",
    "filename": "76acb02798bb652d5929d43fb8391227_0.scala"
  },
  {
    "conversation_hash": "461207eda408d8faa205557facc0951e",
    "code_index": 7,
    "language": "Scala",
    "libraries": [],
    "code": "SELECT concat_ws(',', collect_list(json_tuple('[\n  {\n    \"id\": 0,\n    \"keywordName\": \"爽肤水\"\n  },\n  {\n    \"id\": 0,\n    \"keywordName\": \"洁面\"\n  },\n  {\n    \"id\": 0,\n    \"keywordName\": \"沐浴露\"\n  }\n]', 'keywordName'))));",
    "filename": "461207eda408d8faa205557facc0951e_7.scala"
  },
  {
    "conversation_hash": "e6037264caa4ed12cb449ce8fb1a9830",
    "code_index": 4,
    "language": "Scala",
    "libraries": [],
    "code": "val sampleLocation = LatLng(37.4219999, -122.0840575)\nval title = \"My Persistent Marker\"\nval snippet = \"This is a persistent marker example.\"\n\nval newPersistentMarker = addPersistentMarker(sampleLocation, title, snippet)",
    "filename": "e6037264caa4ed12cb449ce8fb1a9830_4.scala"
  },
  {
    "conversation_hash": "a8ef48186ba03edaa3aaa3e93f986b78",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "def findShortestSubarray(nums: Array[Int], n: Int): Array[Int] = {\n  if (nums.length < n) return Array.emptyIntArray\n  var start = 0\n  var end = n - 1\n  var sum = nums.slice(start, end+1).sum\n  var minSum = sum\n  var minStart = start\n  var minEnd = end\n  while (end < nums.length - 1) {\n    start += 1\n    end += 1\n    sum += nums(end) - nums(start-1)\n    if (sum < minSum) {\n      minSum = sum\n      minStart = start\n      minEnd = end\n    }\n  }\n  nums.slice(minStart, minEnd+1)\n}",
    "filename": "a8ef48186ba03edaa3aaa3e93f986b78_0.scala"
  },
  {
    "conversation_hash": "a8ef48186ba03edaa3aaa3e93f986b78",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "def findShortestSubarray(nums: Array[Int], n: Int): Array[Int] = {\n  if (nums.length < n) return Array.emptyIntArray\n  var start = 0\n  var end = n - 1\n  var sum = nums.slice(start, end+1).sum\n  var minSum = sum\n  var minStart = start\n  var minEnd = end\n  while (end < nums.length - 1) {\n    start += 1\n    end += 1\n    sum += nums(end) - nums(start-1)\n    if (sum < minSum) {\n      minSum = sum\n      minStart = start\n      minEnd = end\n    }\n  }\n  nums.slice(minStart, minEnd+1)\n}",
    "filename": "a8ef48186ba03edaa3aaa3e93f986b78_1.scala"
  },
  {
    "conversation_hash": "7de6d93d7755d55288a3b45ac79139c2",
    "code_index": 3,
    "language": "Scala",
    "libraries": [
      "org.apache.spark.sql.SparkSession"
    ],
    "code": "import org.apache.spark.sql.SparkSession\n\nval spark = SparkSession.builder()\n  .appName(\"example\")\n  .master(\"local\")\n  .enableHiveSupport()    // 启用 Hive 支持\n  .config(\"hive.metastore.uris\", \"thrift://localhost:9083\")    // 指定 Hive metastore 的 uri\n  .getOrCreate()",
    "filename": "7de6d93d7755d55288a3b45ac79139c2_3.scala"
  },
  {
    "conversation_hash": "5c69003a6cb48b1097e7c618ae331cea",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "@Entity(tableName = \"books\")\ndata class Book(\n    @PrimaryKey(autoGenerate = true) val id: Int = 0,\n    val title: String,\n    val author: String,\n    val year: Int,\n    val isbn: String\n)",
    "filename": "5c69003a6cb48b1097e7c618ae331cea_1.scala"
  },
  {
    "conversation_hash": "f7ad4d6ba0b5c8bcd7c78c1a2faf1d28",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "\"Serilog\": {\n\"MinimumLevel\": \"Information\",\n\"WriteTo\": [\n  {\n    \"Name\": \"RabbitMQ\",\n    \"Args\": {\n      \"connectionString\": \"amqp://guest:guest@localhost:5672/%2f\",\n      \"exchange\": \"logs\",\n      \"exchangeType\": \"fanout\",\n      \"queue\": \"logs\",\n      \"username\": \"guest\",\n      \"password\": \"guest\",\n      \"durable\": true,\n      \"autoDelete\": false,\n      \"formatter\": \"Serilog.Formatting.Compact.CompactJsonFormatter, Serilog.Formatting.Compact\"\n    }\n  }\n]},",
    "filename": "f7ad4d6ba0b5c8bcd7c78c1a2faf1d28_0.scala"
  },
  {
    "conversation_hash": "daa5329f931192081a13d7b34a704d71",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "val fileName = \"example.txt\"\nval file = File(fileName)\n\nif (file.exists()) {\n    // Do something with the file\n} else {\n    println(\"$fileName not found in current directory.\")\n}",
    "filename": "daa5329f931192081a13d7b34a704d71_0.scala"
  },
  {
    "conversation_hash": "79adae9611eb28f508349af8f0dcf886",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "if (project.hasProperty(\"android\")) {\n    plugins {\n        id 'com.android.application'\n    }\n} else {\n    plugins {\n        id 'java'\n    }\n}",
    "filename": "79adae9611eb28f508349af8f0dcf886_1.scala"
  },
  {
    "conversation_hash": "79adae9611eb28f508349af8f0dcf886",
    "code_index": 2,
    "language": "Scala",
    "libraries": [],
    "code": "plugins {\n    if (project.hasProperty(\"android\")) {\n        id 'com.android.application'\n    } else {\n        id 'org.jetbrains.kotlin.jvm'\n    }\n    // 其他插件\n}",
    "filename": "79adae9611eb28f508349af8f0dcf886_2.scala"
  },
  {
    "conversation_hash": "3820aeacab33472fbeec930e85568b3d",
    "code_index": 5,
    "language": "Scala",
    "libraries": [
      "java.util.List",
      "javax.annotation.Nonnull",
      "net.dv8tion.jda.api.JDA",
      "net.dv8tion.jda.api.entities.User",
      "net.dv8tion.jda.api.events.ReadyEvent",
      "net.dv8tion.jda.api.hooks.ListenerAdapter"
    ],
    "code": "import net.dv8tion.jda.api.entities.User;\nimport net.dv8tion.jda.api.hooks.ListenerAdapter;\nimport net.dv8tion.jda.api.events.ReadyEvent;\nimport net.dv8tion.jda.api.JDA;\n\nimport javax.annotation.Nonnull;\nimport java.util.List;",
    "filename": "3820aeacab33472fbeec930e85568b3d_5.scala"
  },
  {
    "conversation_hash": "27060f18c4baaf4ff083297c2e074509",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "<insert id=\"insertBatch\" parameterType=\"java.util.List\">\n    insert into article(article_type, small_title, big_title, face_url, face_thum, layout, article_content, article_source, sort_no, star_num, read_num, state, link)\n    values\n    <foreach collection=\"list\" item=\"item\" index=\"index\" separator=\",\">\n        (#{item.articleType}, #{item.smallTitle}, #{item.bigTitle}, #{item.faceUrl}, #{item.faceThum}, #{item.layout}, #{item.articleContent}, #{item.articleSource}, #{item.sortNo}, #{item.starNum}, #{item.readNum}, #{item.state}, #{item.link})\n    </foreach>\n</insert>",
    "filename": "27060f18c4baaf4ff083297c2e074509_1.scala"
  },
  {
    "conversation_hash": "e7971773762531df7ebc51eca437edc6",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "def calculateMedian(List list) {\n    Collections.sort(list)\n    int middle = list.size() / 2\n    return list.size() % 2 == 0 ? (list.get(middle-1) + list.get(middle)) / 2.0 : list.get(middle)\n}\n\ndef myList = [1, 3, 5, 6, 9, 12, 15]\ndef myMedian = calculateMedian(myList)\nprintln \"The median is : \" + myMedian",
    "filename": "e7971773762531df7ebc51eca437edc6_0.scala"
  },
  {
    "conversation_hash": "e7971773762531df7ebc51eca437edc6",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "def myList = [1, 3, 5, 6, 9, 12, 15]\nCollections.sort(myList)\nint middle = myList.size() / 2\ndouble median = myList.size() % 2 == 0 ? (myList.get(middle-1) + myList.get(middle)) / 2.0 : myList.get(middle)\nprintln \"The median is : \" + median",
    "filename": "e7971773762531df7ebc51eca437edc6_1.scala"
  },
  {
    "conversation_hash": "83b18727e17d5d91f4a7297d33af0ec5",
    "code_index": 2,
    "language": "Scala",
    "libraries": [
      "scala.math.BigDecimal.RoundingMode"
    ],
    "code": "import scala.math.BigDecimal.RoundingMode\n   \n   val x = BigDecimal(\"3.8\")\n   val y = x.setScale(0, RoundingMode.CEILING)\n   println(y)  // 4",
    "filename": "83b18727e17d5d91f4a7297d33af0ec5_2.scala"
  },
  {
    "conversation_hash": "83b18727e17d5d91f4a7297d33af0ec5",
    "code_index": 5,
    "language": "Scala",
    "libraries": [],
    "code": "class ClosedRangeIterator(start: Int, end: Int) extends Iterator[Int] {\n     private var current = start\n     override def hasNext: Boolean = current <= end\n     override def next(): Int = {\n       val res = current\n       current += 1\n       res\n     }\n   }\n   \n   val closedRangeIterator = new ClosedRangeIterator(0, 10)\n   closedRangeIterator.foreach(println)  // 输出包含0到10的所有整数",
    "filename": "83b18727e17d5d91f4a7297d33af0ec5_5.scala"
  },
  {
    "conversation_hash": "83b18727e17d5d91f4a7297d33af0ec5",
    "code_index": 6,
    "language": "Scala",
    "libraries": [],
    "code": "val words = List(\"apple\", \"banana\", \"pear\", \"apple\", \"pear\", \"cherry\", \"cherry\")\n\n// 使用groupBy方法将相同元素分到同一组中，然后使用mapValues方法计算每组的元素个数\nval wordCount = words.groupBy(identity).mapValues(_.size)\n\n// 输出统计结果，即每个单词出现的次数\nwordCount.foreach(pair => println(pair._1 + \": \" + pair._2))",
    "filename": "83b18727e17d5d91f4a7297d33af0ec5_6.scala"
  },
  {
    "conversation_hash": "4110ad10ea6db0e5dfe459a6daac32fb",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "def median(List<Double> numbers) {\n   numbers.sort()\n   int size = numbers.size()\n\n   if (size % 2 == 0) {\n        int mid = size / 2\n        return (numbers[mid - 1] + numbers[mid]) / 2\n   } else {\n        return numbers[size / 2]\n   }\n}",
    "filename": "4110ad10ea6db0e5dfe459a6daac32fb_0.scala"
  },
  {
    "conversation_hash": "4110ad10ea6db0e5dfe459a6daac32fb",
    "code_index": 2,
    "language": "Scala",
    "libraries": [],
    "code": "def median(List<Double> numbers) {\n   def sortedNumbers = numbers.min { a, b -> a <=> b } // Trie la liste par ordre croissant\n   int size = sortedNumbers.size()\n\n   if (size % 2 == 0) {\n        int mid = size / 2\n        return (sortedNumbers[mid - 1] + sortedNumbers[mid]) / 2\n   } else {\n        return sortedNumbers[size / 2]\n   }\n}",
    "filename": "4110ad10ea6db0e5dfe459a6daac32fb_2.scala"
  },
  {
    "conversation_hash": "4bd8f193fa9f0e95d8a115f56e9cdbc7",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "def median(numbers) {\n    if (numbers == null || numbers.isEmpty()) {\n        throw new IllegalArgumentException(\"La liste ne peut pas être nulle ou vide.\")\n    }\n\n    def sortedNumbers = numbers.sort()\n    def middleIndex = sortedNumbers.size() / 2\n\n    if (sortedNumbers.size() % 2 == 0) {\n        // si la taille de la liste est paire, retourne la moyenne des deux éléments au milieu\n        return (sortedNumbers[middleIndex - 1] + sortedNumbers[middleIndex]) / 2.0\n    } else {\n        // si la taille de la liste est impaire, retourne l'élément au milieu\n        return sortedNumbers[middleIndex]\n    }\n}\n\ndef numbers = [1, 4, 3, 5, 8, 6]\n\nprintln(\"La médiane de la liste de nombres est: \" + median(numbers))",
    "filename": "4bd8f193fa9f0e95d8a115f56e9cdbc7_0.scala"
  },
  {
    "conversation_hash": "43030d4735d34da6168b7496cff11da0",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "val list1 = List(1, 2, 3)\nval list2 = List(\"a\", \"b\", \"c\")\n\nval result = list1.zip(list2)\n\n// 输出结果为 List((1,\"a\"), (2,\"b\"), (3,\"c\"))",
    "filename": "43030d4735d34da6168b7496cff11da0_0.scala"
  },
  {
    "conversation_hash": "43030d4735d34da6168b7496cff11da0",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "val list1 = List(1, 2, 3)\nval list2 = List(\"a\", \"b\", \"c\")\nval list3 = List(true, false, true)\n\nval result = list1.zip(list2).zip(list3).map { case ((a, b), c) => (a, b, c)}\n\n// 输出结果为 List((1,\"a\",true), (2,\"b\",false), (3,\"c\",true))",
    "filename": "43030d4735d34da6168b7496cff11da0_1.scala"
  },
  {
    "conversation_hash": "43030d4735d34da6168b7496cff11da0",
    "code_index": 3,
    "language": "Scala",
    "libraries": [
      "java.util.",
      "org.apache.commons.lang.time.DateFormatUtils"
    ],
    "code": "scala\nimport java.util.{Calendar, TimeZone}\nimport org.apache.commons.lang.time.DateFormatUtils\n\n// 设置为纽约时区\nTimeZone.setDefault(TimeZone.getTimeZone(\"America/New_York\"))\n\nval date = Calendar.getInstance().getTime()\nval formattedDate = DateFormatUtils.format(date, \"yyyyMMdd\")\n\nprintln(formattedDate) // 输出当前日期，纽约时区下格式化后的日期字符串",
    "filename": "43030d4735d34da6168b7496cff11da0_3.scala"
  },
  {
    "conversation_hash": "43030d4735d34da6168b7496cff11da0",
    "code_index": 4,
    "language": "Scala",
    "libraries": [
      "java.util.",
      "org.apache.commons.lang.time.DateFormatUtils"
    ],
    "code": "scala\nimport java.util.{Calendar, TimeZone}\nimport org.apache.commons.lang.time.DateFormatUtils\n\n// 设置为中国时区\nTimeZone.setDefault(TimeZone.getTimeZone(\"GMT+8\"))\n\nval date = Calendar.getInstance().getTime()\nval formattedDate = DateFormatUtils.format(date, \"yyyyMMdd\")\n\nprintln(formattedDate) // 输出当前日期，北京时区下格式化后的日期字符串",
    "filename": "43030d4735d34da6168b7496cff11da0_4.scala"
  },
  {
    "conversation_hash": "43030d4735d34da6168b7496cff11da0",
    "code_index": 5,
    "language": "Scala",
    "libraries": [
      "java.time.",
      "java.time.format.DateTimeFormatter"
    ],
    "code": "import java.time.format.DateTimeFormatter\nimport java.time.{Instant, ZoneId, ZonedDateTime}\n\n//指定时区为北京时间\nval zoneId = ZoneId.of(\"Asia/Shanghai\")\n\n//输入需要转换的时间戳\nval timestamp = 1637568000000L // 2021-11-22 00:00:00.000\n\n//将时间戳转为Instant\nval instant = Instant.ofEpochMilli(timestamp)\n\n//将Instant转为北京时间\nval dateTime = instant.atZone(zoneId)\n\n//将北京时间转为指定格式的字符串\nval formatter = DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm:ss.SSS\")\nval strTime = formatter.format(dateTime)\n\nprintln(strTime) // 输出：2021-11-22 00:00:00.000",
    "filename": "43030d4735d34da6168b7496cff11da0_5.scala"
  },
  {
    "conversation_hash": "43030d4735d34da6168b7496cff11da0",
    "code_index": 6,
    "language": "Scala",
    "libraries": [
      "java.time.",
      "java.time.format.DateTimeFormatter"
    ],
    "code": "import java.time.format.DateTimeFormatter\nimport java.time.{Instant, ZoneId}\n\nval timestamp = 1637568000000L // 2021-11-22 00:00:00.000\n\nval formatter = DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm:ss.SSS\")\nval strTime = formatter.format(Instant.ofEpochMilli(timestamp).atZone(ZoneId.of(\"Asia/Shanghai\")))\n\nprintln(strTime) // 输出：2021-11-22 00:00:00.000",
    "filename": "43030d4735d34da6168b7496cff11da0_6.scala"
  },
  {
    "conversation_hash": "43030d4735d34da6168b7496cff11da0",
    "code_index": 7,
    "language": "Scala",
    "libraries": [
      "java.time.",
      "java.time.format.DateTimeFormatter"
    ],
    "code": "import java.time.format.DateTimeFormatter\nimport java.time.{Instant, ZoneId}\n\nval timestamp = 1637568000000L // 2021-11-22 00:00:00.000\n\nval strTime = DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm:ss.SSS\").format(Instant.ofEpochMilli(timestamp).atZone(ZoneId.of(\"Asia/Shanghai\")))\n\nprintln(strTime) // 输出：2021-11-22 00:00:00.000",
    "filename": "43030d4735d34da6168b7496cff11da0_7.scala"
  },
  {
    "conversation_hash": "43030d4735d34da6168b7496cff11da0",
    "code_index": 8,
    "language": "Scala",
    "libraries": [
      "org.apache.spark.sql.SparkSession"
    ],
    "code": "import org.apache.spark.sql.SparkSession\n\nval spark = SparkSession.builder()\n  .appName(\"Duplicate Reduction Query\")\n  .master(\"local[*]\")\n  .config(\"spark.sql.shuffle.partitions\", \"4\")\n  .getOrCreate()\n\n// 创建测试DataFrame\nval df = spark.createDataFrame(Seq(\n  (\"John\", 28),\n  (\"Mary\", 19),\n  (\"John\", 25),\n  (\"Mark\", 33),\n  (\"Mary\", 19)\n)).toDF(\"name\", \"age\")\n\n// 基于name和age两个字段进行去重查询\nval distinctDf = df.select(\"name\", \"age\").distinct()\n\ndistinctDf.show()",
    "filename": "43030d4735d34da6168b7496cff11da0_8.scala"
  },
  {
    "conversation_hash": "d1db43c26cc3ce8813ae91e4e01e479b",
    "code_index": 6,
    "language": "Scala",
    "libraries": [],
    "code": "dependencies {\n    \"implementation\"(libs.findLibrary(\"hilt.android\").get())\n    \"kapt\"(libs.findLibrary(\"hilt.compiler\").get())\n    \"kaptAndroidTest\"(libs.findLibrary(\"hilt.compiler\").get())\n}",
    "filename": "d1db43c26cc3ce8813ae91e4e01e479b_6.scala"
  },
  {
    "conversation_hash": "bb12eab161703b1c13b5cd0ef7a833f7",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "@startuml\nclass A {\n    + attribute1: Integer\n    - attribute2: String\n    # attribute3: Double\n    + operation1(param1: String): Boolean\n    - operation2(param2: Integer): Float\n    # operation3(param3: Double): Void\n}\n@enduml",
    "filename": "bb12eab161703b1c13b5cd0ef7a833f7_0.scala"
  },
  {
    "conversation_hash": "bb12eab161703b1c13b5cd0ef7a833f7",
    "code_index": 4,
    "language": "Scala",
    "libraries": [],
    "code": "@startuml\nobject Car {\n  owner: User\n  make: \"Tesla\"\n  model: \"Model S\"\n  licensePlate: \"ABC-123\"\n}\n \nobject User {\n  name: \"John Smith\"\n  age: 35\n}\n@enduml",
    "filename": "bb12eab161703b1c13b5cd0ef7a833f7_4.scala"
  },
  {
    "conversation_hash": "bb12eab161703b1c13b5cd0ef7a833f7",
    "code_index": 7,
    "language": "Scala",
    "libraries": [],
    "code": "@startuml\nclass Animal {\n  + name: String\n  + speak(): String\n}\n \nclass Cat {\n  + purr(): String\n}\nAnimal <|-- Cat\n@enduml",
    "filename": "bb12eab161703b1c13b5cd0ef7a833f7_7.scala"
  },
  {
    "conversation_hash": "bb12eab161703b1c13b5cd0ef7a833f7",
    "code_index": 8,
    "language": "Scala",
    "libraries": [],
    "code": "@startuml\ninterface ICar {\n  + startEngine(): void\n  + stopEngine(): void\n}\n \nclass Car implements ICar {\n  + startEngine(): void\n  + stopEngine(): void\n}\n@enduml",
    "filename": "bb12eab161703b1c13b5cd0ef7a833f7_8.scala"
  },
  {
    "conversation_hash": "bb12eab161703b1c13b5cd0ef7a833f7",
    "code_index": 9,
    "language": "Scala",
    "libraries": [],
    "code": "@startuml\ncomponent App {\n  interface IAPI {\n    + search(query: string): Promise<Article[]>\n  }\n  -> IAPI\n  -> SearchResults\n}\n\ncomponent SearchResults {\n  interface IArticleList {\n    + display(articles: Article[]): void\n  }\n}\n\nclass Article {\n  + title: string\n  + author: string\n  + content: string\n}\n\nApp -> SearchResults\nSearchResults --> Article\n@enduml",
    "filename": "bb12eab161703b1c13b5cd0ef7a833f7_9.scala"
  },
  {
    "conversation_hash": "03fafb735ee37d4303e3663082500e6a",
    "code_index": 16,
    "language": "Scala",
    "libraries": [],
    "code": "sum_sq    df         F    PR(>F)\nC(gender)                3.277432   1.0  0.530751  0.481268\nC(treatment)             8.327533   1.0  1.348440  0.247527\nC(gender):C(treatment)   8.904126   1.0  1.441329  0.239906\nResidual                87.590958  56.0       NaN       NaN",
    "filename": "03fafb735ee37d4303e3663082500e6a_16.scala"
  },
  {
    "conversation_hash": "b3cc2e0f06b4c94558dc1346fc996a92",
    "code_index": 2,
    "language": "Scala",
    "libraries": [
      "the"
    ],
    "code": "C++\ncmake_minimum_required(VERSION 3.6)\nproject(PluginSystem)\n\nset(CMAKE_CXX_STANDARD 11)\n\n# Set the output directory for the plugin dll\nset(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/bin)\n\n# Add the source files for the plugin system\nset(SOURCES src/plugin.cpp)\n\n# Create the plugin dll from the source files\nadd_library(plugin SHARED ${SOURCES})\n\n# Link the plugin with the static libraries provided by your project.\ntarget_link_libraries(plugin\n    ${CMAKE_CURRENT_SOURCE_DIR}/../lib/module1.lib\n    ${CMAKE_CURRENT_SOURCE_DIR}/../lib/module2.lib\n)\n\n# Set the include directories for the plugin system\ninclude_directories(\n    ${CMAKE_CURRENT_SOURCE_DIR}/include\n    ${CMAKE_CURRENT_SOURCE_DIR}/../include\n)",
    "filename": "b3cc2e0f06b4c94558dc1346fc996a92_2.scala"
  },
  {
    "conversation_hash": "a75e63d132cd3e1a2cda924a29c60eaf",
    "code_index": 8,
    "language": "Scala",
    "libraries": [],
    "code": "if (obj.GetType().IsValueType)\n{\n    // 值类型\n}\nelse\n{\n    // 引用类型\n}",
    "filename": "a75e63d132cd3e1a2cda924a29c60eaf_8.scala"
  },
  {
    "conversation_hash": "4ef7d8de42fcb7fdf96a98e6ddfecaed",
    "code_index": 7,
    "language": "Scala",
    "libraries": [],
    "code": "// build.gradle.kts with kotlin-dsl\nplugins {\n    `java-library`\n    `org.jetbrains.kotlin.jvm` version \"1.5.21\"\n}\n\nrepositories {\n    mavenCentral()\n}\n\ndependencies {\n    implementation(kotlin(\"stdlib\"))\n}",
    "filename": "4ef7d8de42fcb7fdf96a98e6ddfecaed_7.scala"
  },
  {
    "conversation_hash": "61eef82050f37c459e3e637caa9559b4",
    "code_index": 7,
    "language": "Scala",
    "libraries": [
      "java.io."
    ],
    "code": "import java.io.{ByteArrayInputStream, ByteArrayOutputStream, ObjectInputStream, ObjectOutputStream, Serializable}\n\ncase class User(name: String, age: Int) extends Serializable\n\nval result = dataset.map(row => {\n  val obj = User(row.getString(0), row.getInt(1))\n  val bos = new ByteArrayOutputStream()\n  val oos = new ObjectOutputStream(bos)\n  oos.writeObject(obj)\n  oos.close()\n  new ByteArrayInputStream(bos.toByteArray)\n})",
    "filename": "61eef82050f37c459e3e637caa9559b4_7.scala"
  },
  {
    "conversation_hash": "61eef82050f37c459e3e637caa9559b4",
    "code_index": 9,
    "language": "Scala",
    "libraries": [
      "java.io.ByteArrayInputStream",
      "org.apache.avro.Schema",
      "org.apache.avro.generic.",
      "org.apache.avro.io.",
      "org.apache.avro.specific."
    ],
    "code": "import java.io.ByteArrayInputStream\nimport org.apache.avro.Schema\nimport org.apache.avro.generic.{GenericData, GenericRecord}\nimport org.apache.avro.io.{DatumReader, DatumWriter, DecoderFactory, EncoderFactory}\nimport org.apache.avro.specific.{SpecificDatumReader, SpecificDatumWriter}\n\ncase class User(name: String, age: Int)\n\nval schema = new Schema.Parser().parse(...)\n\nval result = dataset.map(row => {\n  val obj = User(row.getString(0), row.getInt(1))\n  val record = new GenericData.Record(schema)\n  record.put(\"name\", obj.name)\n  record.put(\"age\", obj.age)\n  val writer: DatumWriter[GenericRecord] = new SpecificDatumWriter[GenericRecord](schema)\n  val outputStream, byteArrayInputStream = new ByteArrayInputStream()\n  val encoder, decoder = EncoderFactory.get().binaryEncoder(outputStream, null)\n  writer.write(record, encoder)\n  encoder.flush()\n  outputStream.close()\n  // Convert byte array to ByteArrayInputStream and return\n  byteArrayInputStream\n})",
    "filename": "61eef82050f37c459e3e637caa9559b4_9.scala"
  },
  {
    "conversation_hash": "e0aafb7c0089ebcf943ca114ade25fe1",
    "code_index": 4,
    "language": "Scala",
    "libraries": [],
    "code": "@startuml\nclass MyClass {\n  +method1(): void\n  +method2(): void\n}\n@enduml",
    "filename": "e0aafb7c0089ebcf943ca114ade25fe1_4.scala"
  },
  {
    "conversation_hash": "e0aafb7c0089ebcf943ca114ade25fe1",
    "code_index": 5,
    "language": "Scala",
    "libraries": [],
    "code": "@startuml\nclass MyClass {\n  +method1(): void\n  +method2(): void\n} fontsize 18\n@enduml",
    "filename": "e0aafb7c0089ebcf943ca114ade25fe1_5.scala"
  },
  {
    "conversation_hash": "e0aafb7c0089ebcf943ca114ade25fe1",
    "code_index": 6,
    "language": "Scala",
    "libraries": [],
    "code": "@startuml\nskinparam classFontsize 18\nclass MyClass {\n  +method1(): void\n  +method2(): void\n}\n@enduml",
    "filename": "e0aafb7c0089ebcf943ca114ade25fe1_6.scala"
  },
  {
    "conversation_hash": "634c6db3bcec3133050de417f7f13e97",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "<bean id=\"myAdvice\" class=\"com.mycompany.MyAdvice\"/>\n\n<bean id=\"myAspect\" class=\"org.springframework.aop.aspectj.AspectJExpressionPointcutAdvisor\">\n    <property name=\"expression\" value=\"execution(* com.mycompany.myClass.myMethod(..))\"/>\n    <property name=\"adviceBeanName\" value=\"myAdvice\"/>\n</bean>",
    "filename": "634c6db3bcec3133050de417f7f13e97_0.scala"
  },
  {
    "conversation_hash": "367f352f57de5ebc5ca204dac6656cab",
    "code_index": 14,
    "language": "Scala",
    "libraries": [
      "VerifyPop"
    ],
    "code": "<script>\nimport VerifyPop from 'vue-verify-pop'\nexport default {\n  components: {\n    VerifyPop\n  },\n  // 其他代码\n}\n</script>",
    "filename": "367f352f57de5ebc5ca204dac6656cab_14.scala"
  },
  {
    "conversation_hash": "90ec46316f8554e98b36f464029c6c22",
    "code_index": 1,
    "language": "Scala",
    "libraries": [
      "Header",
      "React"
    ],
    "code": "import React from \"react\";\n\nimport Header from \"./Header\";\n\nconst App = () => {\n  return (\n    <div>\n      <Header />\n      <div>\n        {[...Array(50)].map((_, index) => (\n          <div key={index}>\n            <p>\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aliquam\n              placerat, felis a luctus blandit, velit velit sodales ante, a\n              convallis neque enim vitae justo. Vivamus ut bibendum massa.\n            </p>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default App;",
    "filename": "90ec46316f8554e98b36f464029c6c22_1.scala"
  },
  {
    "conversation_hash": "b26d25ba86a3e59f0a1e28eeea671329",
    "code_index": 2,
    "language": "Scala",
    "libraries": [],
    "code": "/var/log/myapp.log {\n    size=0\n    daily\n    missingok\n    rotate 7\n    compress\n    delaycompress\n    notifempty\n    dateext\n    dateformat .%Y-%m-%d_%H:%M:%S\n    maxage 0.5\n    create 0644 root root\n}",
    "filename": "b26d25ba86a3e59f0a1e28eeea671329_2.scala"
  },
  {
    "conversation_hash": "5543b54d1416b11306a55c9425f6fa85",
    "code_index": 3,
    "language": "Scala",
    "libraries": [],
    "code": "val retrofit = Retrofit.Builder()\n    .baseUrl(BASE_URL)\n    .addConverterFactory(GsonConverterFactory.create())\n    .addCallAdapterFactory(CoroutineCallAdapterFactory()) // 添加Kotlin协程Call Adapter Factory\n    .build()",
    "filename": "5543b54d1416b11306a55c9425f6fa85_3.scala"
  },
  {
    "conversation_hash": "230287731d58fb02acf41c10dd8b3f14",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "val str = \"This, is a, string, with, commas\"\nval strWithoutCommas = str.replace(\",\", \"\")\n\nprintln(strWithoutCommas)\n// Output: This is a string with commas",
    "filename": "230287731d58fb02acf41c10dd8b3f14_0.scala"
  },
  {
    "conversation_hash": "230287731d58fb02acf41c10dd8b3f14",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "val str = \"   This, is a, string, with, commas   \"\nval trimmedStr = str.trim().replace(\",\", \"\")\n\nprintln(trimmedStr)\n// Output: This is a string with commas",
    "filename": "230287731d58fb02acf41c10dd8b3f14_1.scala"
  },
  {
    "conversation_hash": "230287731d58fb02acf41c10dd8b3f14",
    "code_index": 2,
    "language": "Scala",
    "libraries": [],
    "code": "val originalMap = mutableMapOf(\"a\" to 1, \"b\" to 2)\n\nval updatedMap = originalMap\n\nupdatedMap[\"a\"] = 100\n\nprintln(originalMap)\n// Output: {a=100, b=2}",
    "filename": "230287731d58fb02acf41c10dd8b3f14_2.scala"
  },
  {
    "conversation_hash": "230287731d58fb02acf41c10dd8b3f14",
    "code_index": 3,
    "language": "Scala",
    "libraries": [],
    "code": "val originalMap = mutableMapOf(\"a\" to 1, \"b\" to 2)\n\nval copiedMap = originalMap.toMutableMap()\n\ncopiedMap[\"a\"] = 100\n\nprintln(originalMap)\n// Output: {a=1, b=2}",
    "filename": "230287731d58fb02acf41c10dd8b3f14_3.scala"
  },
  {
    "conversation_hash": "230287731d58fb02acf41c10dd8b3f14",
    "code_index": 5,
    "language": "Scala",
    "libraries": [],
    "code": "val str = \"Hello, World!\"\nval mixedChars = str.toList().shuffled().joinToString(\"\")\n\nprintln(mixedChars)\n// Output: \"doWe!o,Hrl l\" (randomly mixed version of \"Hello, World!\")",
    "filename": "230287731d58fb02acf41c10dd8b3f14_5.scala"
  },
  {
    "conversation_hash": "98527788fe22fb8f14f93e2b3775fbf2",
    "code_index": 23,
    "language": "Scala",
    "libraries": [
      "java.net."
    ],
    "code": "import java.net.{URL, HttpURLConnection}\n\nval url = new URL(\"http://www.example.com\")\nval connection = url.openConnection.asInstanceOf[HttpURLConnection]\nconnection.setRequestMethod(\"GET\")\nval code = connection.getResponseCode()\nval stream = if (code == HttpURLConnection.HTTP_OK) connection.getInputStream() else connection.getErrorStream()\nval content = scala.io.Source.fromInputStream(stream).mkString(\"\")\nstream.close()",
    "filename": "98527788fe22fb8f14f93e2b3775fbf2_23.scala"
  },
  {
    "conversation_hash": "3a0eaf8d4c643e318c4839d26ac3f6de",
    "code_index": 4,
    "language": "Scala",
    "libraries": [
      "org.apache.http.client.methods.HttpGet",
      "org.apache.http.impl.client.HttpClientBuilder"
    ],
    "code": "import org.apache.http.impl.client.HttpClientBuilder\nimport org.apache.http.client.methods.HttpGet\nval httpClient = HttpClientBuilder.create().build()\nval httpGet = new HttpGet(\"http://your.url.here\")\nval response = httpClient.execute(httpGet)",
    "filename": "3a0eaf8d4c643e318c4839d26ac3f6de_4.scala"
  },
  {
    "conversation_hash": "3a0eaf8d4c643e318c4839d26ac3f6de",
    "code_index": 7,
    "language": "Scala",
    "libraries": [
      "java.net.URI",
      "org.apache.http.client.methods.HttpGet",
      "org.apache.http.client.utils.URIBuilder",
      "org.apache.http.impl.client.HttpClients"
    ],
    "code": "import java.net.URI\nimport org.apache.http.client.methods.HttpGet\nimport org.apache.http.impl.client.HttpClients\nimport org.apache.http.client.utils.URIBuilder\n\nval uriBuilder = new URIBuilder(\"http://your.url.here\")\nuriBuilder.addParameter(\"param1\", \"value1\")\nuriBuilder.addParameter(\"param2\", \"value2\")\nval uri: URI = uriBuilder.build()\nval httpGet = new HttpGet(uri)\n\nval httpClient = HttpClients.createDefault()\nval httpResponse = httpClient.execute(httpGet)",
    "filename": "3a0eaf8d4c643e318c4839d26ac3f6de_7.scala"
  },
  {
    "conversation_hash": "3a0eaf8d4c643e318c4839d26ac3f6de",
    "code_index": 8,
    "language": "Scala",
    "libraries": [
      "java.net.URI",
      "org.apache.http.client.config.RequestConfig",
      "org.apache.http.client.methods.HttpGet",
      "org.apache.http.client.utils.URIBuilder",
      "org.apache.http.impl.client.HttpClients"
    ],
    "code": "import java.net.URI\nimport org.apache.http.client.methods.HttpGet\nimport org.apache.http.impl.client.HttpClients\nimport org.apache.http.client.utils.URIBuilder\nimport org.apache.http.client.config.RequestConfig\n\nval uriBuilder = new URIBuilder(\"http://your.url.here\")\nuriBuilder.addParameter(\"param1\", \"value1\")\nuriBuilder.addParameter(\"param2\", \"value2\")\nval uri: URI = uriBuilder.build()\nval httpGet = new HttpGet(uri)\n\nval config = RequestConfig.custom()\n  .setConnectTimeout(5000) // 设置连接超时时间\n  .setSocketTimeout(5000) // 设置请求超时时间\n  .setConnectionRequestTimeout(5000) // 设置响应超时时间\n  .build()\nhttpGet.setConfig(config)\n\nval httpClient = HttpClients.createDefault()\nval httpResponse = httpClient.execute(httpGet)",
    "filename": "3a0eaf8d4c643e318c4839d26ac3f6de_8.scala"
  },
  {
    "conversation_hash": "69051dd0cd25e3f38521874cd65a8fdb",
    "code_index": 4,
    "language": "Scala",
    "libraries": [],
    "code": "cmake_minimum_required(VERSION 3.0)\nproject(MyClass)\n\nfind_package(pybind11 REQUIRED)\n\nadd_library(MyClass SHARED myclass.cpp py_myclass.cpp)\ntarget_link_libraries(MyClass PRIVATE pybind11::module)",
    "filename": "69051dd0cd25e3f38521874cd65a8fdb_4.scala"
  },
  {
    "conversation_hash": "bba129533e6eafa4bfc0d11dd02a26d0",
    "code_index": 7,
    "language": "Scala",
    "libraries": [
      "org.apache.spark.sql.",
      "org.apache.spark.sql.types._"
    ],
    "code": "import org.apache.spark.sql.{SparkSession, DataFrame}\nimport org.apache.spark.sql.types._\n\n// 创建SparkSession\nval spark = SparkSession.builder.appName(\"EmptyDataFrame\").getOrCreate\n\n// 定义Schema\nval schema = StructType(StructField(\"empty\", StringType, true) :: Nil)\n\n// 使用SparkSession来创建空的DataFrame\nval emptyDF = spark.createDataFrame(spark.sparkContext.emptyRDD[Row], schema)",
    "filename": "bba129533e6eafa4bfc0d11dd02a26d0_7.scala"
  },
  {
    "conversation_hash": "40acf30fe15d959e2a9e0ed8ecbfd511",
    "code_index": 5,
    "language": "Scala",
    "libraries": [],
    "code": "__declspec(deprecated(\"This interface is deprecated.\"))\n   class IMyOldInterface\n   {\n   public:\n       virtual void foo() const = 0;\n   };",
    "filename": "40acf30fe15d959e2a9e0ed8ecbfd511_5.scala"
  },
  {
    "conversation_hash": "298f0b84b0bab9213ec9772376b8cf82",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "cmake_minimum_required(VERSION 3.0)\n\nproject(my_project)\n\nset(CMAKE_CXX_STANDARD 11)\n\nset(MY_STATIC_LIB my_static_lib)\n\nset(MY_LIBS\n    lib1\n    lib2\n    lib3\n)\n\nforeach(MY_LIB ${MY_LIBS})\n    string(REPLACE \"$\" \"~\" MY_LIB_MODIFIED ${MY_LIB})\n    add_library(${MY_LIB_MODIFIED} SHARED IMPORTED)\n    set_property(TARGET ${MY_LIB_MODIFIED} PROPERTY IMPORTED_LOCATION ${MY_LIB_LOCATION})\nendforeach()\n\nadd_library(${MY_STATIC_LIB} STATIC my_static_lib.cpp)\n\ntarget_link_libraries(${MY_STATIC_LIB} ${MY_LIBS})",
    "filename": "298f0b84b0bab9213ec9772376b8cf82_0.scala"
  },
  {
    "conversation_hash": "d51f5d8ca2ad50529ea0c6a4b908350b",
    "code_index": 2,
    "language": "Scala",
    "libraries": [],
    "code": "@Entity(tableName = \"users\")\ndata class User(\n    @PrimaryKey val id: Int,\n    val name: String\n)",
    "filename": "d51f5d8ca2ad50529ea0c6a4b908350b_2.scala"
  },
  {
    "conversation_hash": "d51f5d8ca2ad50529ea0c6a4b908350b",
    "code_index": 6,
    "language": "Scala",
    "libraries": [],
    "code": "class MyViewModel(application: Application): AndroidViewModel(application) {\n    private val repository: MyRepository\n    private val myDatabase: MyDatabase\n\n    init {\n        val job = Job()\n        val coroutineScope = CoroutineScope(Dispatchers.IO + job)\n\n        coroutineScope.launch {\n            myDatabase = Room.databaseBuilder(\n                            application.applicationContext,\n                            MyDatabase::class.java, \"my-database-name\")\n                            .build()\n\n            repository = MyRepository(myDatabase)\n        }\n    }\n}",
    "filename": "d51f5d8ca2ad50529ea0c6a4b908350b_6.scala"
  },
  {
    "conversation_hash": "d51f5d8ca2ad50529ea0c6a4b908350b",
    "code_index": 7,
    "language": "Scala",
    "libraries": [],
    "code": "class MyViewModel(application: Application): AndroidViewModel(application) {\n    private val repository: MyRepository\n    val someLiveData: LiveData<String>\n\n    init {\n        repository = MyRepository()\n        someLiveData = repository.someLiveData\n    }\n}",
    "filename": "d51f5d8ca2ad50529ea0c6a4b908350b_7.scala"
  },
  {
    "conversation_hash": "c3c0004bca6ea3d71a1b3206efd08ed5",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "val c = Calendar.getInstance()\nc.time = startCalendar.time\nxAxisLabels.value = mutableListOf<String>()\nwhile (c.timeInMillis < endCalendar.timeInMillis) {\n    xAxisLabels.value.add(dateFormat.format(c.time))\n    c.add(Calendar.DATE, 1)\n}",
    "filename": "c3c0004bca6ea3d71a1b3206efd08ed5_1.scala"
  },
  {
    "conversation_hash": "c3c0004bca6ea3d71a1b3206efd08ed5",
    "code_index": 3,
    "language": "Scala",
    "libraries": [],
    "code": "val c = Calendar.getInstance()\nc.time = startCalendar.time\nval newLabels = mutableListOf<String>()\nwhile (c.timeInMillis < endCalendar.timeInMillis) {\n    newLabels.add(dateFormat.format(c.time))\n    c.add(Calendar.DATE, 1)\n}\nxAxisLabels.value = newLabels",
    "filename": "c3c0004bca6ea3d71a1b3206efd08ed5_3.scala"
  },
  {
    "conversation_hash": "c3c0004bca6ea3d71a1b3206efd08ed5",
    "code_index": 5,
    "language": "Scala",
    "libraries": [],
    "code": "val c = Calendar.getInstance()\nc.time = startCalendar.time\nval newLabels = mutableListOf<String>()\nwhile (c.timeInMillis <= endCalendar.timeInMillis) {\n    newLabels.add(dateFormat.format(c.time))\n    c.add(Calendar.DATE, 1)\n}\nxAxisLabels.value = newLabels",
    "filename": "c3c0004bca6ea3d71a1b3206efd08ed5_5.scala"
  },
  {
    "conversation_hash": "ea74196c8cf8da4ff70b7d1db6e585a8",
    "code_index": 3,
    "language": "Scala",
    "libraries": [],
    "code": "val c = Calendar.getInstance()\nc.time = startCalendar.time\nval newLabels = mutableListOf<String>()\n\nvar weekCounter = 1\n\nwhile (c.timeInMillis <= endCalendar.timeInMillis) {\n    newLabels.add(\"Week $weekCounter\")\n    weekCounter += 1\n\n    c.add(Calendar.DATE, 7) // advance to the next week\n}\n\nxAxisLabels.value = newLabels\n\nbottomAxisValueFormatter =\n        AxisValueFormatter { x, _ -> xAxisLabels.value[x.toInt() % xAxisLabels.value.size] }",
    "filename": "ea74196c8cf8da4ff70b7d1db6e585a8_3.scala"
  },
  {
    "conversation_hash": "100b25f91820a51158d28eaf1dd27baa",
    "code_index": 4,
    "language": "Scala",
    "libraries": [],
    "code": "add_library(libexample STATIC IMPORTED)\nset_target_properties(libexample PROPERTIES\n  IMPORTED_LOCATION \"/path/to/libexample.a\"\n  INTERFACE_INCLUDE_DIRECTORIES \"/path/to/libexample/include\"\n)",
    "filename": "100b25f91820a51158d28eaf1dd27baa_4.scala"
  },
  {
    "conversation_hash": "237c09b1ad0baee04524b827ec90e621",
    "code_index": 2,
    "language": "Scala",
    "libraries": [],
    "code": "<property>\n  <name>mapreduce.map.memory.mb</name>\n  <value>2048</value>\n</property>\n<property>\n  <name>mapreduce.reduce.memory.mb</name>\n  <value>2048</value>\n</property>",
    "filename": "237c09b1ad0baee04524b827ec90e621_2.scala"
  },
  {
    "conversation_hash": "7fe930cecb3afb2215394db21f1e03f1",
    "code_index": 5,
    "language": "Scala",
    "libraries": [],
    "code": "* Serving Flask app \"myapp\" (lazy loading)\n * Environment: production\n   WARNING: This is a development server. Do not use it in a production deployment.\n   Use a production WSGI server instead.\n * Debug mode: off\n * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)",
    "filename": "7fe930cecb3afb2215394db21f1e03f1_5.scala"
  },
  {
    "conversation_hash": "9277fa053541f0701d02b8f38ac74e2a",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "add_library(mylib STATIC)\n\ntarget_sources(mylib\n    PRIVATE\n        private_source.cpp\n    PUBLIC\n        public_source.cpp\n)",
    "filename": "9277fa053541f0701d02b8f38ac74e2a_0.scala"
  },
  {
    "conversation_hash": "4dc534b87b023d002387d08826ef06fd",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "# отправить только конфигурационные данные\nmyObject.putExchangeData(statusError, typeExchange)\n\n# отправить конфигурационные данные и файл\nmyObject.putExchangeData(statusError, typeExchange, zipPath)",
    "filename": "4dc534b87b023d002387d08826ef06fd_0.scala"
  },
  {
    "conversation_hash": "aed220f3fd57f63ae85ed2c550cd73aa",
    "code_index": 10,
    "language": "Scala",
    "libraries": [],
    "code": "val audioManager = getSystemService(Context.AUDIO_SERVICE) as AudioManager\n\n// 获取支持的采样率范围\nval sampleRates = audioManager.getSupportedSampleRates()\n\n// 获取支持的位宽范围\nval pcmBitDepths = audioManager.getOutputQuantizationLevels(AudioManager.STREAM_MUSIC)\n\n// 获取支持的通道数范围\nval channelCounts = audioManager.getSupportedChannelCounts()",
    "filename": "aed220f3fd57f63ae85ed2c550cd73aa_10.scala"
  },
  {
    "conversation_hash": "22f388ce146ab0337093f0371ec82f00",
    "code_index": 9,
    "language": "Scala",
    "libraries": [],
    "code": "cd /opt/ltp-full-$(version)\nmake autotools\n./configure\nmake all\nmake install",
    "filename": "22f388ce146ab0337093f0371ec82f00_9.scala"
  },
  {
    "conversation_hash": "28bd44cecf8d695d88f72660c5773f3e",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "start\nend\nPromise microtask 1\nPromise microtask 2\nsetTimeout macrotask",
    "filename": "28bd44cecf8d695d88f72660c5773f3e_1.scala"
  },
  {
    "conversation_hash": "8a7703c70faa7989669c0ad40a75493e",
    "code_index": 2,
    "language": "Scala",
    "libraries": [],
    "code": "def myFunction() {\n    stage('My Stage') {\n        // ...\n    }\n}",
    "filename": "8a7703c70faa7989669c0ad40a75493e_2.scala"
  },
  {
    "conversation_hash": "8a7703c70faa7989669c0ad40a75493e",
    "code_index": 4,
    "language": "Scala",
    "libraries": [],
    "code": "def myFunction() {\n    stage('My Stage') {\n        // ...\n    }\n}",
    "filename": "8a7703c70faa7989669c0ad40a75493e_4.scala"
  },
  {
    "conversation_hash": "8a7703c70faa7989669c0ad40a75493e",
    "code_index": 10,
    "language": "Scala",
    "libraries": [],
    "code": "pipeline {\n    agent any\n\n    stages {\n        stage('Build') {\n            steps {\n                myFunction()\n            }\n        }\n        stage('My Stage') {\n            steps {\n                // ...\n            }\n        }\n    }\n}\n\ndef myFunction() {\n    // ...\n}",
    "filename": "8a7703c70faa7989669c0ad40a75493e_10.scala"
  },
  {
    "conversation_hash": "94e93dfc24ef964b693c490b9812a76a",
    "code_index": 4,
    "language": "Scala",
    "libraries": [
      "com.google.gson.annotations.SerializedName",
      "java.util."
    ],
    "code": "import com.google.gson.annotations.SerializedName\nimport java.util.*\n\ndata class Order(\n    @SerializedName(\"VendorID\")\n    val vendorId: String,\n    @SerializedName(\"ShipDate\")\n    val shipDate: Date,\n    @SerializedName(\"ShipViaCode\")\n    val shipViaCode: String,\n    @SerializedName(\"LegalNumber\")\n    val legalNumber: String,\n    @SerializedName(\"Items\")\n    val items: List<OrderItem>\n)\n\ndata class OrderItem(\n    @SerializedName(\"JobNum\")\n    val jobNum: String,\n    @SerializedName(\"AssessmentNum\")\n    val assessmentNum: Int,\n    @SerializedName(\"OprSeq\")\n    val oprSeq: Int,\n    @SerializedName(\"OrderNum\")\n    val orderNum: Int,\n    @SerializedName(\"OrderLine\")\n    val orderLine: Int,\n    @SerializedName(\"OrderRelNum\")\n    val orderRelNum: Int,\n    @SerializedName(\"ShipQty\")\n    val shipQty: Int,\n    @SerializedName(\"IUM\")\n    val ium: String,\n    @SerializedName(\"LotNum\")\n    val lotNum: String,\n    @SerializedName(\"Number20\")\n    val number20: Int,\n    @SerializedName(\"Number19\")\n    val number19: Int,\n    @SerializedName(\"Date01\")\n    val date01: Date,\n    @SerializedName(\"ShortChar01\")\n    val shortChar01: String,\n    @SerializedName(\"TranReference\")\n    val tranReference: String\n)",
    "filename": "94e93dfc24ef964b693c490b9812a76a_4.scala"
  },
  {
    "conversation_hash": "ac08e939dc3322ef818b3fe9f385b994",
    "code_index": 1,
    "language": "Scala",
    "libraries": [
      "React"
    ],
    "code": "import React from 'react'\n\nconst AboutPage = () => {\n  return (\n    <div>\n      <h1>About Page</h1>\n      <p>This is the About Page of my Next.js application.</p>\n    </div>\n  )\n}\n\nexport default AboutPage",
    "filename": "ac08e939dc3322ef818b3fe9f385b994_1.scala"
  },
  {
    "conversation_hash": "ac08e939dc3322ef818b3fe9f385b994",
    "code_index": 2,
    "language": "Scala",
    "libraries": [
      "React"
    ],
    "code": "import React from 'react'\n\nconst MyApp = ({ Component, pageProps }) => {\n  return <Component {...pageProps} />\n}\n\nexport default MyApp",
    "filename": "ac08e939dc3322ef818b3fe9f385b994_2.scala"
  },
  {
    "conversation_hash": "d04aa66a56aa168f2132c3869d60b54b",
    "code_index": 5,
    "language": "Scala",
    "libraries": [],
    "code": "import 'package:flutter/material.dart';\n\nclass MyScreen extends StatelessWidget {\n  @override\n  Widget build(BuildContext context) {\n    // Get the size of the current context\n    final Size screenSize = MediaQuery.of(context).size;\n\n    return Scaffold(\n      body: Center(\n        child: Text('The screen size is $screenSize'),\n      ),\n    );\n  }\n}",
    "filename": "d04aa66a56aa168f2132c3869d60b54b_5.scala"
  },
  {
    "conversation_hash": "30e353cd141a06e53cbd5e12c8e2dfb9",
    "code_index": 1,
    "language": "Scala",
    "libraries": [
      "androidx.compose.runtime.Composable"
    ],
    "code": "import androidx.compose.runtime.Composable\n\n@Composable\nfun EntityList(entities: List<Entity>) {\n    // Composable code that displays the list of entities\n}",
    "filename": "30e353cd141a06e53cbd5e12c8e2dfb9_1.scala"
  },
  {
    "conversation_hash": "30e353cd141a06e53cbd5e12c8e2dfb9",
    "code_index": 6,
    "language": "Scala",
    "libraries": [
      "androidx.compose.runtime.Composable"
    ],
    "code": "import androidx.compose.runtime.Composable\n\n@Composable\nfun EntityRow(entity: Entity) {\n    // Composable code that displays the entity\n}",
    "filename": "30e353cd141a06e53cbd5e12c8e2dfb9_6.scala"
  },
  {
    "conversation_hash": "996c4f7456cbe4a17715d227ba2d2d13",
    "code_index": 0,
    "language": "Scala",
    "libraries": [
      "React",
      "icon1",
      "icon2",
      "icon3"
    ],
    "code": "import React, { Component } from 'react';\nimport icon1 from '@/assets/img/icon1.png';\nimport icon2 from '@/assets/img/icon2.png';\nimport icon3 from '@/assets/img/icon3.png';\n// ... more imports\n\nclass MyComponent extends Component {\n  render() {\n    return (\n      <div>\n        <img src={icon1} alt=\"Icon 1\" />\n        <img src={icon2} alt=\"Icon 2\" />\n        <img src={icon3} alt=\"Icon 3\" />\n        {/* ... more image tags */}\n      </div>\n    );\n  }\n}\n\nexport default MyComponent;",
    "filename": "996c4f7456cbe4a17715d227ba2d2d13_0.scala"
  },
  {
    "conversation_hash": "4438a4c7a8f693d79895f3240aacf3df",
    "code_index": 3,
    "language": "Scala",
    "libraries": [],
    "code": "void main() {\n  WidgetsFlutterBinding.ensureInitialized();\n  runApp(\n    MaterialApp(\n      home: Builder(\n        builder: (context) {\n          // Wrap your app with MediaQuery here\n          return MediaQuery(\n            data: MediaQuery.of(context).copyWith(),\n            child: MyApp(),\n          );\n        },\n      ),\n    ),\n  );\n}\n\nclass MyApp extends StatelessWidget {\n  @override\n  Widget build(BuildContext context) {\n    return MaterialApp(\n      home: Scaffold(\n        body: Center(\n          child: Text('Hello, World!'),\n        ),\n      ),\n    );\n  }\n}",
    "filename": "4438a4c7a8f693d79895f3240aacf3df_3.scala"
  },
  {
    "conversation_hash": "4438a4c7a8f693d79895f3240aacf3df",
    "code_index": 6,
    "language": "Scala",
    "libraries": [],
    "code": "class MyHomePage extends StatelessWidget {\n  @override\n  Widget build(BuildContext context) {\n    return Scaffold(\n      appBar: AppBar(\n        title: Text('My App'),\n      ),\n      body: Center(\n        child: RaisedButton(\n          child: Text('Open Details Page'),\n          onPressed: () {\n            Navigator.push(context, MaterialPageRoute(builder: (context) {\n              return DetailsPage();\n            }));\n          },\n        ),\n      ),\n    );\n  }\n}\n\nclass DetailsPage extends StatelessWidget {\n  @override\n  Widget build(BuildContext context) {\n    return Scaffold(\n      appBar: AppBar(\n        title: Text('Details'),\n      ),\n      body: Center(\n        child: Text('Details Page'),\n      ),\n    );\n  }\n}",
    "filename": "4438a4c7a8f693d79895f3240aacf3df_6.scala"
  },
  {
    "conversation_hash": "4438a4c7a8f693d79895f3240aacf3df",
    "code_index": 8,
    "language": "Scala",
    "libraries": [],
    "code": "class MyApp extends StatelessWidget {\n  @override\n  Widget build(BuildContext context) {\n    return MaterialApp(\n      onGenerateInitialRoutes: (initialRouteName) {\n        return [\n          MediaQuery.of(context).size.width < 600\n              ? MaterialPageRoute(builder: (context) => MobileHomePage())\n              : MaterialPageRoute(builder: (context) => DesktopHomePage()),\n        ];\n      },\n      initialRoute: '/',\n    );\n  }\n}\n\nclass MobileHomePage extends StatelessWidget {\n  @override\n  Widget build(BuildContext context) {\n    return Scaffold(\n      appBar: AppBar(\n        title: Text('Mobile Home Page'),\n      ),\n      body: Center(child: Text('Mobile Home Page')),\n    );\n  }\n}\n\nclass DesktopHomePage extends StatelessWidget {\n  @override\n  Widget build(BuildContext context) {\n    return Scaffold(\n      appBar: AppBar(\n        title: Text('Desktop Home Page'),\n      ),\n      body: Center(child: Text('Desktop Home Page')),\n    );\n  }\n}",
    "filename": "4438a4c7a8f693d79895f3240aacf3df_8.scala"
  },
  {
    "conversation_hash": "4cb38ffa4cd1677395928816d5c50ba7",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "chain\nChaud       Froid       Pluie      Soleil \n \"Chaud\" \"Soleil\" \"Soleil\"       \"Froid\" \"Soleil\" \"Chaud\" \"Soleil\" \"Chaud\" \"Soleil\" \n \"Soleil\" \"Soleil\" \"Soleil\" \"Soleil\" \"Soleil\" \"Pluie\" \"Froid\" \"Pluie\" \"Froid\" \n \"Soleil\" \"Chaud\" \"Soleil\" \"Pluie\" \"Pluie\" \"Pluie\" \"Froid\" \"Froid\" \"Chaud\" \n \"Froid\" \"Froid\" \"Pluie\" \"Pluie\" \"Pluie\" \"Froid\" \"Chaud\" \"Chaud\" \"Chaud\" \n \"Froid\" \"Pluie\" \"Chaud\" \"Chaud\" \"Chaud\" \"Chaud\" \"Froid\" \"Froid\" \"Chaud\" \n \"Pluie\" \"Soleil\" \"Soleil\" \"Soleil\" \"Soleil\" \"Soleil\" \"Soleil\" \"Soleil\" \"Soleil\" \n \"Soleil\" \"Chaud\" \"Soleil\" \"Soleil\" \"Soleil\" \"Soleil\" \"Soleil\" \"Soleil\" \"Soleil\" \n \"Soleil\" \"Pluie\" \"Froid\" \"Froid\" \"Chaud\" \"Chaud\" \"Chaud\" \"Chaud\" \"Chaud\" \n \"Pluie\" \"Froid\" \"Froid\" \"Froid\" \"Chaud\" \"Chaud\" \"Chaud\" \"Pluie\" \"Chaud\" \n \"Chaud\" \"Chaud\" \"Chaud\" \"Chaud\" \"Chaud\" \"Soleil\" \"Soleil\" \"Soleil\" \"Soleil\" \n \"Soleil\" \"Soleil\" \"Chaud\" \"Chaud\" \"Pluie\" \"Froid\" \"Froid\" \"Chaud\" \"Chaud\" \"Chaud\" \n \"Pluie\" \"Pluie\" \"Froid\" \"Froid\" \"Froid\" \"Pluie\" \"Froid\" \"Froid\" \"Chaud\" \n \"Froid\" \"Froid\" \"Chaud\" \"Chaud\" \"Chaud\" \"Chaud\" \"Chaud\" \"Chaud\" \"Chaud\" \n \"Chaud\" \"Chaud\" \"Chaud\" \"Froid\" \"Pluie\" \"Pluie\" \"Froid\" \"Froid\" \"Chaud\" \n \"Froid\" \"Froid\" \"Pluie\" \"Pluie\" \"Pluie\" \"Froid\" \"Froid\" \"Froid\" \"Froid\" \n \"Soleil\" \"Soleil\" \"Pluie\" \"Chaud\" \"Chaud\" \"Chaud\" \"Chaud\" \"Chaud\" \"Chaud\" \n \"Pluie\" \"Froid\" \"Froid\" \"Froid\" \"Chaud\" \"Chaud\" \"Chaud\" \"Soleil\" \"Soleil\" \n \"Soleil\" \"Soleil\" \"Soleil\" \"Soleil\" \"Pluie\" \"Pluie\" \"Froid\" \"Froid\" \nChaud       Froid       Pluie      Soleil \n0.20        0.19        0.23        0.38",
    "filename": "4cb38ffa4cd1677395928816d5c50ba7_1.scala"
  },
  {
    "conversation_hash": "0ca72705930eb24ba1913f91f5334a1e",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "val user = FirebaseAuth.getInstance().currentUser\n\nuser?.sendEmailVerification()\n    ?.addOnCompleteListener { task ->\n        if (task.isSuccessful) {\n            // Email sent successfully\n        } else {\n            // Email sending failed\n        }\n    }",
    "filename": "0ca72705930eb24ba1913f91f5334a1e_0.scala"
  },
  {
    "conversation_hash": "0ca72705930eb24ba1913f91f5334a1e",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "val user = FirebaseAuth.getInstance().currentUser\n\nif (user?.isEmailVerified == true) {\n    // Email is verified\n} else {\n    // Email is not verified\n}",
    "filename": "0ca72705930eb24ba1913f91f5334a1e_1.scala"
  },
  {
    "conversation_hash": "0ca72705930eb24ba1913f91f5334a1e",
    "code_index": 2,
    "language": "Scala",
    "libraries": [],
    "code": "val user = FirebaseAuth.getInstance().currentUser\n\nval claims = hashMapOf(\"verified\" to true)\n\nuser?.let {\n    FirebaseAuth.getInstance().setCustomUserClaims(it.uid, claims)\n}\n    ?.addOnSuccessListener {\n        // Custom claims set successfully\n    }\n    ?.addOnFailureListener { e ->\n        // Failed to set custom claims\n    }",
    "filename": "0ca72705930eb24ba1913f91f5334a1e_2.scala"
  },
  {
    "conversation_hash": "7fb5f54f744bfb99327b2667d943b148",
    "code_index": 2,
    "language": "Scala",
    "libraries": [],
    "code": "environment.systemPackages = with pkgs; [\n  (import (builtins.fetchGit {\n    url = \"https://github.com/nix-community/disko.git\";\n    rev = \"master\"; # or use the commit hash you want to use\n  }) { }).disko\n];",
    "filename": "7fb5f54f744bfb99327b2667d943b148_2.scala"
  },
  {
    "conversation_hash": "2e4d08c6bf127827245a50ce836ffacd",
    "code_index": 2,
    "language": "Scala",
    "libraries": [],
    "code": "app.conf.beat_schedule = {\n    'add-every-10-seconds': {\n        'task': 'tasks.add',\n        'schedule': 10.0,\n        'args': (16, 16)\n    },\n}",
    "filename": "2e4d08c6bf127827245a50ce836ffacd_2.scala"
  },
  {
    "conversation_hash": "95ab04ae11be3b3ba5d72155d4c8547e",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "class MyModule {\n  constructor() {\n    // инициализация модуля\n  }\n  \n  myMethod() {\n    // определение метода модуля\n  }\n}\n\nexport default MyModule;",
    "filename": "95ab04ae11be3b3ba5d72155d4c8547e_0.scala"
  },
  {
    "conversation_hash": "a849daf74e82f7927ad091c3a4dc0a91",
    "code_index": 2,
    "language": "Scala",
    "libraries": [],
    "code": "val uri = Uri.parse(\"content://com.example.mycontentprovider/config\")\nval cursor = contentResolver.query(uri, null, null, null, null)\nif (cursor != null && cursor.moveToFirst()) {\n    val configValue = cursor.getString(cursor.getColumnIndex(\"config_key\"))\n    //TODO: handle the config value here\n}",
    "filename": "a849daf74e82f7927ad091c3a4dc0a91_2.scala"
  },
  {
    "conversation_hash": "456f69a9d0053a78ed1df6ff610e2503",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "set odps.spark.executor.memory=8g;\nset odps.spark.driver.memory=4g;\nset odps.spark.num.executors=20;\nset odps.spark.executor.instances=20;\nset odps.spark.executor.core=5;",
    "filename": "456f69a9d0053a78ed1df6ff610e2503_0.scala"
  },
  {
    "conversation_hash": "d67b090c9c80ca543aca7985d2355e4d",
    "code_index": 4,
    "language": "Scala",
    "libraries": [],
    "code": "find_package(Boost REQUIRED COMPONENTS system thread)\ninclude_directories(${Boost_INCLUDE_DIRS})\n\nadd_executable(your_server main.cpp)\ntarget_link_libraries(your_server ${Boost_LIBRARIES})",
    "filename": "d67b090c9c80ca543aca7985d2355e4d_4.scala"
  },
  {
    "conversation_hash": "d67b090c9c80ca543aca7985d2355e4d",
    "code_index": 8,
    "language": "Scala",
    "libraries": [],
    "code": "find_package(Boost REQUIRED COMPONENTS system thread)\ninclude_directories(${Boost_INCLUDE_DIRS})\n\nadd_executable(your_server main.cpp)\ntarget_link_libraries(your_server ${Boost_LIBRARIES})",
    "filename": "d67b090c9c80ca543aca7985d2355e4d_8.scala"
  },
  {
    "conversation_hash": "d67b090c9c80ca543aca7985d2355e4d",
    "code_index": 14,
    "language": "Scala",
    "libraries": [],
    "code": "find_package(Boost REQUIRED COMPONENTS system thread)\ninclude_directories(${Boost_INCLUDE_DIRS})\n\nadd_library(TCPServer STATIC TCPServer.cpp)\ntarget_link_libraries(TCPServer ${Boost_LIBRARIES})",
    "filename": "d67b090c9c80ca543aca7985d2355e4d_14.scala"
  },
  {
    "conversation_hash": "aeab231be65e618748e11b5d960641dd",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "menuentry \"启动VMware虚拟机\" {\n set root=(hd0,1)\n linux /path/to/vmlinuz\n initrd /path/to/initrd.img\n}",
    "filename": "aeab231be65e618748e11b5d960641dd_0.scala"
  },
  {
    "conversation_hash": "c4011ba3b577335f9e459881d43b4042",
    "code_index": 12,
    "language": "Scala",
    "libraries": [],
    "code": "pipeline {\n    agent any\n    stages {\n        stage('Build') {\n            steps {\n                script {\n                    final buildTools = '/usr/local/bin'\n                    checkout scm\n                    sh \"${buildTools}/gradle build\"\n                    runTests(buildTools)\n                }\n            }\n        }\n    }\n}\n\ndef runTests(final tools) {\n    sh \"${tools}/test.sh\"\n}",
    "filename": "c4011ba3b577335f9e459881d43b4042_12.scala"
  },
  {
    "conversation_hash": "7b7f9ef7bb8b20de1d64236b48437f2e",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "class Strike extends Card {\n  constructor() {\n    super(\"Strike\", 1, \"Attack\", \"Deal 6 damage to an enemy.\");\n  }\n  \n  execute(attacker, defender) {\n    defender.takeDamage(6);\n  }\n}",
    "filename": "7b7f9ef7bb8b20de1d64236b48437f2e_0.scala"
  },
  {
    "conversation_hash": "543a9bf8de58259a835839361832c656",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "val packageName = \"com.example.testapp\"\n\ntry {\n    val packageInfo = packageManager.getPackageInfo(packageName, 0)\n    // Если попадаем в try-блок, значит приложение установлено на устройстве\n    // Вы можете изменить название кнопки здесь\n} catch (e: PackageManager.NameNotFoundException) {\n    // Если попадаем в catch-блок, значит приложение не установлено на устройстве\n    // Можете изменить название кнопки здесь\n}",
    "filename": "543a9bf8de58259a835839361832c656_0.scala"
  },
  {
    "conversation_hash": "f7d6357a1cf70dab0aa6890b4f7b493c",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "@Entity(tableName = \"favorite_github_users\")\ndata class FavoriteUser(\n    @NonNull\n    @PrimaryKey(autoGenerate = true)\n    @ColumnInfo(name = \"id\")\n    val id: Int,\n    @NonNull\n    @ColumnInfo(name = \"username\")\n    val username: String,\n    @NonNull\n    @ColumnInfo(name = \"avatar_url\")\n    val avatarUrl: String,\n    @NonNull\n    @ColumnInfo(name = \"html_url\")\n    val htmlUrl: String\n)",
    "filename": "f7d6357a1cf70dab0aa6890b4f7b493c_0.scala"
  },
  {
    "conversation_hash": "0a0575f135e7d0878e4fda710449fa2f",
    "code_index": 5,
    "language": "Scala",
    "libraries": [],
    "code": "DefaultTabController(\n  length: 20,\n  child: Column(\n    crossAxisAlignment: CrossAxisAlignment.stretch,\n    children: [\n      Container(\n        height: kToolbarHeight,\n        child: TabBar(\n          isScrollable: true,\n          tabs: List<Widget>.generate(\n            20,\n            (int index) => Tab(\n              text: \"Tab ${index + 1}\",\n            ),\n          ),\n        ),\n      ),\n      Expanded(\n        child: TabBarView(\n          children: List<Widget>.generate(\n            20,\n            (int index) => ListView.builder(\n              itemCount: 100,\n              itemBuilder: (BuildContext context, int index2) => ListTile(\n                title: Text(\"Tab ${index + 1}, Item ${index2 + 1}\"),\n              ),\n            ),\n          ),\n        ),\n      ),\n    ],\n  ),\n);",
    "filename": "0a0575f135e7d0878e4fda710449fa2f_5.scala"
  },
  {
    "conversation_hash": "83c0bfd8f4e2a8c5fdc1ee1e28cced14",
    "code_index": 0,
    "language": "Scala",
    "libraries": [
      "PropTypes",
      "React"
    ],
    "code": "import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Button = ({ onClick, children, className }) => (\n  <button\n    className={`bg-blue-500 text-white font-bold py-2 px-4 rounded ${className}`}\n    onClick={onClick}\n  >\n    {children}\n  </button>\n);\n\nButton.propTypes = {\n  onClick: PropTypes.func.isRequired,\n  children: PropTypes.node.isRequired,\n  className: PropTypes.string,\n};\n\nButton.defaultProps = {\n  className: \"\",\n};\n\nexport default Button;",
    "filename": "83c0bfd8f4e2a8c5fdc1ee1e28cced14_0.scala"
  },
  {
    "conversation_hash": "cbd18226d62aa9fb452c0a2510dcf0b7",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "<template>\n  <img :src=\"imgSrc\" alt=\"\">\n</template>\n\n<script lang=\"ts\">\nimport { Vue, Component, Prop } from \"vue-property-decorator\";\n\ninterface TabItem {\n  name: string;\n  img1: string;\n  img2: string;\n}\n\n@Component\nexport default class MyComponent extends Vue {\n  @Prop() currentTab!: string;\n  @Prop() item!: TabItem;\n\n  get imgSrc() {\n    return this.currentTab === this.item.name ? this.item.img1 : this.item.img2;\n  }\n}\n</script>",
    "filename": "cbd18226d62aa9fb452c0a2510dcf0b7_1.scala"
  },
  {
    "conversation_hash": "16eda05987ec58871428f0ec2c443e9f",
    "code_index": 7,
    "language": "Scala",
    "libraries": [],
    "code": "<dependency>\n    <groupId>org.apache.logging.log4j</groupId>\n    <artifactId>log4j-slf4j-impl</artifactId>\n    <version>2.14.1</version>\n</dependency>",
    "filename": "16eda05987ec58871428f0ec2c443e9f_7.scala"
  },
  {
    "conversation_hash": "6fb0cbfa8f837dfb9653658d321d5044",
    "code_index": 9,
    "language": "Scala",
    "libraries": [],
    "code": "val data = arrayOf(\"apple\", \"banana\", \"orange\", \"mango\")\nval input = \"orange\"\n\nval result = getRandomItem(data, input)\nprintln(result.contentToString())",
    "filename": "6fb0cbfa8f837dfb9653658d321d5044_9.scala"
  },
  {
    "conversation_hash": "6fb0cbfa8f837dfb9653658d321d5044",
    "code_index": 11,
    "language": "Scala",
    "libraries": [],
    "code": "data class Person(val name: String, val age: Int, val address: Address)\ndata class Address(val street: String, val city: String, val state: String, val zip: String)\n\nval jsonString = \"\"\"{\n  \"name\": \"John\",\n  \"age\": 30,\n  \"address\": {\n    \"street\": \"123 Main St\",\n    \"city\": \"Anytown\",\n    \"state\": \"CA\",\n    \"zip\": \"12345\"\n  }\n}\"\"\"\n\nval gson = Gson()\nval person = gson.fromJson(jsonString, Person::class.java)\nprintln(person.address.street) // \"123 Main St\"\nprintln(person.address.city) // \"Anytown\"",
    "filename": "6fb0cbfa8f837dfb9653658d321d5044_11.scala"
  },
  {
    "conversation_hash": "6fb0cbfa8f837dfb9653658d321d5044",
    "code_index": 12,
    "language": "Scala",
    "libraries": [
      "kotlinx.serialization.Serializable",
      "kotlinx.serialization.decodeFromString",
      "kotlinx.serialization.json.Json"
    ],
    "code": "import kotlinx.serialization.Serializable\nimport kotlinx.serialization.decodeFromString\nimport kotlinx.serialization.json.Json\n\n@Serializable\ndata class Person(val name: String, val age: Int, val address: Address) {\n    @Serializable\n    data class Address(val street: String, val city: String, val state: String, val zip: String)\n}\n\nval jsonString = \"\"\"{\n  \"name\": \"John\",\n  \"age\": 30,\n  \"address\": {\n    \"street\": \"123 Main St\",\n    \"city\": \"Anytown\",\n    \"state\": \"CA\",\n    \"zip\": \"12345\"\n  }\n}\"\"\"\n\nval person = Json.decodeFromString<Person>(jsonString)\nprintln(person.address.street) // \"123 Main St\"\nprintln(person.address.city) // \"Anytown\"",
    "filename": "6fb0cbfa8f837dfb9653658d321d5044_12.scala"
  },
  {
    "conversation_hash": "44bd6dc741172296a4caeb63f1c77b3e",
    "code_index": 12,
    "language": "Scala",
    "libraries": [],
    "code": "export class MyComponent {\n  public classes = {\n    'fade-in': true,\n    'success': true\n  };\n}",
    "filename": "44bd6dc741172296a4caeb63f1c77b3e_12.scala"
  },
  {
    "conversation_hash": "20bebf8912fa0e1673bbe6888581f089",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "class QueryRequestBody(BaseModel):\n    table: QueryTable\n    query: str\n\n@api_router.post(\n    \"/filter\",\n)\ndef tabel_keyword_filter(request_body: QueryRequestBody, db: Session = Depends(get_db)):\n    table = request_body.table\n    query = request_body.query\n\n    # Rest of the code remains the same...",
    "filename": "20bebf8912fa0e1673bbe6888581f089_0.scala"
  },
  {
    "conversation_hash": "b853bd85db55ca373aba88a91fe4a658",
    "code_index": 7,
    "language": "Scala",
    "libraries": [],
    "code": "@app.get(\"/users\")\ndef get_users(db: Session = Depends(get_db)):\n\n    results = get_all_users(db)\n\n    return results",
    "filename": "b853bd85db55ca373aba88a91fe4a658_7.scala"
  },
  {
    "conversation_hash": "a15b528a583d3c41bfcd823b88efc0b1",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "val sampleRate = 16000 // 采样率\nval channelConfig = AudioFormat.CHANNEL_OUT_MONO // 单声道\nval encoding = AudioFormat.ENCODING_PCM_16BIT // 16 bit 采样\n\nval bufferSize = AudioTrack.getMinBufferSize(sampleRate, channelConfig, encoding)\n\nval audioTrack = AudioTrack(\n    AudioManager.STREAM_VOICE_CALL,  // 设置音频通道类型\n    sampleRate,                // 设置采样率\n    channelConfig,             // 设置声道\n    encoding,                  // 设置音频位数\n    bufferSize,                // 设置缓存区大小\n    AudioTrack.MODE_STREAM           // 设置播放模式\n)\n\naudioTrack.play() // 开始播放\n\naudioTrack.write(audioData, 0, audioData.size) // 播放PCM数据\n\naudioTrack.stop() // 停止播放\naudioTrack.release() // 释放资源",
    "filename": "a15b528a583d3c41bfcd823b88efc0b1_0.scala"
  },
  {
    "conversation_hash": "a15b528a583d3c41bfcd823b88efc0b1",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "val fft = DoubleFFT_1D(bufferSize.toLong())\nval fftData = DoubleArray(bufferSize * 2)\n\n// 填充 pcmData\npcmData.copyInto(buffer, 0)\n\n// 在缓冲区内对 pcm 数据加窗\nfor (i in buffer.indices) {\n    buffer[i] = window[i] * buffer[i]\n}\n\n// 计算幅值并复制到 fftData 数组\nfor (i in buffer.indices) {\n    fftData[2 * i] = buffer[i].toDouble()\n    fftData[2 * i + 1] = 0.0\n}\n\n// 调用 FFT 变换函数\nfft.realForward(fftData)",
    "filename": "a15b528a583d3c41bfcd823b88efc0b1_1.scala"
  },
  {
    "conversation_hash": "767707ecb79914d7d0e312e89178327f",
    "code_index": 2,
    "language": "Scala",
    "libraries": [
      "grails.converters.JSON",
      "org.springframework.messaging.handler.annotation.MessageMapping",
      "org.springframework.messaging.handler.annotation.SendTo",
      "org.springframework.stereotype.Controller"
    ],
    "code": "import grails.converters.JSON\nimport org.springframework.messaging.handler.annotation.MessageMapping\nimport org.springframework.messaging.handler.annotation.SendTo\nimport org.springframework.stereotype.Controller\n\n@Controller\nclass WebSocketController {\n\n    @MessageMapping('/message')\n    @SendTo('/topic/messages')\n    String sendMessage(String message) {\n        return message\n    }\n}",
    "filename": "767707ecb79914d7d0e312e89178327f_2.scala"
  },
  {
    "conversation_hash": "1d6415645f4c5bfbfb7395ecd73a11ec",
    "code_index": 2,
    "language": "Scala",
    "libraries": [],
    "code": "myappPackage = pkgs.stdenv.mkDerivation {\n  name = \"myapp\";\n  src = ...;\n  runtimeDependencies = [ myappDependency1 myappDependency2 ];\n};",
    "filename": "1d6415645f4c5bfbfb7395ecd73a11ec_2.scala"
  },
  {
    "conversation_hash": "affa4f0efde1634099e00bc20682eabb",
    "code_index": 2,
    "language": "Scala",
    "libraries": [],
    "code": "val openAIClient = OpenAIClient.Builder(\"YOUR_GPT3_API_KEY\")\n                .setBaseUrl(\"https://api.openai.com/v1/\")\n                .build()\n\nval gpt3Request = Gpt3Request(\n                prompt = \"USER: ${userInput.text}\",\n                maxTokens = 50\n            )\n\nopenAIClient.createCompletion(prompt = gpt3Request).enqueue { response: Gpt3Response? ->\n                if (response != null) {\n                    runOnUiThread {\n                        // Zeige die Antwort des Chatbots an.\n                        chatOutput.text = response.choices?.first()?.text ?: \"Error\"\n                    }\n                }\n            }",
    "filename": "affa4f0efde1634099e00bc20682eabb_2.scala"
  },
  {
    "conversation_hash": "52d4f39a673192831ef149251e5ea24c",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "dependencies {\n    implementation \"com.squareup.okhttp3:okhttp:VERSION\"\n    implementation \"com.squareup.retrofit2:retrofit:VERSION\"\n    implementation \"com.squareup.retrofit2:converter-gson:VERSION\"\n    implementation \"com.google.firebase:firebase-ml-vision:VERSION\"\n    implementation \"com.google.firebase:firebase-analytics-ktx:VERSION\"\n}",
    "filename": "52d4f39a673192831ef149251e5ea24c_1.scala"
  },
  {
    "conversation_hash": "28bfe82904c2183117729e898117d342",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "dependencies {\n    //...\n    // Für die Kommunikation mit ChatGPT-API\n    implementation 'com.squareup.retrofit2:retrofit:2.9.0'\n    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'\n\n    // Für Google Lens (ML Kit Image Labeling)\n    implementation 'com.google.mlkit:image-labeling:17.0.3'\n\n    // Für Google Home Assistant\n    // Abhängigkeiten werden hier dynamisch durch \"Assistant SDK\" und \"GoogleApiClient\" geladen\n}",
    "filename": "28bfe82904c2183117729e898117d342_0.scala"
  },
  {
    "conversation_hash": "c85a86c5cf7ddc0c24de8238efbf1896",
    "code_index": 2,
    "language": "Scala",
    "libraries": [
      "Data.Function",
      "Data.List",
      "Data.Maybe"
    ],
    "code": "module Solucion where\n\nimport Data.List (maximumBy, delete)\nimport Data.Function (on)\nimport Data.Maybe (isJust, fromJust)\n...\n\n-- Aquí iría el resto del código proporcionado anteriormente",
    "filename": "c85a86c5cf7ddc0c24de8238efbf1896_2.scala"
  },
  {
    "conversation_hash": "7b9ea91383975ca7959f35cb83c06cd4",
    "code_index": 3,
    "language": "Scala",
    "libraries": [],
    "code": "extends Area2D\n\nexport (int) var player_speed = 200\n\nvar velocity = Vector2()\n\nfunc _physics_process(delta):\n    velocity.x = Input.get_action_strength(\"ui_right\") - Input.get_action_strength(\"ui_left\")\n    velocity.y = Input.get_action_strength(\"ui_down\") - Input.get_action_strength(\"ui_up\")\n    position += velocity.normalized() * player_speed * delta",
    "filename": "7b9ea91383975ca7959f35cb83c06cd4_3.scala"
  },
  {
    "conversation_hash": "a71d4ca61be1e16007eda10befadcb27",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "module MyModule {\n       requires javafx.controls;\n       requires javafx.fxml;\n       requires <other dependencies>;\n       exports my.package.to.export;\n   }",
    "filename": "a71d4ca61be1e16007eda10befadcb27_0.scala"
  },
  {
    "conversation_hash": "14f2464642fdc701419bc92ef1099b14",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "\"husky\": {\n  \"hooks\": {\n    \"pre-commit\": \"lint-staged\"\n  }\n}",
    "filename": "14f2464642fdc701419bc92ef1099b14_1.scala"
  },
  {
    "conversation_hash": "7baf6675520066703597ee4dd25a4364",
    "code_index": 8,
    "language": "Scala",
    "libraries": [
      "Vue"
    ],
    "code": "import { defineConfig } from 'vite'\n   import Vue from '@vitejs/plugin-vue'\n   import { terser } from 'rollup-plugin-terser'\n\n   export default defineConfig({\n      plugins: [\n         Vue(),\n         terser()\n      ],\n      build: {\n         minify: false,\n      }\n   })",
    "filename": "7baf6675520066703597ee4dd25a4364_8.scala"
  },
  {
    "conversation_hash": "f78d9168d3d20a00895752587e475bfe",
    "code_index": 2,
    "language": "Scala",
    "libraries": [],
    "code": "<Formik\n      initialValues={{ firstName: '', lastName: '', email: '', password: '', confirmPassword: '' }}\n      validationSchema={schema}\n      onSubmit={...}\n    >\n      {({ errors, touched }) => (\n        <Form>\n          <div>\n            <label htmlFor=\"firstName\">First Name</label>\n            <Field type=\"text\" name=\"firstName\" />\n            <ErrorMessage name=\"firstName\" component=\"div\" className=\"error\" />\n          </div>\n          <div>\n            <label htmlFor=\"lastName\">Last Name</label>\n            <Field type=\"text\" name=\"lastName\" />\n            <ErrorMessage name=\"lastName\" component=\"div\" className=\"error\" />\n          </div>\n          <div>\n            <label htmlFor=\"email\">Email</label>\n            <Field type=\"email\" name=\"email\" />\n            <ErrorMessage name=\"email\" component=\"div\" className=\"error\" />\n          </div>\n          <div>\n            <label htmlFor=\"password\">Password</label>\n            <Field type=\"password\" name=\"password\" />\n            <ErrorMessage name=\"password\" component=\"div\" className=\"error\" />\n          </div>\n          <div>\n            <label htmlFor=\"confirmPassword\">Confirm Password</label>\n            <Field type=\"password\" name=\"confirmPassword\" />\n            <ErrorMessage name=\"confirmPassword\" component=\"div\" className=\"error\" />\n          </div>\n          <button type=\"submit\">Submit</button>\n        </Form>\n      )}\n    </Formik>",
    "filename": "f78d9168d3d20a00895752587e475bfe_2.scala"
  },
  {
    "conversation_hash": "44bb01a34d7e37100fec5539178f4c64",
    "code_index": 0,
    "language": "Scala",
    "libraries": [
      "android.media.audiofx.EnvironmentalReverb"
    ],
    "code": "// في الأعلى\nimport android.media.audiofx.EnvironmentalReverb\n\n// في onStart() أو أي زر تشغيل الأغنية المراد التأثير عليها\nval reverb = EnvironmentalReverb(0, mediaPlayer!!.audioSessionId)\n\n// حدد تأثير الريفيرب المطلوب وقم بتطبيقه\nreverb.preset = EnvironmentalReverb.PRESET_LARGEHALL\nreverb.reverbDelay = 300\nreverb.decayTime = 8000\nreverb.density = 1000\nmediaPlayer!!.setAuxEffectSendLevel(1f)\nmediaPlayer!!.attachAuxEffect(reverb.id)\nmediaPlayer!!.start()\n\n// عند الانتهاء من التشغيل يجب تحرير التأثير\nmediaPlayer!!.setOnCompletionListener {\n   mediaPlayer!!.setAuxEffectSendLevel(0f)\n   mediaPlayer!!.attachAuxEffect(0)\n   reverb.release()\n}",
    "filename": "44bb01a34d7e37100fec5539178f4c64_0.scala"
  },
  {
    "conversation_hash": "44bb01a34d7e37100fec5539178f4c64",
    "code_index": 1,
    "language": "Scala",
    "libraries": [
      "android.media.audiofx.Flanger"
    ],
    "code": "// في الأعلى\nimport android.media.audiofx.Flanger\n\n// في onStart() أو أي زر تشغيل الأغنية المراد التأثير عليها\nval flanger = Flanger(0, mediaPlayer!!.audioSessionId)\n\n// حدد تأثير الفلانجر المطلوب وقم بتطبيقه\nflanger.depth = 1f\nflanger.rate = 0.5f\nflanger.wet = 0.5f\nmediaPlayer!!.setAuxEffectSendLevel(1f)\nmediaPlayer!!.attachAuxEffect(flanger.id)\nmediaPlayer!!.start()\n\n// عند الانتهاء من التشغيل يجب تحرير التأثير\nmediaPlayer!!.setOnCompletionListener {\n   mediaPlayer!!.setAuxEffectSendLevel(0f)\n   mediaPlayer!!.attachAuxEffect(0)\n   flanger.release()\n}",
    "filename": "44bb01a34d7e37100fec5539178f4c64_1.scala"
  },
  {
    "conversation_hash": "41cec9d96187c6ab3f62fb9ac2a7770d",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "-- Definir un ejemplo de RedSocial\nredSocialEjemplo :: RedSocial\nredSocialEjemplo = ([(1, \"Juan\"), (2, \"Maria\"), (3, \"Luis\"), (4, \"Laura\")], [( (1, \"Juan\"), (2, \"Maria\") ), ( (1, \"Juan\"), (3, \"Luis\") ), ( (4, \"Laura\"), (2, \"Maria\") )], [((1, \"Juan\"), \"Hola, esto es una publicación\", [])])\n\n-- Luego, llamar la función nombresDeUsuarios usando el caso de prueba\nmain = do\n    putStrLn \"Nombres de usuarios en la red social ejemplo:\"\n    print (nombresDeUsuarios redSocialEjemplo)",
    "filename": "41cec9d96187c6ab3f62fb9ac2a7770d_0.scala"
  },
  {
    "conversation_hash": "d750a2f31ab4a0508b600d44df9d4662",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "val cameraProviderFuture = ProcessCameraProvider.getInstance(this)\n\ncameraProviderFuture.addListener({\n    // Provider is now guaranteed to be available\n    val cameraProvider = cameraProviderFuture.get()\n\n    // Set up the preview use case to display camera preview.\n    val preview = Preview.Builder()\n        .build()\n\n    // Set up the image capture use case to allow taking photos.\n    val imageCapture = ImageCapture.Builder()\n        .build()\n\n    // Choose the camera which will be used for taking the picture.\n    val cameraSelector = CameraSelector.Builder()\n        .requireLensFacing(CameraSelector.LENS_FACING_BACK)\n        .build()\n\n    // Attach the preview use case and image capture use case to the camera with the selected camera + preview/request builder.\n    cameraProvider.bindToLifecycle(this, cameraSelector, preview, imageCapture)\n\n    // Set up the preview surface provider.\n    preview.setSurfaceProvider(viewFinder.createSurfaceProvider())\n}, ContextCompat.getMainExecutor(this))",
    "filename": "d750a2f31ab4a0508b600d44df9d4662_1.scala"
  },
  {
    "conversation_hash": "d9a8f3172cc5de2f0b1b6a5342d6d31d",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "import { Entity, PrimaryGeneratedColumn, Column, ManyToMany, JoinTable } from 'typeorm';\nimport { Post } from './Post';\n\n@Entity()\nexport class User {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column()\n  name: string;\n \n  @ManyToMany(() => Post, (post) => post.fans)\n  @JoinTable()\n  favoritePosts: Post[];\n}",
    "filename": "d9a8f3172cc5de2f0b1b6a5342d6d31d_0.scala"
  },
  {
    "conversation_hash": "d9a8f3172cc5de2f0b1b6a5342d6d31d",
    "code_index": 2,
    "language": "Scala",
    "libraries": [],
    "code": "import { Entity, PrimaryGeneratedColumn, Column, ManyToMany, JoinTable } from 'typeorm';\nimport { Post } from './Post';\n\n@Entity()\nexport class User {\n  // ... other properties\n\n  // Already existing favoritePosts relation\n  @ManyToMany(() => Post, (post) => post.fans)\n  @JoinTable()\n  favoritePosts: Post[];\n\n  // New hiddenPosts relation\n  @ManyToMany(() => Post, (post) => post.hiddenByUsers)\n  @JoinTable()\n  hiddenPosts: Post[];\n}",
    "filename": "d9a8f3172cc5de2f0b1b6a5342d6d31d_2.scala"
  },
  {
    "conversation_hash": "d9a8f3172cc5de2f0b1b6a5342d6d31d",
    "code_index": 3,
    "language": "Scala",
    "libraries": [],
    "code": "import { Entity, PrimaryGeneratedColumn, Column, ManyToMany } from 'typeorm';\nimport { User } from './User';\n\n@Entity()\nexport class Post {\n  // ... other properties\n\n  // Already existing fans relation\n  @ManyToMany(() => User, (user) => user.favoritePosts)\n  fans: User[];\n\n  // New hiddenByUsers relation\n  @ManyToMany(() => User, (user) => user.hiddenPosts)\n  hiddenByUsers: User[];\n}",
    "filename": "d9a8f3172cc5de2f0b1b6a5342d6d31d_3.scala"
  },
  {
    "conversation_hash": "32e4d7ca03505ff024a122cdb92d713a",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "viewModelScope.launch {\n    yourDao.getYourListOfIntegers().collect { listOfInts ->\n        // Do something with the list of integers here\n        Log.d(\"YourTag\", \"List of integers: $listOfInts\")\n    }\n}",
    "filename": "32e4d7ca03505ff024a122cdb92d713a_0.scala"
  },
  {
    "conversation_hash": "32e4d7ca03505ff024a122cdb92d713a",
    "code_index": 3,
    "language": "Scala",
    "libraries": [],
    "code": "@Entity\ndata class Student(\n    @PrimaryKey(autoGenerate = true) val id: Int,\n    val name: String,\n    val age: Int\n)",
    "filename": "32e4d7ca03505ff024a122cdb92d713a_3.scala"
  },
  {
    "conversation_hash": "51f298f1ffc03b514e917c7ea8651400",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "viewModelScope.launch {\n    emulatorUseCases.getAllDevices().collect { list ->\n        Log.d(\"DBG\", \"List: $list\")\n    }\n}",
    "filename": "51f298f1ffc03b514e917c7ea8651400_0.scala"
  },
  {
    "conversation_hash": "3ac37e344b96c7ece96940c9346a3004",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "val myViewModel = MyViewModel(\n    EmulatorUseCases(\n        insertDevice = InsertDevice(EmulatorRepositoryImpl(deviceDao)),\n        getAllDevices = GetAllDevices(EmulatorRepositoryImpl(deviceDao)),\n        getDeviceById = GetDeviceById(EmulatorRepositoryImpl(deviceDao))\n    )\n)",
    "filename": "3ac37e344b96c7ece96940c9346a3004_1.scala"
  },
  {
    "conversation_hash": "edcc2323f1f6052b95271308f8fb0980",
    "code_index": 6,
    "language": "Scala",
    "libraries": [],
    "code": "@Module\n@InstallIn(SingletonComponent::class)\nobject AppModule {\n    // Определение всех объектов зависимостей в AppModule\n}",
    "filename": "edcc2323f1f6052b95271308f8fb0980_6.scala"
  },
  {
    "conversation_hash": "6f62da88715b2c44cd9e33634583cb24",
    "code_index": 5,
    "language": "Scala",
    "libraries": [],
    "code": "@HiltAndroidTest\n@RunWith(AndroidJUnit4::class)\nclass EmulatorViewModelTest {\n\n    @get:Rule\n    var hiltRule = HiltAndroidRule(this)\n\n    // ...\n}",
    "filename": "6f62da88715b2c44cd9e33634583cb24_5.scala"
  },
  {
    "conversation_hash": "edeca19ca4cb706469ac6833e58d1b7d",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "db.collection.updateOne(\n   <filter>,\n   <update>,\n   { upsert: <boolean> }\n)",
    "filename": "edeca19ca4cb706469ac6833e58d1b7d_0.scala"
  },
  {
    "conversation_hash": "edeca19ca4cb706469ac6833e58d1b7d",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "db.collection.findOneAndUpdate(\n   <filter>,\n   <update>,\n   {\n      projection: <document>,\n      sort: <document>,\n      returnNewDocument: <boolean>,\n      upsert: <boolean>\n   }\n)",
    "filename": "edeca19ca4cb706469ac6833e58d1b7d_1.scala"
  },
  {
    "conversation_hash": "89c147106c51dcc0d414068677813b32",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "val list = listOf(1, 2, 3, 4, 5)\nval filteredList = list.filter { it % 2 == 0 }\n\n// 上面代码中的 Lambda 表达式 { it % 2 == 0 } 表示一个匿名函数\n// 因为 list.filter 函数需要一个函数类型作为参数，Lambda 表达式可以代替函数类型的变量\n// 上述代码会返回一个只包含偶数的列表 [2, 4]",
    "filename": "89c147106c51dcc0d414068677813b32_0.scala"
  },
  {
    "conversation_hash": "245490794224427cf7c4be8fdba35f8c",
    "code_index": 7,
    "language": "Scala",
    "libraries": [
      "android.content.Intent",
      "android.graphics.BitmapFactory",
      "android.net.Uri",
      "android.os.Bundle",
      "android.widget.Button",
      "android.widget.ImageView",
      "androidx.appcompat.app.AppCompatActivity",
      "java.io.FileDescriptor",
      "java.io.FileInputStream",
      "java.nio.ByteBuffer",
      "java.nio.channels.FileChannel"
    ],
    "code": "import android.content.Intent\nimport android.graphics.BitmapFactory\nimport android.net.Uri\nimport androidx.appcompat.app.AppCompatActivity\nimport android.os.Bundle\nimport android.widget.Button\nimport android.widget.ImageView\nimport java.io.FileDescriptor\nimport java.io.FileInputStream\nimport java.nio.ByteBuffer\nimport java.nio.channels.FileChannel",
    "filename": "245490794224427cf7c4be8fdba35f8c_7.scala"
  },
  {
    "conversation_hash": "02cb4e257b66cd452e7dbc4360d5d6fc",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "DispatchQueue.main.asyncAfter(deadline: .now() + 2) {\n    // qui vieni eseguito dopo 2 secondi\n    getPrice { price in\n        // qui viene eseguita la tua funzione getPrice()\n        // e i risultati vengono passati attraverso il completionHandler\n    }\n}",
    "filename": "02cb4e257b66cd452e7dbc4360d5d6fc_0.scala"
  },
  {
    "conversation_hash": "3401238658ef2cc81757687445a1b12b",
    "code_index": 4,
    "language": "Scala",
    "libraries": [],
    "code": "val myList = mutableListOf<Int>(1, 2, 3, 4, 5, 6)\nval myObject = 3\n\nif (myList.contains(myObject)) {\n    myList.remove(myObject)\n    myList.add(myObject)\n}\n\nprintln(myList)",
    "filename": "3401238658ef2cc81757687445a1b12b_4.scala"
  },
  {
    "conversation_hash": "3401238658ef2cc81757687445a1b12b",
    "code_index": 6,
    "language": "Scala",
    "libraries": [],
    "code": "data class MyObject(val name: String, val id: Int)\n\nval myList = mutableListOf<MyObject>(\n    MyObject(\"1\", 1),\n    MyObject(\"2\", 2),\n    MyObject(\"1\", 3),\n    MyObject(\"4\", 4)\n)\n\nval targetName = \"1\"\nval targetObject = myList.find { it.name == targetName }\n\nif (targetObject != null) {\n    myList.remove(targetObject)\n    myList.add(targetObject)\n}\n\nprintln(myList)",
    "filename": "3401238658ef2cc81757687445a1b12b_6.scala"
  },
  {
    "conversation_hash": "3401238658ef2cc81757687445a1b12b",
    "code_index": 8,
    "language": "Scala",
    "libraries": [],
    "code": "val targetObjects = myList.filter { it.name == targetName }\n\nif (targetObjects.isNotEmpty()) {\n    myList.removeAll(targetObjects)\n    myList.addAll(targetObjects)\n}\n\nprintln(myList)",
    "filename": "3401238658ef2cc81757687445a1b12b_8.scala"
  },
  {
    "conversation_hash": "06fbae52127546eef5f14ab10f5c0ed3",
    "code_index": 3,
    "language": "Scala",
    "libraries": [],
    "code": "class Chessboard: ObservableObject {\n    @Published var board: [[ChessPiece?]] = Array(repeating: Array(repeating: nil, count: 8), count: 8)\n\n    // Implementa la logica per inizializzare la scacchiera con i pezzi di scacchi\n    // Implementa la logica per gestire e validare le mosse dei pezzi di scacchi\n}",
    "filename": "06fbae52127546eef5f14ab10f5c0ed3_3.scala"
  },
  {
    "conversation_hash": "15700047e223da078f3c8be8aa3c1881",
    "code_index": 10,
    "language": "Scala",
    "libraries": [
      "React"
    ],
    "code": "import React from \"react\";\nimport \"./Linktree.css\";\n\ninterface LinkItemProps {\n  title: string;\n  url: string;\n}\n\nconst LinkItem: React.FC<LinkItemProps> = ({ title, url }) => (\n  <a href={url} className=\"link-item\">\n    {title}\n  </a>\n);\n\ninterface LinktreeProps {\n  links: LinkItemProps[];\n}\n\nconst Linktree: React.FC<LinktreeProps> = ({ links }) => (\n  <div className=\"link-container\">\n    {links.map((link) => (\n      <LinkItem key={link.title} title={link.title} url={link.url} />\n    ))}\n  </div>\n);\n\nexport default Linktree;",
    "filename": "15700047e223da078f3c8be8aa3c1881_10.scala"
  },
  {
    "conversation_hash": "94691cca927f50edaeb2360092425c10",
    "code_index": 1,
    "language": "Scala",
    "libraries": [
      "React"
    ],
    "code": "import React from \"react\";\n\ninterface DiningHallCardProps {\n  name: string;\n  image: string;\n  averageRating: number;\n}\n\nconst DiningHallCard: React.FC<DiningHallCardProps> = ({\n  name,\n  image,\n  averageRating,\n}) => {\n  return (\n    <div>\n      <img src={image} alt={name} />\n      <h3>{name}</h3>\n      <p>Average Rating: {averageRating.toFixed(1)}</p>\n    </div>\n  );\n};\n\nexport default DiningHallCard;",
    "filename": "94691cca927f50edaeb2360092425c10_1.scala"
  },
  {
    "conversation_hash": "94691cca927f50edaeb2360092425c10",
    "code_index": 7,
    "language": "Scala",
    "libraries": [
      "React"
    ],
    "code": "import React from \"react\";\n\ninterface DiningHallCardProps {\n  name: string;\n  image: string;\n  averageRating: number;\n}\n\nconst DiningHallCard: React.FC<DiningHallCardProps> = ({\n  name,\n  image,\n  averageRating,\n}) => {\n  return (\n    <div>\n      <img src={image} alt={name} />\n      <h3>{name}</h3>\n      <p>Average Rating: {averageRating.toFixed(1)}</p>\n    </div>\n  );\n};\n\nexport default DiningHallCard;",
    "filename": "94691cca927f50edaeb2360092425c10_7.scala"
  },
  {
    "conversation_hash": "452bdf6746cf1787faf8ed36750fc685",
    "code_index": 2,
    "language": "Scala",
    "libraries": [
      "Helmet",
      "Preact"
    ],
    "code": "import { h, Component } from 'preact';\nimport Helmet from 'preact-helmet';\nimport './style.css';\n\nexport default class App extends Component {\n  render() {\n    return (\n      <div className=\"app\">\n        <Helmet>\n          <title>My Astro Preact App</title>\n        </Helmet>\n        <h1>Hello from Preact!</h1>\n      </div>\n    );\n  }\n}",
    "filename": "452bdf6746cf1787faf8ed36750fc685_2.scala"
  },
  {
    "conversation_hash": "fa321a66a40e2e2eb16529a0739cedaa",
    "code_index": 7,
    "language": "Scala",
    "libraries": [],
    "code": "num_edit = QSpinBox()\nnum_edit.setStyleSheet('''\n                        QSpinBox::up-button {\n                            subcontrol-origin: border;\n                            subcontrol-position: left; /* 这里是将加号按钮放在左边 */\n                            width: 40px;\n                            height: 40px;\n                        }\n                        QSpinBox::down-button {\n                            /* 同理，将减号按钮放在右边 */\n                            subcontrol-origin: border;\n                            subcontrol-position: right;\n                            width: 40px;\n                            height: 40px;\n                        }\n                    ''')",
    "filename": "fa321a66a40e2e2eb16529a0739cedaa_7.scala"
  },
  {
    "conversation_hash": "fa321a66a40e2e2eb16529a0739cedaa",
    "code_index": 9,
    "language": "Scala",
    "libraries": [],
    "code": "num_edit = QSpinBox()\nnum_edit.setStyleSheet('''\n                        QSpinBox::up-button {\n                            subcontrol-origin: border;\n                            subcontrol-position: left;\n                            width: 40px;\n                            height: 40px;\n                        }\n                        QSpinBox::down-button {\n                            subcontrol-origin: border;\n                            subcontrol-position: right;\n                            width: 40px;\n                            height: 40px;\n                        }\n                    ''')\nnum_edit.setSizePolicy(QSizePolicy.Expanding, QSizePolicy.Fixed)   # 设置自动水平放大，竖直固定大小",
    "filename": "fa321a66a40e2e2eb16529a0739cedaa_9.scala"
  },
  {
    "conversation_hash": "a23f34711ac09cd5fccb262d29f42b38",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "val menuItems = listOf(\"Item 1\", \"Item 2\", \"Item 3\")\n\nvar expanded by remember { mutableStateOf(false) }\nval toggleMenu: () -> Unit = { expanded = !expanded }\n\nColumn {\n    FloatingActionButton(onClick = toggleMenu) { /* FAB content */ }\n    DropdownMenu(expanded = expanded, onDismissRequest = { expanded = false }) {\n        menuItems.forEachIndexed { index, item ->\n            DropdownMenuItem(onClick = {\n                // Handle menu item click\n                expanded = false\n            }) {\n                Text(text = item)\n            }\n        }\n    }\n}",
    "filename": "a23f34711ac09cd5fccb262d29f42b38_1.scala"
  },
  {
    "conversation_hash": "a23f34711ac09cd5fccb262d29f42b38",
    "code_index": 8,
    "language": "Scala",
    "libraries": [],
    "code": "val transition = updateTransition(targetState = if (expanded) 1f else 0f)\nval size by transition.animateDp(\n    transitionSpec = { tween(500, easing = FastOutSlowInEasing) },\n    label = \"fab size\"\n) { state ->\n    if (state == 1f) 0.dp else FloatingActionButtonDefaults.miniFabSize\n}\n\nval alpha by transition.animateFloat(\n    transitionSpec = { tween(500, easing = FastOutSlowInEasing) },\n    label = \"screen visibility\"\n) { state ->\n    if (state == 1f) 1f else 0f\n}",
    "filename": "a23f34711ac09cd5fccb262d29f42b38_8.scala"
  },
  {
    "conversation_hash": "847a5467d2caaa0d8276ef48c692fd50",
    "code_index": 8,
    "language": "Scala",
    "libraries": [],
    "code": "// add the interceptor to the providers array\n@NgModule({\n  ...\n  providers: [\n    { provide: HTTP_INTERCEPTORS, useClass: MyInterceptor, multi: true }\n  ]\n})\nexport class AppModule { }",
    "filename": "847a5467d2caaa0d8276ef48c692fd50_8.scala"
  },
  {
    "conversation_hash": "bb42decfb7fcdc0c45cf91918a19832a",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "val currentScreen = remember { mutableStateOf(Screen.Home) }\n\nColumn {\n    BottomNavigation {\n        BottomNavigationItem(\n            selected = currentScreen.value == Screen.Home,\n            onClick = { currentScreen.value = Screen.Home },\n            label = { Text(text = \"Home\") }\n        )\n        BottomNavigationItem(\n            selected = currentScreen.value == Screen.Settings,\n            onClick = { currentScreen.value = Screen.Settings },\n            label = { Text(text = \"Settings\") }\n        )\n    }\n    Crossfade(current = currentScreen.value) { screen ->\n        when (screen) {\n            Screen.Home -> HomeScreen()\n            Screen.Settings -> SettingsScreen()\n        }\n    }\n}\n\nsealed class Screen {\n    object Home : Screen()\n    object Settings : Screen()\n}",
    "filename": "bb42decfb7fcdc0c45cf91918a19832a_1.scala"
  },
  {
    "conversation_hash": "bb42decfb7fcdc0c45cf91918a19832a",
    "code_index": 2,
    "language": "Scala",
    "libraries": [],
    "code": "val currentScreen = remember { mutableStateOf(Screen.Home) }\n\nColumn {\n    BottomNavigation {\n        BottomNavigationItem(\n            selected = currentScreen.value == Screen.Home,\n            onClick = { currentScreen.value = Screen.Home },\n            label = { Text(text = \"Home\") }\n        )\n        BottomNavigationItem(\n            selected = currentScreen.value == Screen.Settings,\n            onClick = { currentScreen.value = Screen.Settings },\n            label = { Text(text = \"Settings\") }\n        )\n    }\n    \n    val modifier = Modifier\n        .fillMaxWidth()    \n        .animateContentSize()\n\n    when (currentScreen.value) {\n        Screen.Home -> HomeScreen(modifier)\n        Screen.Settings -> SettingsScreen(modifier)\n    }\n}\n\nsealed class Screen {\n    object Home : Screen()\n    object Settings : Screen()\n}",
    "filename": "bb42decfb7fcdc0c45cf91918a19832a_2.scala"
  },
  {
    "conversation_hash": "946799d177e824b1a418b04e9ffcc5d6",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "scala\nobject SeventhHarmonics extends App {\n\n  case class Note(frequency: Double, duration: Double)\n\n  val tones = Seq(\n    Note(100, 0.5),\n    Note(115, 0.5),\n    Note(135, 0.5),\n    Note(155, 0.5),\n    Note(185, 0.5),\n    Note(210, 0.5),\n    Note(245, 0.5),\n    Note(275, 0.5),\n    Note(310, 0.5),\n    Note(350, 0.5),\n    Note(395, 0.5),\n    Note(440, 0.5),\n    Note(490, 0.5),\n    Note(550, 0.5),\n    Note(620, 0.5),\n    Note(695, 0.5),\n    Note(780, 0.5),\n    Note(880, 0.5),\n    Note(980, 0.5),\n    Note(1100, 0.5)\n  )\n\n}",
    "filename": "946799d177e824b1a418b04e9ffcc5d6_0.scala"
  },
  {
    "conversation_hash": "db27cb98787eedd126065e02afd81129",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "object SevenLimitJustIntervals {\n  def main(args: Array[String]): Unit = {\n    \n    // Define the fundamental frequency.\n    val fundamentalFreq = 440.0 // A4 note\n    \n    // Define the frequency ratios for the 20 notes that use seven limit just intervals.\n    val ratios = Array(1.0, 7.0/6, 5.0/4, 4.0/3, 7.0/5, 3.0/2, 7.0/4, 2.0/3, 7.0/3, 5.0/2, 7.0/2, 8.0/3, 7.0/1.5, 16.0/5, 7.0/1.25, 32.0/7, 14.0/3, 64.0/7, 28.0/3, 128.0/7)\n    \n    // Generate the frequencies for the 20 notes based on the defined frequency ratios.\n    val frequencies = ratios.map(r => r * fundamentalFreq)\n    \n    // Define the names or designations for the 20 notes.\n    val noteNames = Array(\"A\", \"A♯/B♭\", \"B\", \"C\", \"C♯/D♭\", \"D\", \"D♯/E♭\", \"E\", \"F\", \"F♯/G♭\", \"G\", \"G♯/A♭\", \"A♯♯/B\", \"B♯/C\", \"C♯♯/D\", \"E♭/D♯\", \"F♯♯/G\", \"A♭♯/G♯\", \"B♯♯/C♯\", \"D♭♯/E\")\n\n    // Print the frequencies and names for the 20 notes.\n    frequencies.zip(noteNames).foreach { case (freq, name) => println(f\"$name%-4s: $freq%.2f Hz\") }\n  }\n}",
    "filename": "db27cb98787eedd126065e02afd81129_0.scala"
  },
  {
    "conversation_hash": "c3aa94ca78765877347415659c9cd676",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "let\n    Remove86 = (PhoneNumber as text) => \n        if Text.StartsWith(PhoneNumber, \"86\") then \n            Text.Range(PhoneNumber, 2)\n        else \n            PhoneNumber\nin \n    Remove86",
    "filename": "c3aa94ca78765877347415659c9cd676_0.scala"
  },
  {
    "conversation_hash": "81bdb170c8eeca40db5a39e7dae49b47",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "let\n    removePrefix = (textValue as text) =>\n        if Text.StartsWith(textValue, \"86\") then Text.Range(textValue, 2) else textValue\nin\n    removePrefix",
    "filename": "81bdb170c8eeca40db5a39e7dae49b47_1.scala"
  },
  {
    "conversation_hash": "f3be53de8da0f507ec862ea9c8d91334",
    "code_index": 6,
    "language": "Scala",
    "libraries": [
      "type"
    ],
    "code": "---\nimport type { CompatibilityItem } from \"~/types\";\n\nexport interface Props {\n    items: Array<CompatibilityItem>;\n    title: string;\n    url: string;\n}\n\nconst { items, title, url } = Astro.props;\n---\n\n<div class=\"w-full max-w-6xl space-y-2\">\n    <div class=\"relative border border-default bg-offset px-6 pb-4 pt-8\">\n        <h3\n            class=\"absolute right-4 top-0 -translate-y-1/2 rounded-full border border-current bg-default px-4 py-1 uppercase tracking-tight text-xs\"\n        >\n            {title}\n        </h3>\n        <ul class=\"grid grid-cols-2 gap-8 sm:grid-cols-3 md:grid-cols-6\">\n            {\n                items.map((item) => (\n                    <li>\n                        <a\n                            class=\"flex flex-col items-center gap-2\"\n                            href={item.url}\n                        >\n                            <img class=\"h-12\" src={item.iconUrl} alt={item.title} />\n                            <span>{item.title}</span>\n                        </a>\n                    </li>\n                ))\n            }\n        </ul>\n    </div>\n    <p class=\"text-right text-sm\">\n        <a class=\"text-primary\" href={url}> ...and more &rarr;</a>\n    </p>\n</div>",
    "filename": "f3be53de8da0f507ec862ea9c8d91334_6.scala"
  },
  {
    "conversation_hash": "d6a706eb3dcac3c98be4a6c15e992fe4",
    "code_index": 4,
    "language": "Scala",
    "libraries": [],
    "code": "# Makefile\n\nCFLAGS = -Wall -g -Xdebug-dwarf2 -Xenum -Ksmall-data=0 -Xforce-declarations -Km\nLFLAGS = -Xlinker -Map=output.map\n\nSRC_FILES = main.c module1.c module2.c\nOBJ_FILES = $(SRC_FILES:.c=.o)\n\nall: myprogram\n\nmyprogram: $(OBJ_FILES)\n    dcc $(LFLAGS) -o $@ $(OBJ_FILES)\n\n%.o: %.c\n    dcc $(CFLAGS) -c $< -o $@\n\nclean:\n    rm -f $(OBJ_FILES) myprogram output.map",
    "filename": "d6a706eb3dcac3c98be4a6c15e992fe4_4.scala"
  },
  {
    "conversation_hash": "a50eaed6d207deb9abe11f2a45858a95",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "dependencies {\n    // 添加 ANY_WHERE_DOOR 依赖\n    implementation ANY_WHERE_DOOR_API\n\n    def isLocalTestChannel = gradle.ext.OTT_CI_CHANNEL in [\"local_test\", \"local_test_qa\", \"bestv_local_test\"]\n    def shouldIncludeAnywhereDoor = gradle.ext.ANY_WHERE_DOOR_ENABLE && (!gradle.ext.buildByCi || isLocalTestChannel)\n\n    if (shouldIncludeAnywhereDoor) {\n        println(\"Including Anywhere Door as runtimeOnly, buildByCi: \" + gradle.ext.buildByCi)\n        runtimeOnly(ANY_WHERE_DOOR) {\n            exclude group: 'com.android.support'\n        }\n    } else {\n        println(\"Not including Anywhere Door, buildByCi: \" + gradle.ext.buildByCi)\n    }\n}",
    "filename": "a50eaed6d207deb9abe11f2a45858a95_0.scala"
  },
  {
    "conversation_hash": "9512a70c3eb8278d026ac0afd5ff8b14",
    "code_index": 2,
    "language": "Scala",
    "libraries": [],
    "code": "type PaginateFunction = (\n  items: any[],\n  options: { pageSize: number; currentPage?: number }\n) => {\n  totalItems: number;\n  totalPages: number;\n  currentPage: number;\n  pageSize: number;\n  items: any[];\n};",
    "filename": "9512a70c3eb8278d026ac0afd5ff8b14_2.scala"
  },
  {
    "conversation_hash": "76304932dea4ca299ac73f8fc2286ae0",
    "code_index": 3,
    "language": "Scala",
    "libraries": [],
    "code": "import { MatToolbarModule } from '@angular/material/toolbar';\n\n@NgModule({\n  imports: [\n    // ...\n    MatToolbarModule\n  ],\n  // ...\n})\nexport class AppModule { }",
    "filename": "76304932dea4ca299ac73f8fc2286ae0_3.scala"
  },
  {
    "conversation_hash": "76304932dea4ca299ac73f8fc2286ae0",
    "code_index": 7,
    "language": "Scala",
    "libraries": [],
    "code": "export class AppComponent {\n     slides = [\n       {\n         image: 'https://via.placeholder.com/900x500?text=Slide+1',\n         title: 'Slide 1',\n         description: 'This is the first slide'\n       },\n       {\n         image: 'https://via.placeholder.com/900x500?text=Slide+2',\n         title: 'Slide 2',\n         description: 'This is the second slide'\n       },\n       {\n         image: 'https://via.placeholder.com/900x500?text=Slide+3',\n         title: 'Slide 3',\n         description: 'This is the third slide'\n       }\n     ];\n   }",
    "filename": "76304932dea4ca299ac73f8fc2286ae0_7.scala"
  },
  {
    "conversation_hash": "c259e1a886371843c52c29a9bdf02f84",
    "code_index": 4,
    "language": "Scala",
    "libraries": [],
    "code": "dependencies {\n    implementation 'com.android.support:appcompat-v7:28.0.0'\n    implementation \"org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version\"\n    implementation 'com.android.support.constraint:constraint-layout:1.1.3'\n    implementation 'com.android.support:support-v4:28.0.0'\n    implementation 'com.android.support:design:28.0.0'\n    implementation 'com.android.support:support-vector-drawable:28.0.0'\n    implementation 'com.google.android.gms:play-services-ads:17.2.0'\n    implementation 'com.google.android.gms:play-services-auth:16.0.1'\n    implementation 'com.google.android.gms:play-services-games:16.0.0'\n    implementation 'com.google.android.gms:play-services-drive:16.0.0'\n    implementation 'com.google.android.gms:play-services-location:16.0.0'\n\n    implementation 'com.google.android.ump:user-messaging-platform:1.4.0'\n\n    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.1.1'\n    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.1.1'\n\n    implementation 'org.jetbrains.kotlinx:kotlinx-serialization-runtime:0.11.1'\n\n    implementation 'javax.inject:javax.inject:1'\n\n    implementation 'com.squareup.okhttp3:okhttp:3.12.0'\n    implementation 'com.squareup.retrofit2:retrofit:2.5.0'\n    implementation 'com.squareup.retrofit2:converter-gson:2.5.0'\n\n    implementation 'com.github.bumptech.glide:glide:4.10.0'\n}\n\nandroid {\n    compileSdkVersion 28\n    defaultConfig {\n        applicationId \"com.example.opengltest\"\n        minSdkVersion 15\n        targetSdkVersion 28\n        versionCode 1\n        versionName \"1.0\"\n        testInstrumentationRunner \"android.support.test.runner.AndroidJUnitRunner\"\n    }\n    buildTypes {\n        release {\n            minifyEnabled false\n            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'\n        }\n    }\n}",
    "filename": "c259e1a886371843c52c29a9bdf02f84_4.scala"
  },
  {
    "conversation_hash": "d6a1a3fc6236e4808a8366842dc4a5cb",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "kotlin\ndata class Person(val name: String, val age: Int)\n\nval people = listOf(\n    Person(\"Alice\", 25),\n    Person(\"Bob\", 30),\n    Person(\"Charlie\", 35)\n)\n\n// find person whose name is \"Bob\"\nval bob = people.find { it.name == \"Bob\" }\n\nif (bob != null) {\n    println(\"Bob is ${bob.age} years old.\")\n} else {\n    println(\"Bob not found.\")\n}",
    "filename": "d6a1a3fc6236e4808a8366842dc4a5cb_1.scala"
  },
  {
    "conversation_hash": "1f48747d6ff0f1e189d1ef021814b1fc",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "is EmulatorEvent.FabAddClick -> {\n    _state.value = state.value.copy(\n        isFabExpanded = !state.value.isFabExpanded\n    )\n}",
    "filename": "1f48747d6ff0f1e189d1ef021814b1fc_0.scala"
  },
  {
    "conversation_hash": "48ab97826c6b80e414ebb5fdbf3a4228",
    "code_index": 4,
    "language": "Scala",
    "libraries": [],
    "code": "import { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\n\n@NgModule({\n  imports: [\n    //...\n    FontAwesomeModule\n  ],\n  //...\n})\n\nexport class AppModule { }",
    "filename": "48ab97826c6b80e414ebb5fdbf3a4228_4.scala"
  },
  {
    "conversation_hash": "48ab97826c6b80e414ebb5fdbf3a4228",
    "code_index": 7,
    "language": "Scala",
    "libraries": [],
    "code": "import { MatToolbarModule } from '@angular/material/toolbar';\n\n@NgModule({\n  imports: [\n    // ...\n    MatToolbarModule\n  ],\n  // ...\n})\nexport class AppModule { }",
    "filename": "48ab97826c6b80e414ebb5fdbf3a4228_7.scala"
  },
  {
    "conversation_hash": "8e91d618f39a225d48cddf7c5998dfe4",
    "code_index": 14,
    "language": "Scala",
    "libraries": [],
    "code": "import { Book } from \"./book.interface\";\n\nexport class BookService {\n  private books: Book[] = [];\n\n  addBook(book: Book): void {\n    this.books.push(book);\n  }\n\n  getBooks(): Book[] {\n    return this.books;\n  }\n\n  findBookById(id: number): Book | undefined {\n    return this.books.find(book => book.id === id);\n  }\n}",
    "filename": "8e91d618f39a225d48cddf7c5998dfe4_14.scala"
  },
  {
    "conversation_hash": "61a14e66df2cb60904904e4d022b4a8b",
    "code_index": 2,
    "language": "Scala",
    "libraries": [],
    "code": "{editingGrade && (\n    <div>\n        <h1>Modifier une note</h1>\n        <form onSubmit={handleEditSubmit}>\n            <label>\n                Note actuelle : {editingGrade.gradeValue}\n            </label>\n            <label>\n                Nouvelle note :\n                <input type=\"number\" name=\"editedGrade\" />\n            </label>\n            <input type=\"submit\" value=\"Modifier\" />\n            <button onClick={() => setEditingGrade(null)}>Annuler</button>\n        </form>\n    </div>\n)}",
    "filename": "61a14e66df2cb60904904e4d022b4a8b_2.scala"
  },
  {
    "conversation_hash": "4b0301ccaa314d79f35917c7f4ffaf9d",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "is EmulatorEvent.DeviceUpdatePosition -> {\n    _state.update { currentState ->\n        val updatedDevice = currentState.device.copy(position = newPosition)\n        currentState.copy(device = updatedDevice)\n    }\n}",
    "filename": "4b0301ccaa314d79f35917c7f4ffaf9d_0.scala"
  },
  {
    "conversation_hash": "05fd399063b59cd287f450e94fe106d1",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "00000000004004ee <main>:\n    4004ee: 55                   \tpush   rbp\n    4004ef: 48 89 e5             \tmov    rbp,rsp\n    4004f2: 48 83 ec 10          \tsub    rsp,0x10\n    4004f6: 89 7d fc             \tmov    DWORD PTR [rbp-0x4],edi\n    4004f9: 48 89 75 f0          \tmov    QWORD PTR [rbp-0x10],rsi\n    4004fd: bf a8 05 40 00       \tmov    edi,0x4005a8\n    400502: e8 a9 fe ff ff        \tcall   0x4003b0 <puts@plt>\n    400507: b8 00 00 00 00       \tmov    eax,0x0\n    40050c: c9                   \tleave  \n    40050d: c3                   \tret",
    "filename": "05fd399063b59cd287f450e94fe106d1_1.scala"
  },
  {
    "conversation_hash": "33d383f1a73c26031a4e30a3ce638f2d",
    "code_index": 5,
    "language": "Scala",
    "libraries": [],
    "code": "import { HttpClient } from '@angular/common/http';\n     import { Injectable } from '@angular/core';\n     import { Observable } from 'rxjs';\n\n     @Injectable({\n       providedIn: 'root'\n     })\n     export class UploadService {\n       constructor(private http: HttpClient) {}\n\n       getPresignedUrl(objectKey: string): Observable<string> {\n         return this.http.get<string>(`/api/s3/upload-url?objectKey=${objectKey}`);\n       }\n\n       uploadFileToS3(url: string, file: File): Observable<any> {\n         return this.http.put(url, file);\n       }\n     }",
    "filename": "33d383f1a73c26031a4e30a3ce638f2d_5.scala"
  },
  {
    "conversation_hash": "f19c735719626bb911721ef5259a6b5e",
    "code_index": 6,
    "language": "Scala",
    "libraries": [],
    "code": "import { FormsModule } from '@angular/forms';\n\n@NgModule({\n  imports: [\n    FormsModule\n  ]\n})\nexport class AppModule { }",
    "filename": "f19c735719626bb911721ef5259a6b5e_6.scala"
  },
  {
    "conversation_hash": "b625a830d136f8d178e4e84020c59063",
    "code_index": 11,
    "language": "Scala",
    "libraries": [
      "androidx.room.Entity",
      "androidx.room.PrimaryKey"
    ],
    "code": "import androidx.room.Entity\nimport androidx.room.PrimaryKey\n\n@Entity(tableName = \"court\")\ndata class Court(\n    @PrimaryKey var id: Int,\n    var name: String,\n    var sport: String,\n    var rating: Float\n)",
    "filename": "b625a830d136f8d178e4e84020c59063_11.scala"
  },
  {
    "conversation_hash": "67625935593e587c8c2c79ce98f2a323",
    "code_index": 2,
    "language": "Scala",
    "libraries": [
      "androidx.compose.foundation.layout.Box",
      "androidx.compose.foundation.layout.Column",
      "androidx.compose.foundation.layout.fillMaxHeight",
      "androidx.compose.foundation.layout.fillMaxWidth",
      "androidx.compose.foundation.layout.height",
      "androidx.compose.foundation.layout.wrapContentSize",
      "androidx.compose.material.Text",
      "androidx.compose.runtime.Composable",
      "androidx.compose.ui.Alignment",
      "androidx.compose.ui.Modifier",
      "androidx.compose.ui.text.style.TextAlign",
      "androidx.compose.ui.tooling.preview.Preview",
      "androidx.compose.ui.unit.dp",
      "com.google.accompanist.text.TextWithContentDynamicSizing"
    ],
    "code": "import androidx.compose.foundation.layout.Box\nimport androidx.compose.foundation.layout.Column\nimport androidx.compose.foundation.layout.fillMaxHeight\nimport androidx.compose.foundation.layout.fillMaxWidth\nimport androidx.compose.foundation.layout.height\nimport androidx.compose.foundation.layout.wrapContentSize\nimport androidx.compose.material.Text\nimport androidx.compose.runtime.Composable\nimport androidx.compose.ui.Alignment\nimport androidx.compose.ui.Modifier\nimport androidx.compose.ui.text.style.TextAlign\nimport androidx.compose.ui.tooling.preview.Preview\nimport androidx.compose.ui.unit.dp\nimport com.google.accompanist.text.TextWithContentDynamicSizing",
    "filename": "67625935593e587c8c2c79ce98f2a323_2.scala"
  },
  {
    "conversation_hash": "a951adb373ca9ab6b180e5fd5c9ed406",
    "code_index": 8,
    "language": "Scala",
    "libraries": [],
    "code": "resource \"aws_vpc\" \"vpc_b\" {\n  cidr_block = var.vpc_cidr_block\n  tags = {\n    Name = \"VPC-Account-B\"\n  }\n}\n\nresource \"aws_vpc_peering_connection_accepter\" \"accepter_a_b\" {\n  vpc_peering_connection_id = var.vpc_peering_connection_id_a_b\n}",
    "filename": "a951adb373ca9ab6b180e5fd5c9ed406_8.scala"
  },
  {
    "conversation_hash": "a951adb373ca9ab6b180e5fd5c9ed406",
    "code_index": 11,
    "language": "Scala",
    "libraries": [],
    "code": "resource \"aws_vpc\" \"vpc_c\" {\n  cidr_block = var.vpc_cidr_block\n  tags = {\n    Name = \"VPC-Account-C\"\n  }\n}\n\nresource \"aws_vpc_peering_connection_accepter\" \"accepter_a_c\" {\n  vpc_peering_connection_id = var.vpc_peering_connection_id_a_c\n}",
    "filename": "a951adb373ca9ab6b180e5fd5c9ed406_11.scala"
  },
  {
    "conversation_hash": "7e3c4866386fedabb0ddbcd8f2328133",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "export class MyComponent {\n  ...\n  contActLength: number;\n  ...\n  constructor(private myService: MyService) {}\n  ...\n  ngOnInit() {\n    this.myService.getData().subscribe(data => {\n      this.contActLength = data.doc.cont_act.length;\n      ...\n    });\n  }\n  ...\n}",
    "filename": "7e3c4866386fedabb0ddbcd8f2328133_0.scala"
  },
  {
    "conversation_hash": "581911fd2b327d1d1fca1ed4b2ac0c72",
    "code_index": 3,
    "language": "Scala",
    "libraries": [],
    "code": "import { Controller, Get } from '@nestjs/common';\n\n@Controller()\nexport class AppController {\n  @Get('bot/token')\n  healthCheck() {\n    return { status: 'ok' };\n  }\n}",
    "filename": "581911fd2b327d1d1fca1ed4b2ac0c72_3.scala"
  },
  {
    "conversation_hash": "581911fd2b327d1d1fca1ed4b2ac0c72",
    "code_index": 8,
    "language": "Scala",
    "libraries": [],
    "code": "import { Controller, Get } from '@nestjs/common';\n\n@Controller()\nexport class AppController {\n  @Get('bot/token')\n  healthCheck() {\n    return { status: 'ok' };\n  }\n}",
    "filename": "581911fd2b327d1d1fca1ed4b2ac0c72_8.scala"
  },
  {
    "conversation_hash": "451ac87f6e29353ed40f0f3cdbfd7549",
    "code_index": 2,
    "language": "Scala",
    "libraries": [],
    "code": "Размерность таблицы recipes: (1500, 16)\nТипы данных в таблице recipes:\n name                        object\nid                          object\nminutes                      int64\ncontributor_id              object\nsubmitted                   object\ntags                        object\nnutrition                   object\nn_steps                      int64\nsteps                       object\ndescription                 object\ningredients                 object\nn_ingredients                int64\ncalories                   float64\ntotal_fat                  float64\nsugar                       object\nsodium                     float64\ndtype: object\nРазмерность таблицы reviews: (126696, 2)\nТипы данных в таблице reviews:\n user_id     object\nrecipe_id    object\ndtype: object",
    "filename": "451ac87f6e29353ed40f0f3cdbfd7549_2.scala"
  },
  {
    "conversation_hash": "75bf6a6074292d8606c4ca6d17406725",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "def customFieldToCollect = 'customfield_10321'\ndef maxResults = 500\ndef total = 1\ndef cur = 0\nwhile(cur <= 9500){\n    def jql = 'project = ATEF AND issuetype = Epic AND key > ATEF-' + cur + ' AND key <= ATEF-' + (cur+500) + ' ORDER BY key ASC'\n    def fieldValues = []\n    def epics = []\n    while(cur < total){\n        def page = get('/rest/api/3/search')\n        .header('Content-Type', 'application/json')\n        .queryString('startAt', cur)\n        .queryString('maxResults', maxResults)\n        .queryString('jql', jql)\n        .queryString('fields', customFieldToCollect)\n        .asObject(Map).getBody()\n        total = page[\"total\"]\n        def issues = page[\"issues\"] as List<Map>\n        cur += issues.size()\n        epics.addAll(issues)\n    }\n    epics.each{epic ->\n        def eingStat = epic[\"fields\"][customFieldToCollect] as List\n        eingStat = eingStat.collect{it[\"value\"]}\n        def test = put(\"/rest/api/3/issue/\" + epic[\"key\"])\n        .header('Accept', 'application/json')\n        .header('Content-Type', 'application/json')\n        .queryString(\"overrideScreenSecurity\", true)\n        .body(\n            [fields:\n                [customfield_10308: [\n                    value: eingStat[eingStat.size()-1] \n                ]\n            ]\n        ])\n        .asObject(Map).getBody()\n        logger.warn( [fields:\n            [customfield_10308: [\n                value: eingStat[eingStat.size()-1] \n            ]\n        ]\n        ].toString())\n    }\n    cur += 500\n}",
    "filename": "75bf6a6074292d8606c4ca6d17406725_1.scala"
  },
  {
    "conversation_hash": "cf59bd271f4ae9e5331884f4b0ba8230",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "def customFieldToCollect = 'customfield_10321'\n// paginated search\ndef maxResults = 500\ndef total = 1\ndef cur = 0\n// results\ndef fieldValues = []\ndef epics = []\n\ndef initialKey = 1\ndef finalKey = 10000\ndef step = 500\n\nfor (int i = initialKey; i <= finalKey; i += step) {\n    def curKeyRange = \"key >= ATEF-${i} AND key < ATEF-${(i + step)}\"\n    def jql = \"project = ATEF AND issuetype = Epic AND ${curKeyRange} ORDER BY key ASC\"\n    \n    while(cur < total) {\n        // search for up to 500 issues\n        def page = get('/rest/api/3/search')\n        .header('Content-Type', 'application/json')\n        .queryString('startAt', cur)\n        .queryString('maxResults', maxResults)\n        .queryString('jql', jql)\n        .queryString('fields', customFieldToCollect)\n        .asObject(Map).getBody()\n\n        total = page[\"total\"]\n        def issues = page[\"issues\"] as List<Map>\n        cur += issues.size() // REST API is stupid and may return less than 500 even if there are more.\n        epics.addAll(issues)\n    }\n    \n    total = 1 // Reset 'total' to enter the while loop for the next key range\n    cur = 0 // Reset 'cur' for the next key range\n}\n\n// Sort the field values in ascending order\nepics.each { epic ->\n    def eingStat = epic[\"fields\"][customFieldToCollect] as List\n    eingStat = eingStat.collect { it[\"value\"] }\n    def test = put(\"/rest/api/3/issue/\" + epic[\"key\"])\n    .header('Accept', 'application/json')\n    .header('Content-Type', 'application/json')\n    .queryString(\"overrideScreenSecurity\", true)\n    .body(\n        [fields:\n            [customfield_10308: [\n                value: eingStat[eingStat.size() - 1]\n            ]\n        ]\n    ])\n    .asObject(Map).getBody()\n\n    logger.warn( [fields:\n            [customfield_10308: [\n                value: eingStat[eingStat.size() - 1]\n            ]\n        ]\n    ].toString())\n}",
    "filename": "cf59bd271f4ae9e5331884f4b0ba8230_0.scala"
  },
  {
    "conversation_hash": "bd234fe7b05a123d77c42d80cd64b8b8",
    "code_index": 5,
    "language": "Scala",
    "libraries": [],
    "code": "import { NgModule } from '@angular/core';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\n\n@NgModule({\n  imports: [MatSlideToggleModule],\n  //...\n})\nexport class AppModule { }",
    "filename": "bd234fe7b05a123d77c42d80cd64b8b8_5.scala"
  },
  {
    "conversation_hash": "bd234fe7b05a123d77c42d80cd64b8b8",
    "code_index": 14,
    "language": "Scala",
    "libraries": [],
    "code": "import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\nimport { AuthService } from './auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n  constructor(private authService: AuthService, private router: Router) {}\n\n  canActivate(): boolean {\n    if (this.authService.isLoggedIn()) {\n      return true;\n    } else {\n      this.router.navigate(['/login']);\n      return false;\n    }\n  }\n\n}",
    "filename": "bd234fe7b05a123d77c42d80cd64b8b8_14.scala"
  },
  {
    "conversation_hash": "d6905ab644e74a2bbfd0ca3a41644811",
    "code_index": 5,
    "language": "Scala",
    "libraries": [],
    "code": "cmake_minimum_required(VERSION 3.10)\nproject(file_transfer)\n\nfind_package(Protobuf REQUIRED)\nfind_package(Threads REQUIRED)\n\nadd_executable(client client.cpp)\nadd_executable(server server.cpp)\n\ntarget_link_libraries(client PRIVATE ${Protobuf_LIBRARIES} Threads::Threads uv)\ntarget_link_libraries(server PRIVATE ${Protobuf_LIBRARIES} Threads::Threads uv)\n\nprotobuf_generate(TARGET client LANGUAGE cpp)\nprotobuf_generate(TARGET server LANGUAGE cpp)",
    "filename": "d6905ab644e74a2bbfd0ca3a41644811_5.scala"
  },
  {
    "conversation_hash": "cc09f3caea4f0001c78c7816a8fcb365",
    "code_index": 3,
    "language": "Scala",
    "libraries": [],
    "code": "class MyHomePage extends StatelessWidget {\n  @override\n  Widget build(BuildContext context) {\n    return Scaffold(\n      appBar: AppBar(title: Text('My App')),\n      body: StreamBuilder(\n        stream: MediaQuery.of(context).platformBrightnessStream,\n        builder: (context, snapshot) {\n          if (snapshot.hasData) {\n            // Check the current brightness mode\n            final isDarkMode = snapshot.data == Brightness.dark;\n            return Theme(\n              // Set the theme based on the current brightness mode\n              data: isDarkMode ? ThemeData.dark() : ThemeData.light(),\n              child: MyWidget(),\n            );\n          } else {\n            // Wait for the theme mode to be loaded\n            return Center(child: CircularProgressIndicator());\n          }\n        },\n      ),\n    );\n  }\n}",
    "filename": "cc09f3caea4f0001c78c7816a8fcb365_3.scala"
  },
  {
    "conversation_hash": "9a8ba93d39080db0d27caa70e3723b0f",
    "code_index": 5,
    "language": "Scala",
    "libraries": [],
    "code": "1\n2\n3\n4\n5\n6\n7\n8\nException in thread \"main\" java.lang.ArrayIndexOutOfBoundsException: 8\n\tat Test.main(Test.java:6)",
    "filename": "9a8ba93d39080db0d27caa70e3723b0f_5.scala"
  },
  {
    "conversation_hash": "e09bfe1c0eced1142cb4d9f53879654c",
    "code_index": 4,
    "language": "Scala",
    "libraries": [],
    "code": "val redirectUrl = \"http://example.com\"\n   val headers = mapOf(\n           \"Auth-Token\" to \"someToken\",\n           \"Content-Type\" to \"application/json\"\n   )\n   val body = \"{\\\"key\\\": \\\"value\\\"}\"\n   \n   response.status = HttpServletResponse.SC_MOVED_TEMPORARILY\n   response.setHeader(\"Location\", redirectUrl)\n   \n   // 将要返回的信息存储到Map对象中\n   val redirectInfo = mapOf(\"headers\" to headers, \"body\" to body)",
    "filename": "e09bfe1c0eced1142cb4d9f53879654c_4.scala"
  },
  {
    "conversation_hash": "e09bfe1c0eced1142cb4d9f53879654c",
    "code_index": 7,
    "language": "Scala",
    "libraries": [],
    "code": "data class User(val name: String, val age: Int)\n   \n   val user = User(\"Bob\", 30)\n   val gson = Gson()\n   val json = gson.toJson(user)\n   \n   val requestBody = RequestBody.create(MediaType.parse(\"application/json\"), json)",
    "filename": "e09bfe1c0eced1142cb4d9f53879654c_7.scala"
  },
  {
    "conversation_hash": "e09bfe1c0eced1142cb4d9f53879654c",
    "code_index": 8,
    "language": "Scala",
    "libraries": [],
    "code": "val requestBody = RequestBody.create(MediaType.parse(\"text/plain\"), \"hello world\")\n   \n   val request = Request.Builder()\n       .url(\"http://www.example.com/\")\n       .post(requestBody)\n       .build()\n   \n   val response = client.newCall(request).execute()\n   \n   val responseBody = response.body()?.string()",
    "filename": "e09bfe1c0eced1142cb4d9f53879654c_8.scala"
  },
  {
    "conversation_hash": "e09bfe1c0eced1142cb4d9f53879654c",
    "code_index": 9,
    "language": "Scala",
    "libraries": [],
    "code": "data class UserRequest(val name: String)\n   data class UserInfo(val id: String, val name: String, val age: Int)\n   \n   val userRequest = UserRequest(\"Bob\")\n   val userInfo = UserInfo(\"001\", \"Bob\", 30)\n   \n   val gson = Gson()\n   val json = gson.toJson(userInfo)\n   \n   val requestBody = RequestBody.create(MediaType.parse(\"application/json\"), json)\n   \n   val request = Request.Builder()\n       .url(\"http://www.example.com/api/redirect/test\")\n       .post(requestBody)\n       .addHeader(\"User-Name\", userRequest.name)\n       .build()\n   \n   val response = client.newCall(request).execute()",
    "filename": "e09bfe1c0eced1142cb4d9f53879654c_9.scala"
  },
  {
    "conversation_hash": "167f351ebd35408483138001f24c0810",
    "code_index": 0,
    "language": "Scala",
    "libraries": [
      "String"
    ],
    "code": "import String\n\nstringToInt : String -> Int\nstringToInt str =\n    case String.toInt str of\n        Ok val -> val\n        Err _ -> 0 -- or any other default value or error handling",
    "filename": "167f351ebd35408483138001f24c0810_0.scala"
  },
  {
    "conversation_hash": "6515631d08b0f846312dbe29c4c2abb8",
    "code_index": 3,
    "language": "Scala",
    "libraries": [],
    "code": "set(MY_LIST \"foo\" \"bar\" \"baz\")\nset(MY_ARGS \"\")\nforeach(item IN LISTS MY_LIST)\n    list(APPEND MY_ARGS \"-DMY_OPTION=${item}\")\nendforeach()\n\nExternalProject_Add(\n  MyExternalProject\n  CMAKE_ARGS ${MY_ARGS}\n  ...\n)",
    "filename": "6515631d08b0f846312dbe29c4c2abb8_3.scala"
  },
  {
    "conversation_hash": "6515631d08b0f846312dbe29c4c2abb8",
    "code_index": 4,
    "language": "Scala",
    "libraries": [],
    "code": "set(MY_LIST \"foo\" \"bar\" \"baz\")\nset(MY_ARGS \"\")\nforeach(item IN LISTS MY_LIST)\n    list(APPEND MY_ARGS \"-DMY_OPTION=${item}\")\nendforeach()\n\nExternalProject_Add(\n  MyExternalProject\n  CMAKE_ARGS ${MY_ARGS}\n  ...\n)",
    "filename": "6515631d08b0f846312dbe29c4c2abb8_4.scala"
  },
  {
    "conversation_hash": "d442407b9302e7acae327a15b4faed9e",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "val client = OkHttpClient()\nval request = Request.Builder()\n    .url(\"http://example.com/api\")\n    .build()\nval response = client.newCall(request).execute()",
    "filename": "d442407b9302e7acae327a15b4faed9e_0.scala"
  },
  {
    "conversation_hash": "d442407b9302e7acae327a15b4faed9e",
    "code_index": 3,
    "language": "Scala",
    "libraries": [],
    "code": "val client = OkHttpClient()\nval request = Request.Builder()\n    .url(\"http://example.com/api?param1=value1&param2=value2\")\n    .build()\nval response = client.newCall(request).execute()",
    "filename": "d442407b9302e7acae327a15b4faed9e_3.scala"
  },
  {
    "conversation_hash": "d442407b9302e7acae327a15b4faed9e",
    "code_index": 6,
    "language": "Scala",
    "libraries": [],
    "code": "val client = OkHttpClient()\nval request = Request.Builder()\n    .url(\"http://example.com/api\")\n    .build()\nval response = client.newCall(request).execute()",
    "filename": "d442407b9302e7acae327a15b4faed9e_6.scala"
  },
  {
    "conversation_hash": "d442407b9302e7acae327a15b4faed9e",
    "code_index": 9,
    "language": "Scala",
    "libraries": [],
    "code": "val url = HttpUrl.parse(\"https://example.com/redirect?param1=value1&param2=value2\")\nval request = Request.Builder()\n    .url(url)\n    .header(\"Authorization\", \"Bearer token\")\n    .build()\nval response = client.newCall(request).execute()",
    "filename": "d442407b9302e7acae327a15b4faed9e_9.scala"
  },
  {
    "conversation_hash": "fc9346aee3daf5d76ae1b0c3d4309fdf",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "<template>\n  <div>\n    {{ set.length }}\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { Component, Vue } from \"vue\";\n\n@Component\nexport default class MyComponent extends Vue {\n  private set: string[] = [\"task1\", \"task2\", \"task3\"];\n\n  // другие методы и свойства компонента\n\n}\n</script>",
    "filename": "fc9346aee3daf5d76ae1b0c3d4309fdf_0.scala"
  },
  {
    "conversation_hash": "fc9346aee3daf5d76ae1b0c3d4309fdf",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "<template>\n  <div>\n    {{ amountOfTasks }}\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { Component, Vue } from \"vue\";\n\n@Component\nexport default class MyComponent extends Vue {\n  private set: string[] = [\"task1\", \"task2\", \"task3\"];\n\n  get amountOfTasks(): number {\n    return this.set.length;\n  }\n\n  // другие методы и свойства компонента\n\n}\n</script>",
    "filename": "fc9346aee3daf5d76ae1b0c3d4309fdf_1.scala"
  },
  {
    "conversation_hash": "fc9346aee3daf5d76ae1b0c3d4309fdf",
    "code_index": 2,
    "language": "Scala",
    "libraries": [],
    "code": "<template>\n  <div>\n    Number of tasks: {{ amountOfTasks }}\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { Component, Vue } from \"vue\";\n\n@Component\nexport default class MyComponent extends Vue {\n  private set: string[] = [\"Task 1\", \"Task 2\", \"Task 3\"];\n\n  get amountOfTasks(): number {\n    return this.set.length;\n  }\n}\n</script>",
    "filename": "fc9346aee3daf5d76ae1b0c3d4309fdf_2.scala"
  },
  {
    "conversation_hash": "011af6d6b007b91f887841b761fb7f99",
    "code_index": 5,
    "language": "Scala",
    "libraries": [
      "React"
    ],
    "code": "import React from 'react'\nimport { connect } from 'react-redux'\nimport { incrementCounter } from './reducers/counter'\n\nconst CounterButton = ({ count, incrementCounter }) => {\n  return (\n    <div>\n      <h1>{count}</h1>\n      <button onClick={incrementCounter}>Increment</button>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({ count: state.counter.count })\nconst mapDispatchToProps = { incrementCounter }\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CounterButton)",
    "filename": "011af6d6b007b91f887841b761fb7f99_5.scala"
  },
  {
    "conversation_hash": "715e680f7169f623aed03407e5767929",
    "code_index": 3,
    "language": "Scala",
    "libraries": [],
    "code": ".overlay.clicked {\n  animation-name: expand;\n  animation-duration: 2s; /* change this value to control the speed */\n}\n\n@keyframes expand {\n  from {\n    width: 30px;\n    height: 30px;\n  }\n  to {\n    width: 100px; /* change this value to control the size */\n    height: 100px; /* change this value to control the size */\n  }\n}",
    "filename": "715e680f7169f623aed03407e5767929_3.scala"
  },
  {
    "conversation_hash": "97eb363c44e9237f267ccefed6347a70",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "import 'package:flutter/material.dart';\nimport 'dart:ui' as ui;\n\nclass MyApp extends StatelessWidget {\n  @override\n  Widget build(BuildContext context) {\n    final width = ui.window.physicalSize.width / ui.window.devicePixelRatio;\n    final height = ui.window.physicalSize.height / ui.window.devicePixelRatio;\n\n    // Calculate the logical pixel size based on the screen density\n    final logicalWidth = width / ui.window.textScaleFactor;\n    final logicalHeight = height / ui.window.textScaleFactor;\n\n    return MaterialApp(\n      home: Scaffold(\n        appBar: AppBar(\n          title: Text('Logical Pixel Width'),\n        ),\n        body: Container(\n          child: Center(\n            child: Text(\n              'Logical Pixel Width: $logicalWidth',\n              style: TextStyle(fontSize: 24),\n            ),\n          ),\n        ),\n      ),\n    );\n  }\n}",
    "filename": "97eb363c44e9237f267ccefed6347a70_0.scala"
  },
  {
    "conversation_hash": "1dcdbc538e1f3e68692bf956aa5e208b",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "<dependency>\n    <groupId>org.eclipse.jgit</groupId>\n    <artifactId>org.eclipse.jgit</artifactId>\n    <version>5.13.0.202109080827-r</version>\n</dependency>",
    "filename": "1dcdbc538e1f3e68692bf956aa5e208b_0.scala"
  },
  {
    "conversation_hash": "432974d83f2bf88d7fab000c3d9f26c5",
    "code_index": 8,
    "language": "Scala",
    "libraries": [],
    "code": "ray.init(object_spilling_config={\n  \"type\": \"local\",  # 使用本地磁盘进行对象溢出\n  \"params\": {\n    \"directory_path\": \"/tmp/ray\",  # 使用此目录进行对象溢出\n    \"max_bytes_in_total\": 10605875296,  # 限制使用的最大内存总量，例如10GB\n  },\n})",
    "filename": "432974d83f2bf88d7fab000c3d9f26c5_8.scala"
  },
  {
    "conversation_hash": "5d0b58aac99856ada30ca759191b8b94",
    "code_index": 4,
    "language": "Scala",
    "libraries": [],
    "code": "/app/logs/*.log {\n    daily\n    rotate 7\n    compress\n    size=100M\n    missingok\n    notifempty\n    copytruncate\n}",
    "filename": "5d0b58aac99856ada30ca759191b8b94_4.scala"
  },
  {
    "conversation_hash": "a156b6f46144e87f9f8a9db9549de438",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "Scaffold(\n    bottomBar = { /* ... */ },\n    content = { paddingValues ->\n        val navHostController = navController as NavHostController\n        NavigationHost(\n            navController = navHostController,\n            modifier = Modifier.padding(paddingValues)\n        )\n    }\n)",
    "filename": "a156b6f46144e87f9f8a9db9549de438_1.scala"
  },
  {
    "conversation_hash": "675fa526da34c3cd2daee4cdc1c07297",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "setContent {\n    DeezerMusicPlayerTheme {\n        ...\n        Scaffold(\n            bottomBar = { BottomBar(navController, bottomNavigationItems) },\n            content = { paddingValues ->\n                val navHostController = navController as NavHostController\n                NavigationHost(\n                    navController = navHostController,\n                    modifier = Modifier.padding(paddingValues)\n                )\n            }\n        )\n    }\n}",
    "filename": "675fa526da34c3cd2daee4cdc1c07297_1.scala"
  },
  {
    "conversation_hash": "24648e0828912d0e4b1cf8f508336e70",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "class MyClass {\n    def myMethod(int arg1, String arg2) {\n        // method body\n    }\n}",
    "filename": "24648e0828912d0e4b1cf8f508336e70_0.scala"
  },
  {
    "conversation_hash": "24648e0828912d0e4b1cf8f508336e70",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "class MyClass {\n    // …\n}\n\ndef MyClassExtensions {\n    def static myExtensionMethod(MyClass obj) {\n        // method body\n    }\n}\n\n// 使用扩展函数\nval obj = new MyClass()\nobj.myExtensionMethod()",
    "filename": "24648e0828912d0e4b1cf8f508336e70_1.scala"
  },
  {
    "conversation_hash": "24648e0828912d0e4b1cf8f508336e70",
    "code_index": 2,
    "language": "Scala",
    "libraries": [],
    "code": "class MyClass {\n    def operator_plus(MyClass other) {\n        // method body\n    }\n}\n\n// 使用运算符重载\nval obj1 = new MyClass()\nval obj2 = new MyClass()\nval result = obj1 + obj2",
    "filename": "24648e0828912d0e4b1cf8f508336e70_2.scala"
  },
  {
    "conversation_hash": "7969ae101ec63a1a62e5fe249e5b4199",
    "code_index": 5,
    "language": "Scala",
    "libraries": [],
    "code": "_state.update { currentState ->\n                            val updatedList = state.value.devicesConnections.map { connection ->\n                                if (connection.firstDevice == event.device.id || connection.secondDevice == event.device.id) {\n                                    null // remove\n                                } else {\n                                    connection // keep\n                                }\n                            }.filterNotNull()\n                            currentState.copy(devicesConnections = updatedList)\n                        }",
    "filename": "7969ae101ec63a1a62e5fe249e5b4199_5.scala"
  },
  {
    "conversation_hash": "5245207494c433008d3388733f5ae5df",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "class AccountLinkingSetupScreen extends StatelessWidget {\n  ...\n  @override\n  Widget build(BuildContext context) {\n    return Scaffold(\n      appBar: PatientAppHeader.buildAppBar(context),\n      body: SingleChildScrollView(\n        child: AccountLinkingDecryptionSection(\n          encryptedQrCode: scanResult.qrCodeAsString,\n          handleDecryptedQrCodeCallback: _decryptAndSetup,\n        ),\n      ),\n    );\n  }\n  ...\n}",
    "filename": "5245207494c433008d3388733f5ae5df_0.scala"
  },
  {
    "conversation_hash": "5245207494c433008d3388733f5ae5df",
    "code_index": 3,
    "language": "Scala",
    "libraries": [],
    "code": "class AccountLinkingSetupScreen extends StatelessWidget {\n  ...\n  @override\n  Widget build(BuildContext context) {\n    return Scaffold(\n      appBar: PatientAppHeader.buildAppBar(context),\n      body: Column(\n        children: [\n          Expanded(\n            child: ListView(\n              shrinkWrap: true,\n                children: [\n                  AccountLinkingDecryptionSection(\n                    encryptedQrCode: scanResult.qrCodeAsString,\n                    handleDecryptedQrCodeCallback: _decryptAndSetup,\n                  ),\n                ],\n            ),\n          ),\n        ],\n      ),\n    );\n  }\n  ...\n}",
    "filename": "5245207494c433008d3388733f5ae5df_3.scala"
  },
  {
    "conversation_hash": "8699917c3805f974165de225ef1d774b",
    "code_index": 0,
    "language": "Scala",
    "libraries": [
      "androidx.compose.foundation.layout.Column",
      "androidx.compose.material.",
      "androidx.compose.runtime.Composable",
      "androidx.compose.runtime.mutableStateOf",
      "androidx.compose.runtime.remember",
      "androidx.compose.ui.res.painterResource"
    ],
    "code": "import androidx.compose.foundation.layout.Column\nimport androidx.compose.material.*\nimport androidx.compose.runtime.Composable\nimport androidx.compose.runtime.mutableStateOf\nimport androidx.compose.runtime.remember\nimport androidx.compose.ui.res.painterResource",
    "filename": "8699917c3805f974165de225ef1d774b_0.scala"
  },
  {
    "conversation_hash": "a97f9234b9eb6dbf367850fef60f864d",
    "code_index": 3,
    "language": "Scala",
    "libraries": [],
    "code": "@override\nWidget build(BuildContext context) {\n  return Scaffold(\n    appBar: PatientAppHeader.buildAppBar(context),\n    body: Column(\n      children: [\n        SizedBox(height: theme.headerHeight), // Fügen Sie die AppBar-Höhe hinzu\n        Expanded(\n          child: AccountLinkingDecryptionSection(\n            encryptedQrCode: scanResult.qrCodeAsString,\n            handleDecryptedQrCodeCallback: _decryptAndSetup,\n          ),\n        ),\n      ],\n    ),\n  );\n}",
    "filename": "a97f9234b9eb6dbf367850fef60f864d_3.scala"
  },
  {
    "conversation_hash": "07820fc4527a568d8f17942d54aac602",
    "code_index": 5,
    "language": "Scala",
    "libraries": [],
    "code": "// define many-to-many relationship between Employee and Task\nmodelBuilder.Entity<Employee>()\n    .HasMany(e => e.Tasks)\n    .WithMany(t => t.Employees)\n    .UsingEntity(join => join.ToTable(\"EmployeeTask\"));",
    "filename": "07820fc4527a568d8f17942d54aac602_5.scala"
  },
  {
    "conversation_hash": "07820fc4527a568d8f17942d54aac602",
    "code_index": 6,
    "language": "Scala",
    "libraries": [],
    "code": "// define many-to-one relationship between Task and Category\nmodelBuilder.Entity<Task>()\n    .HasOne(t => t.Category)\n    .WithMany(c => c.Tasks)\n    .HasForeignKey(t => t.CategoryId);",
    "filename": "07820fc4527a568d8f17942d54aac602_6.scala"
  },
  {
    "conversation_hash": "07820fc4527a568d8f17942d54aac602",
    "code_index": 7,
    "language": "Scala",
    "libraries": [],
    "code": "// define one-to-many relationship between Task and Dependency\nmodelBuilder.Entity<Task>()\n    .HasMany(t => t.Dependencies)\n    .WithOne(d => d.Task)\n    .HasForeignKey(d => d.TaskId)\n    .OnDelete(DeleteBehavior.Cascade);",
    "filename": "07820fc4527a568d8f17942d54aac602_7.scala"
  },
  {
    "conversation_hash": "07820fc4527a568d8f17942d54aac602",
    "code_index": 8,
    "language": "Scala",
    "libraries": [],
    "code": "// define one-to-many relationship between Dependency and Task (dependent task)\nmodelBuilder.Entity<Dependency>()\n    .HasOne(d => d.DependentTask)\n    .WithMany()\n    .HasForeignKey(d => d.DependentTaskId)\n    .OnDelete(DeleteBehavior.Restrict);",
    "filename": "07820fc4527a568d8f17942d54aac602_8.scala"
  },
  {
    "conversation_hash": "39649d0f3001c1845cd2ad31f5c80120",
    "code_index": 6,
    "language": "Scala",
    "libraries": [
      "androidx.lifecycle.ViewModel",
      "dagger.hilt.android.lifecycle.HiltViewModel",
      "javax.inject.Inject"
    ],
    "code": "import androidx.lifecycle.ViewModel\nimport dagger.hilt.android.lifecycle.HiltViewModel\nimport javax.inject.Inject\n\n@HiltViewModel\nclass CategoriesViewModel @Inject constructor(\n    private val deezerRepository: DeezerRepository\n) : ViewModel() {\n    ...\n}",
    "filename": "39649d0f3001c1845cd2ad31f5c80120_6.scala"
  },
  {
    "conversation_hash": "4705a4fbc77859a8fb3b27d0dedc6016",
    "code_index": 3,
    "language": "Scala",
    "libraries": [
      "java.time.ZoneId"
    ],
    "code": "import java.time.ZoneId\n\nval env = StreamExecutionEnvironment.getExecutionEnvironment\nenv.setStreamTimeCharacteristic(TimeCharacteristic.EventTime)\nenv.getConfig.setLocalTimeZone(ZoneId.of(\"Asia/Shanghai\"))",
    "filename": "4705a4fbc77859a8fb3b27d0dedc6016_3.scala"
  },
  {
    "conversation_hash": "4705a4fbc77859a8fb3b27d0dedc6016",
    "code_index": 7,
    "language": "Scala",
    "libraries": [
      "java.time.ZoneId"
    ],
    "code": "import java.time.ZoneId\n\nval env = StreamExecutionEnvironment.getExecutionEnvironment\nenv.setStreamTimeCharacteristic(TimeCharacteristic.EventTime)\nenv.getConfig.setLocalTimeZone(ZoneId.of(\"Asia/Shanghai\"))",
    "filename": "4705a4fbc77859a8fb3b27d0dedc6016_7.scala"
  },
  {
    "conversation_hash": "4705a4fbc77859a8fb3b27d0dedc6016",
    "code_index": 8,
    "language": "Scala",
    "libraries": [
      "java.time.ZoneId"
    ],
    "code": "import java.time.ZoneId\n\nval bsSettings = EnvironmentSettings.newInstance().useBlinkPlanner().inStreamingMode().build()\nval tableEnv = StreamTableEnvironment.create(env, bsSettings)\ntableEnv.getConfig.setLocalTimeZone(ZoneId.of(\"Asia/Shanghai\"))",
    "filename": "4705a4fbc77859a8fb3b27d0dedc6016_8.scala"
  },
  {
    "conversation_hash": "7a0e9ae62c4431a0dc9861c7994f3537",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "# 删除回调函数\ncmds.scriptJob(kill=job_id)\n\n# 删除job_id变量 (可选)\ndel job_id",
    "filename": "7a0e9ae62c4431a0dc9861c7994f3537_1.scala"
  },
  {
    "conversation_hash": "5e327ab62a251f6ef8387308b83d84f8",
    "code_index": 13,
    "language": "Scala",
    "libraries": [],
    "code": "10.140000000000001\n1.162962962962963\n7.0\n<class 'float'>\nmy_int: 7\nmy_float: 3.14",
    "filename": "5e327ab62a251f6ef8387308b83d84f8_13.scala"
  },
  {
    "conversation_hash": "3d1c86c11cb28712e1a9417cb211c155",
    "code_index": 3,
    "language": "Scala",
    "libraries": [],
    "code": "return (\n  <div>\n    <DragDropContext\n      onDragEnd={result => onDragEnd(result, columns, setColumns)}\n    >\n      {columns.map((column, index) => (\n        <Droppable droppableId={column.id} key={index}>\n          {(provided) => (\n            <div\n              {...provided.droppableProps}\n              ref={provided.innerRef}\n            >\n              <div>{column.title}</div>\n              {column.items.map((item, index) => (\n                <Draggable\n                  key={item.id}\n                  draggableId={item.id}\n                  index={index}\n                >\n                  {(provided) => (\n                    <div\n                      ref={provided.innerRef}\n                      {...provided.draggableProps}\n                      {...provided.dragHandleProps}\n                    >\n                      {item.name}\n                    </div>\n                  )}\n                </Draggable>\n              ))}\n              {provided.placeholder}\n            </div>\n          )}\n        </Droppable>\n      ))}\n    </DragDropContext>\n  </div>\n);",
    "filename": "3d1c86c11cb28712e1a9417cb211c155_3.scala"
  },
  {
    "conversation_hash": "930858c01b22d653ee8323b1a74e005c",
    "code_index": 2,
    "language": "Scala",
    "libraries": [],
    "code": "package com.example.tradingchecklist\n\ndata class ChecklistItem(\n    val text: String,\n    val percentage: Int,\n    var checked: Boolean = false\n)",
    "filename": "930858c01b22d653ee8323b1a74e005c_2.scala"
  },
  {
    "conversation_hash": "7b0b9c5d54f4a95e4960fbbc0d54838a",
    "code_index": 2,
    "language": "Scala",
    "libraries": [],
    "code": "package com.example.musicapp.Data\n\ndata class ArtistDetail(\n    val id: Int,\n    val name: String,\n    val pictureBig: String,\n    val albums: List<Album>,\n)",
    "filename": "7b0b9c5d54f4a95e4960fbbc0d54838a_2.scala"
  },
  {
    "conversation_hash": "7b0b9c5d54f4a95e4960fbbc0d54838a",
    "code_index": 6,
    "language": "Scala",
    "libraries": [],
    "code": "package com.example.musicapp.Data\n\ndata class ArtistDetail(\n    val id: Int,\n    val name: String,\n    val pictureBig: String,\n    val albums: List<Album>?,\n)",
    "filename": "7b0b9c5d54f4a95e4960fbbc0d54838a_6.scala"
  },
  {
    "conversation_hash": "03eff86355b86e100e62dcdf3126dccd",
    "code_index": 10,
    "language": "Scala",
    "libraries": [],
    "code": "app.setStyleSheet(f\"\"\"\n    * {{\n        font-size: {font_size}px;\n        font-family: {font_family};\n    }}\n\"\"\")",
    "filename": "03eff86355b86e100e62dcdf3126dccd_10.scala"
  },
  {
    "conversation_hash": "763641d967639515f3ccd567aef78713",
    "code_index": 2,
    "language": "Scala",
    "libraries": [],
    "code": "data class AlbumResponse(\n    val id: Int,\n    val title: String,\n    val link: String,\n    val cover: String,\n    val coverSmall: String,\n    val coverMedium: String,\n    val coverBig: String,\n    val coverXl: String,\n    val releaseDate: String,\n    val tracklist: String,\n    val type: String\n)",
    "filename": "763641d967639515f3ccd567aef78713_2.scala"
  },
  {
    "conversation_hash": "770ee750d927234cc2b99e98d94c712a",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "data class Album(\n    val id: Int,\n    val title: String,\n    val link: String,\n    val cover: String,\n    val cover_small: String,\n    val cover_medium: String,\n    val cover_big: String,\n    val cover_xl: String,\n    val release_date: String,\n    val tracklist: String,\n    val type: String\n)",
    "filename": "770ee750d927234cc2b99e98d94c712a_0.scala"
  },
  {
    "conversation_hash": "cc514673d569b1072d0b1a8e3aeb33bd",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "data class Song(\n    val id: Int,\n    val title: String,\n    val duration: Int, // in seconds\n    val cover_medium: String,\n    val preview: String // 30 seconds preview URL\n)",
    "filename": "cc514673d569b1072d0b1a8e3aeb33bd_0.scala"
  },
  {
    "conversation_hash": "cc514673d569b1072d0b1a8e3aeb33bd",
    "code_index": 7,
    "language": "Scala",
    "libraries": [],
    "code": "data class AlbumDetailResponse(\n    val id: Int,\n    val title: String,\n    val cover_medium: String,\n    val tracks: TracksResponse\n)\n\ndata class TracksResponse(\n    val data: List<Song>\n)",
    "filename": "cc514673d569b1072d0b1a8e3aeb33bd_7.scala"
  },
  {
    "conversation_hash": "cc514673d569b1072d0b1a8e3aeb33bd",
    "code_index": 8,
    "language": "Scala",
    "libraries": [],
    "code": "data class AlbumDetails(\n    val id: Int,\n    val title: String,\n    val cover_medium: String,\n    val songs: List<Song>\n)",
    "filename": "cc514673d569b1072d0b1a8e3aeb33bd_8.scala"
  },
  {
    "conversation_hash": "bb908eff51338a664407e31328c7e35e",
    "code_index": 7,
    "language": "Scala",
    "libraries": [],
    "code": "import { Module } from '@nestjs/common';\nimport { StripeModule } from '@nestjs/stripe';\n\n@Module({\n  imports: [\n    StripeModule.forRoot({\n      apiKey: process.env.STRIPE_SECRET_KEY,\n      apiVersion: '2020-08-27',\n    }),\n  ],\n  exports: [StripeModule],\n})\nexport class StripeConfigModule {}",
    "filename": "bb908eff51338a664407e31328c7e35e_7.scala"
  },
  {
    "conversation_hash": "bb908eff51338a664407e31328c7e35e",
    "code_index": 9,
    "language": "Scala",
    "libraries": [],
    "code": "import { Injectable } from '@nestjs/common';\nimport { Stripe } from '@nestjs/stripe';\n\n@Injectable()\nexport class StripeService {\n  constructor(private stripe: Stripe) {}\n\n  constructEvent(body: any, sig: string) {\n    return this.stripe.webhooks.constructEvent(body, sig, process.env.STRIPE_WEBHOOK_SECRET);\n  }\n}",
    "filename": "bb908eff51338a664407e31328c7e35e_9.scala"
  },
  {
    "conversation_hash": "bb908eff51338a664407e31328c7e35e",
    "code_index": 16,
    "language": "Scala",
    "libraries": [],
    "code": "import { Resolver, Mutation, Args, Context } from '@nestjs/graphql';\nimport { PaymentService } from './payment.service';\n\n@Resolver()\nexport class PaymentResolver {\n  constructor(private paymentService: PaymentService) {}\n\n  @Mutation(() => String)\n  async createPendingPayment(\n    @Args('amount') amount: number,\n    @Args('paymentMethodId') paymentMethodId: string,\n    @Context() ctx: any,\n  ) {\n    const userId = ctx.req.user.id;\n    const paymentIntentId = await this.paymentService.createPendingPayment(\n      amount,\n      userId,\n      paymentMethodId,\n    );\n    return paymentIntentId;\n  }\n\n  // other mutations\n}",
    "filename": "bb908eff51338a664407e31328c7e35e_16.scala"
  },
  {
    "conversation_hash": "a346611b5470ef523d2c936e662fdaf1",
    "code_index": 5,
    "language": "Scala",
    "libraries": [],
    "code": "val context = LocalContext.current\n.clickable(onClick = {\n    navController.navigate(\"songDetail/${song.id}\")\n    playPreview(context, song.preview)\n})",
    "filename": "a346611b5470ef523d2c936e662fdaf1_5.scala"
  },
  {
    "conversation_hash": "a346611b5470ef523d2c936e662fdaf1",
    "code_index": 18,
    "language": "Scala",
    "libraries": [],
    "code": ".clickable(onClick = {\n    playPreview(context, song.preview, onPlayerCreated = { createdPlayer ->\n        setPlayer(createdPlayer)\n    })\n})",
    "filename": "a346611b5470ef523d2c936e662fdaf1_18.scala"
  },
  {
    "conversation_hash": "1f79145dd9349af182df843bd755e5a5",
    "code_index": 4,
    "language": "Scala",
    "libraries": [],
    "code": "import { GraphQLModule } from '@nestjs/graphql';\n\n@Module({\n  imports: [\n    GraphQLModule.forRoot({\n      autoSchemaFile: 'schema.gql',\n    }),\n  ],\n})\nexport class AppModule {}",
    "filename": "1f79145dd9349af182df843bd755e5a5_4.scala"
  },
  {
    "conversation_hash": "cea530eb6db75ee751b186048d5cadf0",
    "code_index": 3,
    "language": "Scala",
    "libraries": [],
    "code": "package com.example.musicapp.Data\n\ndata class Song(\n    val id: Int,\n    val title: String,\n    val duration: Int, // in seconds\n    val album: Album,\n    val cover_medium: String,\n    val preview: String // 30 seconds preview URL\n)",
    "filename": "cea530eb6db75ee751b186048d5cadf0_3.scala"
  },
  {
    "conversation_hash": "c9aca98dc2d6a20387a3e668e1fffbbf",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "val painter = rememberImagePainter(\n    data = song.cover_medium,\n    builder = {\n        crossfade(true)\n        transformations(CircleCropTransformation())\n        placeholder(if (song.cover_medium == null) R.drawable.placeholder else 0)\n    }\n)",
    "filename": "c9aca98dc2d6a20387a3e668e1fffbbf_1.scala"
  },
  {
    "conversation_hash": "c9aca98dc2d6a20387a3e668e1fffbbf",
    "code_index": 4,
    "language": "Scala",
    "libraries": [],
    "code": "val painter = rememberImagePainter(\n    data = song.cover_medium,\n    builder = {\n        crossfade(true)\n        transformations(CircleCropTransformation())\n        \n        // Add these lines\n        if (song.cover_medium == null) {\n            placeholder(R.drawable.placeholder)\n        }\n        // End of added lines\n    }\n)",
    "filename": "c9aca98dc2d6a20387a3e668e1fffbbf_4.scala"
  },
  {
    "conversation_hash": "e2f7c2e29ac13242056e4166c5246901",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "val painter = rememberImagePainter(\n    data = song.cover_medium,\n    builder = {\n        crossfade(true)\n        transformations(CircleCropTransformation())\n\n        // Use \"this\" instead of \"builder\"\n        if (song.cover_medium == null) {\n            this.placeholder(R.drawable.no_image)\n        }\n        // End of modified lines\n    }\n)",
    "filename": "e2f7c2e29ac13242056e4166c5246901_0.scala"
  },
  {
    "conversation_hash": "e2f7c2e29ac13242056e4166c5246901",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "val painter = rememberImagePainter(\n    data = song.album.cover_medium,\n    builder = {\n        crossfade(true)\n        transformations(CircleCropTransformation())\n\n        if (song.album.cover_medium == null) {\n            this.placeholder(R.drawable.no_image)\n        }\n    }\n)",
    "filename": "e2f7c2e29ac13242056e4166c5246901_1.scala"
  },
  {
    "conversation_hash": "51b60360b43b3b3c4e1a9156b534feb3",
    "code_index": 2,
    "language": "Scala",
    "libraries": [],
    "code": "package com.example.musicapp.Data\n\ndata class Album(\n    val id: Int,\n    val title: String,\n    val link: String,\n    val cover: String,\n    val cover_small: String,\n    val cover_medium: String,\n    val cover_big: String,\n    val cover_xl: String,\n    val release_date: String,\n    val tracklist: String,\n    val type: String\n)",
    "filename": "51b60360b43b3b3c4e1a9156b534feb3_2.scala"
  },
  {
    "conversation_hash": "334ed1c645aa2ab0247b1324139c3c4a",
    "code_index": 3,
    "language": "Scala",
    "libraries": [
      "kotlinx.coroutines.flow.MutableStateFlow",
      "kotlinx.coroutines.flow.StateFlow",
      "kotlinx.coroutines.flow.asStateFlow"
    ],
    "code": "import kotlinx.coroutines.flow.MutableStateFlow\nimport kotlinx.coroutines.flow.StateFlow\nimport kotlinx.coroutines.flow.asStateFlow\n\nclass PlayerViewModel(/*...*/) : ViewModel() {\n    private val _favorites = MutableStateFlow<List<Song>>(emptyList())\n    val favorites: StateFlow<List<Song>> = _favorites.asStateFlow()\n\n    // ...\n}",
    "filename": "334ed1c645aa2ab0247b1324139c3c4a_3.scala"
  },
  {
    "conversation_hash": "6cb2490eb70d2e1c9d0c8994c0776bba",
    "code_index": 4,
    "language": "Scala",
    "libraries": [],
    "code": "import { StripeModule } from './stripe/stripe.service';\n\n@Module({\n  imports: [\n    // ...\n    StripeModule,\n  ],\n  // ...\n})\nexport class AppModule {}",
    "filename": "6cb2490eb70d2e1c9d0c8994c0776bba_4.scala"
  },
  {
    "conversation_hash": "6cb2490eb70d2e1c9d0c8994c0776bba",
    "code_index": 6,
    "language": "Scala",
    "libraries": [],
    "code": "import { GraphQLModule } from '@nestjs/graphql';\n\n@Module({\n  imports: [\n    // ...\n    GraphQLModule.forRoot({\n      autoSchemaFile: 'schema.gql',\n    }),\n  ],\n  // ...\n})\nexport class AppModule {}",
    "filename": "6cb2490eb70d2e1c9d0c8994c0776bba_6.scala"
  },
  {
    "conversation_hash": "6cb2490eb70d2e1c9d0c8994c0776bba",
    "code_index": 12,
    "language": "Scala",
    "libraries": [],
    "code": "import { Resolver, Mutation, Args } from '@nestjs/graphql';\nimport { StripeService } from '../stripe/stripe.service';\nimport { CheckoutType, LineItemInput } from './checkout.schema';\n\n@Resolver(() => CheckoutType)\nexport class CheckoutResolver {\n  constructor(private readonly stripeService: StripeService) {}\n\n  @Mutation(() => String)\n  async createCheckoutSession(\n    @Args('lineItems') lineItems: LineItemInput[],\n  ): Promise<string> {\n    const session = await this.stripeService.createCheckoutSession(lineItems);\n    return session.id;\n  }\n}",
    "filename": "6cb2490eb70d2e1c9d0c8994c0776bba_12.scala"
  },
  {
    "conversation_hash": "4da63c7e3c38a63cb1075f08aa035e4a",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "class PlayerViewModel(private val context: Context) : ViewModel() {\n    // ...\n    private val sharedPreferences = context.getSharedPreferences(\"music_app\", Context.MODE_PRIVATE)\n    // ...\n}",
    "filename": "4da63c7e3c38a63cb1075f08aa035e4a_0.scala"
  },
  {
    "conversation_hash": "3b74f9cd83b7d11a10b96ebd27229cd6",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "# Compilation variables\nCC = gcc\nCFLAGS = -Wall\n\n# file dependencies\nOBJS = main.o func1.o func2.o\n\n# default target\nall: program\n\n# compile all object files\n%.o: %.c\n\t$(CC) $(CFLAGS) -c $< -o $@\n\n# link all object files together to create program\nprogram: $(OBJS)\n\t$(CC) $(CFLAGS) $(OBJS) -o program\n\n# clean up after compilation\nclean:\n\trm -f *.o program",
    "filename": "3b74f9cd83b7d11a10b96ebd27229cd6_0.scala"
  },
  {
    "conversation_hash": "96fcf34a995066522b896d58d914f9fd",
    "code_index": 8,
    "language": "Scala",
    "libraries": [],
    "code": "import { Controller, Get, Query } from '@nestjs/common';\nimport { PriceService } from './price.service';\n\n@Controller('/prices')\nexport class PriceController {\n  constructor(private readonly priceService: PriceService) {}\n\n  @Get('/by-product')\n  async getPricesForProduct(@Query('productId') productId: string) {\n    return this.priceService.getPricesForProduct(productId);\n  }\n}",
    "filename": "96fcf34a995066522b896d58d914f9fd_8.scala"
  },
  {
    "conversation_hash": "1f57f55f16d125ede51383b5eac5bdb3",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "val dbFile = context.getDatabasePath(\"my_database.db\")\n\nif (dbFile.exists()) {\n    // Database already exists\n} else {\n    // Create the database\n    val db = SQLiteDatabase.openOrCreateDatabase(dbFile, null)\n    // Create tables and insert initial data if necessary\n    // Close the database when finished\n    db.close()\n}",
    "filename": "1f57f55f16d125ede51383b5eac5bdb3_0.scala"
  },
  {
    "conversation_hash": "1f57f55f16d125ede51383b5eac5bdb3",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "class Record(\n    val id: Int,\n    val name: String,\n    val age: Int\n)",
    "filename": "1f57f55f16d125ede51383b5eac5bdb3_1.scala"
  },
  {
    "conversation_hash": "02228d25f608c72f32c6c5ee858487c6",
    "code_index": 3,
    "language": "Scala",
    "libraries": [],
    "code": "void main() {\n  runApp(const MyApp());\n}\n\nclass MyApp extends StatelessWidget {\n  const MyApp({Key? key}) : super(key: key);\n\n  @override\n  Widget build(BuildContext context) {\n    return MaterialApp(\n      home: Scaffold(\n        appBar: AppBar(title: const Text('Syncfusion Flutter Chart')),\n        body: Container(\n          child: SfCartesianChart(\n            primaryXAxis: DateTimeAxis(),\n            primaryYAxis: NumericAxis(),\n            series: <ChartSeries>[\n              LineSeries<ChartData, DateTime>(\n                dataSource: <ChartData>[\n                  ChartData(DateTime(2022, 04, 01), 15),\n                  ChartData(DateTime(2022, 04, 02), 21),\n                  ChartData(DateTime(2022, 04, 03), 26),\n                  ChartData(DateTime(2022, 04, 04), 16),\n                  ChartData(DateTime(2022, 04, 05), 34),\n                  ChartData(DateTime(2022, 04, 06), 22),\n                  ChartData(DateTime(2022, 04, 07), 12),\n                  ChartData(DateTime(2022, 04, 08), 26),\n                  ChartData(DateTime(2022, 04, 09), 24),\n                  ChartData(DateTime(2022, 04, 10), 13),\n                  ChartData(DateTime(2022, 04, 11), 33),\n                  ChartData(DateTime(2022, 04, 12), 24),\n                  ChartData(DateTime(2022, 04, 13), 15),\n                ],\n                xValueMapper: (ChartData data, _) => data.date,\n                yValueMapper: (ChartData data, _) => data.value,\n              )\n            ],\n          ),\n        ),\n      ),\n    );\n  }\n}",
    "filename": "02228d25f608c72f32c6c5ee858487c6_3.scala"
  },
  {
    "conversation_hash": "02228d25f608c72f32c6c5ee858487c6",
    "code_index": 4,
    "language": "Scala",
    "libraries": [],
    "code": "SfCartesianChart(\n  primaryXAxis: DateTimeAxis(\n    intervalType: DateTimeIntervalType.days, // 设置间隔类型为天\n    interval: 1, // 设置间隔为1天\n    majorGridLines: MajorGridLines(width: 0),\n    labelRotation: 45, // 旋转标签, 如果需要可以调整\n  ),\n  primaryYAxis: NumericAxis(),\n  series: <ChartSeries>[\n    SplineSeries<ChartData, DateTime>(\n      dataSource: <ChartData>[\n        ChartData(DateTime(2022, 04, 01), 15),\n        // ... 其他数据\n        ChartData(DateTime(2022, 04, 13), 15),\n      ],\n      xValueMapper: (ChartData data, _) => data.date,\n      yValueMapper: (ChartData data, _) => data.value,\n    )\n  ],\n)",
    "filename": "02228d25f608c72f32c6c5ee858487c6_4.scala"
  },
  {
    "conversation_hash": "54c5df8f67e1af10a92c2e1484ab362e",
    "code_index": 9,
    "language": "Scala",
    "libraries": [],
    "code": "import { Module } from '@nestjs/common';\nimport { StripeWebhookController } from './stripe-webhook.controller';\n\n@Module({\n  controllers: [StripeWebhookController],\n})\nexport class StripeWebhookModule {}",
    "filename": "54c5df8f67e1af10a92c2e1484ab362e_9.scala"
  },
  {
    "conversation_hash": "e2eb186390e30d5f7bd2039a24d0da51",
    "code_index": 5,
    "language": "Scala",
    "libraries": [],
    "code": "staticDataStore.reconfigure(new Ext.data.Store({\n    fields: [\n        { name: 'name', type: 'string' },\n        { name: 'age', type: 'int' },\n        { name: 'city', type: 'string' },\n        { name: 'country', type: 'string' }\n    ],\n    data: [\n        { name: 'John Smith', age: 27, city: 'New York', country: 'USA' },\n        { name: 'Jane Smith', age: 25, city: 'Los Angeles', country: 'USA' },\n        { name: 'Bob Johnson', age: 33, city: 'Chicago', country: 'USA' },\n        { name: 'Lucas Gomez', age: 29, city: 'Madrid', country: 'Spain' }\n    ]\n}));",
    "filename": "e2eb186390e30d5f7bd2039a24d0da51_5.scala"
  },
  {
    "conversation_hash": "09e0b37f85813e22a3db424fa738c28f",
    "code_index": 2,
    "language": "Scala",
    "libraries": [],
    "code": "export class UserId {\n  constructor(private readonly _value: string) {}\n\n  public get value(): string {\n    return this._value;\n  }\n\n  public equals(userId: UserId): boolean {\n    return this._value === userId.value;\n  }\n}",
    "filename": "09e0b37f85813e22a3db424fa738c28f_2.scala"
  },
  {
    "conversation_hash": "09e0b37f85813e22a3db424fa738c28f",
    "code_index": 3,
    "language": "Scala",
    "libraries": [],
    "code": "import { UserId } from \"./userId\";\n\nexport interface Props {\n  firstName: string;\n  lastName: string;\n  email: string;\n}\n\nexport class User {\n  private _userId: UserId;\n  private _firstName: string;\n  private _lastName: string;\n  private _email: string;\n\n  constructor(userId: UserId, props: Props) {\n    this._userId = userId;\n    this._firstName = props.firstName;\n    this._lastName = props.lastName;\n    this._email = props.email;\n  }\n\n  public get userId(): UserId {\n    return this._userId;\n  }\n  public get firstName(): string {\n    return this._firstName;\n  }\n  public get lastName(): string {\n    return this._lastName;\n  }\n  public get email(): string {\n    return this._email;\n  }\n}",
    "filename": "09e0b37f85813e22a3db424fa738c28f_3.scala"
  },
  {
    "conversation_hash": "09e0b37f85813e22a3db424fa738c28f",
    "code_index": 5,
    "language": "Scala",
    "libraries": [],
    "code": "import { User } from \"../domain/user\";\nimport { UserRepository } from \"../infra/userRepository\";\n\nexport class CreateUser {\n  constructor(private readonly userRepository: UserRepository) {}\n\n  public execute(props: User.Props): void {\n    const existingUser = this.userRepository.findByEmail(props.email);\n    if (existingUser) {\n      throw new Error(`User with email ${props.email} already exists.`);\n    }\n    const user = new User(new UserId(\"1\"), props);\n    this.userRepository.save(user);\n  }\n}",
    "filename": "09e0b37f85813e22a3db424fa738c28f_5.scala"
  },
  {
    "conversation_hash": "09e0b37f85813e22a3db424fa738c28f",
    "code_index": 6,
    "language": "Scala",
    "libraries": [],
    "code": "import { UserRepository } from \"../infra/userRepository\";\n\nexport class UserExists {\n  constructor(private readonly userRepository: UserRepository) {}\n\n  public execute(email: string): boolean {\n    const existingUser = this.userRepository.findByEmail(email);\n    return existingUser !== undefined;\n  }\n}",
    "filename": "09e0b37f85813e22a3db424fa738c28f_6.scala"
  },
  {
    "conversation_hash": "b1925abcb82f4a8252d3275b35010f51",
    "code_index": 3,
    "language": "Scala",
    "libraries": [],
    "code": "def optionsA = [\"Option1\", \"Option2\"]\ndef optionsB = [\"SubOption1\", \"SubOption2\", \"SubOption3\"]\n\ndef hasOptionsA = { params -> params.some { it.key == 'CHOICE_A' && optionsA.contains(it.value) } }\n\n[\n\n    parameters([\n        [\n            $class: 'CascadeChoiceParameter',\n            choiceType: 'PT_SINGLE_SELECT',\n            description: '',\n            filterLength: '1',\n            filterable: true,\n            name: 'CHOICE_A',\n            referencedParameters: 'CHOICE_B',\n            script: [\n                $class: 'GroovyScript',\n                fallbackScript: [\n                    classpath: [],\n                    sandbox: false,\n                    script: 'return [\"None\"]'\n                ],\n                script: [\n                    classpath: [],\n                    sandbox: false,\n                    script: '''\n                    return [\"Option1\", \"Option2\"]\n                    '''\n                ]\n            ]\n        ],\n        [\n            $class: 'CascadeChoiceParameter',\n            choiceType: 'PT_MULTI_SELECT',\n            description: '',\n            filterLength: '1',\n            filterable: true,\n            name: 'CHOICE_B',\n            script: [\n                $class: 'GroovyScript',\n                fallbackScript: [\n                    classpath: [],\n                    sandbox: false,\n                    script: 'return [\"None\"]'\n                ],\n                script: [\n                    classpath: [],\n                    sandbox: false,\n                    script: '''\n                        params = []\n                        if (hasOptionsA(binding)) {\n                            params.add([\n                                name: \"Choice B\",\n                                value: \"default\"\n                            ])\n                            optionsB.each { option ->\n                                params.add([\n                                    name: option,\n                                    value: option\n                                ])\n                            }\n                        }\n                        return params\n                    '''\n                ]\n            ]\n        ]\n    ])\n]",
    "filename": "b1925abcb82f4a8252d3275b35010f51_3.scala"
  },
  {
    "conversation_hash": "5244ff050fbe3fbad392f3c2d6e624a0",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "class MathServer:\n    def add(self, a: int, b: int) -> int:\n        pass\n\n    def subtract(self, a: int, b: int) -> int:\n        pass\n\n    def multiply(self, a: int, b: int) -> int:\n        pass",
    "filename": "5244ff050fbe3fbad392f3c2d6e624a0_0.scala"
  },
  {
    "conversation_hash": "16ec5d0ef3b0638d32621cfab68e05ef",
    "code_index": 2,
    "language": "Scala",
    "libraries": [],
    "code": "val canvasState = rememberTransformableState { scale, offset ->\n    // Update state\n}\n\nval canvasSaver = Saver<TransformationState, List<Float>>(\n    save = { listOf(it.scale, it.offset.x, it.offset.y) },\n    restore = { TransformationState(scale = it[0], offset = Offset(it[1], it[2])) }\n)\n\nval savedCanvasState = rememberSaveable(saver = canvasSaver) { canvasState }\n\nCanvas(\n    modifier = Modifier\n        .fillMaxSize()\n        .graphicsLayer(\n            scaleX = savedCanvasState.scale,\n            scaleY = savedCanvasState.scale,\n            translationX = savedCanvasState.offset.x,\n            translationY = savedCanvasState.offset.y\n        )\n        .pointerInput(Unit) {\n            forEachGesture {\n                savedCanvasState.onTransform(it)\n                if (it.changes.any { it.pressed }) {\n                    canvasSaver.save(savedCanvasState)\n                }\n            }\n        },\n    onDraw = { drawScope -> // Drawing code }\n)",
    "filename": "16ec5d0ef3b0638d32621cfab68e05ef_2.scala"
  },
  {
    "conversation_hash": "16ec5d0ef3b0638d32621cfab68e05ef",
    "code_index": 3,
    "language": "Scala",
    "libraries": [],
    "code": "val canvasState = rememberTransformableState { transformGesture ->\n    // Update state based on transformGesture\n}\n\nval canvasSaver = Saver<TransformableState, List<Float>>(\n    save = { listOf(it.scale, it.offset.x, it.offset.y) },\n    restore = { TransformableState(scale = it[0], offset = Offset(it[1], it[2])) }\n)\n\nval savedCanvasState = rememberSaveable(saver = canvasSaver) { canvasState }\n\nCanvas(\n    modifier = Modifier\n        .fillMaxSize()\n        .graphicsLayer(\n            scaleX = savedCanvasState.scale,\n            scaleY = savedCanvasState.scale,\n            translationX = savedCanvasState.offset.x,\n            translationY = savedCanvasState.offset.y\n        )\n        .pointerInput(Unit) {\n            forEachGesture {\n                savedCanvasState.onTransform(it)\n                if (it.changes.any { it.pressed }) {\n                    canvasSaver.save(savedCanvasState)\n                }\n            }\n        },\n    onDraw = { drawScope -> // Drawing code }\n)",
    "filename": "16ec5d0ef3b0638d32621cfab68e05ef_3.scala"
  },
  {
    "conversation_hash": "30900889c05a44e22f2e0576c1f3f438",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "val name = \"John\"\nval age = 32\n\nval values = ContentValues().apply {\n    put(\"name\", name)\n    put(\"age\", age)\n}\n\nwritableDatabase.insert(\"users\", null, values)",
    "filename": "30900889c05a44e22f2e0576c1f3f438_1.scala"
  },
  {
    "conversation_hash": "c7fdb2c6373b84ffa41e650b4cfde174",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "for (data in dataList) {\n    val newRow = TableRow()\n    val newData = TextView(data)\n    newRow.addView(newData)\n    tableView.addView(newRow)\n}",
    "filename": "c7fdb2c6373b84ffa41e650b4cfde174_0.scala"
  },
  {
    "conversation_hash": "eed2708495cab9fc1189598e1ae97ff2",
    "code_index": 7,
    "language": "Scala",
    "libraries": [],
    "code": "return (\n    <View style={styles.container}>\n        {hasCameraPermission ? (\n            <Camera\n                ref={(ref) => setCameraRef(ref)}\n                style={styles.camera}\n                autoFocus=\"on\"\n            >\n                {!isRecording && videoUri === null && (\n                    <Animatable.View animation=\"fadeInUp\" duration={1000}>\n                        <Text\n                            style={styles.infoPrompt}\n                        >\n                            Record a 45s video of yourself\n                        </Text>\n                    </Animatable.View>\n                )}\n                <View style={styles.buttonContainer}>\n          \n                    {!isRecording && videoUri === null ? (\n                        <TouchableOpacity onPress={startRecording} style={styles.startButton}>\n                            <Text style={styles.buttonText}>Start</Text>\n                        </TouchableOpacity>\n                    ) : (\n                        <Animatable.View animation=\"fadeInLeft\" duration={500}>\n                            <TouchableOpacity onPress={stopRecording} style={styles.stopButton}>\n                                <Text style={styles.buttonText}>Stop</Text>\n                            </TouchableOpacity>\n                        </Animatable.View>\n                    )}\n\n                    {videoUri !== null && (\n                        <Animatable.View animation=\"fadeInUp\" duration={800}>\n                            <TouchableOpacity onPress={() => setVideoUri(null)} style={styles.retakeButton}>\n                                <Text style={styles.buttonText}>Retake</Text>\n                            </TouchableOpacity>\n                            <TouchableOpacity onPress={() => {}} style={styles.saveButton}>\n                                <Text style={styles.buttonText}>Save</Text>\n                            </TouchableOpacity>\n                        </Animatable.View>\n                    )}\n                </View>\n            </Camera>\n        ) : (\n            <Text>No access to camera</Text>\n        )}\n        {thumbnailUri && (\n            <Animatable.Image \n                resizeMode=\"cover\" \n                source={{ uri: thumbnailUri }} \n                style={styles.thumbnail} \n                animation={!isRecording ? \"fadeInUp\" : \"fadeOutDown\"} duration={1000}/>\n        )}\n    </View>\n);",
    "filename": "eed2708495cab9fc1189598e1ae97ff2_7.scala"
  },
  {
    "conversation_hash": "dddf90a36eee535201e2b45fc0172159",
    "code_index": 13,
    "language": "Scala",
    "libraries": [],
    "code": "<dependency>\n  <groupId>org.bytedeco</groupId>\n  <artifactId>ffmpeg</artifactId>\n  <version>2.8.1-1.5.2</version>\n</dependency>",
    "filename": "dddf90a36eee535201e2b45fc0172159_13.scala"
  },
  {
    "conversation_hash": "7eb1749d4b66944540adeb518ab7a3fb",
    "code_index": 1,
    "language": "Scala",
    "libraries": [
      "kotlinx.serialization.KSerializer",
      "kotlinx.serialization.SerialName",
      "kotlinx.serialization.Serializable",
      "kotlinx.serialization.serializer"
    ],
    "code": "import kotlinx.serialization.Serializable\nimport kotlinx.serialization.SerialName\nimport kotlinx.serialization.KSerializer\nimport kotlinx.serialization.serializer\n\n@Serializable(with = User.Serializer::class)\ndata class User(\n    var id: Int = 0,\n    var name: String? = null,\n    @SerialName(\"credential.id\")\n    var credentialId: Int = 0,\n    @SerialName(\"credential.code\")\n    var credentialCode: String? = null,\n    @SerialName(\"service.name\")\n    var serviceName: String? = null,\n    @SerialName(\"photo.type\")\n    var type: Int = 0,\n    @SerialName(\"photo.image.data\")\n    var photo: String? = null\n) {\n    object Serializer : KSerializer<User> by FlattenJsonTransformer<User>(serializer())\n}",
    "filename": "7eb1749d4b66944540adeb518ab7a3fb_1.scala"
  },
  {
    "conversation_hash": "7eb1749d4b66944540adeb518ab7a3fb",
    "code_index": 2,
    "language": "Scala",
    "libraries": [
      "kotlinx.serialization.json.Json"
    ],
    "code": "import kotlinx.serialization.json.Json\n\nval inputJson = \"\"\"\n{\n\t\"credential\": {\n\t\t\"code\": \"1111\",\n\t\t\"id\": 10\n\t},\n\t\"id\": 1,\n\t\"name\": \"toto\",\n\t\"photo\": {\n\t\t\"image\": {\n\t\t\t\"data\": \"xxxx\"\n\t\t},\n\t\t\"type\": 0\n\t},\n\t\"service\": {\n\t\t\"name\": \"serviceIT\"\n\t}\n}\n\"\"\"\n\nval user = Json.decodeFromString(User.serializer(), inputJson)\nprintln(user)",
    "filename": "7eb1749d4b66944540adeb518ab7a3fb_2.scala"
  },
  {
    "conversation_hash": "e2d38a29b0c6281d3db95c7b8c35754e",
    "code_index": 3,
    "language": "Scala",
    "libraries": [],
    "code": "@HiltViewModel\n@ViewModelScoped\nclass EmulatorViewModel @Inject constructor(\n    private val emulatorUseCases: EmulatorUseCases\n) : ViewModel() {\n    private val _state = MutableStateFlow(EmulatorState())\n    val state = _state\n    // ...\n}",
    "filename": "e2d38a29b0c6281d3db95c7b8c35754e_3.scala"
  },
  {
    "conversation_hash": "e2d38a29b0c6281d3db95c7b8c35754e",
    "code_index": 5,
    "language": "Scala",
    "libraries": [],
    "code": "val navBackStackEntry by navController.currentBackStackEntryAsState()\nval restored = rememberSavedInstanceState(navBackStackEntry)\n\nEmulatorScreen(\n    navController = navController,\n    viewModel = viewModel,\n    paddingValues = paddingValues,\n    restoredState = restored\n)",
    "filename": "e2d38a29b0c6281d3db95c7b8c35754e_5.scala"
  },
  {
    "conversation_hash": "e2d38a29b0c6281d3db95c7b8c35754e",
    "code_index": 14,
    "language": "Scala",
    "libraries": [],
    "code": "@HiltViewModel\nclass MyViewModel @Inject constructor(\n    private val myRepository: MyRepository\n) : ViewModel() {\n    // ...\n}",
    "filename": "e2d38a29b0c6281d3db95c7b8c35754e_14.scala"
  },
  {
    "conversation_hash": "137933aff79aee4d177c245a6dadee51",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "<dependency>\n    <groupId>org.opencv</groupId>\n    <artifactId>opencv</artifactId>\n    <version>${opencv.version}</version>\n</dependency>",
    "filename": "137933aff79aee4d177c245a6dadee51_1.scala"
  },
  {
    "conversation_hash": "137933aff79aee4d177c245a6dadee51",
    "code_index": 4,
    "language": "Scala",
    "libraries": [],
    "code": "<dependency>\n    <groupId>org.opencv</groupId>\n    <artifactId>opencv</artifactId>\n    <version>${opencv.version}</version>\n</dependency>",
    "filename": "137933aff79aee4d177c245a6dadee51_4.scala"
  },
  {
    "conversation_hash": "8f31bd0ed60310359bad8e6753a95a24",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "data class Device(\n        val id: Int,\n        var ipAddress: String,\n        var subnetMask: String,\n        var gateway: String,\n        var dnsServer: String\n    )",
    "filename": "8f31bd0ed60310359bad8e6753a95a24_0.scala"
  },
  {
    "conversation_hash": "8f31bd0ed60310359bad8e6753a95a24",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "val devices = listOf(\n        Device(1, \"\", \"\", \"\", \"\"),\n        Device(2, \"\", \"\", \"\", \"\"),\n        Device(3, \"\", \"\", \"\", \"\"),\n        // add more devices as needed\n    )",
    "filename": "8f31bd0ed60310359bad8e6753a95a24_1.scala"
  },
  {
    "conversation_hash": "8f31bd0ed60310359bad8e6753a95a24",
    "code_index": 3,
    "language": "Scala",
    "libraries": [],
    "code": "val connections = listOf(\n        Connection(1, 2),\n        Connection(1, 3),\n        // add more connections as needed\n    )",
    "filename": "8f31bd0ed60310359bad8e6753a95a24_3.scala"
  },
  {
    "conversation_hash": "8f31bd0ed60310359bad8e6753a95a24",
    "code_index": 5,
    "language": "Scala",
    "libraries": [],
    "code": "val dhcpServer = DhcpServer(\"192.168.0.0\")\n\n    devices.forEach { device ->\n        val ipAddress = dhcpServer.allocateIpAddress(device.id)\n        device.ipAddress = ipAddress\n    }",
    "filename": "8f31bd0ed60310359bad8e6753a95a24_5.scala"
  },
  {
    "conversation_hash": "d29d773758e5d36b03e5dbcf99de62b1",
    "code_index": 12,
    "language": "Scala",
    "libraries": [],
    "code": "<dependency>\n    <groupId>org.bytedeco.javacpp-presets</groupId>\n    <artifactId>ffmpeg</artifactId>\n    <version>4.3.1-1.5.6</version>\n</dependency>",
    "filename": "d29d773758e5d36b03e5dbcf99de62b1_12.scala"
  },
  {
    "conversation_hash": "a3ab23d7429cc5783d48b364d541af8d",
    "code_index": 3,
    "language": "Scala",
    "libraries": [],
    "code": "cmake_minimum_required(VERSION 3.1)\nproject(LutManager)\n\nset(CMAKE_CXX_STANDARD 11)\n\ninclude_directories(${CMAKE_CURRENT_SOURCE_DIR})\n\nadd_executable(LutManager main.cpp LutManager.cpp LutManager.h)",
    "filename": "a3ab23d7429cc5783d48b364d541af8d_3.scala"
  },
  {
    "conversation_hash": "d15a0b3ad02a888debaaf6bb82e94f1c",
    "code_index": 2,
    "language": "Scala",
    "libraries": [],
    "code": "// render first part of symbols\n  {showFirst && firstPartSymbols.map(symbol => <Symbols key={symbol} symbol={symbol} activeSymbol={activeSymbol} setActiveSymbol={setActiveSymbol} />)}\n\n  // Render second part of symbols\n  {showSecond && secondPartSymbols.map(symbol => <Symbols key={symbol} symbol={symbol} activeSymbol={activeSymbol} setActiveSymbol={setActiveSymbol} />)}",
    "filename": "d15a0b3ad02a888debaaf6bb82e94f1c_2.scala"
  },
  {
    "conversation_hash": "e664029e954571e1cb1cd2ebf8417930",
    "code_index": 5,
    "language": "Scala",
    "libraries": [],
    "code": "NAME                                PID PROCESS       USER             CONNECTION           UNIT          SESSION                DESCRIPTION\norg.freedesktop.PolicyKit1         -   -             -                    -                    -             -                      -\norg.freedesktop.DBus               -   -             -                    -                    -             -                      -\norg.freedesktop.login1             -   -             -                    -                    -             -                      -\norg.freedesktop.systemd1           -   -             -                    -                    -             -                      -\norg.freedesktop.hostname1          -   -             -                    -                    -             -                      -\norg.freedesktop.NetworkManager     -   -             -                    -                    -             -                      -\norg.freedesktop.UDisks2            -   -             -                    -                    -             -                      -\n...",
    "filename": "e664029e954571e1cb1cd2ebf8417930_5.scala"
  },
  {
    "conversation_hash": "192f1fe605d2dd670dcd68871dbdfaf7",
    "code_index": 4,
    "language": "Scala",
    "libraries": [],
    "code": "val myList = mutableListOf(1,2,3)\nmyList.add(4)\nprintln(myList) //[1, 2, 3, 4]\n\nval myOtherList = listOf(5,6)\nval combinedList = myList + myOtherList\nprintln(combinedList) //[1, 2, 3, 4, 5, 6]",
    "filename": "192f1fe605d2dd670dcd68871dbdfaf7_4.scala"
  },
  {
    "conversation_hash": "192f1fe605d2dd670dcd68871dbdfaf7",
    "code_index": 5,
    "language": "Scala",
    "libraries": [],
    "code": "val list1 = listOf(1, 2, 3, 4)\nval list2 = listOf(2, 4, 6)\n\nval diff1 = list1.subtract(list2)\nprintln(diff1) // [1, 3]\n\nval diff2 = list1 - list2\nprintln(diff2) // [1, 3]",
    "filename": "192f1fe605d2dd670dcd68871dbdfaf7_5.scala"
  },
  {
    "conversation_hash": "19c0250ba1338c7f548598b6b21c82f1",
    "code_index": 2,
    "language": "Scala",
    "libraries": [],
    "code": "<dependency>\n    <groupId>org.bytedeco.ffmpeg</groupId>\n    <artifactId>x265</artifactId>\n    <version>{version}</version>\n</dependency>",
    "filename": "19c0250ba1338c7f548598b6b21c82f1_2.scala"
  },
  {
    "conversation_hash": "9cd81acef2bd0681319b7101b83b0300",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "sealed class Mode {\n    object Normal : Mode()\n    object Connecting : Mode()\n    object Deleting : Mode()\n    object Emulating : Mode()\n    object SendPackets : Mode()\n}\n\nclass ViewModel {\n    var mode: Mode = Mode.Normal\n}",
    "filename": "9cd81acef2bd0681319b7101b83b0300_0.scala"
  },
  {
    "conversation_hash": "9cd81acef2bd0681319b7101b83b0300",
    "code_index": 7,
    "language": "Scala",
    "libraries": [],
    "code": "data class State(\n    val devices: List<Device>,\n    val isDeviceSelected: Boolean = false,\n    val isDeviceEditing: Boolean = false,\n    val isConnectingMode: Boolean = false,\n    val isDeletingMode: Boolean = false,\n    val isEmulatingMode: Boolean = false,\n    val isSendPacketsMode: Boolean = false,\n    val editableDeviceId: Int? = null,\n    val editableDeviceIp: String? = null,\n    val mode: Mode = Mode.Normal\n)",
    "filename": "9cd81acef2bd0681319b7101b83b0300_7.scala"
  },
  {
    "conversation_hash": "d73c667da2b684859542eb4a4a8465d0",
    "code_index": 7,
    "language": "Scala",
    "libraries": [],
    "code": "import { Entity, PrimaryGeneratedColumn, Column } from \"typeorm\";\n\n@Entity()\nexport class MasculineEnding {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column(\"varchar\", { array: true })\n  ending: string[];\n}",
    "filename": "d73c667da2b684859542eb4a4a8465d0_7.scala"
  },
  {
    "conversation_hash": "d73c667da2b684859542eb4a4a8465d0",
    "code_index": 8,
    "language": "Scala",
    "libraries": [],
    "code": "import { Entity, PrimaryGeneratedColumn, Column } from \"typeorm\";\n\n@Entity()\nexport class FeminineEnding {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column(\"varchar\", { array: true })\n  ending: string[];\n}",
    "filename": "d73c667da2b684859542eb4a4a8465d0_8.scala"
  },
  {
    "conversation_hash": "d73c667da2b684859542eb4a4a8465d0",
    "code_index": 17,
    "language": "Scala",
    "libraries": [],
    "code": "import { Column, Entity, PrimaryGeneratedColumn } from \"typeorm\";\n\n@Entity()\nexport class MasculineEnding {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column()\n  ending: string;\n}",
    "filename": "d73c667da2b684859542eb4a4a8465d0_17.scala"
  },
  {
    "conversation_hash": "6b29e2049f75df8b88f24aa8ef40bc56",
    "code_index": 5,
    "language": "Scala",
    "libraries": [],
    "code": "import { Controller, Post, Body } from '@nestjs/common';\nimport { MasculineEndingService } from './masculine-ending.service';\n\n@Controller('masculine-endings')\nexport class MasculineEndingController {\n  constructor(\n    private readonly masculineEndingService: MasculineEndingService,\n  ) {}\n\n  @Post()\n  create(@Body() masculineEndings: string[]): Promise<MasculineEnding> {\n    return this.masculineEndingService.create(masculineEndings);\n  }\n}",
    "filename": "6b29e2049f75df8b88f24aa8ef40bc56_5.scala"
  },
  {
    "conversation_hash": "a08ff72c5e16f0556119541a4c8029c8",
    "code_index": 4,
    "language": "Scala",
    "libraries": [],
    "code": "def generate_canvas_script():\n    return \"\"\"\n    {\n      const newWebGLRenderingContext = new Proxy(WebGLRenderingContext.prototype, {\n        get: (target, key) => {\n          if (key === \"getParameter\") {\n            return (parameter) => {\n              if (parameter === WebGLRenderingContext.prototype.VENDOR) {\n                return \"Spoofed Vendor\";\n              }\n              if (parameter === WebGLRenderingContext.prototype.RENDERER) {\n                return \"Spoofed Renderer\";\n              }\n              return target[key](parameter);\n            };\n          }\n          return target[key];\n        },\n      });\n\n      Object.defineProperty(WebGLRenderingContext.prototype, \"getParameter\", {\n        value: newWebGLRenderingContext.getParameter,\n        writable: true,\n        configurable: true,\n      });\n    }\n    \"\"\"\n\ndef change_fingerprints(context):\n    context.on(\"page\", lambda page: page.add_script_tag(content=generate_canvas_script()))\n\ndef main():\n    with sync_playwright() as p:\n        browser = p.chromium.launch()\n        context = browser.new_context(\n            user_agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:105.0) Gecko/20100101 Firefox/105.0',\n            locale='en-US',\n            timezone_id='America/New_York',\n        )\n        \n        change_fingerprints(context)\n        \n        page = context.new_page()      \n        page.goto(\"https://browserleaks.com/canvas#p1\")\n        page.wait_for_load_state(\"networkidle\")\n \n        # Perform any other tasks, then close the browser\n        page.close()\n\n        context.close()\n        browser.close()\n\nif __name__ == '__main__':\n    main()",
    "filename": "a08ff72c5e16f0556119541a4c8029c8_4.scala"
  },
  {
    "conversation_hash": "314988e74e63e9f0af737130c273249c",
    "code_index": 4,
    "language": "Scala",
    "libraries": [
      "React",
      "ReactPlayer"
    ],
    "code": "import React, { Component } from 'react';\nimport ReactPlayer from 'react-player';\n\nclass VideoPreview extends Component {\n  render() {\n    return (\n      <div>\n        <ReactPlayer \n          url='https://www.example.com/video.mp4'\n          playing={true}\n          controls={true}\n          width='640px'\n          height='360px'\n        />\n      </div>\n    )\n  }\n}\n\nexport default VideoPreview;",
    "filename": "314988e74e63e9f0af737130c273249c_4.scala"
  },
  {
    "conversation_hash": "79528e4f3f026d920c4ade84269406ea",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "child: MaterialApp.router(\n    routeInformationParser: _patientAppRouteInformationParser,\n    routerDelegate: _patientAppRouterDelegate,\n    onGenerateTitle: (BuildContext context) =>\n        AppLocalizations.of(context)!.appTitle,\n    theme: theme.PatientAppTheme.defaultTheme(),\n    localizationsDelegates: AppLocalizations.localizationsDelegates,\n    supportedLocales: AppLocalizations.supportedLocales,\n    locale: context.select<GlobalStateProvider, Locale?>(\n        (globalState) => globalState.locale),\n    builder: (context, child) => ResponsiveBreakpoints.builder(\n      child: MaxWidthBox(\n        maxWidth: double.infinity,\n        background: const ColoredBox(\n          color: Colors.white,\n          child: SizedBox(\n              height: 500,\n              width: 1200),\n        ),\n        child: child!,\n      ),\n      breakpoints: [\n        const Breakpoint(start: 0, end: theme.breakPointMobileEnd, name: MOBILE),\n        const Breakpoint(start: theme.breakPointTabletStart, end: theme.breakPointTabletEnd, name: TABLET),\n        const Breakpoint(start: theme.breakPointDesktopStart, end: theme.breakPointDesktopEnd, name: DESKTOP),\n      ],\n    ),\n  ),",
    "filename": "79528e4f3f026d920c4ade84269406ea_0.scala"
  },
  {
    "conversation_hash": "fdb61d9006b52fd13289ccf79ade89c6",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "cmake_minimum_required(VERSION 3.4.1)\n\nadd_library(\n  native-lib\n  SHARED\n  src/main/cpp/native-lib.cpp\n)\n\nfind_library(\n  log-lib\n  log\n)\n\ntarget_link_libraries(\n  native-lib\n  ${log-lib}\n)",
    "filename": "fdb61d9006b52fd13289ccf79ade89c6_1.scala"
  },
  {
    "conversation_hash": "614bf7c639eaadbc1904922fe862c86b",
    "code_index": 2,
    "language": "Scala",
    "libraries": [],
    "code": "val myPacketList = mutableListOf<Packet>()\nval senderIp = sender.ip ?: \"\"\nval receiverIp = receiver.ip ?: \"\"\nval data = \"DATA\"\nfor (i in 1..10) {\n    myPacketList.add(Packet(packetType = PacketType.DATA, senderIp = senderIp, receiverIp = receiverIp, data = data))\n}",
    "filename": "614bf7c639eaadbc1904922fe862c86b_2.scala"
  },
  {
    "conversation_hash": "57df07e7d5937dc98d7cfc70da39e4b6",
    "code_index": 4,
    "language": "Scala",
    "libraries": [],
    "code": "import { EntityRepository, Repository } from 'typeorm';\nimport { FeminineEnding } from './feminine-ending.entity';\n\n@EntityRepository(FeminineEnding)\nexport class FeminineEndingRepository extends Repository<FeminineEnding> {}",
    "filename": "57df07e7d5937dc98d7cfc70da39e4b6_4.scala"
  },
  {
    "conversation_hash": "57df07e7d5937dc98d7cfc70da39e4b6",
    "code_index": 5,
    "language": "Scala",
    "libraries": [],
    "code": "import { EntityRepository, Repository } from 'typeorm';\nimport { MasculineEnding } from './masculine-ending.entity';\n\n@EntityRepository(MasculineEnding)\nexport class MasculineEndingRepository extends Repository<MasculineEnding> {}",
    "filename": "57df07e7d5937dc98d7cfc70da39e4b6_5.scala"
  },
  {
    "conversation_hash": "57df07e7d5937dc98d7cfc70da39e4b6",
    "code_index": 7,
    "language": "Scala",
    "libraries": [],
    "code": "import { Column, Entity, PrimaryGeneratedColumn } from 'typeorm';\n\n@Entity()\nexport class FeminineEnding {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column()\n  ending: string;\n}",
    "filename": "57df07e7d5937dc98d7cfc70da39e4b6_7.scala"
  },
  {
    "conversation_hash": "57df07e7d5937dc98d7cfc70da39e4b6",
    "code_index": 8,
    "language": "Scala",
    "libraries": [],
    "code": "import { Column, Entity, PrimaryGeneratedColumn } from 'typeorm';\n\n@Entity()\nexport class MasculineEnding {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column()\n  ending: string;\n}",
    "filename": "57df07e7d5937dc98d7cfc70da39e4b6_8.scala"
  },
  {
    "conversation_hash": "57df07e7d5937dc98d7cfc70da39e4b6",
    "code_index": 9,
    "language": "Scala",
    "libraries": [],
    "code": "import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { FeminineEnding } from './feminine-ending.entity';\nimport { MasculineEnding } from './masculine-ending.entity';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([FeminineEnding, MasculineEnding])],\n})\nexport class MyModule {}",
    "filename": "57df07e7d5937dc98d7cfc70da39e4b6_9.scala"
  },
  {
    "conversation_hash": "5fcaf4be838ce6a7fb502e0f0a9aa6a8",
    "code_index": 8,
    "language": "Scala",
    "libraries": [],
    "code": "// app.controller.ts\n\nimport { Controller, Get, Query, Res } from '@nestjs/common';\nimport { Response } from 'express';\n\n@Controller()\nexport class AppController {\n  // Other methods\n\n  @Get('payment-success')\n  async paymentSuccess(@Query('booking_reference') bookingReference: string, @Res() res: Response) {\n    // You can add any additional logic or validation here as needed\n\n    // Redirect to the success page with the booking reference as a query parameter\n    res.redirect(`http://your_nextjs_frontend_url/success?booking_reference=${bookingReference}`);\n  }\n}",
    "filename": "5fcaf4be838ce6a7fb502e0f0a9aa6a8_8.scala"
  },
  {
    "conversation_hash": "5c9cb63ac1850152b544d2d1c27c1aa1",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "<com.makeramen.roundedimageview.RoundedImageView\n    android:id=\"@+id/imageViewProfile\"\n    android:layout_width=\"156dp\"\n    android:layout_height=\"156dp\"\n    android:layout_gravity=\"center_horizontal\"\n    android:layout_marginBottom=\"16dp\"\n    android:padding=\"24dp\"\n    android:background=\"@drawable/circle_background\"\n    app:riv_corner_radius=\"78dp\"\n    app:riv_oval=\"true\"\n    app:riv_border_width=\"0dp\"\n    app:riv_border_color=\"@android:color/transparent\"\n    android:src=\"@drawable/baseline_person_add_24\" />",
    "filename": "5c9cb63ac1850152b544d2d1c27c1aa1_0.scala"
  },
  {
    "conversation_hash": "94ac2c23c67977d210b694b7a4f72ee5",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "<dependency>\n    <groupId>com.github.nkzawa</groupId>\n    <artifactId>socket.io-client</artifactId>\n    <version>0.3.0</version>\n</dependency>",
    "filename": "94ac2c23c67977d210b694b7a4f72ee5_0.scala"
  },
  {
    "conversation_hash": "40e982035c9a2f757e3a3f1001e69c19",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "import { Module } from '@nestjs/common';\n\n@Module({\n  imports: [],\n  controllers: [],\n  providers: [],\n})\nexport class AppModule {}",
    "filename": "40e982035c9a2f757e3a3f1001e69c19_1.scala"
  },
  {
    "conversation_hash": "40e982035c9a2f757e3a3f1001e69c19",
    "code_index": 2,
    "language": "Scala",
    "libraries": [],
    "code": "import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Connection } from 'typeorm';\n\n@Module({\n  imports: [\n    TypeOrmModule.forRoot({\n      type: 'postgres',\n      host: 'localhost',\n      port: 5432,\n      username: 'postgres',\n      password: 'password',\n      database: 'french_words',\n      entities: [__dirname + '/../**/*.entity.js'],\n      synchronize: true,\n    }),\n  ],\n  controllers: [],\n  providers: [],\n})\nexport class AppModule {\n  constructor(private readonly connection: Connection) {}\n}",
    "filename": "40e982035c9a2f757e3a3f1001e69c19_2.scala"
  },
  {
    "conversation_hash": "ddca82eeec428ead2cc99a54fecf14c2",
    "code_index": 12,
    "language": "Scala",
    "libraries": [],
    "code": "import { Controller, Get } from '@nestjs/common';\nimport { WordService } from './word.service';\n\n@Controller('word')\nexport class WordController {\n  constructor(private readonly wordService: WordService) {}\n\n  @Get('random')\n  async getRandomWord() {\n    return this.wordService.getRandomWord();\n  }\n}",
    "filename": "ddca82eeec428ead2cc99a54fecf14c2_12.scala"
  },
  {
    "conversation_hash": "905f40136bb091b785232f0319a8dda4",
    "code_index": 3,
    "language": "Scala",
    "libraries": [],
    "code": "import { IsString, Length } from 'class-validator';\nimport { languages } from 'class-validator-multi-lang';\n\nexport class CreateCatDto {\n  @IsString()\n  @Length(3, 10, {\n    message: languages('fr').messages.createCatDto_name_Length,\n  })\n  name: string;\n}",
    "filename": "905f40136bb091b785232f0319a8dda4_3.scala"
  },
  {
    "conversation_hash": "95e12acdf93758eda322f519bd0d9074",
    "code_index": 4,
    "language": "Scala",
    "libraries": [],
    "code": "import { IsString, Length } from 'class-validator';\n\nexport class CreateUserDto {\n  @IsString()\n  @Length(5, 20, { message: { en: 'username must be between 5 and 20 characters', fr: 'le nom d\\'utilisateur doit être entre 5 et 20 caractères' } })\n  username: string;\n\n  @IsString()\n  @Length(8, 20, { message: { en: 'password must be between 8 and 20 characters', fr: 'le mot de passe doit être entre 8 et 20 caractères' } })\n  password: string;\n}",
    "filename": "95e12acdf93758eda322f519bd0d9074_4.scala"
  },
  {
    "conversation_hash": "95e12acdf93758eda322f519bd0d9074",
    "code_index": 7,
    "language": "Scala",
    "libraries": [],
    "code": "import { Module } from '@nestjs/common';\nimport { APP_PIPE } from '@nestjs/core';\nimport { ValidationPipe } from '@nestjs/common';\nimport { ValidatorConstraintInterface, ValidationArguments } from 'class-validator';\nimport { LangService } from 'class-validator-multi-lang';\n\n@Module({\n  providers: [\n    {\n      provide: APP_PIPE,\n      useValue: new ValidationPipe({\n        transform: true,\n        validationError: {\n          target: false,\n        },\n        exceptionFactory: (errors: unknown[]) =>\n          new BadRequestException(errors),\n        // (Facultatif) Pour utiliser la langue par défaut de l'application\n        asyncSchema: await LangService.getSchema(),\n      }),\n    },\n  ],\n})\nexport class AppModule {}",
    "filename": "95e12acdf93758eda322f519bd0d9074_7.scala"
  },
  {
    "conversation_hash": "95e12acdf93758eda322f519bd0d9074",
    "code_index": 8,
    "language": "Scala",
    "libraries": [],
    "code": "@Injectable()\nexport class CustomValidation implements ValidatorConstraintInterface {\n  async validate(value: string, args: ValidationArguments) {\n    // Vérifiez la valeur et renvoyez true ou false selon la validation\n  }\n\n  defaultMessage(args: ValidationArguments) {\n    const [key, constraint] = args.constraints;\n\n    return LangService.text({\n      key,\n      message:\n        LangService.getAvailableLanguages()[DEFAULT_LANG]![constraint!] ||\n        LangService.getAvailableLanguages()[DEFAULT_LANG]!.key,\n    });\n  }\n}",
    "filename": "95e12acdf93758eda322f519bd0d9074_8.scala"
  },
  {
    "conversation_hash": "95e12acdf93758eda322f519bd0d9074",
    "code_index": 12,
    "language": "Scala",
    "libraries": [],
    "code": "import { Module } from '@nestjs/common';\nimport { APP_PIPE } from '@nestjs/core';\nimport { ValidationPipe } from '@nestjs/common';\nimport { LangService } from 'class-validator-multi-lang';\n\n@Module({\n  providers: [\n    {\n      provide: APP_PIPE,\n      useValue: new ValidationPipe({\n        transform: true,\n        validationError: {\n          target: false,\n        },\n        exceptionFactory: (errors: unknown[]) =>\n          new BadRequestException(errors),\n        asyncSchema: async () => {\n          // (Optionnel) Ajoutez un schéma de validation asynchrone qui utilise la langue par défaut de l'application\n          return LangService.getSchema(DEFAULT_LANG);\n        },\n      }),\n    },\n  ],\n})\nexport class AppModule {}",
    "filename": "95e12acdf93758eda322f519bd0d9074_12.scala"
  },
  {
    "conversation_hash": "95e12acdf93758eda322f519bd0d9074",
    "code_index": 13,
    "language": "Scala",
    "libraries": [],
    "code": "import { IsNotEmpty, IsString, Length, Validate } from 'class-validator';\n\nexport class CreateUserDto {\n  @IsNotEmpty({\n    message: ({ args }) =>\n      LangService.text(args.property, 'required', {\n        lang: args.lang,\n      }),\n  })\n  @IsString({\n    message: ({ args }) =>\n      LangService.text(args.property, 'string', {\n        lang: args.lang,\n      }),\n  })\n  @Length(5, 20, {\n    message: ({ args }) =>\n      LangService.text(args.property, 'length', {\n        lang: args.lang,\n        min: args.constraints[0],\n        max: args.constraints[1],\n      }),\n  })\n  @Validate(CustomValidation)\n  name: string;\n\n  // ...\n}",
    "filename": "95e12acdf93758eda322f519bd0d9074_13.scala"
  },
  {
    "conversation_hash": "95e12acdf93758eda322f519bd0d9074",
    "code_index": 17,
    "language": "Scala",
    "libraries": [],
    "code": "import { IsOptional, IsString, Validate } from 'class-validator';\n\nexport class CreateUserDto {\n  @IsString({\n    message: ({ args }) =>\n      LangService.text(args.property, 'string', {\n        lang: args.lang,\n      }),\n  })\n  @Validate(CustomValidation, ['isInvalidPhoneNumber']) // Appel de la fonction de validation personnalisée\n  @IsOptional() // Pour rendre le champ de numéro de téléphone facultatif\n  phone: string;\n\n  // ...\n}",
    "filename": "95e12acdf93758eda322f519bd0d9074_17.scala"
  },
  {
    "conversation_hash": "99baec01b0cc9e93de9ae29021519423",
    "code_index": 4,
    "language": "Scala",
    "libraries": [],
    "code": "import { NgbModule } from '@ng-bootstrap/ng-bootstrap';\n\n   @NgModule({\n     imports: [NgbModule, ...],\n     ...\n   })\n   export class AppModule { }",
    "filename": "99baec01b0cc9e93de9ae29021519423_4.scala"
  },
  {
    "conversation_hash": "3c3587040dfae070279b0ebf1ac078e6",
    "code_index": 3,
    "language": "Scala",
    "libraries": [],
    "code": "CoroutineScope(Dispatchers.IO).launch {\n        val url = \"https://example.com/myfile.xml\"\n        val inputStream = downloadXmlFile(url)\n        val myEntity = parseXml(inputStream)\n        myDatabase.insert(myEntity)\n\n        // Update the UI with the newly added entity (on the main thread)\n        withContext(Dispatchers.Main) {\n            adapter.addItem(myEntity)\n        }\n    }",
    "filename": "3c3587040dfae070279b0ebf1ac078e6_3.scala"
  },
  {
    "conversation_hash": "c09aee82574545c9805f01ac1afbb5c6",
    "code_index": 14,
    "language": "Scala",
    "libraries": [],
    "code": "export class ProductListComponent implements OnInit {\n  products: Product[] = [\n    {\n      id: 1,\n      name: 'Product One',\n      images: [\n        'https://via.placeholder.com/150x150?text=Product+One+Image+1',\n        'https://via.placeholder.com/150x150?text=Product+One+Image+2',\n        'https://via.placeholder.com/150x150?text=Product+One+Image+3'\n      ],\n      image: 0\n    },\n    {\n      id: 2,\n      name: 'Product Two',\n      images: [\n        'https://via.placeholder.com/150x150?text=Product+Two+Image+1',\n        'https://via.placeholder.com/150x150?text=Product+Two+Image+2',\n        'https://via.placeholder.com/150x150?text=Product+Two+Image+3'\n      ],\n      image: 0\n    }\n  ];\n\n  getImage(imageIndex: number): string {\n    return this.products.find(product => product.image === imageIndex)!.images[imageIndex];\n  }\n}",
    "filename": "c09aee82574545c9805f01ac1afbb5c6_14.scala"
  },
  {
    "conversation_hash": "c09aee82574545c9805f01ac1afbb5c6",
    "code_index": 15,
    "language": "Scala",
    "libraries": [],
    "code": "import { FormsModule } from '@angular/forms';\n\n@NgModule({\n  imports: [\n    BrowserModule,\n    FormsModule // make sure FormsModule is imported here\n  ],\n  declarations: [ AppComponent ],\n  bootstrap: [ AppComponent ]\n})\nexport class AppModule { }",
    "filename": "c09aee82574545c9805f01ac1afbb5c6_15.scala"
  },
  {
    "conversation_hash": "a17416fcc02649a85b9be58e524d1cb1",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "// product.component.ts\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-product',\n  templateUrl: './product.component.html',\n  styleUrls: ['./product.component.css']\n})\nexport class ProductComponent {\n  products = [\n    {\n      id: 1,\n      name: 'Product 1',\n      selectedImage: '',\n      images: [\n        {\n          url: 'image1a.jpg',\n          alt: 'Image 1A'\n        },\n        {\n          url: 'image1b.jpg',\n          alt: 'Image 1B'\n        }\n      ]\n    },\n    {\n      id: 2,\n      name: 'Product 2',\n      selectedImage: '',\n      images: [\n        {\n          url: 'image2a.jpg',\n          alt: 'Image 2A'\n        },\n        {\n          url: 'image2b.jpg',\n          alt: 'Image 2B'\n        }\n      ]\n    }\n  ];\n}",
    "filename": "a17416fcc02649a85b9be58e524d1cb1_1.scala"
  },
  {
    "conversation_hash": "57145a11e478dd817394072bc05eee42",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "@Injectable()\nexport class MyController {\n  constructor(private myService: MyService) {}\n\n  // ...\n}",
    "filename": "57145a11e478dd817394072bc05eee42_0.scala"
  },
  {
    "conversation_hash": "57145a11e478dd817394072bc05eee42",
    "code_index": 2,
    "language": "Scala",
    "libraries": [],
    "code": "import { Controller } from '@nestjs/common';\nimport { CatsService } from './cats.service';\n\n@Controller('cats')\nexport class CatsController {\n  constructor(private catsService: CatsService) {}\n}",
    "filename": "57145a11e478dd817394072bc05eee42_2.scala"
  },
  {
    "conversation_hash": "57145a11e478dd817394072bc05eee42",
    "code_index": 4,
    "language": "Scala",
    "libraries": [],
    "code": "import { Injectable, Inject } from '@nestjs/common';\nimport { ServiceA } from '../moduleA/serviceA.service';\n\n@Injectable()\nexport class ServiceB {\n  constructor(@Inject(ServiceA) private readonly serviceA: ServiceA) {}\n}",
    "filename": "57145a11e478dd817394072bc05eee42_4.scala"
  },
  {
    "conversation_hash": "d98f675422b29f4e244579aa5b1617b7",
    "code_index": 6,
    "language": "Scala",
    "libraries": [],
    "code": "# The script will respond to the command !hello with \"Hello\"\n# Make sure Eggdrop has Tcl enabled and the script is loaded\n\n# Respond to !hello command\nbind pub - \"!hello\" hello\n\n# Define the hello command\nproc hello {nick uhost hand chan text} {\n    # Send response to channel\n    putquick \"PRIVMSG $chan :hello, $nick!\"\n}",
    "filename": "d98f675422b29f4e244579aa5b1617b7_6.scala"
  },
  {
    "conversation_hash": "e118ff62170c1463bf3682f6c03cb204",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "Array\n(\n    [0] => 0\n    [1] => 8\n    [2] => 3\n    [3] => 6\n    [4] => 9\n    [5] => 2\n    [6] => 5\n    [7] => 7\n    [8] => 1\n    [9] => 4\n)",
    "filename": "e118ff62170c1463bf3682f6c03cb204_1.scala"
  },
  {
    "conversation_hash": "b3fb905c860f922130ead5820c1a3a0d",
    "code_index": 3,
    "language": "Scala",
    "libraries": [],
    "code": "Array\n(\n    [0] => 0\n    [1] => 8\n    [2] => 3\n    [3] => 6\n    [4] => 9\n    [5] => 2\n    [6] => 5\n    [7] => 7\n    [8] => 1\n    [9] => 4\n)",
    "filename": "b3fb905c860f922130ead5820c1a3a0d_3.scala"
  },
  {
    "conversation_hash": "b3fb905c860f922130ead5820c1a3a0d",
    "code_index": 5,
    "language": "Scala",
    "libraries": [],
    "code": "Array\n(\n    [0] => 0\n    [1] => 8\n    [2] => 3\n    [3] => 6\n    [4] => 9\n    [5] => 2\n    [6] => 5\n    [7] => 7\n    [8] => 1\n    [9] => 4\n)",
    "filename": "b3fb905c860f922130ead5820c1a3a0d_5.scala"
  },
  {
    "conversation_hash": "435a8480907bd58c7ffb58acc874151a",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "defaultConfig {\n    applicationId \"com.example.myapp\"\n    minSdkVersion 14\n    targetSdkVersion 33\n    versionCode 1\n    versionName \"1.0\"\n    testInstrumentationRunner \"androidx.test.runner.AndroidJUnitRunner\"\n}",
    "filename": "435a8480907bd58c7ffb58acc874151a_1.scala"
  },
  {
    "conversation_hash": "6f6ee0295511ba9df0d1f55eaec6f382",
    "code_index": 4,
    "language": "Scala",
    "libraries": [],
    "code": "nixpkgs.mesa.overrideAttrs (_: {\n  version = \"22.3.4\";\n  config = {\n    galliumDrivers = [\"i915\" \"swrast\"];\n  };\n})",
    "filename": "6f6ee0295511ba9df0d1f55eaec6f382_4.scala"
  },
  {
    "conversation_hash": "aab36e638052a2081b8e9f492fd84085",
    "code_index": 0,
    "language": "Scala",
    "libraries": [
      "database"
    ],
    "code": "@Injectable()\nexport class DatabaseService {\n  async getUsers(): Promise<User[]> {\n    // code to get users from database\n  }\n\n  async addUser(user: User): Promise<void> {\n    // code to add user to database \n  }\n}",
    "filename": "aab36e638052a2081b8e9f492fd84085_0.scala"
  },
  {
    "conversation_hash": "aab36e638052a2081b8e9f492fd84085",
    "code_index": 2,
    "language": "Scala",
    "libraries": [],
    "code": "import { IsString } from 'class-validator';\n\nclass CreateUserDto {\n  @IsString()\n  readonly name: string;\n}\n\n@Controller('users')\nexport class UsersController {\n  @Post()\n  async create(@Body() createUserDto: CreateUserDto) {\n    // if the body does not satisfy the validation rules defined in the CreateUserDto class,\n    // NestJS will throw a BadRequestException with the validation error messages\n    return `Hello ${createUserDto.name}!`;\n  }\n}",
    "filename": "aab36e638052a2081b8e9f492fd84085_2.scala"
  },
  {
    "conversation_hash": "aab36e638052a2081b8e9f492fd84085",
    "code_index": 6,
    "language": "Scala",
    "libraries": [],
    "code": "import { Controller, Get, UsePipes, Query, BadRequestException } from '@nestjs/common';\nimport { ParseIntPipe } from '@nestjs/common';\n\n@Controller('cats')\nexport class CatsController {\n  @Get()\n  @UsePipes(new ParseIntPipe(), new ConditionPipe()) // sử dụng ParseIntPipe và ConditionPipe\n  findAll(\n    @Query('limit') limit: number,\n    @Query('offset') offset: number,\n  ) {\n    return `This action returns all cats (limit: ${limit} items, offset: ${offset} items)`;\n  }\n}\n\n// ConditionPipe để loại bỏ input không hợp lệ\nexport class ConditionPipe implements PipeTransform {\n  transform(value: any) {\n    if (value < 0) {\n      throw new BadRequestException('Invalid input');\n    }\n    return value;\n  }\n}",
    "filename": "aab36e638052a2081b8e9f492fd84085_6.scala"
  },
  {
    "conversation_hash": "c173e0f5ed2c18775b5f33d08cbcc4f8",
    "code_index": 5,
    "language": "Scala",
    "libraries": [],
    "code": "import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { MasculineEnding } from './masculine-ending.entity';\n\n@Injectable()\nexport class MasculineEndingService {\n  constructor(\n    @InjectRepository(MasculineEnding)\n    private readonly masculineEndingRepository: Repository<MasculineEnding>,\n  ) {}\n\n  async getMasculineEndings(): Promise<MasculineEnding[]> {\n    return this.masculineEndingRepository.find();\n  }\n\n  async getMasculineEndingById(id: number): Promise<MasculineEnding> {\n    return this.masculineEndingRepository.findOne(id);\n  }\n\n  async updateMasculineEnding(masculineEnding: MasculineEnding): Promise<MasculineEnding> {\n    return this.masculineEndingRepository.save(masculineEnding);\n  }\n}",
    "filename": "c173e0f5ed2c18775b5f33d08cbcc4f8_5.scala"
  },
  {
    "conversation_hash": "c50162bfb4954ff549467807c5139c6e",
    "code_index": 2,
    "language": "Scala",
    "libraries": [],
    "code": "import { Body, Controller, Post, Req } from '@nestjs/common';\nimport { WordService } from '../services/word.service';\n\n@Controller('word-progress')\nexport class WordProgressController {\n  constructor(private readonly wordService: WordService) {}\n\n  @Post('mark-as-known')\n  async markWordAsKnown(@Req() req, @Body() body) {\n    const userId = req.user.id;\n    const wordId = body.wordId;\n\n    await this.wordService.markWordAsKnown(userId, wordId);\n  }\n}",
    "filename": "c50162bfb4954ff549467807c5139c6e_2.scala"
  },
  {
    "conversation_hash": "11d5e0aecc86ef412b1d7b726e8490f4",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "val xmlString = \"<items>\" +\n        \"<item id=\\\"101\\\"/>\" +\n        \"<item id=\\\"102\\\"/>\" +\n        \"<item id=\\\"103\\\"/>\" +\n        \"</items>\"\nreadItemsFromXml(xmlString)",
    "filename": "11d5e0aecc86ef412b1d7b726e8490f4_1.scala"
  },
  {
    "conversation_hash": "232da47b4510e1a5cfb57ee8d2bb0658",
    "code_index": 7,
    "language": "Scala",
    "libraries": [],
    "code": "import { EntityHelper } from 'src/utils/entity-helper';\nimport { Entity, PrimaryGeneratedColumn, Column, OneToMany } from 'typeorm';\nimport { GameProgress } from 'src/game/entities/game.entity';\n\n@Entity()\nexport class Word extends EntityHelper {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column()\n  word: string;\n\n  @Column()\n  frequency: string;\n\n  @Column('json')\n  types: string[];\n\n  @Column({ nullable: true })\n  gender: string;\n\n  @Column('json')\n  translation_en: string[];\n\n  @Column('json')\n  example: { phrase: string; translation_en: string };\n\n  @OneToMany(() => GameProgress, (gameProgress) => gameProgress.word)\n  gameProgresses: GameProgress[];\n}",
    "filename": "232da47b4510e1a5cfb57ee8d2bb0658_7.scala"
  },
  {
    "conversation_hash": "d5037b71bf4f9283d85ee0047731ab16",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "; This is an imaginary Lisp dialect program.\n; It takes two integer arguments and returns their sum\n\n((def sum (x) \n  (lam (a b) \n    (x (+ a b)))))\n\n; Main program\n(print \"Enter two numbers to add:\")\n(let ((x (read))\n      (y (read)))\n  (print \"The sum is:\")\n  (sum print x y))",
    "filename": "d5037b71bf4f9283d85ee0047731ab16_1.scala"
  },
  {
    "conversation_hash": "168df7a844e804e73f12bb77e24aa772",
    "code_index": 7,
    "language": "Scala",
    "libraries": [
      "androidx.fragment.app.Fragment"
    ],
    "code": "import androidx.fragment.app.Fragment\n\nclass MyFragment : Fragment() {\n\n}",
    "filename": "168df7a844e804e73f12bb77e24aa772_7.scala"
  },
  {
    "conversation_hash": "168df7a844e804e73f12bb77e24aa772",
    "code_index": 9,
    "language": "Scala",
    "libraries": [
      "android.os.Bundle",
      "android.view.LayoutInflater",
      "android.view.View",
      "android.view.ViewGroup",
      "androidx.fragment.app.Fragment"
    ],
    "code": "import androidx.fragment.app.Fragment\nimport android.os.Bundle\nimport android.view.LayoutInflater\nimport android.view.View\nimport android.view.ViewGroup\n\nclass MyFragment : Fragment(R.layout.fragment_my) {\n\n}",
    "filename": "168df7a844e804e73f12bb77e24aa772_9.scala"
  },
  {
    "conversation_hash": "fbe606867950c3a5357747be2c2d2bca",
    "code_index": 4,
    "language": "Scala",
    "libraries": [],
    "code": "$ busctl monitor\nMonitoring bus...\nNAME          PID  USER     CONNECTION  UNIT            SESSION     OBJECT_PATH                                                    MESSAGE                                                           \ngdbus         1221 user1                -                -           /org/freedesktop/DBus                                           org.freedesktop.DBus.Properties.GetAll                              \ngdbus         1221 user1                -                -           /org/freedesktop/DBus                                           org.freedesktop.DBus.Properties.GetAll                              \ngnome-shell   2272 user1                -                -           /org/gnome/Shell                                                org.gnome.Shell.ScreencastProxy.StartRecordin...                    \ngnome-shell   2272 user1                -                -           /org/gnome/Shell                                                org.gnome.Shell.ScreencastProxy.StartRecordin...                    \ngdbus         4767 user1                -                -           /com/canonical/unity/launcher/entry/99469530...                    org.freedesktop.DBus.Properties.GetAll                              \ngdbus-session 6120 user1    :1.65        gnome-terminal- Gnome,3.30.2 /org/gnome/Terminal/tilda                                         org.gnome.Terminal.Tilda.ScrollOffset                            \n4 messages",
    "filename": "fbe606867950c3a5357747be2c2d2bca_4.scala"
  },
  {
    "conversation_hash": "396634074351a85a839de7d187c1eb02",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "val str = \"example string\"\nval n = 7 // number of characters to trim\nval trimmedStr = str.substring(n)\n\nprintln(trimmedStr) // \"string\"",
    "filename": "396634074351a85a839de7d187c1eb02_0.scala"
  },
  {
    "conversation_hash": "7ea480dfda9db1f1e755606189d2f4f2",
    "code_index": 0,
    "language": "Scala",
    "libraries": [
      "ShowcaseCard",
      "type"
    ],
    "code": "---\nimport { Picture } from \"@astrojs/image/components\";\nimport type { ShowcaseSite } from \"~/types\";\nimport { useState } from \"preact/hooks\";\nimport ShowcaseCard from \"./ShowcaseCard\";\n\nexport interface Props {\n    site: ShowcaseSite;\n}\n\nconst { site } = Astro.props;\nconst widths = [450, 800];\nconst sizes = \"(min-width: 1024px) 33vw, (min-width: 768px) 50vw, 100vw\";\n---\n\n<ShowcaseCard widths={widths} sizes={sizes} site={site} />",
    "filename": "7ea480dfda9db1f1e755606189d2f4f2_0.scala"
  },
  {
    "conversation_hash": "7ea480dfda9db1f1e755606189d2f4f2",
    "code_index": 2,
    "language": "Scala",
    "libraries": [],
    "code": "---\nimport { Picture } from \"@astrojs/image/components\";\n\nexport interface Props {\n  src: string;\n  widths: number[];\n  sizes: string;\n  alt: string;\n}\n\nconst { src, widths, sizes, alt } = Astro.props;\n---\n\n<Picture\n  class=\"h-full w-full bg-cover object-cover transition-all duration-300 group-hover:scale-110 group-hover:opacity-20 group-focus:scale-110 group-focus:opacity-20\"\n  src={src}\n  widths={widths}\n  sizes={sizes}\n  alt={alt}\n/>",
    "filename": "7ea480dfda9db1f1e755606189d2f4f2_2.scala"
  },
  {
    "conversation_hash": "7ea480dfda9db1f1e755606189d2f4f2",
    "code_index": 5,
    "language": "Scala",
    "libraries": [
      "ShowcaseCard",
      "type"
    ],
    "code": "---\nimport { Picture } from \"@astrojs/image/components\";\nimport type { ShowcaseSite } from \"~/types\";\nimport ShowcaseCard from \"./ShowcaseCard\";\n\nexport interface Props {\n    site: ShowcaseSite;\n}\n\nconst { site } = Astro.props;\nconst widths = [450, 800];\nconst sizes = \"(min-width: 1024px) 33vw, (min-width: 768px) 50vw, 100vw\";\n---\n\n<ShowcaseCard site={site}>\n  <Picture\n    class=\"h-full w-full bg-cover object-cover transition-all duration-300 group-hover:scale-110 group-hover:opacity-20 group-focus:scale-110 group-focus:opacity-20\"\n    src={site.image}\n    widths={widths}\n    sizes={sizes}\n    alt={`A screenshot of ${site.url}`}\n  />\n</ShowcaseCard>",
    "filename": "7ea480dfda9db1f1e755606189d2f4f2_5.scala"
  },
  {
    "conversation_hash": "71ee8511d6341e800413093862f78123",
    "code_index": 2,
    "language": "Scala",
    "libraries": [
      "com.google.gson.annotations.SerializedName"
    ],
    "code": "import com.google.gson.annotations.SerializedName\n\ndata class Data(\n    @SerializedName(\"bomMaterialCode\")\n    val bomMaterialCode: String?,\n    @SerializedName(\"bomMaterialName\")\n    val bomMaterialName: String?,\n    @SerializedName(\"bomUnit\")\n    val bomUnit: String?,\n    @SerializedName(\"version\")\n    val version: String?,\n    @SerializedName(\"status\")\n    val status: Int?,\n    @SerializedName(\"lineNo\")\n    val lineNo: Int?,\n    @SerializedName(\"parentCode\")\n    val parentCode: String?,\n    @SerializedName(\"materialCode\")\n    val materialCode: String?,\n    @SerializedName(\"materialName\")\n    val materialName: String?,\n    @SerializedName(\"unit\")\n    val unit: String?,\n    @SerializedName(\"useAmount\")\n    val useAmount: Int?,\n    @SerializedName(\"amount\")\n    val amount: Int?\n)\n\ndata class Result(\n    @SerializedName(\"optType\")\n    val optType: Int?,\n    @SerializedName(\"data\")\n    val data: List<Data>?\n)",
    "filename": "71ee8511d6341e800413093862f78123_2.scala"
  },
  {
    "conversation_hash": "04abd3ca2714c48fd770297973067b9a",
    "code_index": 7,
    "language": "Scala",
    "libraries": [],
    "code": "<com.mapbox.mapboxsdk.maps.MapView\n    android:id=\"@+id/mapView\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    mapbox:mapbox_cameraTargetLat=\"45.520486\"\n    mapbox:mapbox_cameraTargetLng=\"-122.673541\"\n    mapbox:mapbox_cameraZoom=\"15\" />",
    "filename": "04abd3ca2714c48fd770297973067b9a_7.scala"
  },
  {
    "conversation_hash": "ec6d21fc991a0899d3704c751ca0be0c",
    "code_index": 3,
    "language": "Scala",
    "libraries": [],
    "code": "export default class PropertyElement {\n  constructor(page: Page) {\n    this.page = page;\n  }\n\n  // Геттеры локаторов\n\n  // Получить атрибут в окне \"Добавить атрибут\"\n  get attributeItemName() {\n    return (name: string) => this.page.locator(`[data-test=\"attribute_type_name_${name}\"]`);\n  }\n  \n  // Получить строку из таблицы текущих атрибутов (вкладка \"Имя и Атрибуты\", \"Атрибуты экземпляра\")\n  get stringAttribute() {\n    return (attrName: string) => this.page.locator('[data-test=\"element-properties_table\"] tr:visible', { hasText: attrName });\n  }\n\n  // Получить значение конкретного атрибута\n  get valueAttribute() {\n    return (attrName: string) => this.stringAttribute(attrName).locator('[class^=\"EditableText\"]');\n  }\n\n  // Получить ячейку из \"Расположение атрибутов\"\n  get attributeLocationCells() {\n    return (n = 0) => this.page.locator('[data-test=container_for_attributes_around_an_object]').nth(n);\n  }\n}",
    "filename": "ec6d21fc991a0899d3704c751ca0be0c_3.scala"
  },
  {
    "conversation_hash": "da7c3119c65f1041a94c9973b023fb45",
    "code_index": 3,
    "language": "Scala",
    "libraries": [],
    "code": "datasource db {\n    provider = \"postgresql\"\n    url      = env(\"DATABASE_URL\")\n  }\n\n  // Define your data model using Prisma's declarative schema language\n  model User {\n    id       Int      @id @default(autoincrement())\n    email    String   @unique\n    name     String?\n    age      Int?\n    posts    Post[]\n    profile  Profile?\n    createdAt DateTime @default(now())\n  }\n\n  model Post {\n    id        Int     @id @default(autoincrement())\n    title     String\n    content   String?\n    published Boolean @default(false)\n    authorId  Int\n    author    User    @relation(fields: [authorId], references: [id])\n    createdAt DateTime @default(now())\n  }\n\n  model Profile {\n    id        Int    @id @default(autoincrement())\n    bio       String\n    userId    Int    @unique\n    user      User   @relation(fields: [userId], references: [id])\n    createdAt DateTime @default(now())\n  }",
    "filename": "da7c3119c65f1041a94c9973b023fb45_3.scala"
  },
  {
    "conversation_hash": "da7c3119c65f1041a94c9973b023fb45",
    "code_index": 7,
    "language": "Scala",
    "libraries": [],
    "code": "datasource db {\n  provider = \"postgresql\"\n  url      = env(\"DATABASE_URL\")\n}\n \n// User data model\nmodel User {\n  id        Int      @id @default(autoincrement())\n  name      String\n  email     String   @unique\n  posts     Post[]\n  comments  Comment[]\n}\n \n// Post data model\nmodel Post {\n  id          Int          @id @default(autoincrement())\n  title       String\n  content     String\n  published   Boolean      @default(false)\n  authorId    Int\n  author      User         @relation(fields: [authorId], references: [id])\n  tags        Tag[]\n  comments    Comment[]\n  createdAt   DateTime     @default(now())\n}\n \n// Comment data model\nmodel Comment {\n  id        Int      @id @default(autoincrement())\n  text      String\n  authorId  Int\n  author    User     @relation(fields: [authorId], references: [id])\n  postId    Int\n  post      Post     @relation(fields: [postId], references: [id])\n  createdAt DateTime @default(now())\n}\n \n// Tag data model\nmodel Tag {\n  id       Int     @id @default(autoincrement())\n  name     String  @unique\n  posts    Post[]  @relation(\"TaggedPost\")\n}",
    "filename": "da7c3119c65f1041a94c9973b023fb45_7.scala"
  },
  {
    "conversation_hash": "c5077feb907800453755b1252fac4f7e",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "using Distributed\nusing DataFrames\nusing CSV\n\naddprocs()\n@everywhere using DataFrames\n\n# Load Data\ndata = CSV.read(\"C:/Users/Użytkownik/Desktop/player22.csv\", DataFrame)\n\n(position -> (global _position; @eval begin\n             (_position)_idx = findall(occursin.(\n(_position), data.Positions))\n        end)(_position) for position in [\"RW\", \"ST\", \"GK\", \"CM\", \"LW\", \"CDM\", \"LM\", \"CF\", \"CB\", \"CAM\", \"LB\", \"RB\", \"RM\", \"LWB\", \"RWB\"])\n\nposition_vectors = [RW_idx, ST_idx, GK_idx, CM_idx, LW_idx,\n                    CDM_idx, LM_idx, CF_idx, CB_idx, CAM_idx,\n                    LB_idx ,RB_idx, RM_idx, LWB_idx, RWB_idx]\n\n# Here, I removed the other part of the code\n\nnum_generations_range = 1000:5000:50000\n\nglobal_results = SharedArray{NamedTuple}(1, length(num_generations_range))\n\n@sync @distributed for i in 1:length(num_generations_range)\n    num_generations = num_generations_range[i]\n    println(\"Current Generation: $num_generations\")\n    result = run_ga(num_generations)\n    global_results[i] = result\n    println(\"Generations: \", result.generations, \", target_value: \", result.target_value)\nend\n\nresults_df = DataFrame(global_results)\nprintln(results_df)",
    "filename": "c5077feb907800453755b1252fac4f7e_1.scala"
  },
  {
    "conversation_hash": "7e0dc2a3ab96445c05264a9baf52959b",
    "code_index": 0,
    "language": "Scala",
    "libraries": [
      "the"
    ],
    "code": "package matrixInverse\n\nobject leastSquares:\n  def fitPolynomial(d: Int, x: Array[Double], y: Array[Double]) : Array[Double] =\n    require(d > 0 && x.length == y.length)\n\n    val n = x.length\n    val X = new Matrix(n, d + 1)\n    \n    // Populate the X matrix with powers of x values\n    for (i <- 0 until n; j <- 0 to d) {\n        X(i, j) = math.pow(x(i), j)\n    }\n\n    // Create the Y matrix (vector) with y values\n    val Y = new Matrix(n, 1)\n    for (i <- 0 until n) {\n        Y(i, 0) = y(i)\n    }\n\n    // Solve the normal equation: (X^T X)a = X^T Y\n    val Xt = X.transpose\n    val XtX = Xt * X\n    val XtY = Xt * Y\n    val A = XtX.inverse * XtY\n\n    // Extract the coefficients from the solution\n    val coefficients = new Array[Double](d + 1)\n    for (i <- 0 until d + 1) {\n        coefficients(i) = A(i, 0)\n    }\n\n    coefficients\n  end fitPolynomial\nend leastSquares",
    "filename": "7e0dc2a3ab96445c05264a9baf52959b_0.scala"
  },
  {
    "conversation_hash": "7e0dc2a3ab96445c05264a9baf52959b",
    "code_index": 1,
    "language": "Scala",
    "libraries": [
      "sorted"
    ],
    "code": "package svd\n\nclass Matrix(val m: Int, val n: Int):\n  // Matrix class implementation ...\n\n  /* Returns the singular value decomposition of this matrix */\n  def svd: (Matrix, Matrix, Matrix) =\n    def matProd(my: Matrix, ny: Matrix): Matrix = my * ny\n\n    val AAT = matProd(this, this.transpose)\n    val ATA = matProd(this.transpose, this)\n\n    def findEigenPairs(A: Matrix): List[(Matrix, Double)] =\n      // Implement your eigenvalue decomposition algorithm here\n      // You may use, e.g., the QR algorithm or the Jacobi algorithm\n      ???\n\n    // Find Eigen Pairs\n    val eigsU = findEigenPairs(AAT)\n    val eigsV = findEigenPairs(ATA)\n\n    // Sort Eigen Pairs by eigenvalue and use their matrix\n    val sortedEigsU = eigsU.sortBy(_._2).map(_._1)\n    val sortedEigsV = eigsV.sortBy(_._2).map(_._1)\n\n    // Initialize U matrix from sorted Eigen Pairs matrix\n    val U = Matrix.identity(m)\n    for (i <- 0 until m)\n      for (j <- 0 until m)\n        U(i, j) = sortedEigsU(i)(j, j)\n\n    // Initialize V matrix from sorted Eigen Pairs matrix\n    val V = Matrix.identity(n)\n    for (i <- 0 until n)\n      for (j <- 0 until n)\n        V(i, j) = sortedEigsV(i)(j, j)\n\n    // Calculating singular values\n    val singularValues = new Matrix(m, n)\n    for (i <- 0 until math.min(m, n))\n      singularValues(i, i) = math.sqrt(sortedEigsU(i)._2)\n\n    (U, singularValues, V.transpose)\n  end svd\n\nend Matrix",
    "filename": "7e0dc2a3ab96445c05264a9baf52959b_1.scala"
  },
  {
    "conversation_hash": "655c7afde1fd64af36d420ebc99066ed",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "def svd: (Matrix, Matrix, Matrix) = {\n    val AtA = this.transpose * this\n    val AAt = this * this.transpose\n\n    // Find largest eigenpair for AtA and AAt\n    val (sigma2, v) = largestEigenpair(AtA)\n    val (_, u) = largestEigenpair(AAt)\n\n    // Normalize left and right singular vectors\n    val u_normalized = normalize(u)\n    val v_normalized = normalize(v)\n\n    // Create singular value matrix\n    val sigma = new Matrix(m, n)\n    sigma.update(0, 0, Math.sqrt(sigma2))\n\n    // Return the singular value decomposition\n    (u_normalized, sigma, v_normalized.transpose)\n  }",
    "filename": "655c7afde1fd64af36d420ebc99066ed_1.scala"
  },
  {
    "conversation_hash": "b7f76bc143def8f65f2e0f2f21b67806",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "package object errorCorrect:\n  /**\n   * Parity bit positions are 1,2,4,8,16,32. Remaining 6 bits are filled up to 64 bits\n   * Total bits needed to represent 32 bits data word are: 32(data) + 6(parity) = 38 bits\n   * Using 40-bit storage elements will have no effect on the structure of the Hamming code\n   */\n\n  /** Returns, in the least significant 40 bits of the return value,\n   *  the 40-bit encoded form of the 32-bit data word given as parameter. */\n  def SECEncode(d: Int): Long =\n    val data: Long = (d & 0xFFFFFFFFL)\n    var encoded: Long = 0L\n    \n    // Place data elements to the right position within the 40-bit encoded storage\n    for i <- 0 to 31 do\n      val bit = (data >> i) & 1\n      val j = i + (i / 3) + 1\n      encoded |= (bit << j)\n\n    // Calculate parity bits\n    for i <- 0 to 5 do\n      val parityBit = (1 << i)\n      val parityBits = (encoded >> 1) & ~((1L << i) - 1L)\n      var parity = 0L\n      for j <- i + 1 to 30 by (2 * parityBit) do\n        parity ^= (parityBits >> j) & ((1L << i) - 1L)\n      val parityBitVal = java.lang.Long.bitCount(parity) & 1\n      encoded = (encoded & (~(parityBit << 1))) | (parityBitVal << i)\n\n    encoded\n  end SECEncode\n  \n  /** Returns the 32-bit data word encoded in the least significant 40 bits\n   *  of the parameter s. Decoding must always succeed if at most one\n   *  bit error has occurred in the least significant 40 bits of the \n   *  parameter s. */\n  def SECDecode(s: Long): Int =\n    var paritySum = 0\n    \n    // Check parity bits to detect error position\n    for i <- 0 to 5 do\n      val parityBit = (1 << i)\n      val parityBits = (s >> 1) & ~((1L << i) - 1L)\n      var parity = (s >> i) & 1      \n      for j <- i + 1 to 30 by (2 * parityBit) do\n        parity ^= (parityBits >> j) & ((1L << i) - 1L)\n      paritySum |= (parity << i)\n\n    // If there is a bit error, correct it\n    val repaired = if paritySum != 0 then s ^ (1L << paritySum) else s\n\n    var decoded: Int = 0\n    for i <- 0 to 31 do\n      val j = i + (i / 3) + 1\n      decoded |= (((repaired >> j) & 1) << i)\n\n    decoded\n  end SECDecode",
    "filename": "b7f76bc143def8f65f2e0f2f21b67806_0.scala"
  },
  {
    "conversation_hash": "b7f76bc143def8f65f2e0f2f21b67806",
    "code_index": 1,
    "language": "Scala",
    "libraries": [
      "org.scalatest.flatspec.AnyFlatSpec",
      "org.scalatest.matchers.should._",
      "scala.util.Random"
    ],
    "code": "package errorCorrect\n\nimport org.scalatest.flatspec.AnyFlatSpec\nimport org.scalatest.matchers.should._\nimport scala.util.Random\n\nclass errorCorrectSpec extends AnyFlatSpec with Matchers:\n    \"the SEC encoding and decoding algorithm\" should \"return the correct value\" in {\n        val repeats = 100\n        val seed    = 0x1234567890ABCDEFL\n        val rnd     = new Random(seed)\n        for j <- 1 to repeats do\n            val d = rnd.nextInt()\n            val s = SECEncode(d)\n            val k = rnd.nextInt(40)\n            val e = (s ^ (1L << k)) & 0x000000FFFFFFFFFFL\n            withClue(\"For d = 0x%08X, s = 0x%010X, k = %2d, e = 0x%010X\\n\".format(d,s,k,e)) {\n                SECDecode(e) shouldBe d\n            }\n    }",
    "filename": "b7f76bc143def8f65f2e0f2f21b67806_1.scala"
  },
  {
    "conversation_hash": "b7f76bc143def8f65f2e0f2f21b67806",
    "code_index": 4,
    "language": "Scala",
    "libraries": [],
    "code": "package object errorCorrect:\n\n  def SECEncode(d: Int): Long =\n    val data: Long = (d & 0xFFFFFFFFL)\n    var encoded: Long = 0L\n    \n    for i <- 0 to 31 do\n      val bit = (data >> i) & 1\n      val j = i + (i / 3) + 1\n      encoded = encoded | (bit << j)\n\n    for i <- 0 to 5 do\n      val parityBit = (1 << i)\n      val parityBits = (encoded >> 1) & ~((1L << i) - 1L)\n      var parity = 0L\n      for j <- i + 1 to 30 by (2 * parityBit) do\n        parity ^= (parityBits >> j) & ((1L << i) - 1L)\n      val parityBitVal = java.lang.Long.bitCount(parity) & 1\n      encoded = (encoded & (~(parityBit << 1))) | (parityBitVal << i)\n\n    encoded\n  end SECEncode\n\n  def SECDecode(s: Long): Int =\n    var paritySum = 0\n\n    for i <- 0 to 5 do\n      val parityBit = (1 << i)\n      val parityBits = (s >> 1) & ~((1L << i) - 1L)\n      var parity = (s >> i) & 1\n      for j <- i + 1 to 30 by (2 * parityBit) do\n        parity ^= (parityBits >> j) & ((1L << i) - 1L)\n      paritySum = paritySum | (parity << i)\n\n    val repaired = if paritySum != 0 then s ^ (1L << paritySum) else s\n\n    var decoded: Int = 0\n    for i <- 0 to 31 do\n      val j = i + (i / 3) + 1\n      decoded = decoded | (((repaired >> j) & 1) << i)\n\n    decoded\n  end SECDecode",
    "filename": "b7f76bc143def8f65f2e0f2f21b67806_4.scala"
  },
  {
    "conversation_hash": "b7f76bc143def8f65f2e0f2f21b67806",
    "code_index": 6,
    "language": "Scala",
    "libraries": [],
    "code": "encoded = encoded | ((bit << j) & 0xFFFFFFFFL)\n  ...\n  paritySum = paritySum | ((parity << i) & 0xFFFFFFFFL)\n  ...\n  decoded = decoded | ((((repaired >> j) & 1L) << i) & 0xFFFFFFFFL).toInt",
    "filename": "b7f76bc143def8f65f2e0f2f21b67806_6.scala"
  },
  {
    "conversation_hash": "b7f76bc143def8f65f2e0f2f21b67806",
    "code_index": 7,
    "language": "Scala",
    "libraries": [],
    "code": "package object errorCorrect:\n\n  def SECEncode(d: Int): Long =\n    val data: Long = (d & 0xFFFFFFFFL)\n    var encoded: Long = 0L\n\n    for i <- 0 to 31 do\n      val bit = (data >> i) & 1\n      val j = i + (i / 3) + 1\n      encoded = encoded | ((bit << j) & 0xFFFFFFFFL)\n\n    for i <- 0 to 5 do\n      val parityBit = (1 << i)\n      val parityBits = (encoded >> 1) & ~((1L << i) - 1L)\n      var parity = 0L\n      for j <- i + 1 to 30 by (2 * parityBit) do\n        parity ^= (parityBits >> j) & ((1L << i) - 1L)\n      val parityBitVal = java.lang.Long.bitCount(parity) & 1\n      encoded = (encoded & (~(parityBit << 1))) | (parityBitVal << i)\n\n    encoded\n  end SECEncode\n\n  def SECDecode(s: Long): Int =\n    var paritySum = 0\n\n    for i <- 0 to 5 do\n      val parityBit = (1 << i)\n      val parityBits = (s >> 1) & ~((1L << i) - 1L)\n      var parity = (s >> i) & 1\n      for j <- i + 1 to 30 by (2 * parityBit) do\n        parity ^= (parityBits >> j) & ((1L << i) - 1L)\n      paritySum = paritySum | ((parity << i) & 0xFFFFFFFFL)\n\n    val repaired = if paritySum != 0 then s ^ (1L << paritySum) else s\n\n    var decoded: Int = 0\n    for i <- 0 to 31 do\n      val j = i + (i / 3) + 1\n      decoded = decoded | ((((repaired >> j) & 1L) << i) & 0xFFFFFFFFL).toInt\n\n    decoded\n  end SECDecode",
    "filename": "b7f76bc143def8f65f2e0f2f21b67806_7.scala"
  },
  {
    "conversation_hash": "b7f76bc143def8f65f2e0f2f21b67806",
    "code_index": 10,
    "language": "Scala",
    "libraries": [],
    "code": "package object errorCorrect:\n\n  def SECEncode(d: Int): Long =\n    val data: Long = (d & 0xFFFFFFFFL)\n    var encoded: Long = 0L\n\n    for i <- 0 to 31 do\n      val bit = (data >> i) & 1\n      val j = i + (i / 3) + 1\n      encoded = encoded | ((bit << j) & 0xFFFFFFFFL)\n\n    for i <- 0 to 5 do\n      val parityBit = (1 << i)\n      val parityBits = (encoded >> 1) & ~((1L << i) - 1L)\n      var parity = 0L\n      for j <- i + 1 to 30 by (2 * parityBit) do\n        parity ^= (parityBits >> j) & ((1L << i) - 1L)\n      val parityBitVal = java.lang.Long.bitCount(parity) & 1\n      encoded = (encoded & (~(parityBit << 1))) | (parityBitVal << i)\n\n    encoded\n  end SECEncode\n\n  def SECDecode(s: Long): Int =\n    var paritySum = 0\n\n    for i <- 0 to 5 do\n      val parityBit = (1 << i)\n      val parityBits = (s >> 1) & ~((1L << i) - 1L)\n      var parity = (s >> i) & 1\n      for j <- i + 1 to 30 by (2 * parityBit) do\n        parity ^= (parityBits >> j) & ((1L << i) - 1L)\n      paritySum = paritySum | (parity << i).toInt\n\n    val repaired = if paritySum != 0 then s ^ (1L << paritySum) else s\n\n    var decoded: Int = 0\n    for i <- 0 to 31 do\n      val j = i + (i / 3) + 1\n      decoded = decoded | ((((repaired >> j) & 1L) << i) & 0xFFFFFFFFL).toInt\n\n    decoded\n  end SECDecode",
    "filename": "b7f76bc143def8f65f2e0f2f21b67806_10.scala"
  },
  {
    "conversation_hash": "2ef4b30fe8d6df32c75382dab6762982",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "def SECEncode(d: Int): Long =\n  val data: Long = (d & 0xFFFFFFFFL)\n  var encoded: Long = 0L\n\n  // Place data elements to the right position within the 40-bit encoded storage\n  for i <- 0 to 31 do\n    val bit = (data >> i) & 1\n    val j = i + (i / 3) + 1\n    encoded = encoded | ((bit << j) & 0xFFFFFFFFL)\n\n  // Calculate parity bits\n  for i <- 0 to 5 do\n    val parityBit = (1L << i) // Change this line to use Long value\n    val parityBits = (encoded >> 1) & ~((1L << i) - 1L)\n    var parity = 0L\n    for j <- i + 1 to 30 by (2 * parityBit) do\n      parity ^= (parityBits >> j) & ((1L << i) - 1L)\n    val parityBitVal = java.lang.Long.bitCount(parity) & 1\n    encoded = (encoded & (~(parityBit << 1))) | (parityBitVal << i)\n\n  encoded\nend SECEncode",
    "filename": "2ef4b30fe8d6df32c75382dab6762982_0.scala"
  },
  {
    "conversation_hash": "2ef4b30fe8d6df32c75382dab6762982",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "// Calculate parity bits\nfor i <- 0 to 5 do\n  val parityBit = (1L << i) // Use Long value\n  val parityBits = (encoded >> 1) & ~((1L << i) - 1L)\n  var parity = 0L\n  for j <- i + 1 to 30 by (2 * (parityBit.toInt)) do // Convert parityBit to Int here\n    parity ^= (parityBits >> j) & ((1L << i) - 1L)\n  val parityBitVal = java.lang.Long.bitCount(parity) & 1\n  encoded = (encoded & (~(parityBit << 1))) | (parityBitVal << i)",
    "filename": "2ef4b30fe8d6df32c75382dab6762982_1.scala"
  },
  {
    "conversation_hash": "2ef4b30fe8d6df32c75382dab6762982",
    "code_index": 2,
    "language": "Scala",
    "libraries": [],
    "code": "def SECDecode(s: Long): Int =\n  var paritySum = 0\n\n  // Check parity bits to detect error position\n  for i <- 0 to 5 do\n    val parityBit = (1 << i)\n    val parityBits = (s >> 1) & ~((1L << i) - 1L)\n    var parity = ((s >> i) & 1L).toInt\n    for j <- i + 1 to 30 by (2 * parityBit) do\n      parity ^= (parityBits >> j) & ((1L << i) - 1L)\n    paritySum = paritySum | (parity << i)\n\n  // If there is a bit error, correct it\n  val repaired = if paritySum != 0 then s ^ (1L << paritySum) else s\n\n  var decoded: Int = 0\n  for i <- 0 to 31 do\n    val j = i + (i / 3) + 1\n    decoded = decoded | ((((repaired >> j) & 1L) << i) & 0xFFFFFFFFL).toInt\n\n  decoded\nend SECDecode",
    "filename": "2ef4b30fe8d6df32c75382dab6762982_2.scala"
  },
  {
    "conversation_hash": "2ef4b30fe8d6df32c75382dab6762982",
    "code_index": 3,
    "language": "Scala",
    "libraries": [],
    "code": "def SECDecode(s: Long): Int =\n  var paritySum = 0\n\n  // Check parity bits to detect error position\n  for i <- 0 to 5 do\n    val parityBit = 1 << i\n    val parityBits = (s >> 1) & ~((1L << i) - 1L)\n    var parity = ((s >> i) & 1L).toInt\n    for j <- i + 1 to 30 by (2 * parityBit) do\n      parity = parity ^ (((parityBits >> j) & ((1L << i) - 1L)).toInt)\n    paritySum = paritySum | (parity << i)\n\n  // If there is a bit error, correct it\n  val repaired = if paritySum != 0 then s ^ (1L << paritySum) else s\n\n  var decoded: Int = 0\n  for i <- 0 to 31 do\n    val j = i + (i / 3) + 1\n    decoded = decoded | ((((repaired >> j) & 1L) << i) & 0xFFFFFFFFL).toInt\n\n  decoded\nend SECDecode",
    "filename": "2ef4b30fe8d6df32c75382dab6762982_3.scala"
  },
  {
    "conversation_hash": "2ef4b30fe8d6df32c75382dab6762982",
    "code_index": 4,
    "language": "Scala",
    "libraries": [],
    "code": "def SECDecode(s: Long): Int = {\n  var paritySum = 0\n  var parity: Int = 0\n\n  // Check parity bits to detect error position\n  for i <- 0 to 5 do\n    val parityBit = 1 << i\n    val parityBits = (s >> 1) & ~((1L << i) - 1L)\n    parity = parity ^ (((s >> i) & 1L) << i).toInt\n    for j <- i + 1 to 30 by (2 * parityBit) do\n      parity = parity ^ (((parityBits >> j) & ((1L << i) - 1L)) << i).toInt\n    paritySum = paritySum | (parity & (1 << i))\n\n  // If there is a bit error, correct it\n  val repaired = if paritySum != 0 then s ^ (1L << paritySum) else s\n\n  var decoded: Int = 0\n  for i <- 0 to 31 do\n    val j = i + (i / 3) + 1\n    decoded = decoded | ((((repaired >> j) & 1L) << i) & 0xFFFFFFFFL).toInt\n\n  decoded\n}",
    "filename": "2ef4b30fe8d6df32c75382dab6762982_4.scala"
  },
  {
    "conversation_hash": "2ef4b30fe8d6df32c75382dab6762982",
    "code_index": 7,
    "language": "Scala",
    "libraries": [],
    "code": "def SECDecode(s: Long): Int =\n  var paritySum = 0\n    \n  // Check parity bits to detect error position\n  for i <- 0 to 5 do\n    val parityBit = (1 << i)\n    val parityBits = (s >> 1) & ~((1L << i) - 1L)\n    var parity = (s >> i) & 1      \n    for j <- i + 1 to 30 by (2 * parityBit) do\n      parity ^= ((parityBits >> j) & ((1L << i) - 1L)) << i // Update this line\n    paritySum = paritySum | (parity << i).toInt\n\n  // If there is a bit error, correct it\n  val repaired = if paritySum != 0 then s ^ (1L << paritySum) else s\n\n  var decoded: Int = 0\n  for i <- 0 to 31 do\n    val j = i + (i / 3) + 1\n    decoded = decoded | ((((repaired >> j) & 1L) << i) & 0xFFFFFFFFL).toInt\n\n  decoded\nend SECDecode",
    "filename": "2ef4b30fe8d6df32c75382dab6762982_7.scala"
  },
  {
    "conversation_hash": "2ef4b30fe8d6df32c75382dab6762982",
    "code_index": 10,
    "language": "Scala",
    "libraries": [],
    "code": "def SECDecode(s: Long): Int =\n  var paritySum = 0\n    \n  // Check parity bits to detect error position\n  for i <- 0 to 5 do\n    val parityBit = (1 << i)\n    val parityBits = (s >> 1) & ~((1L << i) - 1L)\n    var parity = (s >> i) & 1      \n    for j <- i + 1 to 30 by (2 * parityBit) do\n      parity ^= java.lang.Long.bitCount(parityBits >> j & ((1L << i) - 1)) // Update this line\n    paritySum = paritySum | (parity << i).toInt\n\n  // If there is a bit error, correct it\n  val repaired = if paritySum != 0 then s ^ (1L << paritySum) else s\n\n  var decoded: Int = 0\n  for i <- 0 to 31 do\n    val j = i + (i / 3) + 1\n    decoded = decoded | ((((repaired >> j) & 1L) << i) & 0xFFFFFFFFL).toInt\n\n  decoded\nend SECDecode",
    "filename": "2ef4b30fe8d6df32c75382dab6762982_10.scala"
  },
  {
    "conversation_hash": "2ef4b30fe8d6df32c75382dab6762982",
    "code_index": 11,
    "language": "Scala",
    "libraries": [],
    "code": "def decompose(p: Int, q: Int, b: Int): (Seq[Int], Seq[Int], Seq[Int]) = {\n  require(p >= 0 && q > 0 && p < 100000 && q < 100000 && b >= 2 && b <= 100)\n\n  var currentP = p\n  \n  // Compute integer part\n  val integerPart = currentP / q\n  currentP %= q\n  \n  // Compute transient and period parts\n  var transient = Seq[Int]()\n  var period = Seq[Int]()\n  var remMap = Map[Int, Int]()\n  \n  // Long division method with remainder tracking\n  while currentP != 0 && !remMap.contains(currentP) do\n    remMap += currentP -> transient.size\n    currentP *= b\n    transient :+= currentP / q\n    currentP %= q\n    \n  // If a repeating remainder is detected, compute the period\n  if currentP != 0 then\n    val periodStart = remMap(currentP)\n    period = transient.drop(periodStart)\n    transient = transient.take(periodStart)\n  \n  (Seq(integerPart), transient, period)\n}",
    "filename": "2ef4b30fe8d6df32c75382dab6762982_11.scala"
  },
  {
    "conversation_hash": "2ef4b30fe8d6df32c75382dab6762982",
    "code_index": 12,
    "language": "Scala",
    "libraries": [],
    "code": "val (integer, transient, period) = decompose(45679, 3700, 10)\nprintln(integer, transient, period) // Output: (Seq(1,2),Seq(3,4),Seq(5,6,7))\n\nval (integer2, transient2, period2) = decompose(49, 99, 10)\nprintln(integer2, transient2, period2) // Output: (Seq(0),Seq(),Seq(4,9))\n\nval (integer3, transient3, period3) = decompose(3, 2, 10)\nprintln(integer3, transient3, period3) // Output: (Seq(1),Seq(5),Seq(0))",
    "filename": "2ef4b30fe8d6df32c75382dab6762982_12.scala"
  },
  {
    "conversation_hash": "05a165ad9bb8c307e513c6f21c6f3b9f",
    "code_index": 2,
    "language": "Scala",
    "libraries": [],
    "code": "def decompose(p: Int, q: Int, b: Int): (Seq[Int],Seq[Int],Seq[Int]) =\n  require(p >= 0 && q > 0 && p < 100000 && q < 100000 && b >= 2 && b <= 100) \n  // you may assume p, q, b meet the above requirements\n  // Compute the integer part\n  val integerPart = p / q\n  var remainder = p % q * b\n\n  // Compute the finite transient\n  val transient = collection.mutable.ArrayBuffer.empty[Int]\n  while (remainder != 0 && transient.length < 100) {\n    transient += remainder / q\n    remainder = remainder % q * b\n  }\n\n  // Compute the finite period\n  val period = collection.mutable.ArrayBuffer.empty[Int]\n  val remainders = collection.mutable.Map.empty[Int, Int]\n  while (remainder != 0 && !remainders.contains(remainder)) {\n    remainders(remainder) = period.length\n    period += remainder / q\n    remainder = remainder % q * b\n  }\n  if (remainder != 0) {\n    val startIndex = remainders(remainder)\n    period.insert(startIndex, -1)\n  }\n\n  (Seq(integerPart), transient.toSeq, period.filter(_ != -1).toSeq)\nend decompose",
    "filename": "05a165ad9bb8c307e513c6f21c6f3b9f_2.scala"
  },
  {
    "conversation_hash": "05a165ad9bb8c307e513c6f21c6f3b9f",
    "code_index": 3,
    "language": "Scala",
    "libraries": [],
    "code": "def decompose(p: Int, q: Int, b: Int): (Seq[Int], Seq[Int], Seq[Int]) =\n  require(p >= 0 && q > 0 && p < 100000 && q < 100000 && b >= 2 && b <= 100)\n  // Compute the integer part\n  val integerPart = p / q\n  var remainder = p % q * b\n\n  // Compute the finite transient\n  val transient = collection.mutable.ArrayBuffer.empty[Int]\n  while (remainder != 0 && transient.length < 100) {\n    transient += remainder / q\n    remainder = remainder % q * b\n  }\n\n  // Compute the finite period\n  val period = collection.mutable.ArrayBuffer.empty[Int]\n  val remainders = collection.mutable.Map.empty[Int, Int]\n  while (remainder != 0 && !remainders.contains(remainder)) {\n    remainders(remainder) = period.length\n    period += remainder / q\n    remainder = remainder % q * b\n  }\n  if (remainder != 0) {\n    val startIndex = remainders(remainder)\n    period.insert(startIndex, -1)\n  }\n\n  val periodToSeq = if (period.isEmpty && transient.nonEmpty) Seq(0) else period.filter(_ != -1).toSeq\n\n  (Seq(integerPart), transient.toSeq, periodToSeq)",
    "filename": "05a165ad9bb8c307e513c6f21c6f3b9f_3.scala"
  },
  {
    "conversation_hash": "05a165ad9bb8c307e513c6f21c6f3b9f",
    "code_index": 4,
    "language": "Scala",
    "libraries": [],
    "code": "def decompose(p: Int, q: Int, b: Int): (Seq[Int], Seq[Int], Seq[Int]) =\n  require(p >= 0 && q > 0 && p < 100000 && q < 100000 && b >= 2 && b <= 100)\n  // Compute the integer part\n  val integerPart = p / q\n  var remainder = p % q * b\n\n  // Compute the finite transient\n  val transient = collection.mutable.ArrayBuffer.empty[Int]\n  while (remainder != 0 && transient.length < 100) {\n    transient += remainder / q\n    remainder = remainder % q * b\n  }\n\n  // Initialize the flag for period zero\n  var isPeriodZero = false\n\n  // Compute the finite period\n  val period = collection.mutable.ArrayBuffer.empty[Int]\n  val remainders = collection.mutable.Map.empty[Int, Int]\n  while (remainder != 0 && !remainders.contains(remainder)) {\n    remainders(remainder) = period.length\n    period += remainder / q\n    remainder = remainder % q * b\n\n    // Check if period should be zero\n    if (remainder == 0) {\n      isPeriodZero = true\n      break\n    }\n  }\n  if (remainder != 0) {\n    val startIndex = remainders(remainder)\n    period.insert(startIndex, -1)\n  }\n\n  val periodToSeq = if (isPeriodZero) Seq(0) else period.filter(_ != -1).toSeq\n\n  (Seq(integerPart), transient.toSeq, periodToSeq)",
    "filename": "05a165ad9bb8c307e513c6f21c6f3b9f_4.scala"
  },
  {
    "conversation_hash": "05a165ad9bb8c307e513c6f21c6f3b9f",
    "code_index": 5,
    "language": "Scala",
    "libraries": [],
    "code": "def decompose(p: Int, q: Int, b: Int): (Seq[Int], Seq[Int], Seq[Int]) =\n  require(p >= 0 && q > 0 && p < 100000 && q < 100000 && b >= 2 && b <= 100)\n  // Compute the integer part\n  val integerPart = p / q\n  var remainder = p % q * b\n\n  // Compute the finite transient\n  val transient = collection.mutable.ArrayBuffer.empty[Int]\n  while (remainder != 0 && transient.length < 100) {\n    transient += remainder / q\n    remainder = remainder % q * b\n  }\n\n  // Initialize the flag for period zero\n  var isPeriodZero = false\n\n  // Compute the finite period\n  val period = collection.mutable.ArrayBuffer.empty[Int]\n  val remainders = collection.mutable.Map.empty[Int, Int]\n\n  var continueLoop = true\n  while (remainder != 0 && !remainders.contains(remainder) && continueLoop) {\n    remainders(remainder) = period.length\n    period += remainder / q\n    remainder = remainder % q * b\n\n    // Check if period should be zero\n    if (remainder == 0) {\n      isPeriodZero = true\n      continueLoop = false\n    }\n  }\n\n  if (remainder != 0) {\n    val startIndex = remainders(remainder)\n    period.insert(startIndex, -1)\n  }\n\n  val periodToSeq = if (isPeriodZero) Seq(0) else period.filter(_ != -1).toSeq\n\n  (Seq(integerPart), transient.toSeq, periodToSeq)",
    "filename": "05a165ad9bb8c307e513c6f21c6f3b9f_5.scala"
  },
  {
    "conversation_hash": "05a165ad9bb8c307e513c6f21c6f3b9f",
    "code_index": 6,
    "language": "Scala",
    "libraries": [],
    "code": "def decompose(p: Int, q: Int, b: Int): (Seq[Int], Seq[Int], Seq[Int]) = \n  require(p >= 0 && q > 0 && p < 100000 && q < 100000 && b >= 2 && b <= 100)\n\n  // Compute the integer part\n  val integerPart = p / q\n  var remainder = p % q * b\n\n  // Compute the finite transient\n  val transient = collection.mutable.ArrayBuffer.empty[Int]\n  while (remainder != 0 && !transient.contains(remainder)) {\n    transient += remainder / q\n    remainder = remainder % q * b\n  }\n\n  // Compute the finite period\n  val period = collection.mutable.ArrayBuffer.empty[Int]\n  val remainders = collection.mutable.Map.empty[Int, Int]\n  while (remainder != 0 && !remainders.contains(remainder)) {\n    remainders(remainder) = period.length\n    period += remainder / q\n    remainder = remainder % q * b\n  }\n\n  val updatedTransient = if (period.isEmpty && transient.nonEmpty) transient.init else transient\n  val periodToSeq = if (period.isEmpty && transient.nonEmpty) Seq(transient.last) else period.filter(_ != -1).toSeq\n\n  (Seq(integerPart), updatedTransient.toSeq, periodToSeq)",
    "filename": "05a165ad9bb8c307e513c6f21c6f3b9f_6.scala"
  },
  {
    "conversation_hash": "05a165ad9bb8c307e513c6f21c6f3b9f",
    "code_index": 7,
    "language": "Scala",
    "libraries": [],
    "code": "def decompose(p: Int, q: Int, b: Int): (Seq[Int], Seq[Int], Seq[Int]) = \n  require(p >= 0 && q > 0 && p < 100000 && q < 100000 && b >= 2 && b <= 100)\n\n  // Compute the integer part\n  val integerPart = p / q\n  var remainder = p % q * b\n\n  // Compute the finite transient\n  val transient = collection.mutable.ArrayBuffer.empty[Int]\n  while (remainder != 0 && !transient.contains(remainder)) {\n    transient += remainder / q\n    remainder = remainder % q * b\n  }\n\n  val transientIdx = transient.indexOf(remainder)\n\n  // Compute the finite period\n  val period = transient.slice(transientIdx, transient.length)\n\n  val updatedTransient = if (transientIdx >= 0) transient.slice(0, transientIdx) else transient\n\n  (Seq(integerPart), updatedTransient.toSeq, period.toSeq)",
    "filename": "05a165ad9bb8c307e513c6f21c6f3b9f_7.scala"
  },
  {
    "conversation_hash": "05a165ad9bb8c307e513c6f21c6f3b9f",
    "code_index": 8,
    "language": "Scala",
    "libraries": [],
    "code": "def decompose(p: Int, q: Int, b: Int): (Seq[Int], Seq[Int], Seq[Int]) =\n  require(p >= 0 && q > 0 && p < 100000 && q < 100000 && b >= 2 && b <= 100)\n\n  // Compute the integer part\n  val integerPart = p / q\n  var remainder = p % q\n\n  // Compute the finite transient\n  val transient = collection.mutable.ArrayBuffer.empty[Int]\n  val transientRemainders = collection.mutable.Set.empty[Int]\n  while (remainder != 0 && !transientRemainders.contains(remainder)) {\n    transientRemainders.add(remainder)\n    remainder = remainder * b\n    transient += remainder / q\n    remainder = remainder % q\n  }\n\n  // Compute the finite period\n  val period = collection.mutable.ArrayBuffer.empty[Int]\n  val periodRemainders = collection.mutable.Set.empty[Int]\n  while (remainder != 0 && !periodRemainders.contains(remainder)) {\n    periodRemainders.add(remainder)\n    remainder = remainder * b\n    period += remainder / q\n    remainder = remainder % q\n  }\n\n  (Seq(integerPart), transient.toSeq, period.toSeq)",
    "filename": "05a165ad9bb8c307e513c6f21c6f3b9f_8.scala"
  },
  {
    "conversation_hash": "05a165ad9bb8c307e513c6f21c6f3b9f",
    "code_index": 9,
    "language": "Scala",
    "libraries": [],
    "code": "def decompose(p: Int, q: Int, b: Int): (Seq[Int], Seq[Int], Seq[Int]) =\n  require(p >= 0 && q > 0 && p < 100000 && q < 100000 && b >= 2 && b <= 100)\n\n  // Compute the integer part\n  val integerPart = p / q\n  var remainder = p % q\n\n  // Compute the finite transient\n  val transient = collection.mutable.ArrayBuffer.empty[Int]\n  val transientRemainders = collection.mutable.Map.empty[Int, Int]\n  while (remainder != 0 && !transientRemainders.contains(remainder)) {\n    transientRemainders(remainder) = transient.length\n    remainder = remainder * b\n    transient += remainder / q\n    remainder = remainder % q\n  }\n\n  // Compute the finite period\n  val period = collection.mutable.ArrayBuffer.empty[Int]\n  if (remainder != 0) {\n    val startIndex = transientRemainders(remainder)\n    while (startIndex < transient.length) {\n      period += transient(startIndex)\n      transient.remove(startIndex)\n    }\n  } else {\n    transient += 0\n  }\n\n  (Seq(integerPart), transient.toSeq, period.toSeq)",
    "filename": "05a165ad9bb8c307e513c6f21c6f3b9f_9.scala"
  },
  {
    "conversation_hash": "3d127b5599ade1833f1b7336d2043e13",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "def buildShallowOr(a: Bus): Gate = {\n  require(a.length > 0, \"The bus cannot be empty\")\n  if (a.length == 1) a(0)\n  else {\n    val mid = a.length / 2\n    val leftOr = buildShallowOr(a.take(mid))\n    val rightOr = buildShallowOr(a.drop(mid))\n    leftOr || rightOr\n  }\n}",
    "filename": "3d127b5599ade1833f1b7336d2043e13_0.scala"
  },
  {
    "conversation_hash": "3d127b5599ade1833f1b7336d2043e13",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "def buildShallowIncrementer(in: Bus): Bus = {\n  require(in.length > 0, \"Cannot build an incrementer on an empty bus\")\n\n  def incrementRec(bus: Bus, carry: Gate): Bus = {\n    if (bus.length == 1) {\n      val (_, s) = factory.buildHalfAdder(bus(0), carry)\n      new Bus(Seq(s))\n    } else {\n      val mid = bus.length / 2\n      val lowerBus = bus.take(mid)\n      val upperBus = bus.drop(mid)\n      val (_, carryOutLower) = factory.buildShallowAdder(lowerBus, Bus.falses(mid).appended(carry))\n      val upperBusIncremented = incrementRec(upperBus, carryOutLower)\n      new Bus(lowerBus ++ upperBusIncremented)\n    }\n  }\n\n  incrementRec(in, Gate.input() || Gate.False)\n}",
    "filename": "3d127b5599ade1833f1b7336d2043e13_1.scala"
  },
  {
    "conversation_hash": "3d127b5599ade1833f1b7336d2043e13",
    "code_index": 2,
    "language": "Scala",
    "libraries": [],
    "code": "def buildShallowAdder(a: Bus, b: Bus): Bus = {\n  require(a.length == b.length, \"The buses must be of the same length\")\n  require(a.length > 0, \"Cannot build an adder on an empty bus\")\n  \n  def addRec(a: Bus, b: Bus): (Gate, Bus) = {\n      if (a.length == 1) {\n        factory.buildFullAdder(a(0), b(0), Gate.False)\n      } else {\n        val mid = a.length / 2\n        val bottomA = a.take(mid)\n        val topA = a.drop(mid)\n        val bottomB = b.take(mid)\n        val topB = b.drop(mid)\n        \n        val (bottomCarry, bottomSums) = addRec(bottomA, bottomB)\n        val (topCarry, topSums) = addRec(topA, topB)\n        val carryWithBottom = factory.buildShallowAdder(Bus.falses(mid).appended(bottomCarry), topA)\n        val (nextCarry, newTopSums) = addRec(carryWithBottom, topSums)\n        \n        (topCarry || nextCarry, bottomSums ++ newTopSums)\n      }\n  }\n  \n  addRec(a, b)._2\n}",
    "filename": "3d127b5599ade1833f1b7336d2043e13_2.scala"
  },
  {
    "conversation_hash": "3d127b5599ade1833f1b7336d2043e13",
    "code_index": 3,
    "language": "Scala",
    "libraries": [],
    "code": "def buildShallowIncrementer(in: Bus): Bus = {\n  require(in.length > 0, \"Cannot build an incrementer on an empty bus\")\n  \n  def incrementRec(bus: Bus, carry: Gate): Bus = {\n    if (bus.length == 1) {\n      val (_, s) = factory.buildHalfAdder(bus(0), carry)\n      new Bus(Seq(s))\n    } else {\n      val mid = bus.length / 2\n      val lowerBus = bus.take(mid)\n      val upperBus = bus.drop(mid)\n      val (_, carryOutLower) = factory.buildShallowAdder(lowerBus, Bus.falses(mid).appended(carry))\n      val upperBusIncremented = incrementRec(upperBus, carryOutLower)\n      new Bus(lowerBus ++ upperBusIncremented)\n    }\n  }\n  \n  incrementRec(in, Gate.True)\n}",
    "filename": "3d127b5599ade1833f1b7336d2043e13_3.scala"
  },
  {
    "conversation_hash": "0166d20753d3ebe2660ee3486375c3b9",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "def solve(set: Set[Int], target: Int): Option[Set[Int]] = \n  val arr = set.toArray\n  val n = arr.length\n  val dp = Array.ofDim[Boolean](n + 1, target + 1)\n\n  for (i <- 0 to n) {\n    dp(i)(0) = true\n  }\n\n  for (i <- 1 to n) {\n    for (j <- 1 to target) {\n      dp(i)(j) = dp(i-1)(j)\n      if (j >= arr(i-1)) then\n        dp(i)(j) = dp(i)(j) || dp(i-1)(j-arr(i-1))\n    }\n  }\n\n  if (!dp(n)(target)) {\n    None\n  } else {\n    val solution = scala.collection.mutable.Set[Int]()\n    var (i, j) = (n, target)\n    while (i > 0 && j > 0) {\n      if (dp(i-1)(j-arr(i-1)) && j >= arr(i-1)) {\n        solution += arr(i-1)\n        j -= arr(i-1)\n      }\n      i -= 1\n    }\n\n    Some(solution.toSet)\n  }\nend solve",
    "filename": "0166d20753d3ebe2660ee3486375c3b9_0.scala"
  },
  {
    "conversation_hash": "0166d20753d3ebe2660ee3486375c3b9",
    "code_index": 1,
    "language": "Scala",
    "libraries": [
      "subsetsumDynProg._"
    ],
    "code": "import subsetsumDynProg._\n\nval set = Set(3, 34, 4, 12, 5, 2)\nval target = 9\n\nval result = solve(set, target)\nprintln(s\"The solution is: $result\")",
    "filename": "0166d20753d3ebe2660ee3486375c3b9_1.scala"
  },
  {
    "conversation_hash": "10250394c07145e2d89afb76e10ec592",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "package teraStream:\n\n  ...\n\n  def minStream(s: BlockStream): Long =\n    var minValue = Long.MaxValue\n    s.rewind()\n    while(s.hasNext) {\n      val block = s.next()\n      minValue = block.foldLeft(minValue)(_ min _)\n    }\n    minValue\n  end minStream\n\n  val minValue = minStream(inputStream)\n\n  def maxStream(s: BlockStream): Long = \n    var maxValue = Long.MinValue\n    s.rewind()\n    while(s.hasNext) {\n      val block = s.next()\n      maxValue = block.foldLeft(maxValue)(_ max _)\n    }\n    maxValue\n  end maxStream\n\n  val maxValue = maxStream(inputStream)\n\n  def posStream(s: BlockStream, pos: Long): Long = {\n    var bits = 62\n    var curPos = pos\n    var curVal = 0L\n\n    while bits >= 0 do\n      s.rewind()\n      val bitmask = 1L << bits\n      var count = 0L\n\n      while s.hasNext do\n        val block = s.next()\n        count += block.count(_ & bitmask == curVal)\n      \n      if count <= curPos then\n        curVal |= bitmask\n        curPos -= count\n\n      bits -= 1\n\n    curVal\n  }\n\n  val posValue = posStream(inputStream, 68719476736L)",
    "filename": "10250394c07145e2d89afb76e10ec592_0.scala"
  },
  {
    "conversation_hash": "6488a725245720af71744f88095e9643",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "package words\n\nobject wordsSolutions {\n\n  val file3300depunctuatedLength = 1685383  // for \"pg3300.txt\"\n\n  val file3300tokenCount = 296161  // for \"pg3300.txt\"\n\n  val wordOccurrences777 = \"government\"  // lowercase, for \"pg3300.txt\"\n\n}",
    "filename": "6488a725245720af71744f88095e9643_1.scala"
  },
  {
    "conversation_hash": "611f2f968b89e787558defca4df8e0f5",
    "code_index": 12,
    "language": "Scala",
    "libraries": [],
    "code": "<insert id=\"batchInsert\" parameterType=\"java.util.List\">\n  insert into user (id, name, age) values\n  <foreach collection=\"list\" item=\"user\" separator=\",\">\n    (#{user.id}, #{user.name}, #{user.age})\n  </foreach>\n</insert>",
    "filename": "611f2f968b89e787558defca4df8e0f5_12.scala"
  },
  {
    "conversation_hash": "d25933beb76dae3d070f1fe0c28674b7",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "val task5: Long = transactions\n    .filter { case (_, _, _, amount) => amount >= 100000000 } // Filter transactions with at least one billion euro cents\n    .map { case (timestamp, _, _, _) => timestamp / 3600000 } // Map the timestamp to hours\n    .distinct() // Get distinct hours\n    .count() // Count the number of distinct hours\n\nprintln(\"OUTPUT: The number of hours for Task 5 is %d\".format(task5))",
    "filename": "d25933beb76dae3d070f1fe0c28674b7_0.scala"
  },
  {
    "conversation_hash": "d25933beb76dae3d070f1fe0c28674b7",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "val balancesMap: Map[String, Long] = balances.collect().toMap\n\nval task6: Long = transactions\n      .flatMap { case (_, from, to, _) => Seq(from, to) } // Create a sequence of account identifiers\n      .distinct() // Get distinct account identifiers\n      .filter(account => balancesMap.getOrElse(account, 0L) >= 100000000) // Filter accounts with at least one million euro\n      .count() // Count the number of qualifying accounts\n\nprintln(\"OUTPUT: The number of accounts for Task 6 is %d\".format(task6))",
    "filename": "d25933beb76dae3d070f1fe0c28674b7_1.scala"
  },
  {
    "conversation_hash": "d25933beb76dae3d070f1fe0c28674b7",
    "code_index": 2,
    "language": "Scala",
    "libraries": [],
    "code": "val task7: Long = transactions\n    .groupBy { case (timestamp, _, _, _) => timestamp / 86400000 } // Group transactions by day\n    .values // Get only the transaction values\n    .flatMap { dayTransactions =>\n      dayTransactions\n        .groupBy { case (_, account, _, _) => account } // Group transactions by account identifier\n        .values // Get only the transactions for each account\n        .map { accountTransactions =>\n          val minBalance = accountTransactions.map { case (_, _, _, balance) => balance }.min // Find the minimum balance for each account on the day\n          minBalance\n        }\n    }\n    .sum // Sum the minimum balances over the 365 days\n    .toLong\n\nprintln(\"OUTPUT: The basis for Task 7 is %d\".format(task7))",
    "filename": "d25933beb76dae3d070f1fe0c28674b7_2.scala"
  },
  {
    "conversation_hash": "3289799c4253417a88f09ba683e3998c",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "val builder = AlertDialog.Builder(this)\nbuilder.setTitle(\"Dialog Title\")\nbuilder.setMessage(\"Dialog Message\")\nbuilder.setPositiveButton(\"OK\") { dialog, which ->\n    // perform some tasks when OK button is clicked\n    runSomeFunction()\n}\nbuilder.setNegativeButton(\"Cancel\") { dialog, which ->\n    // do nothing when cancel button is clicked\n}\nval dialog = builder.create()\ndialog.show()",
    "filename": "3289799c4253417a88f09ba683e3998c_0.scala"
  },
  {
    "conversation_hash": "f36351267108383f1f1f48cb248ad8ad",
    "code_index": 4,
    "language": "Scala",
    "libraries": [],
    "code": "import 'package:flutter/material.dart';\nimport 'package:flutter_chat_ui/flutter_chat_ui.dart';\n\nclass MyChatScreen extends StatefulWidget {\n  @override\n  _MyChatScreenState createState() => _MyChatScreenState();\n}\n\nclass _MyChatScreenState extends State<MyChatScreen> {\n  @override\n  Widget build(BuildContext context) {\n    return Scaffold(\n      appBar: AppBar(\n        title: Text('My Chat App'),\n      ),\n      body: ChatUI(\n        messages: [\n          TextMessage(\n            text: 'Hello!',\n            sender: User(id: '1', name: 'John'),\n            createdAt: DateTime.now(),\n          ),\n          ImageMessage(\n            image: NetworkImage('https://example.com/image.jpg'),\n            sender: User(id: '2', name: 'Jane'),\n            createdAt: DateTime.now(),\n          ),\n        ],\n        // customize more parameters as needed\n        showUserAvatars: true,\n        showUserNames: true,\n        onSendPressed: (message) {\n          // handle sending a new message\n        },\n      ),\n    );\n  }\n}",
    "filename": "f36351267108383f1f1f48cb248ad8ad_4.scala"
  },
  {
    "conversation_hash": "f36351267108383f1f1f48cb248ad8ad",
    "code_index": 8,
    "language": "Scala",
    "libraries": [],
    "code": "class ChatScreen extends StatelessWidget {\n  @override\n  Widget build(BuildContext context) {\n    return Scaffold(\n      appBar: AppBar(\n        title: Text('Bot Chat'),\n      ),\n      body: Column(\n        children: [\n          Expanded(\n            child: StreamBuilder<QuerySnapshot>(\n              stream: _getMessages(),\n              builder: (context, snapshot) {\n                if (!snapshot.hasData) {\n                  return Center(\n                    child: CircularProgressIndicator(),\n                  );\n                }\n\n                return ListView.builder(\n                  reverse: true,\n                  itemCount: snapshot.data!.docs.length,\n                  itemBuilder: (context, index) {\n                    final data = snapshot.data!.docs[index].data();\n                    return ListTile(\n                      title: Text(data['message']),\n                      subtitle: Text('Bot'),\n                      trailing: Text(data['timestamp']),\n                    );\n                  },\n                );\n              },\n            ),\n          ),\n          UserInputWidget(\n            sendMessageCallback: _addMessage,\n          ),\n        ],\n      ),\n    );\n  }\n}",
    "filename": "f36351267108383f1f1f48cb248ad8ad_8.scala"
  },
  {
    "conversation_hash": "934f66899db137eecbad6ca26a459f26",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "def expandHelper(e: Expr): List[Expr] = e match {\n  case Add(left, right) =>\n    expandHelper(left) ++ expandHelper(right)\n  case Subtract(left, right) =>\n    expandHelper(left) ++ expandHelper(negateProduct(right))\n  case Multiply(left, right) =>\n    val expandedLeft = left.expand\n    val expandedRight = right.expand\n    expandHelper(expandedLeft).flatMap { leftProd =>\n      expandHelper(expandedRight).map { rightProd =>\n        Multiply(leftProd, rightProd)\n      }\n    }\n  case Negate(innerExpr) =>\n    expandHelper(negateProduct(innerExpr))\n  case _ => List(e)\n}",
    "filename": "934f66899db137eecbad6ca26a459f26_0.scala"
  },
  {
    "conversation_hash": "934f66899db137eecbad6ca26a459f26",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "case Multiply(left, right) =>\n  val expandedLeft = left.expand\n  val expandedRight = right.expand\n  expandHelper(expandedLeft).flatMap { leftProd =>\n    expandHelper(expandedRight).map { rightProd =>\n      Multiply(leftProd, rightProd)\n    }\n  }",
    "filename": "934f66899db137eecbad6ca26a459f26_1.scala"
  },
  {
    "conversation_hash": "934f66899db137eecbad6ca26a459f26",
    "code_index": 3,
    "language": "Scala",
    "libraries": [],
    "code": "final def expand: Expr = \n  def negateProduct(e: Expr): Expr = e match {\n    case Multiply(Num(c), rest) => Multiply(Num(-c), rest)\n    case Multiply(left, Num(c)) => Multiply(left, Num(-c))\n    case _                      => Multiply(-1.0, e)\n  }\n\n  def expandHelper(e: Expr): List[Expr] = e match {\n    case Add(left, right) =>\n      expandHelper(left) ++ expandHelper(right)\n    case Subtract(left, right) =>\n      expandHelper(left) ++ expandHelper(negateProduct(right))\n    case Multiply(left, right) =>\n      val expandedLeft = left.expand\n      val expandedRight = right.expand\n      expandHelper(expandedLeft).flatMap { leftProd =>\n        expandHelper(expandedRight).map { rightProd =>\n          Multiply(leftProd, rightProd)\n        }\n      }\n    case Negate(innerExpr) =>\n      expandHelper(negateProduct(innerExpr))\n    case _ => List(e)\n  }\n\n  def collapseSOP(exprs: List[Expr], acc: Expr = Num(0)): Expr = {\n    @scala.annotation.tailrec\n    def collapseSOPHelper(exprs: List[Expr], acc: Expr): Expr = {\n      exprs match {\n        case Nil => acc\n        case head :: tail =>\n          head match {\n            case Add(left, right) => collapseSOPHelper(left :: right :: tail, acc)\n            case _ => collapseSOPHelper(tail, Add(acc, head))\n          }\n      }\n    }\n\n    collapseSOPHelper(exprs, acc)\n  }\n\n  val expanded = expandHelper(this)\n  collapseSOP(expanded)\nend expand",
    "filename": "934f66899db137eecbad6ca26a459f26_3.scala"
  },
  {
    "conversation_hash": "05f7a2d5023047bf46759d2903c0f7f7",
    "code_index": 6,
    "language": "Scala",
    "libraries": [],
    "code": "@with_kw mutable struct BikeTrip\n    origin::Int\n    destination::Int\n    trip_time::Int\nend",
    "filename": "05f7a2d5023047bf46759d2903c0f7f7_6.scala"
  },
  {
    "conversation_hash": "23b42deec8d11752dfab5e295a3e7401",
    "code_index": 2,
    "language": "Scala",
    "libraries": [],
    "code": "export class PageMarketGiftComponent {\n  confirmOrder = new ConfirmOrderComponent();\n\n  onSubmit() {\n    // вызов метода класса ConfirmOrderComponent\n    this.confirmOrder.sendOrder();\n    ...\n  }\n}",
    "filename": "23b42deec8d11752dfab5e295a3e7401_2.scala"
  },
  {
    "conversation_hash": "9c5a7de7e5eed6ef567de7e07b71dcd2",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "val file = File(\"path/to/file\")\nif (file.exists()) {\n    if (file.delete()) {\n        Log.d(\"delete\", \"File deleted successfully\")\n    } else {\n        Log.d(\"delete\", \"Failed to delete file\")\n    }\n} else {\n    Log.d(\"delete\", \"File does not exist\")\n}",
    "filename": "9c5a7de7e5eed6ef567de7e07b71dcd2_0.scala"
  },
  {
    "conversation_hash": "9c5a7de7e5eed6ef567de7e07b71dcd2",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "val fileName = \"example.txt\"\nval file = File(context.filesDir, fileName) // create the File object\nif (file.exists()) {\n    if (file.delete()) {\n        Log.d(\"delete\", \"File deleted successfully\")\n    } else {\n        Log.d(\"delete\", \"Failed to delete file\")\n    }\n} else {\n    Log.d(\"delete\", \"File does not exist\")\n}",
    "filename": "9c5a7de7e5eed6ef567de7e07b71dcd2_1.scala"
  },
  {
    "conversation_hash": "2838d6244073ce54746cccf96b48ee57",
    "code_index": 0,
    "language": "Scala",
    "libraries": [
      "java.time.Duration",
      "java.time.LocalDate"
    ],
    "code": "import java.time.Duration\nimport java.time.LocalDate\n\nfun has24HoursPassed(firstDate: LocalDate, secondDate: LocalDate): Boolean {\n    val duration = Duration.between(firstDate.atStartOfDay(), secondDate.atStartOfDay())\n    val dayDuration = Duration.ofDays(1)\n\n    return duration > dayDuration\n}",
    "filename": "2838d6244073ce54746cccf96b48ee57_0.scala"
  },
  {
    "conversation_hash": "308aa9a2e48608c8c09ff05af4828ce1",
    "code_index": 1,
    "language": "Scala",
    "libraries": [
      "android.view.KeyEvent",
      "android.view.inputmethod.EditorInfo",
      "android.widget.TextView",
      "com.google.android.material.textfield.TextInputEditText"
    ],
    "code": "import android.view.KeyEvent\nimport android.view.inputmethod.EditorInfo\nimport android.widget.TextView\nimport com.google.android.material.textfield.TextInputEditText\n\n// ...\n\n// Inside your onCreate (Activity) or onCreateView (Fragment) method:\nval myEditText = findViewById<TextInputEditText>(R.id.myEditText)\nmyEditText.setOnEditorActionListener { _, actionId, keyEvent ->\n    if (actionId == EditorInfo.IME_ACTION_DONE || keyEvent?.keyCode == KeyEvent.KEYCODE_ENTER) {\n        val text = myEditText.text.toString()\n        // Do something with the text\n        true\n    } else {\n        false\n    }\n}",
    "filename": "308aa9a2e48608c8c09ff05af4828ce1_1.scala"
  },
  {
    "conversation_hash": "6b13244fb5e37b6d6a7c9da8430f2fec",
    "code_index": 2,
    "language": "Scala",
    "libraries": [],
    "code": "val linearLayout: LinearLayout = findViewById(R.id.linear_layout)\n\nfor (i in 0 until linearLayout.childCount) {\n    linearLayout.removeViewAt(0)\n}",
    "filename": "6b13244fb5e37b6d6a7c9da8430f2fec_2.scala"
  },
  {
    "conversation_hash": "20ecc3e6d47396b81e1f4eb12392c4b7",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "def quienGana(j1: str, j2: str) -> str:\n    if j1 == \"Piedra\":\n        if j2 == \"Papel\":\n            return \"Jugador2\"\n        elif j2 == \"Tijera\":\n            return \"Jugador1\"\n        else:  # j2 == j1 == \"Piedra\"\n            return \"Empate\"\n    elif j1 == \"Papel\":\n        if j2 == \"Piedra\":\n            return \"Jugador1\"\n        elif j2 == \"Tijera\":\n            return \"Jugador2\"\n        else:  # j2 == j1 == \"Papel\"\n            return \"Empate\"\n    elif j1 == \"Tijera\":\n        if j2 == \"Papel\":\n            return \"Jugador1\"\n        elif j2 == \"Piedra\":\n            return \"Jugador2\"\n        else:  # j2 == j1 == \"Tijera\"\n            return \"Empate\"",
    "filename": "20ecc3e6d47396b81e1f4eb12392c4b7_1.scala"
  },
  {
    "conversation_hash": "850ae1113a04e87b5819515afc57c5c1",
    "code_index": 4,
    "language": "Scala",
    "libraries": [],
    "code": "GlobalScope.launch {\n    // Launch a coroutine to perform the insertion operation\n    performInsertionOperation()\n    \n    // Move to the second activity once the insertion is complete\n    startActivity(Intent(this@FirstActivity, SecondActivity::class.java))\n}",
    "filename": "850ae1113a04e87b5819515afc57c5c1_4.scala"
  },
  {
    "conversation_hash": "6336f5839b1ff39ba61a53e8cc5c8068",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "dependencies {\n    ...\n    implementation 'com.squareup.picasso:picasso:2.71828'\n    ...\n}",
    "filename": "6336f5839b1ff39ba61a53e8cc5c8068_1.scala"
  },
  {
    "conversation_hash": "6336f5839b1ff39ba61a53e8cc5c8068",
    "code_index": 2,
    "language": "Scala",
    "libraries": [],
    "code": "val imageUrl = URL(\"https://example.com/image.png\")\nval connection = imageUrl.openConnection() as HttpURLConnection\nconnection.doInput = true\nconnection.connect()\n\nval input = connection.inputStream\nval bitmap = BitmapFactory.decodeStream(input)\n\nval imageView = findViewById<ImageView>(R.id.my_image_view)\nimageView.setImageBitmap(bitmap)",
    "filename": "6336f5839b1ff39ba61a53e8cc5c8068_2.scala"
  },
  {
    "conversation_hash": "485f96d13dd98c389cf751acf5329158",
    "code_index": 5,
    "language": "Scala",
    "libraries": [],
    "code": "<dependency>\n    <groupId>javax.xml.bind</groupId>\n    <artifactId>jaxb-api</artifactId>\n    <version>2.3.1</version>\n</dependency>",
    "filename": "485f96d13dd98c389cf751acf5329158_5.scala"
  },
  {
    "conversation_hash": "d39a49fbca26bcd3c2a13a0b87d77e89",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "def getParamDefaultValue() {\n  if (params.condition == \"true\") {\n    return \"default1\"\n  } else {\n    return \"default2\"\n  }\n}\n\npipeline {\n  parameters {\n    string(name: 'param1', defaultValue: getParamDefaultValue())\n  }\n  stages {\n    // your pipeline stages\n  }\n}",
    "filename": "d39a49fbca26bcd3c2a13a0b87d77e89_0.scala"
  },
  {
    "conversation_hash": "d39a49fbca26bcd3c2a13a0b87d77e89",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "def GetDefaultValue(String varName) {\n  def values = [\n    \"var1\": \"default1\",\n    \"var2\": \"default2\",\n    \"var3\": \"default3\"\n  ]\n  return values.get(varName, \"\")\n}\n\n// Example usage:\ndef defaultValue = GetDefaultValue(\"var1\")\nprintln(\"Default value of var1 is: \" + defaultValue)",
    "filename": "d39a49fbca26bcd3c2a13a0b87d77e89_1.scala"
  },
  {
    "conversation_hash": "d39a49fbca26bcd3c2a13a0b87d77e89",
    "code_index": 4,
    "language": "Scala",
    "libraries": [],
    "code": "def getPrevBuildParamValue(String paramName) {\n  def build = env.BUILD_PREVIOUS_RESULT\n  if (build != null) {\n    def params = build.actions.find{ it instanceof ParametersAction }.parameters\n    def param = params.find { it.name == paramName }\n    if (param != null) {\n      return param.value\n    }\n  }\n  return ''\n}\n\n// Example usage:\ndef prevParamValue = getPrevBuildParamValue('param1')\nprintln(\"Previous build param1 value is: \" + prevParamValue)",
    "filename": "d39a49fbca26bcd3c2a13a0b87d77e89_4.scala"
  },
  {
    "conversation_hash": "d39a49fbca26bcd3c2a13a0b87d77e89",
    "code_index": 5,
    "language": "Scala",
    "libraries": [],
    "code": "def getPrevBuildParamValue(String paramName) {\n  def prevBuild = currentBuild.previousBuild\n  if (prevBuild != null) {\n    def params = prevBuild.getBuildVariables()\n    return params.get(paramName, '')\n  }\n  return ''\n}\n\n// Example usage:\ndef prevParamValue = getPrevBuildParamValue('param1')\nprintln(\"Previous build param1 value is: \" + prevParamValue)",
    "filename": "d39a49fbca26bcd3c2a13a0b87d77e89_5.scala"
  },
  {
    "conversation_hash": "d39a49fbca26bcd3c2a13a0b87d77e89",
    "code_index": 7,
    "language": "Scala",
    "libraries": [],
    "code": "def getPrevBuildParamValue(String paramName) {\n  def prevBuild = currentBuild.getPreviousBuild()\n  if (prevBuild != null) {\n    def params = prevBuild.getAction(ParametersAction.class)?.getParameters()\n    def param = params.find { it.name == paramName }\n    if (param != null) {\n      return param.value\n    }\n  }\n  return ''\n}\n\n// Example usage:\ndef prevParamValue = getPrevBuildParamValue('param1')\nprintln(\"Previous build param1 value is: \" + prevParamValue)",
    "filename": "d39a49fbca26bcd3c2a13a0b87d77e89_7.scala"
  },
  {
    "conversation_hash": "8d0eecf9715ce0e1a30414fd42e338be",
    "code_index": 4,
    "language": "Scala",
    "libraries": [],
    "code": "import { defineConfig } from \"vite\";\n\nexport default defineConfig({\n  server: {\n    port: 3000,\n    open: true,\n    proxy: {\n      \"/api\": {\n        target: \"https://jsonplaceholder.typicode.com\",\n        changeOrigin: true,\n        rewrite: (path) => path.replace(/^\\/api/, \"\"),\n      },\n      \"/api2\": {\n        target: \"https://reqres.in\",\n        changeOrigin: true,\n        rewrite: (path) => path.replace(/^\\/api2/, \"\"),\n      },\n    },\n  },\n});",
    "filename": "8d0eecf9715ce0e1a30414fd42e338be_4.scala"
  },
  {
    "conversation_hash": "4b5c657c466776cf13bee7e58b38ae5f",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "import { authenticateToken, extendSession } from '../../middleware'\n\nexport default async (req, res) => {\n  // Middleware to authenticate user token\n  authenticateToken(req, res, async () => {\n    // If authentication passes, extend the session\n    extendSession(req, res, async () => {\n      // Your API logic here\n    })\n  })\n}",
    "filename": "4b5c657c466776cf13bee7e58b38ae5f_1.scala"
  },
  {
    "conversation_hash": "cd9f37b67c940e3ccaccfdbe70459e2f",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "MyCameraApp\n|-- app\n    |-- src\n    |   |-- main\n    |       |-- java\n    |           |-- com\n    |               |-- example\n    |                   |-- mycameraapp\n    |                       |-- AndroidLauncher.java\n    |                       |-- MainGame.java\n            |-- AndroidManifest.xml\n    |-- build.gradle",
    "filename": "cd9f37b67c940e3ccaccfdbe70459e2f_1.scala"
  },
  {
    "conversation_hash": "d37d7e0836692d0f6460d567794770b6",
    "code_index": 2,
    "language": "Scala",
    "libraries": [],
    "code": "{\n  reclamation.map((item) => (\n    <View key={item._id}>\n      <Text>{item.title}</Text>\n      <Text>{item.description}</Text>\n    </View>\n  ))\n}",
    "filename": "d37d7e0836692d0f6460d567794770b6_2.scala"
  },
  {
    "conversation_hash": "54d01c43af58653160b246878bc25144",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "yaml\nmodbus:\n  type: tcp\n  host: 192.168.1.100\n  port: 502\n  name: modbus_hub",
    "filename": "54d01c43af58653160b246878bc25144_1.scala"
  },
  {
    "conversation_hash": "1d48eda7944146ce55b645e373f22846",
    "code_index": 3,
    "language": "Scala",
    "libraries": [],
    "code": "// Sort by name in ascending order\nval sortedRecords = sortRecords(records, \"name\", true)\n\n// Update ordinals\nsortedRecords.forEachIndexed { index, record ->\n    record.ordinal = index + 1\n}",
    "filename": "1d48eda7944146ce55b645e373f22846_3.scala"
  },
  {
    "conversation_hash": "1d48eda7944146ce55b645e373f22846",
    "code_index": 14,
    "language": "Scala",
    "libraries": [],
    "code": "// Sort by name in ascending order\nval sortedRecords = sortRecords(records, \"name\", true)\n\n// Update ordinals (skip the first record)\nsortedRecords.subList(1, sortedRecords.size).forEachIndexed { index, record ->\n    record.ordinal = index + 1\n}",
    "filename": "1d48eda7944146ce55b645e373f22846_14.scala"
  },
  {
    "conversation_hash": "19626e14ede0221e912c8ac699c0a0f6",
    "code_index": 3,
    "language": "Scala",
    "libraries": [
      "Navbar",
      "React"
    ],
    "code": "import React from 'react'\nimport Navbar from '../components/Navbar'\n\nconst Home: React.FC = () => {\n  return (\n    <div>\n      <Navbar />\n      <div className=\"container mx-auto mt-10\">\n        <h1 className=\"text-3xl mb-4\">Hello, world!</h1>\n      </div>\n    </div>\n  )\n}\n\nexport default Home",
    "filename": "19626e14ede0221e912c8ac699c0a0f6_3.scala"
  },
  {
    "conversation_hash": "b8e5ff4ad682a846a5a1a65e537d577e",
    "code_index": 2,
    "language": "Scala",
    "libraries": [
      "chisel3._"
    ],
    "code": "import chisel3._\n\nclass AndR extends Module {\n  val io = IO(new Bundle {\n    val in = Input(Vec(4, Bool()))\n    val out = Output(Bool())\n  })\n\n  io.out := io.in.andR\n}\n\nobject AndR extends App {\n  chisel3.Driver.execute(args, () => new AndR)\n}",
    "filename": "b8e5ff4ad682a846a5a1a65e537d577e_2.scala"
  },
  {
    "conversation_hash": "b8e5ff4ad682a846a5a1a65e537d577e",
    "code_index": 4,
    "language": "Scala",
    "libraries": [
      "chisel3._"
    ],
    "code": "import chisel3._\n\nclass ModifyVec extends Module {\n  val io = IO(new Bundle {\n    val in = Input(Vec(4, UInt(4.W)))\n    val index = Input(UInt(2.W))\n    val newData = Input(UInt(4.W))\n    val out = Output(Vec(4, UInt(4.W)))\n  })\n\n  io.out := io.in\n  io.out(io.index) := io.newData\n}\n\nobject ModifyVec extends App {\n  chisel3.Driver.execute(args, () => new ModifyVec)\n}",
    "filename": "b8e5ff4ad682a846a5a1a65e537d577e_4.scala"
  },
  {
    "conversation_hash": "790028632572f0cf2ea89d67b67c2af2",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "val filename = \"myImage.jpg\"\nval file = File(context.filesDir, filename)\n\nval bitmap: Bitmap = // your bitmap object\n\nval fos = FileOutputStream(file)\nbitmap.compress(Bitmap.CompressFormat.JPEG, 100, fos)\nfos.close()",
    "filename": "790028632572f0cf2ea89d67b67c2af2_1.scala"
  },
  {
    "conversation_hash": "790028632572f0cf2ea89d67b67c2af2",
    "code_index": 2,
    "language": "Scala",
    "libraries": [],
    "code": "val db = // Your database instance\n\nval contentValues = ContentValues().apply {\n    put(\"image\", file.absolutePath) // Store the absolute path of the file\n}\n\ndb.insert(\"image_table\", null, contentValues)",
    "filename": "790028632572f0cf2ea89d67b67c2af2_2.scala"
  },
  {
    "conversation_hash": "b192e89e7955d76c349947d43fc292e4",
    "code_index": 0,
    "language": "Scala",
    "libraries": [
      "QtMultimedia",
      "QtQuick",
      "QtQuick.Controls",
      "QtQuick.Layouts"
    ],
    "code": "import QtQuick 2.0\nimport QtQuick.Controls 1.4\nimport QtQuick.Layouts 1.2\nimport QtMultimedia 5.9\n\nItem {\n   width: 200\n   height: 200\n   \n   property string gifImage: \"/path/to/image.gif\"\n   \n   Image {\n      id: gif\n      source: gifImage\n      \n      // Create a MediaPlayer that loops the GIF animation\n      MediaPlayer {\n         id: player\n         source: gifImage\n         loops: MediaPlayer.Infinite\n      }\n      \n      // Set the MediaPlayer as the animation controller\n      animated: true\n      // Bind the Image's source to the MediaPlayer's videoOutput\n      source: player.videoOutput\n      \n      // Update the Image's width and height when the GIF changes\n      onGifImageChanged: {\n         player.source = gifImage\n         player.play()\n         width = player.videoOutput.width\n         height = player.videoOutput.height\n      }\n   }\n}",
    "filename": "b192e89e7955d76c349947d43fc292e4_0.scala"
  },
  {
    "conversation_hash": "bfa0c6b1feac364163362ed4dda2a50c",
    "code_index": 5,
    "language": "Scala",
    "libraries": [
      "ProductItem",
      "PropTypes",
      "React"
    ],
    "code": "import React from \"react\";\nimport ProductItem from \"./ProductItem\";\nimport PropTypes from \"prop-types\";\nimport \"./ProductList.css\";\n\nconst ProductList = ({ products }) => {\n  return (\n    <div className=\"ui link cards\">\n      {products.map((product) => (\n        <ProductItem\n          key={product.id}\n          title={product.title}\n          image={product.image}\n          product={product}\n        />\n      ))}\n    </div>\n  );\n};\n\nProductList.propTypes = {\n  products: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      title: PropTypes.string.isRequired,\n      image: PropTypes.string.isRequired,\n      product: PropTypes.object.isRequired\n    })\n  ).isRequired\n};\n\nexport default ProductList;",
    "filename": "bfa0c6b1feac364163362ed4dda2a50c_5.scala"
  },
  {
    "conversation_hash": "ffaca7a77563d16196f984b8d5edbe00",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "global CalcSumOfEvenDiagonalElmAsm\nsection .data\n    sum dd 0\nsection .text\n\nCalcSumOfEvenDiagonalElmAsm:\n    pushad\n    xor esi, esi\n    mov ecx, [esp+32] ; rows\n    sub ecx, 1\n    mov edi, [esp+36] ; cols\n    sub edi, 1\n\nL1:\n    mov eax, [esp+28] ; address of matrix\n    lea eax, [eax+esi*4] ; matrix+esi*4\n    mov eax, [eax] ; *(matrix+esi*4)\n    lea eax, [eax+edi*4] ; (*(matrix+esi*4))+edi*4\n    mov eax, [eax] ; *(*(matrix+esi*4)+edi*4)\n\n    test eax, 1\n    jnz L2\n    add [sum], eax\nL2:\n    inc esi\n    dec edi\n    cmp esi, [esp+32]\n    jl L1\n\n    mov eax, [sum]\n    mov [sum], 0\n    popad\n    ret",
    "filename": "ffaca7a77563d16196f984b8d5edbe00_1.scala"
  },
  {
    "conversation_hash": "783fba3161c79e802416395eb520ef94",
    "code_index": 3,
    "language": "Scala",
    "libraries": [],
    "code": "val images = listOf(/* list of Image objects */)\nval recyclerView = findViewById<RecyclerView>(R.id.recycler_view)\nval layoutManager = GridLayoutManager(this, 2)\nrecyclerView.layoutManager = layoutManager\nval adapter = ImageAdapter(images)\nrecyclerView.adapter = adapter",
    "filename": "783fba3161c79e802416395eb520ef94_3.scala"
  },
  {
    "conversation_hash": "9c0e6e173961ef6f2c023b78b9d7a49d",
    "code_index": 10,
    "language": "Scala",
    "libraries": [],
    "code": "import { Document } from 'mongoose';\n\ninterface UserModelType extends Document {\n  _doc: {\n    createdAt: Date;\n    updatedAt: Date;\n    username: string;\n    email: string;\n    password: string;\n    isAdmin: boolean;\n  }\n}",
    "filename": "9c0e6e173961ef6f2c023b78b9d7a49d_10.scala"
  },
  {
    "conversation_hash": "9c0e6e173961ef6f2c023b78b9d7a49d",
    "code_index": 12,
    "language": "Scala",
    "libraries": [],
    "code": "import { Document } from 'mongoose';\n\ninterface UserModelType extends Document {\n  _doc: {\n    createdAt: Date;\n    updatedAt: Date;\n    username: string;\n    email: string;\n    password: string;\n    isAdmin: boolean;\n  }\n}",
    "filename": "9c0e6e173961ef6f2c023b78b9d7a49d_12.scala"
  },
  {
    "conversation_hash": "b80f99c2bd50660601d8990570c2aaef",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "import { Ng2ImgMaxModule } from 'ng2-img-max';\n\n@NgModule({\n  imports: [\n    // ...\n    Ng2ImgMaxModule\n  ],\n  // ...\n})\nexport class AppModule { }",
    "filename": "b80f99c2bd50660601d8990570c2aaef_1.scala"
  },
  {
    "conversation_hash": "d8c3925edf7277dbc7e6a748289ba8db",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "import 'package:flutter/material.dart';\n\nclass SignUpForm extends StatefulWidget {\n  @override\n  _SignUpFormState createState() => _SignUpFormState();\n}\n\nclass _SignUpFormState extends State<SignUpForm> {\n  // Define TextEditingController objects to grab user input, validation logic, and other form-related logic here\n\n  @override\n  Widget build(BuildContext context) {\n    return Scaffold(\n      appBar: AppBar(\n        title: Text('Sign Up'),\n      ),\n      body: SingleChildScrollView(\n        child: Container(\n          padding: EdgeInsets.all(16),\n          child: Column(\n            crossAxisAlignment: CrossAxisAlignment.stretch,\n            children: [\n              // Render form fields, buttons, and other UI elements here\n            ],\n          ),\n        ),\n      ),\n    );\n  }\n}",
    "filename": "d8c3925edf7277dbc7e6a748289ba8db_0.scala"
  },
  {
    "conversation_hash": "5269a3494bed4153341d25b8fe1f9020",
    "code_index": 5,
    "language": "Scala",
    "libraries": [
      "React"
    ],
    "code": "import React from 'react'\n\n   interface State {\n     count: number\n   }\n\n   class MyComponent extends React.Component<Props, State> {\n     constructor(props: Props) {\n       super(props)\n\n       this.state = {\n         count: 0\n       }\n     }\n     \n     // ...\n   }",
    "filename": "5269a3494bed4153341d25b8fe1f9020_5.scala"
  },
  {
    "conversation_hash": "5269a3494bed4153341d25b8fe1f9020",
    "code_index": 7,
    "language": "Scala",
    "libraries": [
      "DropdownSelector",
      "Head",
      "Navbar",
      "styles"
    ],
    "code": "import Head from 'next/head'\nimport Navbar from './Navbar'\nimport DropdownSelector from './DropdownSelector' // asumiendo que ya definiste el componente DropdownSelector antes\nimport styles from '../styles/MainLayout.module.css'\n\ninterface Props {\n  children?: React.ReactNode // establecemos que children es un nodo React opcional\n}\n\nexport const MainLayout = ({ children }: Props) => {\n  return (\n    <div>\n      <Head>\n        <title>Hola About😊</title>\n      </Head>\n      <Navbar />\n      <main className={styles.main}>\n        <h1>Hola mundo mi primera página en React!!</h1>\n        <DropdownSelector options={['Reactivarddddd', 'Activar Nuevfffo', 'Verificar Puerto']}></DropdownSelector>\n        {children}\n        <div className={styles.description}></div>\n      </main>\n    </div>\n  )\n}",
    "filename": "5269a3494bed4153341d25b8fe1f9020_7.scala"
  },
  {
    "conversation_hash": "e1692019c473ebfcebdf3900fb4decb9",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "export default defineComponent({\n  setup() {\n    // ...\n  }\n});",
    "filename": "e1692019c473ebfcebdf3900fb4decb9_1.scala"
  },
  {
    "conversation_hash": "17f9d477f0c28ce2a63cb250ceb358d0",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "<resource-ref>\n   <description>My Connection</description>\n   <res-ref-name>jdbc/MyDB</res-ref-name>\n   <res-type>javax.sql.DataSource</res-type>\n   <res-auth>Container</res-auth>\n</resource-ref>",
    "filename": "17f9d477f0c28ce2a63cb250ceb358d0_1.scala"
  },
  {
    "conversation_hash": "e2fdf7855ccca88fd4c2ab253d10b608",
    "code_index": 4,
    "language": "Scala",
    "libraries": [
      "config"
    ],
    "code": "import { MikroOrmModule } from '@mikro-orm/nestjs';\nimport config from '../mikro-orm.config';\n\n@Module({\n  imports: [\n    MikroOrmModule.forRoot(config),\n    // ...\n  ],\n})\nexport class AppModule {}",
    "filename": "e2fdf7855ccca88fd4c2ab253d10b608_4.scala"
  },
  {
    "conversation_hash": "c4994abf4eb2bfa42c82466b8936b1e1",
    "code_index": 4,
    "language": "Scala",
    "libraries": [],
    "code": "val recyclerView: RecyclerView = findViewById(R.id.recycler_view)\nval layoutManager = LinearLayoutManager(this)\nrecyclerView.layoutManager = layoutManager\nval imageLocations = listOf(\"/path/to/image1.jpg\", \"/path/to/image2.jpg\", \"/path/to/image3.jpg\")\nval adapter = ImageAdapter(imageLocations)\nrecyclerView.adapter = adapter",
    "filename": "c4994abf4eb2bfa42c82466b8936b1e1_4.scala"
  },
  {
    "conversation_hash": "f1b601a1c5aa058aae1de2e0318da837",
    "code_index": 19,
    "language": "Scala",
    "libraries": [],
    "code": "val imageFile = File(imageLocations[position])\n   val bitmap = BitmapFactory.decodeFile(imageFile.path)\n   val intent = Intent(this@MyActivity, FullScreenImageActivity::class.java)\n   intent.putExtra(\"image\", bitmap)\n   startActivity(intent)",
    "filename": "f1b601a1c5aa058aae1de2e0318da837_19.scala"
  },
  {
    "conversation_hash": "fa79118fac9fc0d29fc119322dd564b6",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "val popupMenu = PopupMenu(itemView.context, itemView)\npopupMenu.menuInflater.inflate(R.menu.image_context_menu, popupMenu.menu)\npopupMenu.setOnMenuItemClickListener { item ->\n    when (item.itemId) {\n        R.id.delete_image_item -> {\n            // delete image logic\n            true\n        }\n        else -> false\n    }\n}\npopupMenu.show()",
    "filename": "fa79118fac9fc0d29fc119322dd564b6_1.scala"
  },
  {
    "conversation_hash": "e6123cb3f250a69ab55f4014ac96c5a5",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "\"husky\": {\n    \"hooks\": {\n      \"pre-commit\": \"comando_a_ ejecutar\",\n      \"pre-push\": \"comando_a_ejecutar\"\n    }\n  }",
    "filename": "e6123cb3f250a69ab55f4014ac96c5a5_1.scala"
  },
  {
    "conversation_hash": "e6123cb3f250a69ab55f4014ac96c5a5",
    "code_index": 2,
    "language": "Scala",
    "libraries": [],
    "code": "\"husky\": {\n    \"hooks\": {\n      \"pre-commit\": \"npm run lint\"\n    }\n  }",
    "filename": "e6123cb3f250a69ab55f4014ac96c5a5_2.scala"
  },
  {
    "conversation_hash": "6e03eec5196b865e368da167bf13d94b",
    "code_index": 4,
    "language": "Scala",
    "libraries": [],
    "code": "import { ElementRef, ViewChild } from '@angular/core';\n\n// ...\n\nexport class AppComponent {\n  @ViewChild('myInput', { static: false }) myInput: ElementRef;\n  \n  // ...\n}",
    "filename": "6e03eec5196b865e368da167bf13d94b_4.scala"
  },
  {
    "conversation_hash": "74890b87cfacedc054e0a0f560057cce",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "class Mux2to1 extends Module {\n  val io = IO(new Bundle {\n    val in0 = Input(UInt(1.W))\n    val in1 = Input(UInt(1.W))\n    val sel = Input(UInt(1.W))\n    val out = Output(UInt(1.W))\n  })\n\n  io.out := (io.sel & io.in1) | (~io.sel & io.in0)\n}",
    "filename": "74890b87cfacedc054e0a0f560057cce_0.scala"
  },
  {
    "conversation_hash": "74890b87cfacedc054e0a0f560057cce",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "class Mux2to1Tester extends PeekPokeTester[Mux2to1](new Mux2to1) {\n  poke(c.io.in0, 0)\n  poke(c.io.in1, 1)\n  poke(c.io.sel, 0)\n  step(1)\n  expect(c.io.out, 0)\n\n  poke(c.io.in0, 0)\n  poke(c.io.in1, 1)\n  poke(c.io.sel, 1)\n  step(1)\n  expect(c.io.out, 1)\n\n  poke(c.io.in0, 1)\n  poke(c.io.in1, 0)\n  poke(c.io.sel, 0)\n  step(1)\n  expect(c.io.out, 1)\n\n  poke(c.io.in0, 1)\n  poke(c.io.in1, 0)\n  poke(c.io.sel, 1)\n  step(1)\n  expect(c.io.out, 0)\n}",
    "filename": "74890b87cfacedc054e0a0f560057cce_1.scala"
  },
  {
    "conversation_hash": "74890b87cfacedc054e0a0f560057cce",
    "code_index": 2,
    "language": "Scala",
    "libraries": [],
    "code": "class Mux2to1Tester extends PeekPokeTester[Mux2to1](new Mux2to1) {\n  val mux = c\n\n  poke(mux.io.in0, 0)\n  poke(mux.io.in1, 1)\n  poke(mux.io.sel, 0)\n  step(1)\n  expect(mux.io.out, 0)\n\n  poke(mux.io.in0, 0)\n  poke(mux.io.in1, 1)\n  poke(mux.io.sel, 1)\n  step(1)\n  expect(mux.io.out, 1)\n\n  poke(mux.io.in0, 1)\n  poke(mux.io.in1, 0)\n  poke(mux.io.sel, 0)\n  step(1)\n  expect(mux.io.out, 1)\n\n  poke(mux.io.in0, 1)\n  poke(mux.io.in1, 0)\n  poke(mux.io.sel, 1)\n  step(1)\n  expect(mux.io.out, 0)\n}",
    "filename": "74890b87cfacedc054e0a0f560057cce_2.scala"
  },
  {
    "conversation_hash": "eb135edd723e7a5a6ed70a0f6b9d0758",
    "code_index": 2,
    "language": "Scala",
    "libraries": [
      "org.scalatest."
    ],
    "code": "import org.scalatest.{FlatSpec, Matchers}\n\nclass MyTests extends FlatSpec with Matchers {\n  \"An empty list\" should \"have length 0\" in {\n    val emptyList = List()\n    emptyList.length should be (0)\n  }\n\n  it should \"throw NoSuchElementException when head is invoke\" in {\n    val emptyList = List()\n    a [NoSuchElementException] should be thrownBy {\n      emptyList.head\n    }\n  }\n}",
    "filename": "eb135edd723e7a5a6ed70a0f6b9d0758_2.scala"
  },
  {
    "conversation_hash": "eb135edd723e7a5a6ed70a0f6b9d0758",
    "code_index": 3,
    "language": "Scala",
    "libraries": [],
    "code": "val x = {\n  val a = 10\n  val b = 20\n  a + b\n}\nprintln(x)",
    "filename": "eb135edd723e7a5a6ed70a0f6b9d0758_3.scala"
  },
  {
    "conversation_hash": "eb135edd723e7a5a6ed70a0f6b9d0758",
    "code_index": 4,
    "language": "Scala",
    "libraries": [],
    "code": "def foo() = {\n  val a = 10\n  def bar() = {\n    val b = 20\n    a + b\n  }\n  bar()\n}\nprintln(foo()) // 输出 30",
    "filename": "eb135edd723e7a5a6ed70a0f6b9d0758_4.scala"
  },
  {
    "conversation_hash": "9263dcdd0daa61956aa2cf3bd7b7e131",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "def foo(bar: Int)(baz: => String): Unit = {\n  println(\"bar = \" + bar)\n  println(\"baz = \" + baz)\n}\n\nfoo(42) {\n  \"Hello, world!\"\n}",
    "filename": "9263dcdd0daa61956aa2cf3bd7b7e131_0.scala"
  },
  {
    "conversation_hash": "9263dcdd0daa61956aa2cf3bd7b7e131",
    "code_index": 3,
    "language": "Scala",
    "libraries": [],
    "code": "// 使用箭头语法和花括号定义一个函数\nval add: (Int, Int) => Int = (a, b) => {\n  a + b\n}\n\n// 使用占位符语法定义一个函数\nval add: (Int, Int) => Int = _ + _\n\n// 使用currying语法定义一个函数\nval add: Int => Int => Int = a => b => a + b",
    "filename": "9263dcdd0daa61956aa2cf3bd7b7e131_3.scala"
  },
  {
    "conversation_hash": "9263dcdd0daa61956aa2cf3bd7b7e131",
    "code_index": 4,
    "language": "Scala",
    "libraries": [],
    "code": "test(new Passthrough()) { c =>\n  c.io.in.poke(0.U)\n  c.io.out.expect(0.U)\n  c.io.in.poke(1.U)\n  c.io.out.expect(1.U)\n}",
    "filename": "9263dcdd0daa61956aa2cf3bd7b7e131_4.scala"
  },
  {
    "conversation_hash": "9263dcdd0daa61956aa2cf3bd7b7e131",
    "code_index": 5,
    "language": "Scala",
    "libraries": [],
    "code": "val nums = List(1, 2, 3, 4, 5)\n\nval evens = nums.filter { x =>\n  x % 2 == 0\n}\n\nprintln(evens)",
    "filename": "9263dcdd0daa61956aa2cf3bd7b7e131_5.scala"
  },
  {
    "conversation_hash": "9263dcdd0daa61956aa2cf3bd7b7e131",
    "code_index": 6,
    "language": "Scala",
    "libraries": [],
    "code": "object ArrowFunctionExample extends App {\n  val nums = List(1, 2, 3, 4, 5)\n\n  val evens = nums.filter { x =>\n    x % 2 == 0\n  }\n\n  println(evens)\n}",
    "filename": "9263dcdd0daa61956aa2cf3bd7b7e131_6.scala"
  },
  {
    "conversation_hash": "9263dcdd0daa61956aa2cf3bd7b7e131",
    "code_index": 7,
    "language": "Scala",
    "libraries": [],
    "code": "def printWithHeader(header: String)(block: => Unit): Unit = {\n  println(header)\n  block\n}\n\nprintWithHeader(\"This is the header\") {\n  println(\"This is the content\")\n}",
    "filename": "9263dcdd0daa61956aa2cf3bd7b7e131_7.scala"
  },
  {
    "conversation_hash": "bea6f4f75111f55eebfd470333951f7a",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "val spark: SparkSession = SparkSession.builder()\n     .master(\"local\")\n     .appName(\"MongoDBSparkConnector\")\n     .config(\"spark.mongodb.input.uri\", \"mongodb://127.0.0.1:27017/movielens.ratings\")\n     .config(\"spark.mongodb.output.uri\", \"mongodb://127.0.0.1:27017/movielens.average_movies\")\n     .getOrCreate()\n\n   val ratingsDF: DataFrame = spark.read\n     .format(\"com.mongodb.spark.sql.DefaultSource\")\n     .option(\"uri\", \"mongodb://127.0.0.1:27017/movielens.ratings\")\n     .load()",
    "filename": "bea6f4f75111f55eebfd470333951f7a_0.scala"
  },
  {
    "conversation_hash": "95414af871a697cc59e3a47a88a7e88a",
    "code_index": 0,
    "language": "Scala",
    "libraries": [
      "com.mongodb.spark._",
      "org.apache.spark.sql.SparkSession"
    ],
    "code": "import org.apache.spark.sql.SparkSession\nimport com.mongodb.spark._\n\nval spark = SparkSession.builder()\n  .master(\"local\")\n  .appName(\"Read MongoDB data\")\n  .config(\"spark.mongodb.input.uri\", \"mongodb://localhost:27017/test.Rating\")\n  .config(\"spark.mongodb.output.uri\", \"mongodb://localhost:27017/test.AverageMovies\")\n  .getOrCreate()\n\nval ratingDF = MongoSpark.load(spark)\nratingDF.show()",
    "filename": "95414af871a697cc59e3a47a88a7e88a_0.scala"
  },
  {
    "conversation_hash": "1f75e137d18b5ddf98b4cd754f49b8d4",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  // 组件逻辑\n}",
    "filename": "1f75e137d18b5ddf98b4cd754f49b8d4_1.scala"
  },
  {
    "conversation_hash": "dfab6325178c07954b6f7695244d6d89",
    "code_index": 0,
    "language": "Scala",
    "libraries": [
      "spark.implicits._"
    ],
    "code": "case class Movie(movieId: Int, title: String, genres: String)\ncase class Rating(userId: Int, movieId: Int, rating: Double, timestamp: Long)\ncase class Tag(userId: Int, movieId: Int, tag: String, timestamp: Long)\n\nval moviesRDD = sc.textFile(\"movies.csv\").map(_.split(\"::\")).map(m => Movie(m(0).toInt, m(1), m(2)))\nval ratingsRDD = sc.textFile(\"ratings.csv\").map(_.split(\"::\")).map(r => Rating(r(0).toInt, r(1).toInt, r(2).toDouble, r(3).toLong))\nval tagsRDD = sc.textFile(\"tags.csv\").map(_.split(\"::\")).map(t => Tag(t(0).toInt, t(1).toInt, t(2), t(3).toLong))\n\nimport spark.implicits._\nval moviesDF = moviesRDD.toDF()\nval ratingsDF = ratingsRDD.toDF()\nval tagsDF = tagsRDD.toDF()\n\nmoviesDF.write.mongo(\n  Config(Map(\n    \"uri\" -> \"mongodb://localhost:27017/\",\n    \"database\" -> \"movie_recommendation\",\n    \"collection\" -> \"movies\"\n  ))\n)\n\nratingsDF.write.mongo(\n  Config(Map(\n    \"uri\" -> \"mongodb://localhost:27017/\",\n    \"database\" -> \"movie_recommendation\",\n    \"collection\" -> \"ratings\"\n  ))\n)\n\ntagsDF.write.mongo(\n  Config(Map(\n    \"uri\" -> \"mongodb://localhost:27017/\",\n    \"database\" -> \"movie_recommendation\",\n    \"collection\" -> \"tags\"\n  ))\n)",
    "filename": "dfab6325178c07954b6f7695244d6d89_0.scala"
  },
  {
    "conversation_hash": "dfab6325178c07954b6f7695244d6d89",
    "code_index": 1,
    "language": "Scala",
    "libraries": [
      "com.mongodb.spark.MongoSpark",
      "com.mongodb.spark.config._",
      "com.mongodb.spark.sql._"
    ],
    "code": "import com.mongodb.spark.MongoSpark\nimport com.mongodb.spark.config._\nimport com.mongodb.spark.sql._\n\nval readConfig = ReadConfig(Map(\n  \"uri\" -> \"mongodb://localhost:27017/\",\n  \"database\" -> \"movie_recommendation\"\n))\n\n// 加载mongo中的数据到DataFrame中。\nval moviesDF = MongoSpark.load(spark, readConfig).toDF().cache()\n\n// 统计热门电影\nval popularMoviesDF = moviesDF.join(\n  ratingsDF.groupBy(\"movieId\")\n    .agg(expr(\"count(movieId) as ratingCount\"))\n    .where('ratingCount >= 100),\n  Seq(\"movieId\"),\n  \"inner\"\n).select('movieId, 'title, 'genres)\npopularMoviesDF.show()\n\n// 统计最新电影\nval latestMoviesDF = moviesDF.orderBy(col(\"movieId\").desc).limit(10)\nlatestMoviesDF.show()\n\n// 统计评分最高的电影\nval topRatedMoviesDF = ratingsDF.groupBy(\"movieId\")\n  .agg(avg(\"rating\").as(\"avgRating\"), count(\"rating\").as(\"numRatings\"))\n  .where('numRatings >= 100)\n  .orderBy(col(\"avgRating\").desc)\n  .join(moviesDF, Seq(\"movieId\"), \"inner\")\n  .select('movieId, 'title, 'genres)\ntopRatedMoviesDF.show()",
    "filename": "dfab6325178c07954b6f7695244d6d89_1.scala"
  },
  {
    "conversation_hash": "2a8b9fb1cb5d4bc28f543da396cd8f50",
    "code_index": 3,
    "language": "Scala",
    "libraries": [],
    "code": "// 迭代列表并打印每个元素\nmyList.foreach(e => println(e))\n\n// 添加新元素\nval newList = myList :+ 6\n\n// 过滤列表中的元素\nval filteredList = myList.filter(e => e > 3)\n\n// 将函数应用于列表中的每个元素\nval mappedList = myList.map(e => e * 2)",
    "filename": "2a8b9fb1cb5d4bc28f543da396cd8f50_3.scala"
  },
  {
    "conversation_hash": "fabc726e1f15bfd2ef04a465438ca3b8",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "val obj: Any = getObject() // 假设 getObject() 返回一个 Any 类型的变量\n\nif (obj is MyInterface) {\n    val myObj = obj as MyInterface // 将 Any 类型的变量转成 MyInterface 类型的对象\n    myObj.foo() // 调用 MyInterface 接口的方法\n} else {\n    // 如果变量不是 MyInterface 类型，进行相应的处理\n}",
    "filename": "fabc726e1f15bfd2ef04a465438ca3b8_1.scala"
  },
  {
    "conversation_hash": "fabc726e1f15bfd2ef04a465438ca3b8",
    "code_index": 3,
    "language": "Scala",
    "libraries": [],
    "code": "val response: Any = callHttp(url) // 假设 callHttp() 返回一个任意类型的对象\n\nif (response is Response) {\n    val myResponse = response as Response // 将 Any 对象转换为 Response 对象\n    println(\"HTTP code: ${myResponse.code}, body: ${myResponse.body}\")\n} else {\n    // 如果返回对象不是 Response 类型，进行相应的处理\n}",
    "filename": "fabc726e1f15bfd2ef04a465438ca3b8_3.scala"
  },
  {
    "conversation_hash": "fabc726e1f15bfd2ef04a465438ca3b8",
    "code_index": 4,
    "language": "Scala",
    "libraries": [],
    "code": "val response: Any = callHttp(url) // 假设 callHttp() 返回一个任意类型的对象\n\nval myResponse = response as? Response\nif (myResponse != null) {\n    println(\"HTTP code: ${myResponse.code}, body: ${myResponse.body}\")\n} else {\n    // 如果返回对象不是 Response 类型，进行相应的处理\n}",
    "filename": "fabc726e1f15bfd2ef04a465438ca3b8_4.scala"
  },
  {
    "conversation_hash": "9bcc692b172f4299f0f4c8df2bfd2e1e",
    "code_index": 7,
    "language": "Scala",
    "libraries": [],
    "code": "set(CMAKE_AUTOMOC ON)\nset(CMAKE_AUTOUIC ON)\nset(CMAKE_AUTORCC ON)\n\nset(CMAKE_INCLUDE_CURRENT_DIR ON)\n\ntarget_link_libraries(myapp Qt5::Core Qt5::Gui Qt5::Widgets)",
    "filename": "9bcc692b172f4299f0f4c8df2bfd2e1e_7.scala"
  },
  {
    "conversation_hash": "06d6749763a9a8732b83e70deecec1cd",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "value\ngroup sub_group      \nA     X            1\n      Y            2\nB     X            3\n      Y            4",
    "filename": "06d6749763a9a8732b83e70deecec1cd_0.scala"
  },
  {
    "conversation_hash": "2080d7be9aa766e84efe2b777a7292a7",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "@startuml\n\nclass Student {\n  +username: String\n  +password: String\n  +isValid(): boolean\n  +register(): void\n  +login(): void\n  +browse(): void\n  +communicate(): void\n  +createPost(): void\n  +createGroup(): void\n  +createSchedule(): void\n}\n\nclass Instructor {\n  +username: String\n  +password: String\n  +isValid(): boolean\n  +register(): void\n  +login(): void\n  +browse(): void\n  +communicate(): void\n  +createPost(): void\n  +createGroup(): void\n  +createSchedule(): void\n  +deletePost(): void\n  +deleteGroup(): void\n  +deleteSchedule(): void\n  +modifyPost(): void\n  +modifyGroup(): void\n  +modifySchedule(): void\n}\n\nclass Admin {\n  +username: String\n  +password: String\n  +isValid(): boolean\n  +browse(): void\n  +create(): void\n  +delete(): void\n  +modify(): void\n  +checkUser(): void\n}\n\nStudent --> InvalidUsernameException\nInstructor --> InvalidUsernameException\nStudent --> LoginException\nInstructor --> LoginException\nAdmin --> InvalidUsernameException\nAdmin --> InvalidPasswordException\n\n@enduml",
    "filename": "2080d7be9aa766e84efe2b777a7292a7_1.scala"
  },
  {
    "conversation_hash": "2080d7be9aa766e84efe2b777a7292a7",
    "code_index": 3,
    "language": "Scala",
    "libraries": [],
    "code": "@startuml\n\nclass Student {\n  +username: String\n  +password: String\n  +isValid(): boolean\n  +register(): void\n  +login(): void\n  +browseCourse(): void\n  +browseNews(): void\n  +browseInstr(): void\n  +browseSection(): void\n  +communicate(): void\n  +createPost(): void\n  +createGroup(): void\n  +createSchedule(): void\n}\n\nclass Instructor {\n  +username: String\n  +password: String\n  +isValid(): boolean\n  +register(): void\n  +login(): void\n  +browseCourse(): void\n  +browseNews(): void\n  +browseInstr(): void\n  +browseSection(): void\n  +communicate(): void\n  +createPost(): void\n  +createGroup(): void\n  +createSchedule(): void\n  +deletePost(): void\n  +deleteGroup(): void\n  +deleteSchedule(): void\n  +modifyPost(): void\n  +modifyGroup(): void\n  +modifySchedule(): void\n}\n\nclass Admin {\n  +username: String\n  +password: String\n  +isValid(): boolean\n  +browse(): void\n  +create(): void\n  +delete(): void\n  +modify(): void\n  +checkUser(): void\n}\n\nStudent --> InvalidUsernameException\nInstructor --> InvalidUsernameException\nStudent --> LoginException\nInstructor --> LoginException\nAdmin --> InvalidUsernameException\nAdmin --> InvalidPasswordException\n\n@enduml",
    "filename": "2080d7be9aa766e84efe2b777a7292a7_3.scala"
  },
  {
    "conversation_hash": "0189feb3420aad71a28f404ab52e4de7",
    "code_index": 10,
    "language": "Scala",
    "libraries": [],
    "code": "<UsingTask TaskName=\"AssemblyRegistrationTask\" \n          AssemblyFile=\"$(MSBuildToolsPath)\\Microsoft.Build.Tasks.Core.dll\" />\n<Target Name=\"BeforeBuild\" DependsOnTargets=\"AssignTargetPaths;ResolveReferences;PrepareForBuild;\"\n        Inputs=\"$(MSBuildAllProjects);@(IntermediateAssembly);@(ReferencePath);$(AppConfig)\"\n        Outputs=\"$(OutputPath)$(_OutputFileName).dll\">\n  <AssemblyRegistrationTask \n    OutputAssembly=\"$(OutputPath)$(_OutputFileName).dll\"\n    ComVisible=\"true\"\n    TypeLibFileName=\"$(ProjectDir)$(OutputPath)\\$(AssemblyName).tlb\"\n    TlbID=\"{GUID}\"\n    RegFile=\"$(ProjectDir)$(OutputPath)\\$(AssemblyName).reg\"\n    CodeBase=\"$(OutputPath)$(_OutputFileName).dll\">\n    <Output TaskParameter=\"RegFile\" ItemName=\"RegistrationFile\" />\n  </AssemblyRegistrationTask>\n</Target>",
    "filename": "0189feb3420aad71a28f404ab52e4de7_10.scala"
  },
  {
    "conversation_hash": "4a01ae5ec61cbce39084f64cbcfd104c",
    "code_index": 3,
    "language": "Scala",
    "libraries": [],
    "code": "import { Component, ViewChild, ElementRef } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  @ViewChild('myDiv', { static: false }) myDiv: ElementRef;\n\n  setDivPosition(event) {\n    const radioButton = event.target;\n    const rect = radioButton.getBoundingClientRect();\n    this.myDiv.nativeElement.style.position = 'absolute';\n    this.myDiv.nativeElement.style.top = `${rect.bottom}px`;\n    this.myDiv.nativeElement.style.left = `${rect.left}px`;\n  }\n}",
    "filename": "4a01ae5ec61cbce39084f64cbcfd104c_3.scala"
  },
  {
    "conversation_hash": "4a01ae5ec61cbce39084f64cbcfd104c",
    "code_index": 5,
    "language": "Scala",
    "libraries": [],
    "code": "import { Component, ViewChild, ElementRef } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  @ViewChild('myDiv', { static: false }) myDiv: ElementRef;\n\n  options = ['Option 1', 'Option 2', 'Option 3'];\n\n  setDivPosition(event) {\n    const radioButton = event.target;\n    const rect = radioButton.getBoundingClientRect();\n    this.myDiv.nativeElement.style.position = 'absolute';\n    this.myDiv.nativeElement.style.top = `${rect.bottom}px`;\n    this.myDiv.nativeElement.style.left = `${rect.left}px`;\n  }\n}",
    "filename": "4a01ae5ec61cbce39084f64cbcfd104c_5.scala"
  },
  {
    "conversation_hash": "6160eb9c84ee917911264f81fced274c",
    "code_index": 12,
    "language": "Scala",
    "libraries": [],
    "code": "import { Column, Entity, ManyToOne, PrimaryGeneratedColumn } from 'typeorm';\nimport { Location } from './location.entity';\n\n@Entity()\nexport class Event {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column()\n  name: string;\n\n  @Column()\n  description: string;\n\n  @Column({ type: 'date', nullable: true })\n  date: Date;\n\n  @ManyToOne(() => Location, (location) => location.events, { nullable: true })\n  location: Location;\n}",
    "filename": "6160eb9c84ee917911264f81fced274c_12.scala"
  },
  {
    "conversation_hash": "e14dd298675fad5368f79f8971edbdc1",
    "code_index": 2,
    "language": "Scala",
    "libraries": [],
    "code": "A\n0       NaN\n1  1.000000\n2  2.000000\n3  1.333333\n4  1.000000",
    "filename": "e14dd298675fad5368f79f8971edbdc1_2.scala"
  },
  {
    "conversation_hash": "ab4abb307098090c0612340bf5827fe3",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "# Добавление директорий с заголовочными файлами к цели myTarget\ntarget_include_directories(myTarget \n                           PUBLIC \n                           ${CMAKE_CURRENT_SOURCE_DIR}/include \n                           ${CMAKE_CURRENT_BINARY_DIR}/include)",
    "filename": "ab4abb307098090c0612340bf5827fe3_1.scala"
  },
  {
    "conversation_hash": "0c6ed6b3cd1d644c72ce265e309ee6ec",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "import { Entity, Column, PrimaryGeneratedColumn } from 'typeorm';\n\n@Entity()\nexport class Event {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column()\n  name: string;\n\n  @Column({ nullable: true })\n  date: Date;\n}",
    "filename": "0c6ed6b3cd1d644c72ce265e309ee6ec_1.scala"
  },
  {
    "conversation_hash": "0c6ed6b3cd1d644c72ce265e309ee6ec",
    "code_index": 2,
    "language": "Scala",
    "libraries": [],
    "code": "import { Entity, Column, PrimaryGeneratedColumn, ManyToOne, JoinColumn } from 'typeorm';\nimport { Location } from './location.entity';\n\n@Entity()\nexport class Event {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column()\n  name: string;\n\n  @Column({ nullable: true })\n  date: Date;\n\n  @Column({ nullable: true })\n  locationId: number;\n\n  @ManyToOne(type => Location, location => location.events, { nullable: true })\n  @JoinColumn({ name: 'locationId' })\n  location: Location;\n}",
    "filename": "0c6ed6b3cd1d644c72ce265e309ee6ec_2.scala"
  },
  {
    "conversation_hash": "0c6ed6b3cd1d644c72ce265e309ee6ec",
    "code_index": 4,
    "language": "Scala",
    "libraries": [],
    "code": "import { IsString, IsOptional, IsDate, ValidateNested } from 'class-validator';\nimport { Type } from 'class-transformer';\nimport { LocationDTO } from './location.dto';\n\nexport class EventDTO {\n  @IsString()\n  name: string;\n\n  @IsOptional()\n  @IsDate()\n  date: Date;\n\n  @IsOptional()\n  @ValidateNested()\n  @Type(() => LocationDTO)\n  location: LocationDTO;\n}",
    "filename": "0c6ed6b3cd1d644c72ce265e309ee6ec_4.scala"
  },
  {
    "conversation_hash": "033f1e04bc6b3fc57451608b0602f292",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "import { Resolver, Mutation, Arg } from \"type-graphql\";\nimport { CreateBookInput } from \"../inputs/create-book.input\";\nimport { Book } from \"../models/book.model\";\n\n@Resolver()\nexport class BookResolver {\n  @Mutation(() => Book)\n  async createBook(@Arg(\"data\") data: CreateBookInput): Promise<Book> {\n    const newBook = await Book.create(data).save();\n    return newBook;\n  }\n}",
    "filename": "033f1e04bc6b3fc57451608b0602f292_0.scala"
  },
  {
    "conversation_hash": "a24cadf4ae1b12ee846658bfd892781f",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "import { Resolver, Mutation, Arg, Ctx, Info } from 'type-graphql';\nimport { MyContext } from './MyContext';\nimport { User } from './User';\n\n@Resolver()\nexport class UserResolver {\n  @Mutation(() => User)\n  async updateUser(\n    @Arg('id') id: string,\n    @Arg('data') data: UpdateUserInput,\n    @Ctx() ctx: MyContext,\n    @Info() info: GraphQLResolveInfo,\n  ): Promise<User> {\n    // logic for updating the user object goes here\n    const updatedUser = await ctx.userService.updateUser(id, data);\n\n    return updatedUser;\n  }\n}",
    "filename": "a24cadf4ae1b12ee846658bfd892781f_0.scala"
  },
  {
    "conversation_hash": "a24cadf4ae1b12ee846658bfd892781f",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "import { Arg, Mutation, Resolver } from 'type-graphql';\nimport { MyObject } from './MyObject';\n\n@Resolver()\nexport class MyResolver {\n  @Mutation(() => MyObject)\n  async myMutation(\n    @Arg('myArg', () => String) myArg: string\n  ) {\n    // resolver logic goes here\n  }\n}",
    "filename": "a24cadf4ae1b12ee846658bfd892781f_1.scala"
  },
  {
    "conversation_hash": "7ccd85b47c145c33b177501f6856d639",
    "code_index": 2,
    "language": "Scala",
    "libraries": [],
    "code": "import { IsDate, IsOptional } from 'class-validator';\n\nexport class CreateEventDto {\n  name: string;\n\n  @IsDate()\n  @IsOptional()\n  date?: Date;\n\n  locationId: number;\n}",
    "filename": "7ccd85b47c145c33b177501f6856d639_2.scala"
  },
  {
    "conversation_hash": "7ccd85b47c145c33b177501f6856d639",
    "code_index": 4,
    "language": "Scala",
    "libraries": [],
    "code": "import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class LocationService {\n  // ...\n}",
    "filename": "7ccd85b47c145c33b177501f6856d639_4.scala"
  },
  {
    "conversation_hash": "9a815825993f3e3c37dd7a40f73ca9dc",
    "code_index": 3,
    "language": "Scala",
    "libraries": [],
    "code": "service cloud.firestore {\n  match /databases/{database}/documents {\n    match /FutureMK/{document=**} {\n      allow read: if true;\n      allow write: if false;\n    }\n  }\n}",
    "filename": "9a815825993f3e3c37dd7a40f73ca9dc_3.scala"
  },
  {
    "conversation_hash": "9a815825993f3e3c37dd7a40f73ca9dc",
    "code_index": 4,
    "language": "Scala",
    "libraries": [],
    "code": "service cloud.firestore {\n  match /databases/{database}/documents {\n    match /FutureMK/{document=**} {\n      allow read: if true;\n      allow write: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.admin == true;\n    }\n  }\n}",
    "filename": "9a815825993f3e3c37dd7a40f73ca9dc_4.scala"
  },
  {
    "conversation_hash": "84e831c90fe800ca0d79e4cfad3f54ee",
    "code_index": 7,
    "language": "Scala",
    "libraries": [
      "com.google.gson.Gson",
      "okhttp3.MediaType.Companion.toMediaType",
      "okhttp3.OkHttpClient",
      "okhttp3.Request",
      "okhttp3.RequestBody.Companion.toRequestBody"
    ],
    "code": "import com.google.gson.Gson\nimport okhttp3.MediaType.Companion.toMediaType\nimport okhttp3.OkHttpClient\nimport okhttp3.Request\nimport okhttp3.RequestBody.Companion.toRequestBody\n\ndata class LoginRequest(\n    val username: String,\n    val password: String\n)\n\ndata class LoginResponse(\n    val token: String,\n    val userId: Int\n)\n\nfun login(username: String, password: String): LoginResponse? {\n    val loginRequest = LoginRequest(username, password)\n    val gson = Gson()\n    val requestBody = gson.toJson(loginRequest).toRequestBody(\"application/json\".toMediaType())\n\n    val client = OkHttpClient()\n    val request = Request.Builder()\n        .url(\"https://ejemplo.com/api/login\")\n        .post(requestBody)\n        .build()\n\n    val response = client.newCall(request).execute()\n\n    if (!response.isSuccessful) {\n        throw Exception(\"Error en la solicitud: ${response.code}\")\n    }\n\n    val responseString = response.body?.string()\n    return gson.fromJson(responseString, LoginResponse::class.java)\n}",
    "filename": "84e831c90fe800ca0d79e4cfad3f54ee_7.scala"
  },
  {
    "conversation_hash": "84e831c90fe800ca0d79e4cfad3f54ee",
    "code_index": 12,
    "language": "Scala",
    "libraries": [
      "org.jetbrains.exposed.sql.Table"
    ],
    "code": "import org.jetbrains.exposed.sql.Table\n\nobject Users: Table() {\n    val id = integer(\"id\").autoIncrement().primaryKey()\n    val name = varchar(\"name\", 50)\n}",
    "filename": "84e831c90fe800ca0d79e4cfad3f54ee_12.scala"
  },
  {
    "conversation_hash": "474397b415a943f72f05bdcb4ac8d047",
    "code_index": 2,
    "language": "Scala",
    "libraries": [
      "the"
    ],
    "code": "rules_version = '2';\nservice cloud.firestore {\n  match /databases/{database}/documents {\n\n    // Allow any user to read from the FutureMK collection\n    match /FutureMK/{document=**} {\n      allow read: if true;\n      allow write: if request.auth != null && request.auth.token.admin == true;\n    }\n\n    // ...\n  }\n}",
    "filename": "474397b415a943f72f05bdcb4ac8d047_2.scala"
  },
  {
    "conversation_hash": "474397b415a943f72f05bdcb4ac8d047",
    "code_index": 3,
    "language": "Scala",
    "libraries": [
      "the"
    ],
    "code": "rules_version = '2';\nservice cloud.firestore {\n  match /databases/{database}/documents {\n\n    // Allow anyone to read from the FutureMK collection\n    match /FutureMK/{document=**} {\n      allow read: if true;\n      allow write: if request.auth != null && request.auth.token.admin == true;\n    }\n\n    // ...\n  }\n}",
    "filename": "474397b415a943f72f05bdcb4ac8d047_3.scala"
  },
  {
    "conversation_hash": "2cb692c7695d142cd3b1c52f81edf3ff",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "<View style={gStyle.main}>\n    {posts.map(post => (\n        <View style={gStyle.mainFMK} key={post.id}>\n            <Text style={gStyle.dateFutureMK}>{post.date}</Text>\n            <View style={gStyle.FutureMKimg}>\n                <Image source={{uri: post.image}} style={gStyle.FutureMKbannerImg}/>\n                <Text style={gStyle.FutureMKnameOfMK}>{post.title}</Text>\n                <Text style={gStyle.hr}></Text>\n            </View>\n            <Text style={gStyle.FutureMKprice}>Цена: <Text style={gStyle.FutureMKrub}>{post.price} P.</Text></Text>\n            <Text style={gStyle.FutureMKdescription}>\n            {post.description}\n            </Text>\n            <Pressable style={gStyle.FutureMKmoreDetails} \n            onPress={()=>{navigation.navigate('SignUpForMK',{post:post});}}\n            >\n                <Text style={gStyle.FutureMKbtnTxt}>Подробнее</Text>\n            </Pressable>\n            <Text style={gStyle.FutureMKline}></Text>\n        </View>\n    ))}\n</View>",
    "filename": "2cb692c7695d142cd3b1c52f81edf3ff_1.scala"
  },
  {
    "conversation_hash": "ce265d1290dae78e9978b82fcba77291",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "B\none      68\nthree    72\ntwo     160\ndtype: int64",
    "filename": "ce265d1290dae78e9978b82fcba77291_1.scala"
  },
  {
    "conversation_hash": "c22574b8f75092fbff6065ef0729d28a",
    "code_index": 3,
    "language": "Scala",
    "libraries": [],
    "code": "openai\nnumpy\npandas\nscikit-learn\ntensorflow==2.3.0",
    "filename": "c22574b8f75092fbff6065ef0729d28a_3.scala"
  },
  {
    "conversation_hash": "95217ccb061832350a0d8eb3b0b7b528",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "rules_version = '2';\nservice cloud.firestore {\n  match /databases/{database}/documents {\n    match /FutureMK/{document=**} {\n      allow read, write: if request.auth != null; // allow authenticated users to read and write\n    }\n  }\n}",
    "filename": "95217ccb061832350a0d8eb3b0b7b528_0.scala"
  },
  {
    "conversation_hash": "9fcd0aa9bc625e62a4baa26a42e6ed0f",
    "code_index": 18,
    "language": "Scala",
    "libraries": [],
    "code": "<Text style={gStyle.FutureMKdescription}>\n    {mkData.description.length > 100\n      ? mkData.description.substring(0, 100) + \"...\"\n      : mkData.description}\n</Text>",
    "filename": "9fcd0aa9bc625e62a4baa26a42e6ed0f_18.scala"
  },
  {
    "conversation_hash": "9fcd0aa9bc625e62a4baa26a42e6ed0f",
    "code_index": 19,
    "language": "Scala",
    "libraries": [],
    "code": "<Text style={gStyle.FutureMKdescription}>\n    {mkData.description && mkData.description.length > 100\n        ? mkData.description.substring(0, 100) + '...'\n        : mkData.description}\n</Text>",
    "filename": "9fcd0aa9bc625e62a4baa26a42e6ed0f_19.scala"
  },
  {
    "conversation_hash": "e921c83f329daf67d172f20f89c6af75",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "import { ReflectMetadata } from 'reflect-metadata';\n\nclass MyClass {\n  @ReflectMetadata('key', 'value')\n  myMethod() {\n    // ...\n  }\n}",
    "filename": "e921c83f329daf67d172f20f89c6af75_1.scala"
  },
  {
    "conversation_hash": "33a6788430a1b37b8431cc6e5b58a450",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "data class Person(\n    val id: Int,\n    val name: String,\n    val age: Int\n)",
    "filename": "33a6788430a1b37b8431cc6e5b58a450_0.scala"
  },
  {
    "conversation_hash": "33a6788430a1b37b8431cc6e5b58a450",
    "code_index": 6,
    "language": "Scala",
    "libraries": [],
    "code": "val userDAO = UserDAO()\nval user = userDAO.findUserByUsername(\"nombredeusuario\")\n\nif (user != null) {\n    println(\"Usuario encontrado: ${user.username}, ${user.password}\")\n} else {\n    println(\"Usuario no encontrado\")\n}",
    "filename": "33a6788430a1b37b8431cc6e5b58a450_6.scala"
  },
  {
    "conversation_hash": "33a6788430a1b37b8431cc6e5b58a450",
    "code_index": 9,
    "language": "Scala",
    "libraries": [],
    "code": "val userDAO = UserDAO()\nval user = userDAO.findUserByUsername(\"nombredeusuario\")\n\nif (user != null) {\n    println(\"Usuario encontrado: ${user.username}, ${user.password}\")\n} else {\n    println(\"Usuario no encontrado\")\n}",
    "filename": "33a6788430a1b37b8431cc6e5b58a450_9.scala"
  },
  {
    "conversation_hash": "92a74df11f84e14da10816a306537cca",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "// vars/myUtils.groovy\ndef call(stageName, script) {\n    stage(stageName) {\n        steps {\n            script()\n        }\n    }\n}",
    "filename": "92a74df11f84e14da10816a306537cca_1.scala"
  },
  {
    "conversation_hash": "ea2fdaf02ec3ce90badbde5f1a931677",
    "code_index": 26,
    "language": "Scala",
    "libraries": [],
    "code": "@foreach (var adWithImage in Model)\n{\n    if (!string.IsNullOrEmpty(adWithImage.ImageBase64))\n    {\n        <img src=\"@($\"data:image/jpeg;base64,{adWithImage.ImageBase64}\")\" alt=\"Ad image\">\n    }\n    else\n    {\n        <p>No image found</p>\n    }\n}",
    "filename": "ea2fdaf02ec3ce90badbde5f1a931677_26.scala"
  },
  {
    "conversation_hash": "e0c416ce630b2926b59c290044e48209",
    "code_index": 18,
    "language": "Scala",
    "libraries": [],
    "code": "@Controller('users')\nexport class UsersController {\n  @Get(':id')\n  async getUserById(@Param('id', ParseUUIDPipe) id: string) {\n    // Your code here\n  }\n}",
    "filename": "e0c416ce630b2926b59c290044e48209_18.scala"
  },
  {
    "conversation_hash": "e0c416ce630b2926b59c290044e48209",
    "code_index": 19,
    "language": "Scala",
    "libraries": [],
    "code": "import { Injectable, ParseUUIDPipe } from '@nestjs/common';\n\n@Injectable()\nexport class UsersService {\n  async getUserById(id: string) {\n    // Your code here\n  }\n}\n\n@Controller('users')\nexport class UsersController {\n  constructor(private readonly usersService: UsersService) {}\n\n  @Get(':id')\n  async getUserById(@Param('id', ParseUUIDPipe) id: string) {\n    return this.usersService.getUserById(id);\n  }\n}",
    "filename": "e0c416ce630b2926b59c290044e48209_19.scala"
  },
  {
    "conversation_hash": "35c1a773fda07341fca7e7d9f5b87778",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "// file1.js\nexport class MyClass {\n  // ...\n}\n\n// file2.js\nimport { MyClass } from './file1';",
    "filename": "35c1a773fda07341fca7e7d9f5b87778_1.scala"
  },
  {
    "conversation_hash": "420fe53f6103eed166bf646482f53b24",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "import { Injectable, PipeTransform, BadRequestException } from '@nestjs/common';\nimport { isUUID } from 'class-validator';\n\n@Injectable()\nexport class ParseUUIDPipe implements PipeTransform<string, string> {\n  transform(value: string): string {\n    if (!isUUID(value)) {\n      throw new BadRequestException('Invalid UUID');\n    }\n    return value;\n  }\n}",
    "filename": "420fe53f6103eed166bf646482f53b24_0.scala"
  },
  {
    "conversation_hash": "8f16cad22d4b1156ab56b44c1c343b30",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "import { Controller, Get, Post, Body, UsePipes } from '@nestjs/common';\nimport { TransformPipe } from './transform.pipe';\n\n@Controller('example')\nexport class ExampleController {\n  \n  @Get()\n  @UsePipes(TransformPipe)\n  async getExample() {\n    return 'Example Response'\n  }\n\n  @Post()\n  @UsePipes(TransformPipe)\n  async postExample(@Body() body: any) {\n    return `Your ${body} was transformed successfully!`\n  }\n}",
    "filename": "8f16cad22d4b1156ab56b44c1c343b30_1.scala"
  },
  {
    "conversation_hash": "e763413e7a79714db6d90ef5399eff9f",
    "code_index": 2,
    "language": "Scala",
    "libraries": [],
    "code": "export class CreateProductDto {\n  @IsNotEmpty()\n  @IsString()\n  name: string;\n\n  @IsNotEmpty()\n  @IsString()\n  description: string;\n\n  @IsNotEmpty()\n  price: number;\n}",
    "filename": "e763413e7a79714db6d90ef5399eff9f_2.scala"
  },
  {
    "conversation_hash": "2fd259c6f34401a98d48de7621451505",
    "code_index": 3,
    "language": "Scala",
    "libraries": [],
    "code": "for (i in 0 until 5) {\n    println(i)\n}\n\nfor (c in \"hello\") {\n    println(c)\n}",
    "filename": "2fd259c6f34401a98d48de7621451505_3.scala"
  },
  {
    "conversation_hash": "cf4827571eb5ecf20c0ebf3672ccac95",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "TypeError: Cannot read property 'split' of undefined\n    at myFunction (/path/to/my/file.js:20:10)\n    at anotherFunction (/path/to/my/file.js:15:5)\n    at mainFunction (/path/to/my/file.js:10:3)\n    at Object.<anonymous> (/path/to/my/file.js:5:2)",
    "filename": "cf4827571eb5ecf20c0ebf3672ccac95_0.scala"
  },
  {
    "conversation_hash": "34b51bba991d57154ca858e8515b46e5",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "<Text style={gStyle.FutureMKdescription}>\n    {mkData.description && mkData.description.length>100\n        ? mkData.description.substring(0,100)+'...'\n        : mkData.description || ''}\n</Text>",
    "filename": "34b51bba991d57154ca858e8515b46e5_0.scala"
  },
  {
    "conversation_hash": "34b51bba991d57154ca858e8515b46e5",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "<Text style={gStyle.FutureMKdescription}>\n    {mkData.description && mkData.description.length>100\n        ? mkData.description.substring(0,100)+'...'\n        : mkData.description || ''}\n</Text>",
    "filename": "34b51bba991d57154ca858e8515b46e5_1.scala"
  },
  {
    "conversation_hash": "93c4a4f65ddfc7c02125bea043d4fd48",
    "code_index": 10,
    "language": "Scala",
    "libraries": [],
    "code": "<Text style={gStyle.FutureMKdescription}>\n  {mkData.description.length > 100\n    ? mkData.description.substring(0, 100) + '...'\n    : mkData.description}\n</Text>",
    "filename": "93c4a4f65ddfc7c02125bea043d4fd48_10.scala"
  },
  {
    "conversation_hash": "9e386b1e2f47ce8d15dfc9742ced5482",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "Container(\n     height: MediaQuery.of(context).size.height * 0.8, // fixed height\n     child: Column(\n       children: [\n         // other widgets\n         Expanded(\n           child: TabBarView(\n             // other properties\n           ),\n         ),\n       ],\n     ),\n   )",
    "filename": "9e386b1e2f47ce8d15dfc9742ced5482_1.scala"
  },
  {
    "conversation_hash": "0e7096f775f6a7df09f95f10e32ae8c5",
    "code_index": 5,
    "language": "Scala",
    "libraries": [],
    "code": "// src/app.module.ts\nimport { Module } from '@nestjs/common';\nimport { GraphQLModule } from '@nestjs/graphql';\nimport { ItemsModule } from './items/items.module';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { ItemSchema } from './items/entities/item.schema';\n\n@Module({\n  imports: [\n    MongooseModule.forRoot('mongodb://localhost/nest-crud', { useNewUrlParser: true }),\n    GraphQLModule.forRoot({\n      autoSchemaFile: 'schema.gql',\n      installSubscriptionHandlers: true, // Make sure to enable subscriptions\n      context: ({ req }) => ({ req }),\n    }),\n    MongooseModule.forFeature([{ name: 'Item', schema: ItemSchema }]),\n    ItemsModule,\n  ],\n  providers: [],\n  controllers: [],\n})\nexport class AppModule { }",
    "filename": "0e7096f775f6a7df09f95f10e32ae8c5_5.scala"
  },
  {
    "conversation_hash": "0e7096f775f6a7df09f95f10e32ae8c5",
    "code_index": 6,
    "language": "Scala",
    "libraries": [],
    "code": "// src/rabbitmq/rabbitmq.service.ts\nimport { Injectable } from '@nestjs/common';\nimport { ClientProxy, Client, Transport } from '@nestjs/microservices';\n\n@Injectable()\nexport class RabbitMQService {\n  @Client({\n    transport: Transport.RMQ,\n    options: {\n      urls: ['amqp://localhost:5672'],\n      queue: 'example_queue',\n    },\n  })\n  client: ClientProxy;\n}",
    "filename": "0e7096f775f6a7df09f95f10e32ae8c5_6.scala"
  },
  {
    "conversation_hash": "0e7096f775f6a7df09f95f10e32ae8c5",
    "code_index": 9,
    "language": "Scala",
    "libraries": [],
    "code": "// src/rabbitmq/rabbitmq.service.ts\nimport { Inject, forwardRef } from '@nestjs/common';\nimport { ItemsModule } from '../items/items.module'; // Import ItemsModule\n\n@Injectable()\nexport class RabbitMQService implements OnModuleInit {\n  constructor(\n    @Inject(forwardRef(() => ItemsModule)) private itemsModule: ItemsModule, // Inject ItemsModule\n  ) {}\n\n  // ...\n}",
    "filename": "0e7096f775f6a7df09f95f10e32ae8c5_9.scala"
  },
  {
    "conversation_hash": "023dd7ea463c420b5e8f5a8bb698a430",
    "code_index": 1,
    "language": "Scala",
    "libraries": [
      "the"
    ],
    "code": "import { Query, Resolver } from \"type-graphql\";\nimport { User } from \"./prisma/generated/type-graphql\";\n\n@Resolver()\nexport class UserResolver {\n  @Query(() => [User])\n  async users(): Promise<User[]> {\n    // Use Prisma client to fetch data from the database\n  }\n}",
    "filename": "023dd7ea463c420b5e8f5a8bb698a430_1.scala"
  },
  {
    "conversation_hash": "308bcc76557cae8645efdc8a6be596ab",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "def fileExists = fileExists '/path/to/file'\nif (fileExists) {\n    // 文件存在\n} else {\n    // 文件不存在\n}",
    "filename": "308bcc76557cae8645efdc8a6be596ab_0.scala"
  },
  {
    "conversation_hash": "308bcc76557cae8645efdc8a6be596ab",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "def dirExists = dirExists '/path/to/directory'\nif (dirExists) {\n    // 文件夹存在\n} else {\n    // 文件夹不存在\n}",
    "filename": "308bcc76557cae8645efdc8a6be596ab_1.scala"
  },
  {
    "conversation_hash": "308bcc76557cae8645efdc8a6be596ab",
    "code_index": 2,
    "language": "Scala",
    "libraries": [],
    "code": "def file = new File('/path/to/file')\nif (file.exists()) {\n    // 文件存在\n} else {\n    // 文件不存在\n}\n\ndef dir = new File('/path/to/directory')\nif (dir.exists() && dir.isDirectory()) {\n    // 文件夹存在\n} else {\n    // 文件夹不存在\n}",
    "filename": "308bcc76557cae8645efdc8a6be596ab_2.scala"
  },
  {
    "conversation_hash": "9b0051eb45f35d73fb949bcf091f46f5",
    "code_index": 2,
    "language": "Scala",
    "libraries": [],
    "code": "@Resolver(User)\nexport class UserResolver {\n  private prisma = new PrismaClient();\n\n  @ResolveField(() => Profile)\n  async profile(@Parent() user: User) {\n    return await this.prisma.user.findUnique({\n      where: {id: user.id ?? undefined},\n      select: {profile: true},\n    }).profile();\n  }\n}",
    "filename": "9b0051eb45f35d73fb949bcf091f46f5_2.scala"
  },
  {
    "conversation_hash": "7786a6e5fde090e0f68b7964ec2beacf",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "latch_inst: lpm_latch\n   port map(\n      clk => clock,\n      data => data_in,\n      gate => enable,\n      q => data_out);",
    "filename": "7786a6e5fde090e0f68b7964ec2beacf_0.scala"
  },
  {
    "conversation_hash": "e30f34e9d930e4955f786deddc8b098b",
    "code_index": 3,
    "language": "Scala",
    "libraries": [],
    "code": "import { Entity, PrimaryGeneratedColumn, Column, ManyToOne } from 'typeorm';\n\n@Entity()\nexport class Category {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column()\n  name: string;\n\n  @ManyToOne(() => Category, { nullable: true })\n  parent: Category;\n}",
    "filename": "e30f34e9d930e4955f786deddc8b098b_3.scala"
  },
  {
    "conversation_hash": "f072f3e66625c26dcf115620a92f8dc4",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "import 'package:flutter/material.dart';\n\nvoid main() => runApp(MyApp());\n\nclass MyApp extends StatelessWidget {\n  @override\n  Widget build(BuildContext context) {\n    return MaterialApp(\n      debugShowCheckedModeBanner: false,\n      home: Scaffold(\n        appBar: AppBar(\n          title: Text('Detección de Billetes Falsos'),\n        ),\n        body: Center(\n          child: _CameraPreview(),\n        ),\n        floatingActionButton: FloatingActionButton(\n          onPressed: () {\n            // Realizar aquí el código para tomar la fotografía\n          },\n          child: Icon(Icons.camera_alt),\n        ),\n      ),\n    );\n  }\n}\n\nclass _CameraPreview extends StatefulWidget {\n  @override\n  _CameraPreviewState createState() => _CameraPreviewState();\n}\n\nclass _CameraPreviewState extends State<_CameraPreview> {\n  @override\n  Widget build(BuildContext context) {\n    // Aquí deberías implementar la vista previa de la cámara\n    return Text('Aquí iría la vista previa de la cámara');\n  }\n}",
    "filename": "f072f3e66625c26dcf115620a92f8dc4_1.scala"
  },
  {
    "conversation_hash": "8a20c5fa897286b0a71e8556cc40897a",
    "code_index": 7,
    "language": "Scala",
    "libraries": [],
    "code": "export class CategoryDto extends AbstractDto {\n  // ...\n  @ApiProperty({\n    description: 'Subcategories of category',\n    type: [CategoryDto],\n    nullable: true,\n  })\n  subCategories: CategoryDto[];\n\n  constructor(category: CategoryEntity) {\n    // ...\n    this.subCategories = category.children?.map(child => child.toDto()) || [];\n  }\n}",
    "filename": "8a20c5fa897286b0a71e8556cc40897a_7.scala"
  },
  {
    "conversation_hash": "4ca7b96d1b2b2e7ffa7121e0def485fe",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "class UserEntity(id: EntityID<Int>): IntEntity(id) {\n    companion object : IntEntityClass<UserEntity>(UsersTable)\n    var username by UsersTable.username\n    var password by UsersTable.password\n    var token by UsersTable.token\n    // Modificar la declaración de roles para que sea una lista\n    val roles by RoleEntity.via(UserRolesTable).asSequence().toList()\n}",
    "filename": "4ca7b96d1b2b2e7ffa7121e0def485fe_1.scala"
  },
  {
    "conversation_hash": "4ca7b96d1b2b2e7ffa7121e0def485fe",
    "code_index": 3,
    "language": "Scala",
    "libraries": [],
    "code": "val user = UserEntity.join(UserRolesTable, JoinType.INNER, additionalConstraint = {\n   UserRolesTable.user eq UsersTable.id\n}).join(RolesTable, JoinType.INNER, additionalConstraint = {\n   UserRolesTable.role eq RolesTable.id\n}).select { UsersTable.username eq username }.limit(1).firstOrNull()?.let { userRow ->\n   UserEntity.wrapRow(userRow).apply {\n       roles = userRow[RolesTable].map { RoleEntity.wrapRow(it) }\n   }\n}",
    "filename": "4ca7b96d1b2b2e7ffa7121e0def485fe_3.scala"
  },
  {
    "conversation_hash": "4ca7b96d1b2b2e7ffa7121e0def485fe",
    "code_index": 8,
    "language": "Scala",
    "libraries": [],
    "code": "object UserRolesTable : Table(\"user_roles\") {\n    val user = reference(\"user_id\", UsersTable)\n    val role = reference(\"role_id\", RolesTable)\n    override val primaryKey = PrimaryKey(user, role)\n}",
    "filename": "4ca7b96d1b2b2e7ffa7121e0def485fe_8.scala"
  },
  {
    "conversation_hash": "dcbd88e8a6d8978c27d11f089d4047c4",
    "code_index": 0,
    "language": "Scala",
    "libraries": [
      "org.jetbrains.exposed.sql.Table"
    ],
    "code": "import org.jetbrains.exposed.sql.Table\n\nobject Users : Table() {\n    val id = integer(\"id\").autoIncrement()\n    val username = varchar(\"username\", length = 50)\n    val password = varchar(\"password\", length = 50)\n    val token = varchar(\"token\", length = 100)\n\n    override val primaryKey = PrimaryKey(id)\n}\n\nobject Roles : Table() {\n    val id = integer(\"id\").autoIncrement()\n    val name = varchar(\"name\", length = 50)\n\n    override val primaryKey = PrimaryKey(id)\n}",
    "filename": "dcbd88e8a6d8978c27d11f089d4047c4_0.scala"
  },
  {
    "conversation_hash": "dcbd88e8a6d8978c27d11f089d4047c4",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "object UserRoles : Table() {\n    val userId = integer(\"user_id\") references Users.id\n    val roleId = integer(\"role_id\") references Roles.id\n\n    override val primaryKey = PrimaryKey(userId, roleId)\n}",
    "filename": "dcbd88e8a6d8978c27d11f089d4047c4_1.scala"
  },
  {
    "conversation_hash": "dcbd88e8a6d8978c27d11f089d4047c4",
    "code_index": 8,
    "language": "Scala",
    "libraries": [
      "UserRolesTable.role",
      "org.jetbrains.exposed.dao.EntityID",
      "org.jetbrains.exposed.dao.IntEntity",
      "org.jetbrains.exposed.dao.IntEntityClass",
      "org.jetbrains.exposed.dao.id.EntityIDType"
    ],
    "code": "import org.jetbrains.exposed.dao.EntityID\nimport org.jetbrains.exposed.dao.IntEntity\nimport org.jetbrains.exposed.dao.IntEntityClass\nimport org.jetbrains.exposed.dao.id.EntityIDType\nimport UserRolesTable.role\n\nclass User(id: EntityID<Int>) : IntEntity(id) {\n    companion object : IntEntityClass<User>(UsersTable)\n\n    var username by UsersTable.username\n    var password by UsersTable.password\n    var token by UsersTable.token\n    val roles by UserRole referrersOn UserRolesTable.user\n}",
    "filename": "dcbd88e8a6d8978c27d11f089d4047c4_8.scala"
  },
  {
    "conversation_hash": "c690d5d90b253337e5886515a14b8d73",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "object Users : Table() {\n    val id = integer(\"id\").autoIncrement().primaryKey()\n    val username = varchar(\"username\", 50).uniqueIndex()\n    val password = varchar(\"password\", 255)\n    val email = varchar(\"email\", 100)\n}",
    "filename": "c690d5d90b253337e5886515a14b8d73_0.scala"
  },
  {
    "conversation_hash": "c690d5d90b253337e5886515a14b8d73",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "kotlin\ndata class User(\n    val id: Int,\n    val username: String,\n    val password: String,\n    val email: String\n)",
    "filename": "c690d5d90b253337e5886515a14b8d73_1.scala"
  },
  {
    "conversation_hash": "c690d5d90b253337e5886515a14b8d73",
    "code_index": 2,
    "language": "Scala",
    "libraries": [],
    "code": "object Roles : Table() {\n    val id = integer(\"id\").autoIncrement().primaryKey()\n    val name = varchar(\"name\", 50).uniqueIndex()\n    val description = varchar(\"description\", 255)\n}",
    "filename": "c690d5d90b253337e5886515a14b8d73_2.scala"
  },
  {
    "conversation_hash": "c690d5d90b253337e5886515a14b8d73",
    "code_index": 3,
    "language": "Scala",
    "libraries": [],
    "code": "data class Role(\n    val id: Int,\n    val name: String,\n    val description: String\n)",
    "filename": "c690d5d90b253337e5886515a14b8d73_3.scala"
  },
  {
    "conversation_hash": "c690d5d90b253337e5886515a14b8d73",
    "code_index": 6,
    "language": "Scala",
    "libraries": [],
    "code": "object UserRole: Table() {\n    val user = reference(\"user_id\", Users)\n    val role = reference(\"role_id\", Roles)\n  \n    override val primaryKey = PrimaryKey(user, role)\n}",
    "filename": "c690d5d90b253337e5886515a14b8d73_6.scala"
  },
  {
    "conversation_hash": "324d4c23c92e3ad4715e9eeef96619e5",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "db.collection.aggregate([\n  {\n    $project: {\n      fieldName: {\n        $cond: {\n          if: { $ne: [\"$certainField\", null] },\n          then: { $set: <expression> },\n          else: \"$fieldName\"\n        }\n      }\n    }\n  }\n])",
    "filename": "324d4c23c92e3ad4715e9eeef96619e5_0.scala"
  },
  {
    "conversation_hash": "cb8b14bc74bba5457f50f56bf315659d",
    "code_index": 3,
    "language": "Scala",
    "libraries": [
      "io.cucumber.junit.Cucumber",
      "io.cucumber.junit.CucumberOptions",
      "org.junit.runner.RunWith"
    ],
    "code": "import io.cucumber.junit.Cucumber;\nimport io.cucumber.junit.CucumberOptions;\nimport org.junit.runner.RunWith;\n\n@RunWith(Cucumber.class)\n@CucumberOptions(\n        features = \"src/test/java/features/\",\n        glue = \"src/test/java/Steps/\"\n)\npublic class LoginTest {\n}",
    "filename": "cb8b14bc74bba5457f50f56bf315659d_3.scala"
  },
  {
    "conversation_hash": "69782086f701366f94a95bb179419824",
    "code_index": 2,
    "language": "Scala",
    "libraries": [],
    "code": "data class A(\n  val id: Int,\n  val name: String,\n  @Transient\n  val bIds: List<Int> // Lista de IDs de objetos B relacionados\n)\n\ndata class B(\n  val id: Int,\n  val name: String\n)",
    "filename": "69782086f701366f94a95bb179419824_2.scala"
  },
  {
    "conversation_hash": "66ac9143aadd2ce1da621d956a464848",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "<View style={gStyle.ProfilePaidMK}>\n  <Text style={gStyle.ProfilePaid}>Забронированные{'\\n'}мастер-классы</Text>\n  <Text style={gStyle.ProfileLine}></Text>\n  {bookedMK.map((mk, index) => (\n    <View key={index} style={gStyle.ProfileDetails}>\n      <Image source={{ uri: mk.image }} style={gStyle.ProfileImg} />\n      <View style={gStyle.ProfileDescription}>\n        <Text style={gStyle.ProfileTitleOfMK}>{mk.name}</Text>\n        <Text style={gStyle.ProfileDate}>{mk.time}</Text>\n        <Text style={gStyle.ProfilePrice}>Цена: {mk.price} Р.</Text>\n      </View>\n    </View>\n  ))}\n  {route.params?.bookedMKData && (\n    <View style={gStyle.ProfileDetails}>\n      <Image\n        source={{ uri: route.params.bookedMKData.image }}\n        style={gStyle.ProfileImg}\n      />\n      <View style={gStyle.ProfileDescription}>\n        <Text style={gStyle.ProfileTitleOfMK}>\n          {route.params.bookedMKData.name}\n        </Text>\n        <Text style={gStyle.ProfileDate}>\n          {route.params.bookedMKData.time}\n        </Text>\n        <Text style={gStyle.ProfilePrice}>\n          Цена: {route.params.bookedMKData.price} Р.\n        </Text>\n      </View>\n    </View>\n  )}\n  <Text style={gStyle.ProfileLine}></Text>\n</View>",
    "filename": "66ac9143aadd2ce1da621d956a464848_1.scala"
  },
  {
    "conversation_hash": "be6d9ab35cc654ee04f33d752cffee2b",
    "code_index": 4,
    "language": "Scala",
    "libraries": [],
    "code": "<Text style={gStyle.dateFutureMK}>\n  {new Intl.DateTimeFormat('ru-RU', {\n     day: 'numeric',\n     month: 'long',\n     year: 'numeric',\n     hour: 'numeric',\n     minute: 'numeric',\n     hour12: false\n   }).format(mkData.time.toDate())}\n</Text>",
    "filename": "be6d9ab35cc654ee04f33d752cffee2b_4.scala"
  },
  {
    "conversation_hash": "461dbac2b4110d70b06e3429323df99b",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "{bookedMK.map((mk, index) => (\n  <View key={index} style={gStyle.ProfileDetails}>\n    <Image source={{ uri: mk.image }} style={gStyle.ProfileImg} />\n    <View style={gStyle.ProfileDescription}>\n      <Text style={gStyle.ProfileTitleOfMK}>{mk.name}</Text>\n      <Text style={gStyle.ProfileDate}>{new Date(mk.time?.seconds * 1000).toLocaleTimeString([], options)}</Text>\n      <Text style={gStyle.ProfilePrice}>Цена: {mk.price} Р.</Text>\n      <Pressable style={gStyle.deleteBtn} onPress={() => handleDeleteMK(mk.index)}>\n        <Text style={gStyle.deleteBtnText}>Убрать</Text>\n      </Pressable>\n    </View>\n  </View>\n))}",
    "filename": "461dbac2b4110d70b06e3429323df99b_1.scala"
  },
  {
    "conversation_hash": "cde9a35e3d38ddd460bc47243bf93774",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "{bookedMK.map((mk, index)=>(\n  <BookedMK\n    key={mk.index}\n    mk={mk}\n    userId={userId}\n    onDelete={handleDeleteBookedMK}\n    index={index}\n  />\n))}",
    "filename": "cde9a35e3d38ddd460bc47243bf93774_0.scala"
  },
  {
    "conversation_hash": "cde9a35e3d38ddd460bc47243bf93774",
    "code_index": 2,
    "language": "Scala",
    "libraries": [],
    "code": "{bookedMK.map((mk, index) => (\n  <BookedMK\n    key={mk.index}\n    mk={mk}\n    userId={userId}\n    onDelete={handleDeleteBookedMK}\n    index={index} // add this line to pass the index prop\n  />\n))}",
    "filename": "cde9a35e3d38ddd460bc47243bf93774_2.scala"
  },
  {
    "conversation_hash": "c1fcc19847e0889a4ac3312331f49e56",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "def myTask = project.task('myTask') {\n       doLast {\n           println 'Hello Gradle!'\n       }\n   }",
    "filename": "c1fcc19847e0889a4ac3312331f49e56_1.scala"
  },
  {
    "conversation_hash": "ab9ee55dacf93e701113976f134b4bfa",
    "code_index": 0,
    "language": "Scala",
    "libraries": [
      "com.google.gson.Gson"
    ],
    "code": "import com.google.gson.Gson\n\nval jsonStr = \"{\\\"Result\\\":\\\"T\\\"}\"\nval gson = Gson()\nval jsonObject = gson.fromJson(jsonStr, JsonObject::class.java)",
    "filename": "ab9ee55dacf93e701113976f134b4bfa_0.scala"
  },
  {
    "conversation_hash": "ab9ee55dacf93e701113976f134b4bfa",
    "code_index": 1,
    "language": "Scala",
    "libraries": [
      "com.fasterxml.jackson.databind.ObjectMapper"
    ],
    "code": "import com.fasterxml.jackson.databind.ObjectMapper\n\nval jsonStr = \"{\\\"Result\\\":\\\"T\\\"}\"\nval objectMapper = ObjectMapper()\nval jsonObject = objectMapper.readTree(jsonStr)",
    "filename": "ab9ee55dacf93e701113976f134b4bfa_1.scala"
  },
  {
    "conversation_hash": "ab9ee55dacf93e701113976f134b4bfa",
    "code_index": 2,
    "language": "Scala",
    "libraries": [
      "com.google.gson.Gson"
    ],
    "code": "import com.google.gson.Gson\n\nval jsonString = \"{\\\"name\\\":\\\"John\\\", \\\"age\\\":30}\"\nval gson = Gson()\nval jsonObj = gson.fromJson(jsonString, MyObj::class.java)\n\n// MyObj class definition\ndata class MyObj(val name: String, val age: Int)",
    "filename": "ab9ee55dacf93e701113976f134b4bfa_2.scala"
  },
  {
    "conversation_hash": "ab9ee55dacf93e701113976f134b4bfa",
    "code_index": 3,
    "language": "Scala",
    "libraries": [
      "com.fasterxml.jackson.databind.ObjectMapper",
      "com.fasterxml.jackson.module.kotlin.readValue"
    ],
    "code": "import com.fasterxml.jackson.databind.ObjectMapper\nimport com.fasterxml.jackson.module.kotlin.readValue\n\nval jsonString = \"{\\\"name\\\":\\\"John\\\", \\\"age\\\":30}\"\nval objectMapper = ObjectMapper()\nval jsonObj = objectMapper.readValue(jsonString, MyObj::class.java)\n\n// MyObj class definition\ndata class MyObj(val name: String, val age: Int)",
    "filename": "ab9ee55dacf93e701113976f134b4bfa_3.scala"
  },
  {
    "conversation_hash": "ab9ee55dacf93e701113976f134b4bfa",
    "code_index": 4,
    "language": "Scala",
    "libraries": [
      "com.google.gson.Gson"
    ],
    "code": "import com.google.gson.Gson\n\nval jsonStr = \"{\\\"Result\\\":\\\"T\\\"}\"\nval gson = Gson()\nval response = gson.fromJson(jsonStr, Response::class.java)\n\ndata class Response(val Result: String)",
    "filename": "ab9ee55dacf93e701113976f134b4bfa_4.scala"
  },
  {
    "conversation_hash": "ab9ee55dacf93e701113976f134b4bfa",
    "code_index": 5,
    "language": "Scala",
    "libraries": [
      "com.fasterxml.jackson.databind.ObjectMapper"
    ],
    "code": "import com.fasterxml.jackson.databind.ObjectMapper\n\nval jsonStr = \"{\\\"Result\\\":\\\"T\\\"}\"\nval objectMapper = ObjectMapper()\nval response = objectMapper.readValue(jsonStr, Response::class.java)\n\ndata class Response(val Result: String)",
    "filename": "ab9ee55dacf93e701113976f134b4bfa_5.scala"
  },
  {
    "conversation_hash": "0bff0e8c6e30e110af094704b015285d",
    "code_index": 12,
    "language": "Scala",
    "libraries": [],
    "code": "CMakeLists.txt\ncmake_minimum_required (VERSION 3.19)\n\nproject(qt_sqlcipher)\n\nfind_package(Qt6 COMPONENTS Core Sql REQUIRED)\nfind_package(Qt6Sql)\n\nset(CMAKE_AUTOMOC ON)\n\nset(PROJECT_SOURCES\n   qsql_sqlcipher.cpp\n   qsql_sqlcipher.h\n)\n\nadd_library(qt_sqlcipher MODULE ${PROJECT_SOURCES})\n\ntarget_link_library(qt_sqlcipher PRIVATE Qt6::Core Qt6::Sql)\ntarget_link_libraries(qt_sqlcipher PRIVATE /path/to/your/sqlcipher.lib) # замените на свой путь\n\nset_target_properties(qt_sqlcipher PROPERTIES\n    PREFIX \"\"\n    OUTPUT_NAME \"qsqlsqlcipher\"\n)",
    "filename": "0bff0e8c6e30e110af094704b015285d_12.scala"
  },
  {
    "conversation_hash": "0bff0e8c6e30e110af094704b015285d",
    "code_index": 17,
    "language": "Scala",
    "libraries": [],
    "code": "CMakeLists.txt\ncmake_minimum_required(VERSION 3.19)\n\nproject(qt_sqlcipher)\n\nfind_package(Qt6 COMPONENTS Core Sql REQUIRED)\nfind_package(Qt6Sql)\n\nset(CMAKE_AUTOMOC ON)\n\nset(PROJECT_SOURCES\n   qsql_sqlcipher.cpp\n   qsql_sqlcipher.h\n)\n\nadd_library(qt_sqlcipher MODULE ${PROJECT_SOURCES})\n\ntarget_link_libraries(qt_sqlcipher PRIVATE Qt6::Core Qt6::Sql)\ntarget_link_libraries(qt_sqlcipher PRIVATE /path/to/your/sqlcipher.lib) # замените на свой путь\n\nset_target_properties(qt_sqlcipher PROPERTIES\n    PREFIX \"\"\n    OUTPUT_NAME \"qsqlsqlcipher\"\n)",
    "filename": "0bff0e8c6e30e110af094704b015285d_17.scala"
  },
  {
    "conversation_hash": "fceae34a4b024ad446bafdf563d370cc",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "PUT my_index\n{\n  \"mappings\": {\n    \"_doc\": {\n      \"properties\": {\n        \"title\": {\n          \"type\": \"text\"\n        },\n        \"images\": {\n          \"type\": \"keyword\"\n        },\n        \"price_range\": {\n          \"type\": \"range\",\n          \"ranges\": [\n            { \"to\": 1999.00 },\n            { \"from\": 1999.00, \"to\": 2999.00 },\n            { \"from\": 2999.00 }\n          ]\n        },\n        \"date\": {\n          \"type\": \"date\"\n        }\n      }\n    }\n  }\n}",
    "filename": "fceae34a4b024ad446bafdf563d370cc_1.scala"
  },
  {
    "conversation_hash": "fceae34a4b024ad446bafdf563d370cc",
    "code_index": 2,
    "language": "Scala",
    "libraries": [],
    "code": "PUT my_index\n{\n  \"mappings\": {\n    \"_doc\": {\n      \"properties\": {\n        \"title\": {\n          \"type\": \"text\"\n        },\n        \"images\": {\n          \"type\": \"keyword\"\n        },\n        \"price\": {\n          \"type\": \"keyword\",\n          \"fields\": {\n            \"range\": {\n              \"type\": \"integer\"\n            }\n          }\n        },\n        \"date\": {\n          \"type\": \"date\"\n        }\n      }\n    }\n  }\n}",
    "filename": "fceae34a4b024ad446bafdf563d370cc_2.scala"
  },
  {
    "conversation_hash": "fceae34a4b024ad446bafdf563d370cc",
    "code_index": 4,
    "language": "Scala",
    "libraries": [],
    "code": "GET my_index/_search\n{\n  \"query\": {\n    \"term\": {\n      \"price\": \"1999.00\"\n    }\n  }\n}",
    "filename": "fceae34a4b024ad446bafdf563d370cc_4.scala"
  },
  {
    "conversation_hash": "fceae34a4b024ad446bafdf563d370cc",
    "code_index": 5,
    "language": "Scala",
    "libraries": [],
    "code": "GET my_index/_search\n{\n  \"query\": {\n    \"range\": {\n      \"price.range\": {\n        \"gte\": 1000,\n        \"lte\": 2000\n      }\n    }\n  }\n}",
    "filename": "fceae34a4b024ad446bafdf563d370cc_5.scala"
  },
  {
    "conversation_hash": "fceae34a4b024ad446bafdf563d370cc",
    "code_index": 6,
    "language": "Scala",
    "libraries": [],
    "code": "PUT my_index\n{\n  \"mappings\": {\n    \"_doc\": {\n      \"properties\": {\n        \"title\": {\n          \"type\": \"text\"\n        },\n        \"images\": {\n          \"type\": \"keyword\"\n        },\n        \"price\": {\n          \"type\": \"float\"\n        },\n        \"date\": {\n          \"type\": \"date\"\n        }\n      }\n    }\n  }\n}",
    "filename": "fceae34a4b024ad446bafdf563d370cc_6.scala"
  },
  {
    "conversation_hash": "fceae34a4b024ad446bafdf563d370cc",
    "code_index": 10,
    "language": "Scala",
    "libraries": [],
    "code": "PUT my_index\n{\n  \"mappings\": {\n    \"properties\": {\n      \"title\": {\n        \"type\": \"text\"\n      },\n      \"images\": {\n        \"type\": \"keyword\"\n      },\n      \"price\": {\n        \"type\": \"double\"\n      },\n      \"date\": {\n        \"type\": \"date\"\n      }\n    }\n  }\n}",
    "filename": "fceae34a4b024ad446bafdf563d370cc_10.scala"
  },
  {
    "conversation_hash": "81cb62a7ae3db245c31501b1fa0d5101",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "import { Injectable, OnModuleInit } from '@nestjs/common';\n\n@Injectable()\nexport class ExampleService implements OnModuleInit {\n  onModuleInit() {\n    // các tác vụ khởi tạo được thực hiện tại đây\n  }\n}",
    "filename": "81cb62a7ae3db245c31501b1fa0d5101_0.scala"
  },
  {
    "conversation_hash": "50bf6137d4a300debf7a44ed193c1ecd",
    "code_index": 8,
    "language": "Scala",
    "libraries": [],
    "code": "<Text style={gStyle.dateFutureMK}>{new Intl.DateTimeFormat('ru-RU',{\n                day:'numeric',\n                month:'long',\n                year:'numeric',\n                hour:'numeric',\n                minute:'numeric',\n                hour12:false\n            }).format(mkData.time.toDate())}</Text>",
    "filename": "50bf6137d4a300debf7a44ed193c1ecd_8.scala"
  },
  {
    "conversation_hash": "50bf6137d4a300debf7a44ed193c1ecd",
    "code_index": 10,
    "language": "Scala",
    "libraries": [],
    "code": "{\n  futureMKData && futureMKData.map((mkData) => (\n    // your code here\n  ))\n}",
    "filename": "50bf6137d4a300debf7a44ed193c1ecd_10.scala"
  },
  {
    "conversation_hash": "43a5a229b7be08092dc5b3a110c3c0e3",
    "code_index": 0,
    "language": "Scala",
    "libraries": [
      "Taro"
    ],
    "code": "import Taro, { Component } from '@tarojs/taro'\nimport { View, Text } from '@tarojs/components'\nimport './index.scss'\n\nclass Notice extends Component {\n  config = {\n    navigationBarTitleText: '公告',\n  }\n\n  render () {\n    const { notice } = this.props\n    return (\n      <View className='notice'>\n        <View className='notice-title'>公告</View>\n        <View className='notice-content'>\n          <Text>{notice}</Text>\n        </View>\n      </View>\n    )\n  }\n}\n\nexport default Notice",
    "filename": "43a5a229b7be08092dc5b3a110c3c0e3_0.scala"
  },
  {
    "conversation_hash": "57cd0abc0020f5755c89ab866580cd8d",
    "code_index": 2,
    "language": "Scala",
    "libraries": [],
    "code": "TARGET = myapp\n\nSRCS = $(wildcard *.c)\n\nifdef UINTPTR_T_IS_64BIT\n    # using 64-bit uintptr_t\n    OBJS = $(SRCS:.c=.o64)\nelse\n    # using 32-bit uintptr_t\n    OBJS = $(SRCS:.c=.o32)\nendif\n\n$(TARGET): $(OBJS)\n    $(CC) $(CFLAGS) -o $@ $^\n\n%.o32 %.o64: %.c\n    $(CC) $(CFLAGS) -c -o $@ $^",
    "filename": "57cd0abc0020f5755c89ab866580cd8d_2.scala"
  },
  {
    "conversation_hash": "42eb21a8e31bf68efbe5ba448455fed0",
    "code_index": 3,
    "language": "Scala",
    "libraries": [],
    "code": "// create a database helper instance\nval db = DatabaseHelper(this)\n\n// add a new user\nval newUser = User(0, \"John Doe\", \"john.doe@example.com\", \"555-1234\")\ndb.addUser(newUser)\n\n// get a user by ID\nval user = db.getUser(1)\n\n// update a user\nval existingUser = User(1, \"Jane Doe\", \"jane.doe@example.com\", \"555-5678\")\ndb.updateUser(existingUser)\n\n// delete a user\ndb.deleteUser(2)\n\n// get all users\nval userList = db.getAllUsers()",
    "filename": "42eb21a8e31bf68efbe5ba448455fed0_3.scala"
  },
  {
    "conversation_hash": "fc56b6912e6d0b37da7c91c04cf4d3ac",
    "code_index": 8,
    "language": "Scala",
    "libraries": [],
    "code": "Array\n(\n    [123] => Array\n        (\n            [id] => 1\n            [name] => Alice\n            [member_id] => 123\n        )\n\n    [456] => Array\n        (\n            [id] => 2\n            [name] => Bob\n            [member_id] => 456\n        )\n\n    [789] => Array\n        (\n            [id] => 3\n            [name] => Charlie\n            [member_id] => 789\n        )\n\n)",
    "filename": "fc56b6912e6d0b37da7c91c04cf4d3ac_8.scala"
  },
  {
    "conversation_hash": "1084c7dc7d6056e2f80ba95ca8bf4775",
    "code_index": 2,
    "language": "Scala",
    "libraries": [],
    "code": "# Сценарий для объекта, следующего за другим объектом\nextends Node2D\n\n# Задаём свойство для хранения цели\nvar target:Node2D\n\nfunc _process(delta):\n    # Если цель установлена\n    if target:\n        # Задаём позицию объекта в зависимости от позиции цели\n        position = target.position + Vector2(0, 50)",
    "filename": "1084c7dc7d6056e2f80ba95ca8bf4775_2.scala"
  },
  {
    "conversation_hash": "38bff9e83bcc6bc6cc58d6cf42fb86de",
    "code_index": 2,
    "language": "Scala",
    "libraries": [],
    "code": "datasource db {\n  provider = \"postgresql\"\n  url      = \"postgresql://user:password@localhost:5432/mydatabase?schema=public\"\n}\n\nmodel User {\n  id           Int      @id @default(autoincrement())\n  name         String\n  email        String  @unique\n  posts        Post[]\n}\n\nmodel Post {\n  id           Int      @id @default(autoincrement())\n  title        String\n  content      String?\n  author       User     @relation(fields: [authorId], references: [id])\n  authorId     Int\n}",
    "filename": "38bff9e83bcc6bc6cc58d6cf42fb86de_2.scala"
  },
  {
    "conversation_hash": "dbf72f66d9e3d0739cad7ab35ac5fe66",
    "code_index": 4,
    "language": "Scala",
    "libraries": [],
    "code": "{options.map((option) => (\n  <Field\n    stitchingImg={option.label}\n    radioclass={\"jrRadio\"}\n    key={option.id} // n'oublie pas de spécifier une clé unique pour chaque élément retourné\n  >\n    <Inputs\n      {...register(\"select_watch_model_img\", {})}\n      type=\"radio\"\n      value={option.value}\n      className={\"radio-hidden\"}\n      id={`watch${option.id}`} // utilise l'id de l'option pour générer une ID unique pour chaque radio\n    />\n  </Field>\n))}",
    "filename": "dbf72f66d9e3d0739cad7ab35ac5fe66_4.scala"
  },
  {
    "conversation_hash": "b743126b94a69db36ca357964bf93b98",
    "code_index": 9,
    "language": "Scala",
    "libraries": [],
    "code": "<Text style={gStyle.PastMKdateOfMK}>\n  {pastMK.date.toDate().toLocaleDateString('ru-RU', {\n    day: 'numeric',\n    month: 'long',\n    year: 'numeric'\n  })}\n</Text>",
    "filename": "b743126b94a69db36ca357964bf93b98_9.scala"
  },
  {
    "conversation_hash": "b743126b94a69db36ca357964bf93b98",
    "code_index": 10,
    "language": "Scala",
    "libraries": [],
    "code": "<Text style={gStyle.PastMKdateOfMK}>\n  {pastMK.date.toDate().toLocaleDateString('ru-RU', {\n    day: 'numeric',\n    month: 'long',\n    year: 'numeric'\n  })}\n</Text>",
    "filename": "b743126b94a69db36ca357964bf93b98_10.scala"
  },
  {
    "conversation_hash": "27628558d6373807f9ffb125fc92fd81",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "return (\n  <View style={gStyle.main}>\n    {pastMKData.map((mkData) => (\n      <View key={mkData.id} style={gStyle.PastMKbox}>\n        {/* Render the content of each past master class */}\n      </View>\n    ))}\n  </View>\n);",
    "filename": "27628558d6373807f9ffb125fc92fd81_1.scala"
  },
  {
    "conversation_hash": "4c688c6e40038493fd579b15b36c093e",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "<template>\n  <li>\n    <span>{{ data.name }}</span>\n    <ul v-if=\"data.children\">\n      <tree-item v-for=\"child in data.children\" :data=\"child\" :key=\"child.id\"/>\n    </ul>\n  </li>\n</template>\n\n<script>\n  export default {\n    props: {\n      data: {\n        type: Object,\n        required: true\n      }\n    }\n  }\n</script>",
    "filename": "4c688c6e40038493fd579b15b36c093e_1.scala"
  },
  {
    "conversation_hash": "7e372978159f9c9596d09376ac3e5ec6",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "pipeline {\n    agent any\n\n    stages {\n        stage('Process Data') {\n            steps {\n                script {\n                    def data = '''ZYDBPMRPGDE25VQF2RGMFIPXRPTRFBA2\n                                 ZZ5VD4HPERXODGZGEA6WPGKDUHRGAVSA\n                                 ZZDK7DS6OGL5CJRAATQBMRWQR3KOHTOA'''\n                     \n                    def dataList = data.readLines()\n                    for (def i=0; i<dataList.size(); i++) {\n                        def path = dataList[i].substring(0,2) + '/' + dataList[i]\n                        // Do something with the path\n                        println path\n                    }\n                }\n            }\n        }\n    }\n}",
    "filename": "7e372978159f9c9596d09376ac3e5ec6_0.scala"
  },
  {
    "conversation_hash": "7e372978159f9c9596d09376ac3e5ec6",
    "code_index": 5,
    "language": "Scala",
    "libraries": [],
    "code": "def paths = ['/var/log/nginx/access.log', '/var/log/nginx/error.log']\n\nfor (def path : paths) {\n    if (fileExists(path)) {\n        sh \"cp $path /home/user/backups/\"\n    }\n}",
    "filename": "7e372978159f9c9596d09376ac3e5ec6_5.scala"
  },
  {
    "conversation_hash": "52fca1c2e2b2db55f740b44656b04f9f",
    "code_index": 3,
    "language": "Scala",
    "libraries": [],
    "code": "AbstractClass constructor\nSubClass constructor\nSubClass postConstruction\nSubClass destructor\nAbstractClass destructor",
    "filename": "52fca1c2e2b2db55f740b44656b04f9f_3.scala"
  },
  {
    "conversation_hash": "52fca1c2e2b2db55f740b44656b04f9f",
    "code_index": 5,
    "language": "Scala",
    "libraries": [],
    "code": "AbstractClass constructor\nSubClass constructor\nSubClass postConstruction\nSubClass destructor\nAbstractClass destructor",
    "filename": "52fca1c2e2b2db55f740b44656b04f9f_5.scala"
  },
  {
    "conversation_hash": "b20ccd57f6f36f0d0c09854b50f4479c",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "pragma solidity 0.8.17;\n\nimport \"./VRFProvider.sol\";\n\ncontract Penduel is VRFProvider {\n\n    address public s_owner;\n    // Déclarez les autres variables et les événements spécifiques au jeu Pendule\n\n    constructor(uint64 subscriptionId) VRFProvider(subscriptionId) {\n        // Initialisez les variables et les événements spécifiques au jeu Pendule\n    }\n\n    // Implémentez les fonctions spécifiques au jeu Pendule\n}",
    "filename": "b20ccd57f6f36f0d0c09854b50f4479c_1.scala"
  },
  {
    "conversation_hash": "8b2588abdee4f2134c38393885e23ece",
    "code_index": 1,
    "language": "Scala",
    "libraries": [
      "React"
    ],
    "code": "import React from \"react\";\n\ninterface MyGridProps {\n  rows: number;\n  columns: number;\n  data: Array<Array<string>>;\n}\n\nconst MyGrid: React.FC<MyGridProps> = ({ rows, columns, data }) => {\n  return (\n    <table>\n      {data.map((rowData) => (\n        <tr>\n          {rowData.map((cellData) => (\n            <td>{cellData}</td>\n          ))}\n        </tr>\n      ))}\n    </table>\n  );\n};\n\nexport default MyGrid;",
    "filename": "8b2588abdee4f2134c38393885e23ece_1.scala"
  },
  {
    "conversation_hash": "f653540450384f713e3de7211140b1ab",
    "code_index": 3,
    "language": "Scala",
    "libraries": [],
    "code": "interface IGridProps extends DataGridProps {\n  apiEndpoint: string;\n  customProp1: string;\n  customProp2: number;\n}",
    "filename": "f653540450384f713e3de7211140b1ab_3.scala"
  },
  {
    "conversation_hash": "009c179d6a5451f616b69cce67f35f37",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "filter {\n  regex {\n    pattern => \"regex_pattern\"\n    source => \"source_field\"\n    target => \"s\"\n  }\n}",
    "filename": "009c179d6a5451f616b69cce67f35f37_0.scala"
  },
  {
    "conversation_hash": "009c179d6a5451f616b69cce67f35f37",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "filter {\n  regexp {\n    target => \"_source\"\n    source => \"source\"\n    pattern => \"(.*)\"\n  }\n}",
    "filename": "009c179d6a5451f616b69cce67f35f37_1.scala"
  },
  {
    "conversation_hash": "009c179d6a5451f616b69cce67f35f37",
    "code_index": 3,
    "language": "Scala",
    "libraries": [],
    "code": "filter {\n  mutate {\n    add_field => { \"lat\" => \"%{[lat]}45\" }\n  }\n}",
    "filename": "009c179d6a5451f616b69cce67f35f37_3.scala"
  },
  {
    "conversation_hash": "9f2a5ee31fc2b114d4cbe363c959b331",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "filter {\n  mutate {\n    replace => { \"my_variable\" => \"new_value\" }\n  }\n}",
    "filename": "9f2a5ee31fc2b114d4cbe363c959b331_0.scala"
  },
  {
    "conversation_hash": "9f2a5ee31fc2b114d4cbe363c959b331",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "filter {\n  split {\n    field => \"my_array_field\"\n  }\n}",
    "filename": "9f2a5ee31fc2b114d4cbe363c959b331_1.scala"
  },
  {
    "conversation_hash": "9f2a5ee31fc2b114d4cbe363c959b331",
    "code_index": 2,
    "language": "Scala",
    "libraries": [],
    "code": "filter {\n  foreach => [\"my_array_field\"]\n  mutate {\n    replace => { \"my_variable\" => \"new_value\" }\n  }\n}",
    "filename": "9f2a5ee31fc2b114d4cbe363c959b331_2.scala"
  },
  {
    "conversation_hash": "9f2a5ee31fc2b114d4cbe363c959b331",
    "code_index": 3,
    "language": "Scala",
    "libraries": [],
    "code": "filter {\n  split {\n    field => \"source_url\"\n  }\n  http {\n    url => \"${sp_url}+%{source_url}\"\n  }\n}",
    "filename": "9f2a5ee31fc2b114d4cbe363c959b331_3.scala"
  },
  {
    "conversation_hash": "9f2a5ee31fc2b114d4cbe363c959b331",
    "code_index": 7,
    "language": "Scala",
    "libraries": [],
    "code": "filter {\n  xpath {\n    source => \"xml_content\"\n    target => \"matched_elements\"\n    xpath => \"//*[contains(text(),'График работы:')]\"\n  }\n}",
    "filename": "9f2a5ee31fc2b114d4cbe363c959b331_7.scala"
  },
  {
    "conversation_hash": "d4463dd5dbab8326e3cce73b22d9f38e",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "import { GridRowsProp, GridColDef } from '@mui/x-data-grid';\n\ninterface Props {\n  rows: GridRowsProp;\n  columns: GridColDef[];\n}",
    "filename": "d4463dd5dbab8326e3cce73b22d9f38e_1.scala"
  },
  {
    "conversation_hash": "b9c9d0024d716c943ade4c15735cdc5b",
    "code_index": 5,
    "language": "Scala",
    "libraries": [],
    "code": "import * as React from 'react';\nimport { DataGrid, DataGridProps, GridColDef, GridRowsProp } from '@material-ui/data-grid';\n\ninterface IMyGridProps extends DataGridProps {\n  columns: GridColDef[];\n  rows: GridRowsProp;\n}\n\nconst MyGrid: React.FC<IMyGridProps> = ({columns, rows, ...rest}) => (\n  <div style={{ height: 400, width: '100%' }}>\n    <DataGrid columns={columns} rows={rows} {...rest} />\n  </div>\n);\n\nexport default MyGrid;",
    "filename": "b9c9d0024d716c943ade4c15735cdc5b_5.scala"
  },
  {
    "conversation_hash": "b9c9d0024d716c943ade4c15735cdc5b",
    "code_index": 7,
    "language": "Scala",
    "libraries": [],
    "code": "import * as React from 'react';\nimport { DataGrid, DataGridProps, GridColDef, GridRowsProp } from '@material-ui/data-grid';\n\ninterface IMyGridProps extends DataGridProps {\n  columns: GridColDef[];\n  rows: GridRowsProp;\n}\n\nconst MyGrid: React.FC<IMyGridProps> = ({columns, rows, ...rest}: IMyGridProps) => (\n  <div style={{ height: 400, width: '100%' }}>\n    <DataGrid columns={columns} rows={rows} {...rest} />\n  </div>\n);\n\nexport default MyGrid;",
    "filename": "b9c9d0024d716c943ade4c15735cdc5b_7.scala"
  },
  {
    "conversation_hash": "b9c9d0024d716c943ade4c15735cdc5b",
    "code_index": 9,
    "language": "Scala",
    "libraries": [],
    "code": "import * as React from 'react';\nimport { DataGrid, DataGridProps, GridColDef, GridRowsProp } from '@material-ui/data-grid';\n\ninterface IMyGridProps extends DataGridProps {\n  columns: GridColDef[];\n  rows: GridRowsProp;\n  [x: string]: any;\n}\n\nconst MyGrid: React.FC<IMyGridProps> = ({columns, rows, ...rest}) => (\n  <div style={{ height: 400, width: '100%' }}>\n    <DataGrid columns={columns} rows={rows} {...rest} />\n  </div>\n);\n\nexport default MyGrid;",
    "filename": "b9c9d0024d716c943ade4c15735cdc5b_9.scala"
  },
  {
    "conversation_hash": "b9c9d0024d716c943ade4c15735cdc5b",
    "code_index": 10,
    "language": "Scala",
    "libraries": [],
    "code": "import * as React from 'react';\nimport { DataGrid, DataGridProps, GridColDef, GridRowsProp } from '@material-ui/data-grid';\n\ninterface IMyGridProps extends DataGridProps {\n  columns: GridColDef[];\n  rows: GridRowsProp;\n}\n\nconst MyGrid: React.FC<IMyGridProps> = ({columns, rows, ...gridProps}: IMyGridProps) => (\n  <div style={{ height: 400, width: '100%' }}>\n    <DataGrid columns={columns} rows={rows} {...gridProps} />\n  </div>\n);\n\nexport default MyGrid;",
    "filename": "b9c9d0024d716c943ade4c15735cdc5b_10.scala"
  },
  {
    "conversation_hash": "bf251d231f79056d6a47a49c717929cd",
    "code_index": 10,
    "language": "Scala",
    "libraries": [],
    "code": "<androidx.recyclerview.widget.RecyclerView\n    android:id=\"@+id/contactsRecyclerView\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"wrap_content\"\n    android:layout_margin=\"12dp\" />",
    "filename": "bf251d231f79056d6a47a49c717929cd_10.scala"
  },
  {
    "conversation_hash": "6917c52296b066c52d3a71d7d162547d",
    "code_index": 5,
    "language": "Scala",
    "libraries": [],
    "code": "// 加载 Bitmap\nval bitmap: Bitmap = BitmapFactory.decodeResource(resources, R.drawable.image)\n\n// 将 Bitmap 转换为 NV21 格式的 byte 数组\nval nv21Bytes: ByteArray = bitmapToNV21(bitmap)\n\n// 生成全白的 NV21 格式的 byte 数组\nval whiteNV21Bytes: ByteArray  = generateWhiteNV21Bytes(bitmap.width, bitmap.height)",
    "filename": "6917c52296b066c52d3a71d7d162547d_5.scala"
  },
  {
    "conversation_hash": "6e655bde8524d878fa2620e805e903a7",
    "code_index": 2,
    "language": "Scala",
    "libraries": [],
    "code": "cmake_minimum_required(VERSION 3.16)\n\nproject(my_project)\nset(SOURCES main.cpp)\n\nadd_executable(my_project ${SOURCES})\n\n# 添加MY_CUSTOM_MACRO宏\ntarget_compile_definitions(my_project PRIVATE MY_CUSTOM_MACRO)",
    "filename": "6e655bde8524d878fa2620e805e903a7_2.scala"
  },
  {
    "conversation_hash": "8f5dd30f55c0f66a26df92069d685fdd",
    "code_index": 3,
    "language": "Scala",
    "libraries": [],
    "code": "# Define provider, and list of environment values.\nprovider \"aws\" {\n  region =\"us-east-1\"\n}\n\nvariable \"enable_logging\" {\n  type = bool\n  default = false\n}\n\nresource \"aws_s3_bucket\" \"my_bucket\" {\n  count = var.env == \"Dev\" || var.env == \"PPE\" ? 1 : 0 ]\n  bucket = \"my-bucket-${var.env}\"\n  \n  # enable_object_lock = true\n  # Versioning configuration is enabled for object version control in the course of      enforcing timing controls sets during bucket life-cycle planPolicy.\n  \n  versioning {\n    enabled = \"true\"\n  }\n  encrypted = \"SomeValuesChangeThanks\"\n  \n  # Lifecycle Configuration Rules - OBJECT EXPARITATION IF/OR WHEN A SOME MASURES TOTALING ~A DAY PASSED BELLOW ACTIONS?\n  #   Done work laterfully might great reduction in break-oan bucket responsibility to track; but limitations preserve the item should definitely make (help informing) day-conscious selections\n  lifecycle_configuration {\n    rule {\n         id          = \"LogFileCleanUp_REDUCESSPACE\"\n         filter {\n           prefix = \"Log/\")\n         }\n         status = \"Enabled\"\n         expiration {\n           days = \"15\"\n         }\n       }\n  }\n}\n\n#You probably have other things like AWS-DIDs spec for permissions on S3 at bucket/context/etc levels:\n  \n\ndata \"aws_caller_identity\" \"current\" {}\n\nresource \"aws_s3_bucket_policy\" \"policy\" {\n  count  = var.enable_public_read_access ? 1 | 0 : 0]       \n  bucket = aws_s3_bucket.my_bucket.id              \n  policy = data.aws_s3_bucket_acl.private_bucket_policy.json\n  current_policysa`\n  lapse        = null      \n}\n\nresource \"aws_s3_bucket_recently_deleted_objects\" \"my-bucket_deploy_configuration\" {\n  count   = var.enable_logging ? 1 | 0]              \n  bucket = aws_s3_bucket.my_bucket.id                                    \n}",
    "filename": "8f5dd30f55c0f66a26df92069d685fdd_3.scala"
  },
  {
    "conversation_hash": "47967e61e95b85d24ca83803d650641d",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "import { NgModule } from '@angular/core';\nimport { MatButtonModule, MatCheckboxModule } from '@angular/material';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatPaginatorModule } from '@angular/material/paginator';\n\n@NgModule({\n  imports: [\n    BrowserAnimationsModule,\n    TranslateModule.forRoot(),\n    MatButtonModule,\n    MatCheckboxModule,\n    MatTableModule,\n    MatPaginatorModule\n  ],\n  exports: [\n    BrowserAnimationsModule,\n    TranslateModule,\n    MatButtonModule,\n    MatCheckboxModule,\n    MatTableModule,\n    MatPaginatorModule\n  ]\n})\nexport class MaterialModule { }",
    "filename": "47967e61e95b85d24ca83803d650641d_1.scala"
  },
  {
    "conversation_hash": "47967e61e95b85d24ca83803d650641d",
    "code_index": 2,
    "language": "Scala",
    "libraries": [],
    "code": "import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatTableDataSource } from '@angular/material/table';\n\nexport interface Element {\n  name: string;\n  position: number;\n  weight: number;\n  symbol: string;\n}\n\nconst ELEMENT_DATA: Element[] = [\n  {position: 1, name: 'Hydrogen', weight: 1.0079, symbol: 'H'},\n  {position: 2, name: 'Helium', weight: 4.0026, symbol: 'He'},\n  {position: 3, name: 'Lithium', weight: 6.941, symbol: 'Li'},\n  {position: 4, name: 'Beryllium', weight: 9.0122, symbol: 'Be'},\n  {position: 5, name: 'Boron', weight: 10.81, symbol: 'B'},\n  {position: 6, name: 'Carbon', weight: 12.011, symbol: 'C'},\n];\n\n@Component({\n  selector: 'app-table',\n  templateUrl: './table.component.html',\n  styleUrls: ['./table.component.scss']\n})\nexport class TableComponent implements OnInit {\n  displayedColumns: string[] = ['position', 'name', 'weight', 'symbol'];\n  dataSource = new MatTableDataSource(ELEMENT_DATA);\n\n  @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\n\n  constructor() { }\n\n  ngOnInit() {\n    this.dataSource.paginator = this.paginator;\n  }\n}",
    "filename": "47967e61e95b85d24ca83803d650641d_2.scala"
  },
  {
    "conversation_hash": "6e8b411f4579d9c55a2f64f882ec9142",
    "code_index": 2,
    "language": "Scala",
    "libraries": [],
    "code": "CFLAGS=-Wall -O2\nLDFLAGS=-lcurl\nOBJS=main.o\n\nall: myprogram\n\nmyprogram: $(OBJS)\n\t$(CC) $(CFLAGS) $(OBJS) $(LDFLAGS) -o myprogram\n\nclean:\n\trm -f $(OBJS) myprogram",
    "filename": "6e8b411f4579d9c55a2f64f882ec9142_2.scala"
  },
  {
    "conversation_hash": "6e8b411f4579d9c55a2f64f882ec9142",
    "code_index": 3,
    "language": "Scala",
    "libraries": [],
    "code": "CFLAGS=-Wall -O2\nLDFLAGS=-L/path/to/libcurl -L/path/to/libz\nLDLIBS=-lcurl -lz\nOBJS=main.o\n\nall: myprogram\n\nmyprogram: $(OBJS)\n\t$(CC) $(CFLAGS) $(OBJS) $(LDFLAGS) $(LDLIBS) -o myprogram\n\nclean:\n\trm -f $(OBJS) myprogram",
    "filename": "6e8b411f4579d9c55a2f64f882ec9142_3.scala"
  },
  {
    "conversation_hash": "6e8b411f4579d9c55a2f64f882ec9142",
    "code_index": 4,
    "language": "Scala",
    "libraries": [],
    "code": "CFLAGS=-Wall -O3 -fPIC\nLDFLAGS=-shared\nLIBS=-lm\nOBJS=myprog.o\n\nall: myprog.so\n\nmyprog.so: $(OBJS)\n\t$(CC) $(CFLAGS) $(LDFLAGS) $(OBJS) $(LIBS) -o myprog.so\n\nmyprog.o: myprog.c\n\t$(CC) $(CFLAGS) -c myprog.c -o myprog.o\n\nclean:\n\trm -f $(OBJS) myprog.so",
    "filename": "6e8b411f4579d9c55a2f64f882ec9142_4.scala"
  },
  {
    "conversation_hash": "6e8b411f4579d9c55a2f64f882ec9142",
    "code_index": 5,
    "language": "Scala",
    "libraries": [],
    "code": "CFLAGS=-Wall -O3 -fPIC\nLDFLAGS=-shared\nLIBS=-lfoo\nOBJS=myprog.o\n\nall: myprog.so\n\nmyprog.so: $(OBJS)\n\t$(CC) $(CFLAGS) $(LDFLAGS) $(OBJS) $(LIBS) -o myprog.so\n\nmyprog.o: myprog.c\n\t$(CC) $(CFLAGS) -c myprog.c -o myprog.o\n\nclean:\n\trm -f $(OBJS) myprog.so",
    "filename": "6e8b411f4579d9c55a2f64f882ec9142_5.scala"
  },
  {
    "conversation_hash": "6e8b411f4579d9c55a2f64f882ec9142",
    "code_index": 7,
    "language": "Scala",
    "libraries": [],
    "code": "CFLAGS += -I.\nOBJS = main.o other.o\n\nall: myprog\n\nmyprog: $(OBJS)\n\t$(CC) $(CFLAGS) -o myprog $(OBJS)\n\n$(OBJS): %.o: %.c\n\t$(CC) $(CFLAGS) -c $< -o $@\n\nclean:\n\trm -f myprog $(OBJS)",
    "filename": "6e8b411f4579d9c55a2f64f882ec9142_7.scala"
  },
  {
    "conversation_hash": "32aaea878ad035e712efce395368fffb",
    "code_index": 13,
    "language": "Scala",
    "libraries": [],
    "code": "price  volume\ndate                     \n20210101      10     100\n20210102      20     200\n20210103      30     300",
    "filename": "32aaea878ad035e712efce395368fffb_13.scala"
  },
  {
    "conversation_hash": "174fdbfb2527fbd79342407b68b574f0",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "val a = 10\nval b = 5\nif (a > b) {\n    println(\"a is greater than b\")\n} else {\n    println(\"b is greater than a\")\n}",
    "filename": "174fdbfb2527fbd79342407b68b574f0_0.scala"
  },
  {
    "conversation_hash": "174fdbfb2527fbd79342407b68b574f0",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "val x = 5\n\n when (x) {\n     1 -> println(\"x is 1\")\n     2 -> println(\"x is 2\")\n     else -> println(\"x is neither 1 nor 2\")\n }",
    "filename": "174fdbfb2527fbd79342407b68b574f0_1.scala"
  },
  {
    "conversation_hash": "174fdbfb2527fbd79342407b68b574f0",
    "code_index": 2,
    "language": "Scala",
    "libraries": [],
    "code": "val numbers = listOf(1, 2, 3, 4, 5)\n\nfor (number in numbers) {\n    println(number)\n}",
    "filename": "174fdbfb2527fbd79342407b68b574f0_2.scala"
  },
  {
    "conversation_hash": "174fdbfb2527fbd79342407b68b574f0",
    "code_index": 5,
    "language": "Scala",
    "libraries": [],
    "code": "val numbers = listOf(1, 2, 3, 4, 5)\n\nfor (numbers in numbers) {\n    println(numbers)\n}",
    "filename": "174fdbfb2527fbd79342407b68b574f0_5.scala"
  },
  {
    "conversation_hash": "174fdbfb2527fbd79342407b68b574f0",
    "code_index": 7,
    "language": "Scala",
    "libraries": [],
    "code": "val x = 3\nval y = 5\n\nif (x > y) {\n    println(\"x is greater than y\")\n} else {\n    println(\"y is greater than x\")\n}",
    "filename": "174fdbfb2527fbd79342407b68b574f0_7.scala"
  },
  {
    "conversation_hash": "174fdbfb2527fbd79342407b68b574f0",
    "code_index": 8,
    "language": "Scala",
    "libraries": [],
    "code": "val numbers = listOf(1, 2, 3, 4, 5)\n\nfor (number in numbers) {\n    println(number)\n}",
    "filename": "174fdbfb2527fbd79342407b68b574f0_8.scala"
  },
  {
    "conversation_hash": "a6d52aaacf68a500f110b54c7fd4e786",
    "code_index": 3,
    "language": "Scala",
    "libraries": [],
    "code": "\"compilerOptions\": {\n     \"module\": \"commonjs\",\n     \"target\": \"es5\",\n     \"importHelpers\": true,\n  }",
    "filename": "a6d52aaacf68a500f110b54c7fd4e786_3.scala"
  },
  {
    "conversation_hash": "a6d52aaacf68a500f110b54c7fd4e786",
    "code_index": 14,
    "language": "Scala",
    "libraries": [],
    "code": "\"compilerOptions\": {\n    ...\n    \"importHelpers\": false,\n    ...\n  }",
    "filename": "a6d52aaacf68a500f110b54c7fd4e786_14.scala"
  },
  {
    "conversation_hash": "a7321ab88fd92dc43a0ea45e7b6f2c14",
    "code_index": 2,
    "language": "Scala",
    "libraries": [],
    "code": "<dependency>\n    <groupId>com.fasterxml.jackson.dataformat</groupId>\n    <artifactId>jackson-dataformat-xml</artifactId>\n    <version>2.13.1</version>\n</dependency>",
    "filename": "a7321ab88fd92dc43a0ea45e7b6f2c14_2.scala"
  },
  {
    "conversation_hash": "c2de7772b381f43f55b98c2e69e6306a",
    "code_index": 2,
    "language": "Scala",
    "libraries": [],
    "code": "val session = GeckoSession()\nsession.open(GeckoSessionSettings.Builder().build())\nval geckoView = findViewById<GeckoView>(R.id.geckoView)\ngeckoView.setSession(session)\n\nval uri = Uri.parse(\"https://www.google.com\")\nval request = GeckoSession.NavigationDelegate.LoadRequest(uri)\nsession.load(request)",
    "filename": "c2de7772b381f43f55b98c2e69e6306a_2.scala"
  },
  {
    "conversation_hash": "1b94e2be91728e842bc3bbe363628d28",
    "code_index": 6,
    "language": "Scala",
    "libraries": [],
    "code": "<dependency>\n    <groupId>com.fasterxml.jackson.core</groupId>\n    <artifactId>jackson-databind</artifactId>\n    <version>2.12.3</version>\n</dependency>",
    "filename": "1b94e2be91728e842bc3bbe363628d28_6.scala"
  },
  {
    "conversation_hash": "91803fcd73caf5ba249a3cdd4f8ca64f",
    "code_index": 3,
    "language": "Scala",
    "libraries": [],
    "code": "val num = 5\nif (num > 0 && num < 10) {\n    println(\"$num is between 0 and 10\")\n}\n\n// Output: 5 is between 0 and 10\n\nif (num == 0 || num == 10) {\n    println(\"$num is equal to either 0 or 10\")\n}\n\n// Output: nothing will be printed in this case.",
    "filename": "91803fcd73caf5ba249a3cdd4f8ca64f_3.scala"
  },
  {
    "conversation_hash": "91803fcd73caf5ba249a3cdd4f8ca64f",
    "code_index": 4,
    "language": "Scala",
    "libraries": [],
    "code": "val num = 5\nif (num > 0 && num < 10) {\n    println(\"$num is between 0 and 10\")\n}\n\n// Output: 5 is between 0 and 10",
    "filename": "91803fcd73caf5ba249a3cdd4f8ca64f_4.scala"
  },
  {
    "conversation_hash": "52a042f02f801d54248a8d453cdba1e6",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "torch==1.10.1\ntorchvision==0.11.2\nnumpy==1.22.3\nmatplotlib==3.5.1\nseaborn==0.11.3\nscikit-learn==1.0.2\nPillow==9.0.1\nFlask==2.1.1",
    "filename": "52a042f02f801d54248a8d453cdba1e6_0.scala"
  },
  {
    "conversation_hash": "aa23ccc2b3609ec2ab3c7b72d6365f8e",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "def currentTimeMillis = new Date().time\nprintln \"Current timestamp: $currentTimeMillis\"\n\ndef currentTimeMillis2 = new Date().getTime()\nprintln \"Current timestamp: $currentTimeMillis2\"",
    "filename": "aa23ccc2b3609ec2ab3c7b72d6365f8e_1.scala"
  },
  {
    "conversation_hash": "c93760b62b4c807a5c4584cd7b309687",
    "code_index": 2,
    "language": "Scala",
    "libraries": [],
    "code": "def fileList = sh(script: \"find . -name '*.aab'\", returnStdout: true).trim()\ndef regex = ~/.*\\.aab$/   // 匹配结尾为 .aab 的文件\ndef matchedFiles = fileList.split(\"\\n\")\n        .findResults { path ->\n            def matcher = regex.matcher(path)\n            if (matcher.matches()) {\n                return path\n            }\n        }",
    "filename": "c93760b62b4c807a5c4584cd7b309687_2.scala"
  },
  {
    "conversation_hash": "d4f01b7b70dc9307ff4aedac2cd0a0f9",
    "code_index": 4,
    "language": "Scala",
    "libraries": [],
    "code": "variable \"first_name\" {\n  default = \"John\"\n}\n\nvariable \"middle_name\" {\n   default = \"William\"\n}\n\nvariable \"last_name\" {\n  default = \"Doe\"\n}\n\noutput \"full_name\" {\n  value = \"${replace(concat(var.first_name, var.middle_name, var.last_name), \" \", \"\")}\"\n}",
    "filename": "d4f01b7b70dc9307ff4aedac2cd0a0f9_4.scala"
  },
  {
    "conversation_hash": "b50b494079b5123cbead90d4042449af",
    "code_index": 2,
    "language": "Scala",
    "libraries": [],
    "code": "-- 显式设置“继承父级”选项\nconfiguration { \"Debug\", \"x86\" }\n  inherit \"Debug\"\n\n-- 设置 QT_QPA_PLATFORM_PLUGIN_PATH 环境变量\ndebugenvs { \"QT_QPA_PLATFORM_PLUGIN_PATH=D:\\\\dev2\\\\qt-5.15.2\\\\bin-platforms\\\\$(Configuration)\\\\platforms\" }\n\n-- 添加编译选项和链接选项\nbuildoptions { ... }\nlinkoptions { ... }",
    "filename": "b50b494079b5123cbead90d4042449af_2.scala"
  },
  {
    "conversation_hash": "c8c7786617e8de1ddfa1494552c129fb",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "project \"myproject\"\n    kind \"ConsoleApp\"\n    language \"C++\"\n    targetdir \"bin\"\n\n    files { \"src/*.cpp\" }\n\n    includedirs { \"../mylib/include\" } -- 包含 mylib 的头文件路径\n\n    links { \"mylib\" } -- 链接 mylib 静态库",
    "filename": "c8c7786617e8de1ddfa1494552c129fb_1.scala"
  },
  {
    "conversation_hash": "c8c7786617e8de1ddfa1494552c129fb",
    "code_index": 2,
    "language": "Scala",
    "libraries": [],
    "code": "project \"myproject\"\n    kind \"ConsoleApp\"\n    language \"C++\"\n    targetdir \"bin\"\n\n    files { \"src/*.cpp\" }\n\n    links { \"mylib\" } -- 添加对 mylib 的依赖关系",
    "filename": "c8c7786617e8de1ddfa1494552c129fb_2.scala"
  },
  {
    "conversation_hash": "c8c7786617e8de1ddfa1494552c129fb",
    "code_index": 6,
    "language": "Scala",
    "libraries": [],
    "code": "project \"myproject\"\n    kind \"ConsoleApp\"\n    language \"C++\"\n    targetdir \"bin\"\n\n    files { \"src/*.cpp\" }\n\n    -- 建立依赖关系\n    dependson { \"mylib\" }\n    links { \"mylib\" }",
    "filename": "c8c7786617e8de1ddfa1494552c129fb_6.scala"
  },
  {
    "conversation_hash": "c8c7786617e8de1ddfa1494552c129fb",
    "code_index": 12,
    "language": "Scala",
    "libraries": [],
    "code": "project \"mylib\"\n    kind \"StaticLib\"\n    language \"C++\"\n    targetdir \"lib\"\n\n    includedirs { \"include\", \"foo\", \"bar\", \"thirdparty/lib/include\" }",
    "filename": "c8c7786617e8de1ddfa1494552c129fb_12.scala"
  },
  {
    "conversation_hash": "6cdd9f9778b5abbad1d9a01afd5e4b64",
    "code_index": 9,
    "language": "Scala",
    "libraries": [],
    "code": "project \"lib_foo\"\n    kind \"StaticLib\"\n    language \"C++\"\n    targetdir \"build/lib_foo\"\n    targetname \"lib_foo\"\n    \n    files {\n        \"src/**.cpp\",\n        \"include/**.h\"\n    }\n    \n    includedirs {\n        \"include\",\n        \"3rd/foo\",\n        \"3rd/bar\"\n    }",
    "filename": "6cdd9f9778b5abbad1d9a01afd5e4b64_9.scala"
  },
  {
    "conversation_hash": "27dc2151999191dc988d15fd8a7fbfde",
    "code_index": 17,
    "language": "Scala",
    "libraries": [
      "org.apache.spark.sql.SparkSession"
    ],
    "code": "import org.apache.spark.sql.SparkSession\n\nval spark = SparkSession\n  .builder()\n  .appName(\"SparkSessionExample\")\n  .master(\"local\")\n  .getOrCreate()\n\nval df = spark.read.csv(\"path/to/your/file.csv\")\ndf.show()",
    "filename": "27dc2151999191dc988d15fd8a7fbfde_17.scala"
  },
  {
    "conversation_hash": "27dc2151999191dc988d15fd8a7fbfde",
    "code_index": 18,
    "language": "Scala",
    "libraries": [
      "org.apache.spark.sql.SparkSession"
    ],
    "code": "import org.apache.spark.sql.SparkSession\n\nval spark = SparkSession\n  .builder()\n  .appName(\"CSVAnalysis\")\n  .master(\"local\")\n  .getOrCreate()\n\n// 读取 CSV 文件\nval df = spark.read.csv(\"path/to/your/file.csv\")\n\n// 显示数据\ndf.show()\n\n// 计算行数\nval rowCount = df.count()\n\n// 计算某一列的均值\nval meanValue = df.select(\"_c3\").rdd.map(_.getString(0).toDouble).mean()\n\n// 输出结果\nprintln(s\"Row count: $rowCount\")\nprintln(s\"Mean of column 3: $meanValue\")\n\n// 停止 SparkSession\nspark.stop()",
    "filename": "27dc2151999191dc988d15fd8a7fbfde_18.scala"
  },
  {
    "conversation_hash": "27dc2151999191dc988d15fd8a7fbfde",
    "code_index": 19,
    "language": "Scala",
    "libraries": [
      "org.apache.spark.sql.SQLContext"
    ],
    "code": "import org.apache.spark.sql.SQLContext\n\nval sc: SparkContext\nval sqlContext = new SQLContext(sc)\n\nval df = sqlContext.read.json(\"path/to/json/file\")\ndf.show()",
    "filename": "27dc2151999191dc988d15fd8a7fbfde_19.scala"
  },
  {
    "conversation_hash": "27dc2151999191dc988d15fd8a7fbfde",
    "code_index": 20,
    "language": "Scala",
    "libraries": [
      "org.apache.spark.sql.SparkSession"
    ],
    "code": "import org.apache.spark.sql.SparkSession\n\nval spark = SparkSession\n  .builder()\n  .appName(\"DataFrameExample\")\n  .master(\"local\")\n  .getOrCreate()\n\n// 读取 CSV 文件\nval df = spark.read.csv(\"path/to/your/file.csv\")\n\n// 显示数据\ndf.show()",
    "filename": "27dc2151999191dc988d15fd8a7fbfde_20.scala"
  },
  {
    "conversation_hash": "27dc2151999191dc988d15fd8a7fbfde",
    "code_index": 26,
    "language": "Scala",
    "libraries": [
      "org.apache.spark.sql.SparkSession"
    ],
    "code": "import org.apache.spark.sql.SparkSession\n\nval spark = SparkSession\n  .builder()\n  .appName(\"TextAnalysis\")\n  .master(\"local\")\n  .getOrCreate()\n\n// 读取文本文件\nval df = spark.read.text(\"path/to/your/file.txt\")\n\n// 统计行数\nval rowCount = df.count()\n\n// 统计包含关键字的行数\nval keywordCount = df.filter($\"value\".contains(\"keyword\")).count()\n\n// 输出结果\nprintln(s\"Row count: $rowCount\")\nprintln(s\"Keyword count: $keywordCount\")\n\n// 停止 SparkSession\nspark.stop()",
    "filename": "27dc2151999191dc988d15fd8a7fbfde_26.scala"
  },
  {
    "conversation_hash": "e805258af52b071a3047981c1cc2e8c9",
    "code_index": 1,
    "language": "Scala",
    "libraries": [
      "java.util."
    ],
    "code": "import java.util.{Calendar, TimeZone}\n\nval cal = Calendar.getInstance(TimeZone.getDefault) // 获取当前时间Calendar对象\ncal.set(Calendar.DAY_OF_MONTH, 1) // 将日期设置为当月第一天\nval firstDay = cal.getTime // 获取当月第一天的Date对象",
    "filename": "e805258af52b071a3047981c1cc2e8c9_1.scala"
  },
  {
    "conversation_hash": "adefa0d7f13d273c007193709b122e3b",
    "code_index": 3,
    "language": "Scala",
    "libraries": [],
    "code": "val value = rdd.mapPartitions(iterator => {\n    val list = new ListBuffer[(String, ArrayBuffer[String])]\n    while (iterator.hasNext) {\n      val line = iterator.next()\n      val textArr = line.split(\"\\t\")\n      breakable {\n        if (textArr.length != 2) break\n        val id = textArr(0)\n        val text = textArr(1)\n\n        val analyzer = new IKAnalyzer(true)\n        val ts: TokenStream = analyzer.tokenStream(\"\", text)\n        //得到相应词汇的内容\n        val term: CharTermAttribute = ts.getAttribute(classOf[CharTermAttribute])\n        //重置分词器，使得tokenstream可以重新返回各个分词\n        ts.reset()\n        val arr = new ArrayBuffer[String]\n        //遍历分词数据\n        while (ts.incrementToken()) {\n          arr.+=(term.toString())\n        }\n        list.append((id, arr))\n        analyzer.close()\n      }\n    }\n    list.iterator\n  })",
    "filename": "adefa0d7f13d273c007193709b122e3b_3.scala"
  },
  {
    "conversation_hash": "adefa0d7f13d273c007193709b122e3b",
    "code_index": 13,
    "language": "Scala",
    "libraries": [],
    "code": "wordRDD = wordRDD.mapValues(buffer => {\n  buffer.distinct.sortBy(item => {\n    hashingTF.indexOf(item)\n  })\n})",
    "filename": "adefa0d7f13d273c007193709b122e3b_13.scala"
  },
  {
    "conversation_hash": "90bdc393e29948f8dd244e7ef8af3963",
    "code_index": 2,
    "language": "Scala",
    "libraries": [],
    "code": "contract PlayerManagement {\n\n    // définir la structure Game ici\n    struct Game {\n        address player1;\n        address player2;\n        // ajoutez plus de propriétés pour la structure Game selon vos besoins\n    }\n\n    // ensuite, déclarez le mapping\n    mapping(uint256 => Game) private games;\n\n    // Ajoutez les autres éléments du contrat ici\n}",
    "filename": "90bdc393e29948f8dd244e7ef8af3963_2.scala"
  },
  {
    "conversation_hash": "90bdc393e29948f8dd244e7ef8af3963",
    "code_index": 3,
    "language": "Scala",
    "libraries": [],
    "code": "contract PlayerManagement {\n\n    // définir la structure Game ici\n    struct GameStruct {\n        address player1;\n        address player2;\n        // ajoutez plus de propriétés pour la structure Game selon vos besoins\n    }\n\n    // ensuite, déclarez le mapping\n    mapping(uint256 => GameStruct) private games;\n\n    // Ajoutez les autres éléments du contrat ici\n}",
    "filename": "90bdc393e29948f8dd244e7ef8af3963_3.scala"
  },
  {
    "conversation_hash": "90bdc393e29948f8dd244e7ef8af3963",
    "code_index": 5,
    "language": "Scala",
    "libraries": [],
    "code": "// Importez le contrat GameBase.\nimport \"./GameBase.sol\";\n\n// Héritez du contrat GameBase\ncontract Penduel is VRFConsumerBaseV2, GameBase {\n    // Votre code précédent ici.\n}",
    "filename": "90bdc393e29948f8dd244e7ef8af3963_5.scala"
  },
  {
    "conversation_hash": "90bdc393e29948f8dd244e7ef8af3963",
    "code_index": 6,
    "language": "Scala",
    "libraries": [],
    "code": "// Importez le contrat GameBase.\nimport \"./GameBase.sol\";\n\n// Héritez du contrat GameBase.\ncontract PlayerManagement is GameBase {\n    // Votre code précédent ici sans la définition de struct Game et enum GameStatus.\n}",
    "filename": "90bdc393e29948f8dd244e7ef8af3963_6.scala"
  },
  {
    "conversation_hash": "90bdc393e29948f8dd244e7ef8af3963",
    "code_index": 7,
    "language": "Scala",
    "libraries": [],
    "code": "// Importez le contrat GameBase.\nimport \"./GameBase.sol\";\n\n// Héritez du contrat GameBase.\ncontract PlayerManagement is GameBase {\n    // Votre code précédent ici sans la définition de struct Game et enum GameStatus.\n}",
    "filename": "90bdc393e29948f8dd244e7ef8af3963_7.scala"
  },
  {
    "conversation_hash": "90bdc393e29948f8dd244e7ef8af3963",
    "code_index": 10,
    "language": "Scala",
    "libraries": [],
    "code": "// Importez le contrat GameBase.\nimport \"./GameBase.sol\";\n\n// Héritez du contrat GameBase.\ncontract PlayerManagement is GameBase {\n    uint256 private gameIdCounter = 0;\n    mapping(uint256 => Game) private games;\n    mapping(uint256 => mapping(address => uint256)) private gameBalances;\n\n    // Le reste de vos événements et fonctions ici.\n}",
    "filename": "90bdc393e29948f8dd244e7ef8af3963_10.scala"
  },
  {
    "conversation_hash": "90bdc393e29948f8dd244e7ef8af3963",
    "code_index": 11,
    "language": "Scala",
    "libraries": [],
    "code": "// Importez le contrat GameBase. \nimport \"./GameBase.sol\";\n\n// Héritez du contrat GameBase en plus de VRFConsumerBaseV2 et excluez l'importation de PlayerManagement.\ncontract Penduel is VRFConsumerBaseV2, GameBase {\n    mapping(uint256 => Game) public games;\n    mapping(uint256 => mapping(address => uint256)) public gameBalances;\n\n    // Votre code précédent ici sans la définition de struct Game et enum GameStatus.\n}",
    "filename": "90bdc393e29948f8dd244e7ef8af3963_11.scala"
  },
  {
    "conversation_hash": "177853a450983b21d940e1822322bec7",
    "code_index": 2,
    "language": "Scala",
    "libraries": [],
    "code": "interface UserUpdated extends User {\n  name: {\n    first: string;\n    last: string;\n  };\n}",
    "filename": "177853a450983b21d940e1822322bec7_2.scala"
  },
  {
    "conversation_hash": "53832d1368876fbc5f971f609a89f286",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "import { GridPaginationModel } from '@material-ui/data-grid';\n\ninterface CustomPaginationModel extends GridPaginationModel {\n  // Добавляем новые свойства или переопределяем существующие\n  customProperty: string;\n}\n\n// Применяем измененный интерфейс\nconst pagination: CustomPaginationModel = {\n  page: 1,\n  pageCount: 3,\n  pageSize: 10,\n  paginationMode: 'client',\n  customProperty: 'Custom Pagination Property',\n};",
    "filename": "53832d1368876fbc5f971f609a89f286_0.scala"
  },
  {
    "conversation_hash": "5f33cea7fe22f099eb2362a503a71ee7",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "interface MyGridPaginationModel extends GridPaginationModel {\n  totalCount: number;\n}\n\nconst columns: GridColDef[] = [...];\nconst rows: GridRowsProp = [...];\nconst pagination: MyGridPaginationModel = {...};\n\n<DataGrid\n  columns={columns}\n  rows={rows}\n  pagination={pagination}\n  ...\n/>",
    "filename": "5f33cea7fe22f099eb2362a503a71ee7_0.scala"
  },
  {
    "conversation_hash": "258b89fcb6a092e41c61186aa657e36d",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "import { DataGrid, DataGridProps } from '@material-ui/data-grid';\n\ninterface CustomDataGridProps extends Omit<DataGridProps, 'pageSize'> {\n  customPageSize: number;\n}\n\nconst CustomDataGrid = ({ customPageSize, ...rest }: CustomDataGridProps) => (\n  <DataGrid {...rest} pageSize={customPageSize} />\n);",
    "filename": "258b89fcb6a092e41c61186aa657e36d_0.scala"
  },
  {
    "conversation_hash": "7ce123e7490f98ee201baeec4512eb29",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "// nuxt.config.js\nexport default {\n  // ... autres configurations\n  modules: [\n    'nuxt-stripe-module'\n  ],\n  stripe: {\n    version: 'v3',\n    publishableKey:\n      process.env.STRIPE_PUBLISHABLE_KEY || 'votre_clé_publique_stripe'\n  },\n  // ... autres configurations\n}",
    "filename": "7ce123e7490f98ee201baeec4512eb29_1.scala"
  },
  {
    "conversation_hash": "92f958f45d3aebc6a958a8a5cc2bf693",
    "code_index": 2,
    "language": "Scala",
    "libraries": [],
    "code": "(defun f (x)\n  (- (* x x x) (* 6 x x) (* 11 x) 6))\n\n(defun df (x)\n  (+ (* 3 x x) (* -12 x) 11))\n\n(defun newton (a b eps)\n  (setq x0 (/ (+ a b) 2))\n  (loop while (> (abs (f x0)) eps)\n        do (setq x0 (- x0 (/ (f x0) (df x0))))\n           (when (or (< x0 a) (> x0 b)) (return nil)))\n  x0)\n\n(let ((a 0)\n      (b 4)\n      (eps 1e-5))\n  (let ((root1 (newton a b eps))\n        (root2 (newton a (newton a b eps) eps))\n        (root3 (newton (newton a b eps) b eps)))\n    (print (list \"Корни на отрезке [0, 4]:\" root1 root2 root3))))",
    "filename": "92f958f45d3aebc6a958a8a5cc2bf693_2.scala"
  },
  {
    "conversation_hash": "53bea56f71dec64096dd1dc32db100ec",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "type\n  Graph = ref object\n    edges: seq[seq[int]]\n    inDegrees: array[int]\n\nproc topoSort(graph: Graph): seq[int] =\n  var queue: seq[int] = @[]\n  var result: seq[int] = @[]\n  \n  # Calculate the in-degree of each vertex\n  for i in 0..<graph.edges.len:\n    for j in graph.edges[i]:\n      graph.inDegrees[j] += 1 \n  \n  # Add vertices with in-degree 0 to the queue\n  for i in 0..<graph.edges.len:\n    if graph.inDegrees[i] == 0:\n      queue.add(i)\n  \n  while queue.len > 0:\n    var curr = queue.pop(0)\n    result.add(curr)\n    for nextNode in graph.edges[curr]:\n      graph.inDegrees[nextNode] -= 1\n      if graph.inDegrees[nextNode] == 0:\n        queue.add(nextNode)\n  \n  return result",
    "filename": "53bea56f71dec64096dd1dc32db100ec_0.scala"
  },
  {
    "conversation_hash": "575e7aa12b59c1571739fa1712088742",
    "code_index": 2,
    "language": "Scala",
    "libraries": [],
    "code": "<View style={gStyle.ProfilePaidMK}>\n    {bookedMK.length > 0 ? (\n        <>\n            <Text style={gStyle.ProfilePaid}>Забронированные{'\\n'}мастер-классы</Text>\n            <Text style={gStyle.ProfileLine}></Text>\n            {bookedMK.map((mk, index)=>(\n                <BookedMK\n                    key={mk.index}\n                    mk={mk}\n                    userId={userId}\n                    onDelete={handleDeleteBookedMK}\n                    index={index}\n                />\n            ))}\n        </>\n    ) : null}\n</View>",
    "filename": "575e7aa12b59c1571739fa1712088742_2.scala"
  },
  {
    "conversation_hash": "59116b5afa97486a5ea77af2e54a0fb6",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "import { Component, ElementRef, HostListener } from '@angular/core';\n\n@Component({\n  selector: 'app-my-modal',\n  template: `\n    <div class=\"modal\" [ngClass]=\"{ 'show': showModal }\">\n      <div class=\"modal-content\">\n        <p>Modal content goes here...</p>\n      </div>\n    </div>\n  `,\n})\nexport class MyModalComponent {\n  showModal = false;\n\n  constructor(private elementRef: ElementRef) {}\n\n  @HostListener('document:click', ['$event'])\n  onClick(event: MouseEvent) {\n    // Check if the target element is outside the modal AND showModal is true\n    if (this.showModal && !this.elementRef.nativeElement.contains(event.target)) {\n      this.showModal = false;\n    }\n  }\n\n  openModal() {\n    this.showModal = true;\n  }\n}",
    "filename": "59116b5afa97486a5ea77af2e54a0fb6_1.scala"
  },
  {
    "conversation_hash": "59116b5afa97486a5ea77af2e54a0fb6",
    "code_index": 5,
    "language": "Scala",
    "libraries": [],
    "code": "import { Component, ElementRef, HostListener } from '@angular/core';\n\n@Component({\n  selector: 'app-my-modal',\n  template: `\n    <div class=\"modal\" [ngClass]=\"{ 'show': showModal }\">\n      <div class=\"modal-content\">\n        <p>Modal content goes here...</p>\n      </div>\n    </div>\n  `,\n})\nexport class MyModalComponent {\n  showModal = false;\n\n  constructor(private elementRef: ElementRef) {}\n\n  @HostListener('document:click', ['$event'])\n  onClick(event: MouseEvent) {\n    // Check if the click event target is the modal or one of its children\n    if (this.elementRef.nativeElement.contains(event.target)) {\n      return;\n    }\n\n    // Click event target is outside the modal\n    this.showModal = false;\n  }\n\n  openModal() {\n    this.showModal = true;\n  }\n}",
    "filename": "59116b5afa97486a5ea77af2e54a0fb6_5.scala"
  },
  {
    "conversation_hash": "4e6afadd559e152295d2826b05a048a8",
    "code_index": 8,
    "language": "Scala",
    "libraries": [],
    "code": "interface UserWithRole extends User {\n  role: string;\n}\n\ntype UserWithRole = User & {\n  role: string;\n}",
    "filename": "4e6afadd559e152295d2826b05a048a8_8.scala"
  },
  {
    "conversation_hash": "c39b4bb6956586ba82211e20ec789394",
    "code_index": 0,
    "language": "Scala",
    "libraries": [
      "org.apache.log4j._",
      "org.apache.spark.SparkContext._",
      "org.apache.spark._"
    ],
    "code": "// 导入必要的库\nimport org.apache.spark._\nimport org.apache.spark.SparkContext._\nimport org.apache.log4j._\n\n// 设置日志级别为错误，避免输出过多\nLogger.getLogger(\"org\").setLevel(Level.ERROR)\n\n// 创建SparkConf对象，指定应用名称\nval conf = new SparkConf().setAppName(\"WordCount\")\n\n// 创建SparkContext对象，指定运行模式为本地\nval sc = new SparkContext(\"local[*]\", \"WordCount\", conf)\n\n// 读取文本文件数据，按照行分割，创建RDD对象\nval lines = sc.textFile(\"path/to/text/file\")\n\n// 使用flatMap操作将每行数据按照空格拆分成单词，并统计出现次数\nval counts = lines.flatMap(line => line.split(\" \")).map(word => (word, 1)).reduceByKey((a, b) => a + b)\n\n// 输出结果\ncounts.foreach(println)\n\n// 关闭SparkContext对象\nsc.stop()",
    "filename": "c39b4bb6956586ba82211e20ec789394_0.scala"
  },
  {
    "conversation_hash": "d126aad6c3c56904782f8e9e9078f0ff",
    "code_index": 0,
    "language": "Scala",
    "libraries": [
      "org.apache.spark.SparkConf",
      "org.apache.spark.SparkContext"
    ],
    "code": "scala\nimport org.apache.spark.SparkConf\nimport org.apache.spark.SparkContext\n\n//定义Spark配置\nval sparkConf = new SparkConf().setAppName(\"TextDataProcessing\")\n\n//新建Spark上下文\nval sc = new SparkContext(sparkConf)\n\n//读取文本文件数据\nval textFile = sc.textFile(\"/path/to/textfile.txt\")\n\n//统计单词数量\nval wordCounts = textFile.flatMap(line => line.split(\" \"))\n                       .map(word => (word, 1))\n                       .reduceByKey(_ + _)\n\n// 输出结果\nwordCounts.collect().foreach(println)\n\n//关闭Spark上下文\nsc.stop()",
    "filename": "d126aad6c3c56904782f8e9e9078f0ff_0.scala"
  },
  {
    "conversation_hash": "d126aad6c3c56904782f8e9e9078f0ff",
    "code_index": 3,
    "language": "Scala",
    "libraries": [
      "org.apache.spark.SparkConf",
      "org.apache.spark.SparkContext",
      "org.apache.spark.graphx.",
      "org.apache.spark.graphx.lib.ConnectedComponents",
      "org.apache.spark.rdd.RDD"
    ],
    "code": "import org.apache.spark.SparkConf\nimport org.apache.spark.SparkContext\nimport org.apache.spark.graphx.{Graph, VertexRDD}\nimport org.apache.spark.graphx.lib.ConnectedComponents\nimport org.apache.spark.rdd.RDD\n\n//定义Spark配置\nval sparkConf = new SparkConf().setAppName(\"CommunityDetection\")\nval sc = new SparkContext(sparkConf)\n\n//读取节点和边的数据\nval nodes: RDD[(Long, String)] = sc.textFile(\"/path/to/nodes.txt\").map(line => line.split(\",\")).map(fields => (fields(0).toLong, fields(1)))\nval edges: RDD[(Long, Long)] = sc.textFile(\"/path/to/edges.txt\").map(line => line.split(\",\")).map(fields => (fields(0).toLong, fields(1).toLong))\n\n//新建GraphX图实例\nval graph = Graph(nodes, edges)\n\n//计算连通组件（社区）\nval connectedComponents = ConnectedComponents.run(graph)\n\n//将连通组件（社区）编号与节点信息打印输出\nval result: VertexRDD[VertexId] = connectedComponents.vertices\nresult.join(nodes).map({ case (id, (community, name)) => (community, name) }).collect().foreach(println)\n\n//关闭Spark上下文\nsc.stop()",
    "filename": "d126aad6c3c56904782f8e9e9078f0ff_3.scala"
  },
  {
    "conversation_hash": "44bbdea41a3a366caa8bff8bb13c4ebc",
    "code_index": 6,
    "language": "Scala",
    "libraries": [],
    "code": "myDiagram.nodeTemplate =\n  $(go.Node, \"Auto\",\n    $(go.Shape, \"RoundedRectangle\", {\n      fill: \"lightgray\",\n      stroke: null,\n      desiredSize: new go.Size(60, 40),\n    }),\n    $(go.Panel, \"Vertical\", {\n        margin: 2,\n        defaultAlignment: go.Spot.Left\n      },\n      $(go.TextBlock, {\n          font: \"12pt sans-serif\",\n          margin: new go.Margin(0, 0, 3, 0)\n        },\n        new go.Binding(\"text\", \"name\")),\n      $(go.Picture, {\n          desiredSize: new go.Size(40, 40),\n          margin: new go.Margin(0, 0, 3, 0)\n        },\n        new go.Binding(\"source\")),\n      $(go.TextBlock, {\n        font: \"italic 10pt sans-serif\",\n        stroke: \"gray\"\n      }, new go.Binding(\"text\", \"info\"))\n    )\n  );",
    "filename": "44bbdea41a3a366caa8bff8bb13c4ebc_6.scala"
  },
  {
    "conversation_hash": "44bbdea41a3a366caa8bff8bb13c4ebc",
    "code_index": 7,
    "language": "Scala",
    "libraries": [],
    "code": "myDiagram.model = new go.GraphLinksModel([{\n    key: 1,\n    name: \"节点1\",\n    info: \"节点1附加信息\",\n    source: \"https://placehold.it/40x40?text=1\"\n  },\n  {\n    key: 2,\n    name: \"节点2\",\n    info: \"节点2附加信息\",\n    source: \"https://placehold.it/40x40?text=2\"\n  },\n  {\n    key: 3,\n    name: \"节点3\",\n    info: \"节点3附加信息\",\n    source: \"https://placehold.it/40x40?text=3\"\n  }\n]);",
    "filename": "44bbdea41a3a366caa8bff8bb13c4ebc_7.scala"
  },
  {
    "conversation_hash": "cc85f01694459edb5cbe76d5355b200e",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "input {\n  beats {\n    port => 5044\n  }\n}\n\nfilter {\n  grok {\n    match => { \"message\" => \"%{COMBINEDAPACHELOG}\" }\n  }\n}\n\noutput {\n  elasticsearch {\n    hosts => [\"localhost:9200\"]\n    index => \"logs\"\n  }\n}",
    "filename": "cc85f01694459edb5cbe76d5355b200e_1.scala"
  },
  {
    "conversation_hash": "cc85f01694459edb5cbe76d5355b200e",
    "code_index": 3,
    "language": "Scala",
    "libraries": [],
    "code": "input {\n   file {\n      path => \"/var/log/*.log\"\n   }\n}\n \noutput {\n   opensearch {\n      hosts => [\"localhost:9200\"]\n      index => \"myindexname\"\n   }\n}",
    "filename": "cc85f01694459edb5cbe76d5355b200e_3.scala"
  },
  {
    "conversation_hash": "cc85f01694459edb5cbe76d5355b200e",
    "code_index": 6,
    "language": "Scala",
    "libraries": [],
    "code": "input {\n   file {\n      path => \"/var/log/*.log\"\n   }\n}\n \noutput {\n   opensearch {\n      hosts => [\"localhost:9200\"]\n      index => \"myindexname\"\n   }\n}",
    "filename": "cc85f01694459edb5cbe76d5355b200e_6.scala"
  },
  {
    "conversation_hash": "cc85f01694459edb5cbe76d5355b200e",
    "code_index": 8,
    "language": "Scala",
    "libraries": [],
    "code": "input {\n   file {\n      path => \"/var/log/*.log\"\n   }\n}\n \noutput {\n   opensearch {\n      hosts => [\"localhost:9200\"]\n      index => \"myindexname\"\n   }\n}",
    "filename": "cc85f01694459edb5cbe76d5355b200e_8.scala"
  },
  {
    "conversation_hash": "992bb55c3b4548583bd5e241c3a0f5b5",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "-- Get the two parts you want to weld together\nlocal part1 = game.Workspace.Part1\nlocal part2 = game.Workspace.Part2\n\n-- Create a new Weld constraint\nlocal weld = Instance.new(\"WeldConstraint\")\n\n-- Set Part0 and Part1 properties to the two parts\nweld.Part0 = part1\nweld.Part1 = part2\n\n-- Parent the Weld to one of the parts or to the workspace\nweld.Parent = part1",
    "filename": "992bb55c3b4548583bd5e241c3a0f5b5_1.scala"
  },
  {
    "conversation_hash": "eb3fcf9f1ea6d34ab6f8d09870ddcb75",
    "code_index": 12,
    "language": "Scala",
    "libraries": [],
    "code": "Center(\n  child: Stack(\n    children: <Widget>[\n      Positioned.fill(\n        child: Container(\n          color: Colors.grey[300],\n          child: const SizedBox.expand(),\n        ),\n      ),\n      Positioned(\n        left: ballPositionX - AppConstants.ballSize / 2,\n        top: ballPositionY - AppConstants.ballSize / 2,\n        child: CustomPaint(\n          painter: _BallPainter(ballPositionX, ballPositionY, rotationAngle),\n          size: const Size(AppConstants.ballSize, AppConstants.ballSize),\n        ),\n      ),\n    ],\n  ),\n),",
    "filename": "eb3fcf9f1ea6d34ab6f8d09870ddcb75_12.scala"
  },
  {
    "conversation_hash": "ba628ee840528593a1d29cb3b6ca148c",
    "code_index": 3,
    "language": "Scala",
    "libraries": [],
    "code": "@Then(\"В реквизитах документа выбрали: |any|\")\ndef step(context, itemName):\n    item = Page('Реквизиты документа').listView.childSearch(itemName)\n    assert item.item is not None, f'Элемент {itemName} не найден на странице'\n    assert item.atrIsExists(), f'Атрибут элемента {itemName} не найден'\n    item.tap()",
    "filename": "ba628ee840528593a1d29cb3b6ca148c_3.scala"
  },
  {
    "conversation_hash": "d10fe17b841370b302660ce128439f04",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "val language = \"Kotlin\"\n\nwhen (language) { // Using the \"when\" keyword\n    \"Java\" -> println(\"Java\")\n    \"Kotlin\" -> println(\"Kotlin\")\n    \"Python\" -> println(\"Python\")\n    else -> println(\"Unknown\") // Default case\n}",
    "filename": "d10fe17b841370b302660ce128439f04_0.scala"
  },
  {
    "conversation_hash": "72b302da741d420af519d7aede43f6be",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "Array\n(\n    [0] => apple\n    [1] => banana\n    [2] => orange\n)",
    "filename": "72b302da741d420af519d7aede43f6be_1.scala"
  },
  {
    "conversation_hash": "76fb5fa3b2c229201a82698901bb6214",
    "code_index": 6,
    "language": "Scala",
    "libraries": [],
    "code": "# Bad code\ndef build_transformer(x: pd.DataFrame, features_params: Dict[str, Union[str, List[str]]]) -> Transformers:\n    ...\n    \n# Good code\ndef build_transformer(df: pd.DataFrame, features_params: Dict[str, Union[str, List[str]]]) -> Transformers:\n    ...",
    "filename": "76fb5fa3b2c229201a82698901bb6214_6.scala"
  },
  {
    "conversation_hash": "e2959c4c5935299fd808eaa3987698a9",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "input {\n  beats {\n    port => \"5044\"\n  }\n}\n\nfilter {\n  // Ajouter des filtres ici pour traiter les données\n}\n\noutput {\n  // Configurer la sortie pour envoyer les données vers un système de stockage de données ou autre système\n}",
    "filename": "e2959c4c5935299fd808eaa3987698a9_1.scala"
  },
  {
    "conversation_hash": "e2959c4c5935299fd808eaa3987698a9",
    "code_index": 6,
    "language": "Scala",
    "libraries": [],
    "code": "filter {\n  grok {\n    match => { \"message\" => \"%{COMBINEDAPACHELOG}\" }\n  }\n}",
    "filename": "e2959c4c5935299fd808eaa3987698a9_6.scala"
  },
  {
    "conversation_hash": "e2959c4c5935299fd808eaa3987698a9",
    "code_index": 7,
    "language": "Scala",
    "libraries": [],
    "code": "output {\n  elasticsearch {\n    hosts => [\"localhost:9200\"]\n    index => \"myindex-%{+YYYY.MM.dd}\"\n  }\n}",
    "filename": "e2959c4c5935299fd808eaa3987698a9_7.scala"
  },
  {
    "conversation_hash": "e2959c4c5935299fd808eaa3987698a9",
    "code_index": 9,
    "language": "Scala",
    "libraries": [],
    "code": "input {\n  beats {\n    port => 5044\n  }\n}\n\nfilter {\n  grok {\n    match => { \"message\" => \"%{COMBINEDAPACHELOG}\" }\n  }\n}\n\noutput {\n  elasticsearch {\n    hosts => [\"http://localhost:9200\"]\n    index => \"nginx_access_log-%{+YYYY.MM.dd}\"\n  }\n}",
    "filename": "e2959c4c5935299fd808eaa3987698a9_9.scala"
  },
  {
    "conversation_hash": "6580e570a26c05bceb5f53490c64704c",
    "code_index": 0,
    "language": "Scala",
    "libraries": [
      "unistd.h"
    ],
    "code": "#ifdef __linux__ // 如果是Linux平台\n\n#include <unistd.h>\n\n// 在这里写需要用到<unistd.h>头文件中的函数的代码\n\n#endif",
    "filename": "6580e570a26c05bceb5f53490c64704c_0.scala"
  },
  {
    "conversation_hash": "c4d7929c41ecb441663367176a4f0b7d",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "import { ConfigModule, ConfigService } from '@nestjs/config';\n\n@Module({\n  imports: [ConfigModule.forRoot()],\n})\nexport class AppModule {\n  constructor(private configService: ConfigService) {}\n\n  getHello(): string {\n    return this.configService.get('HELLO');\n  }\n}",
    "filename": "c4d7929c41ecb441663367176a4f0b7d_1.scala"
  },
  {
    "conversation_hash": "c4d7929c41ecb441663367176a4f0b7d",
    "code_index": 3,
    "language": "Scala",
    "libraries": [],
    "code": "import { ConfigModule, ConfigService } from '@nestjs/config';\n\n@Module({\n  imports: [ConfigModule.forRoot()],\n  ...\n})\nexport class AppModule {}",
    "filename": "c4d7929c41ecb441663367176a4f0b7d_3.scala"
  },
  {
    "conversation_hash": "c4d7929c41ecb441663367176a4f0b7d",
    "code_index": 10,
    "language": "Scala",
    "libraries": [],
    "code": "import { Module } from '@nestjs/common';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\n\n@Module({\n  imports: [ConfigModule.forRoot()],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}",
    "filename": "c4d7929c41ecb441663367176a4f0b7d_10.scala"
  },
  {
    "conversation_hash": "313e1b5c2d5bf1f3adc447a011edb96a",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "filter {\n      json {\n        source => \"message\"\n      }\n    }",
    "filename": "313e1b5c2d5bf1f3adc447a011edb96a_1.scala"
  },
  {
    "conversation_hash": "788758a4a60151453e86eae6782e3729",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "Array\n(\n    [0] => apple\n    [1] => banana\n    [2] => orange\n)",
    "filename": "788758a4a60151453e86eae6782e3729_1.scala"
  },
  {
    "conversation_hash": "bd4f242d80b649a3a83ef794be87d174",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "service cloud.firestore {\n  match /databases/{database}/documents {\n    match /Sale/{saleId} {\n      allow read, create, update, delete: if request.auth.token.admin == true;\n      allow get: if request.auth != null; // allow guests to view individual sale documents without editing\n    }\n    match /{document=**} {\n      allow read, get; // allow all users and guests to read any document\n      allow write: if request.auth.token.admin == true; // allow only admins to write to any document\n    }\n  }\n}",
    "filename": "bd4f242d80b649a3a83ef794be87d174_1.scala"
  },
  {
    "conversation_hash": "32288f2687e85177e44dd889adb9540f",
    "code_index": 2,
    "language": "Scala",
    "libraries": [],
    "code": "import { Web3Module } from './web3/web3.module';\n\n@Module({\n  imports: [Web3Module],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}",
    "filename": "32288f2687e85177e44dd889adb9540f_2.scala"
  },
  {
    "conversation_hash": "f59ec1a0b65151de877fa7754c50dbcd",
    "code_index": 2,
    "language": "Scala",
    "libraries": [
      "React",
      "Valaszok",
      "styles"
    ],
    "code": "import React, { useState, useEffect } from \"react\";\nimport { StyleProp, View, ViewStyle } from 'react-native';\n\nimport styles from \"./ValaszokGroup.style\";\nimport Valaszok from \"./Valaszok\";\n\ninterface ValaszokGroupProps {\n  valasz: string[];\n  selectedIndex: number;\n  onSelection: (index: number) => void;\n  jo: number;\n  ellenorizve: boolean;\n}\n\nconst ValaszokGroup: React.FC<ValaszokGroupProps> = ({\n  valasz,\n  selectedIndex,\n  onSelection,\n  jo,\n  ellenorizve,\n}) => {\n  const [selectedAnswerIndex, setSelectedAnswerIndex] = useState(selectedIndex);\n\n  useEffect(() => {\n    setSelectedAnswerIndex(selectedIndex);\n  }, [selectedIndex]); // <-- added this useEffect\n\n  // ...rest of the code\n\n  return (\n    <View style={styles.container}>\n      {/* ...rest of the code */}\n    </View>\n  );\n};\n\nexport default ValaszokGroup;",
    "filename": "f59ec1a0b65151de877fa7754c50dbcd_2.scala"
  },
  {
    "conversation_hash": "f59ec1a0b65151de877fa7754c50dbcd",
    "code_index": 5,
    "language": "Scala",
    "libraries": [
      "React",
      "Valaszok",
      "styles"
    ],
    "code": "import React, { useState, useEffect } from 'react';\nimport { StyleProp, View, ViewStyle } from 'react-native';\n\nimport styles from './ValaszokGroup.style';\nimport Valaszok from './Valaszok';\n\ninterface ValaszokGroupProps {\n  valasz: string[];\n  selectedIndex: number;\n  onSelection: (index: number) => void;\n  jo: number;\n  ellenorizve: boolean;\n}\n\nconst ValaszokGroup: React.FC<ValaszokGroupProps> = ({\n  valasz,\n  selectedIndex,\n  onSelection,\n  jo,\n  ellenorizve,\n}) => {\n  const [selectedAnswerIndex, setSelectedAnswerIndex] = useState(selectedIndex);\n\n  useEffect(() => {\n    setSelectedAnswerIndex(selectedIndex);\n  }, [selectedIndex]); // <-- added this useEffect\n\n  // ...rest of the code\n\n  return (\n    <View style={styles.container}>\n      {/* ...rest of the code */}\n    </View>\n  );\n};\n\nexport default ValaszokGroup;",
    "filename": "f59ec1a0b65151de877fa7754c50dbcd_5.scala"
  },
  {
    "conversation_hash": "54ac7c1ff7eaed3a840edf37bea6969f",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "{x.blockType != \"Image\" ? (\n    <Form.Control as=\"textarea\" value={content} onChange={handleContentChange} ></Form.Control>\n) : (\n    <div>\n        {images.map((image) => (\n            <label key={generatelocalId()} style={{ paddingRight: \"20px\" }}>\n                <input value={image.url} onChange={handleContentChange} checked={content == image.url} type=\"radio\" />\n                <img className=\"img-box\" src={image.url} alt={image.alt} />\n            </label>\n        ))}\n    </div>\n)}",
    "filename": "54ac7c1ff7eaed3a840edf37bea6969f_1.scala"
  },
  {
    "conversation_hash": "54ac7c1ff7eaed3a840edf37bea6969f",
    "code_index": 3,
    "language": "Scala",
    "libraries": [],
    "code": "{x.blockType != \"Image\" ? (\n    <Form.Control\n        as=\"textarea\"\n        value={content}\n        onChange={(ev) => setContent(ev.target.value)}\n        onBlur={handleContentChange}\n    ></Form.Control>\n) : (\n    <div>\n        {images.map((image) => (\n            <label key={generatelocalId()} style={{ paddingRight: \"20px\" }}>\n                <input\n                    value={image.url}\n                    onChange={(ev) => setContent(ev.target.value)}\n                    onClick={handleContentChange}\n                    checked={content == image.url}\n                    type=\"radio\"\n                />\n                <img className=\"img-box\" src={image.url} alt={image.alt} />\n            </label>\n        ))}\n    </div>\n)}",
    "filename": "54ac7c1ff7eaed3a840edf37bea6969f_3.scala"
  },
  {
    "conversation_hash": "8ac1644dfcedc39851b395250668dbfd",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "// 创建SparkConf和SparkContext\nval conf = new SparkConf().setAppName(\"SortScores\")\nval sc = new SparkContext(conf)\n\n// 创建Rdd，每个元素是（姓名，成绩）的元组\nval scoresRdd = sc.parallelize(Seq((\"Andy\", 98), (\"Jack\", 87), (\"Bill\", 99)))\n\n// 对成绩进行排序，按降序排列\nval sortedRdd = scoresRdd.sortBy(_._2, false)\n\n// 输出排序后的结果\nsortedRdd.foreach(println)",
    "filename": "8ac1644dfcedc39851b395250668dbfd_0.scala"
  },
  {
    "conversation_hash": "621bd1e2262e9440e0f55f692b1fbe93",
    "code_index": 0,
    "language": "Scala",
    "libraries": [
      "scala.concurrent.ExecutionContext.Implicits.global",
      "scala.concurrent.Future"
    ],
    "code": "import scala.concurrent.Future\nimport scala.concurrent.ExecutionContext.Implicits.global\n\nobject MultiThreadingExample extends App {\n  val future1 = Future {\n    // Do some long-running task in a separate thread\n    Thread.sleep(500)\n    println(\"Future 1 completed\")\n  }\n\n  val future2 = Future {\n    // Do another long-running task in a separate thread\n    Thread.sleep(1000)\n    println(\"Future 2 completed\")\n  }\n\n  // Wait for both futures to complete before continuing\n  for {\n    _ <- future1\n    _ <- future2\n  } yield {\n    println(\"All futures completed\")\n  }\n}",
    "filename": "621bd1e2262e9440e0f55f692b1fbe93_0.scala"
  },
  {
    "conversation_hash": "621bd1e2262e9440e0f55f692b1fbe93",
    "code_index": 1,
    "language": "Scala",
    "libraries": [
      "MySQL",
      "Oracle"
    ],
    "code": "trait Database {\n  def readData(): List[String]\n}\n\nclass MySqlDatabase extends Database {\n  override def readData(): List[String] = {\n    // read data from MySQL database\n    List(\"Hello\", \"world\")\n  }\n}\n\nclass OracleDatabase extends Database {\n  override def readData(): List[String] = {\n    // read data from Oracle database\n    List(\"Goodbye\", \"world\")\n  }\n}\n\ntrait Service {\n  def processData(): Unit\n}\n\nclass MyService(database: Database) extends Service {\n  override def processData(): Unit = {\n    val data = database.readData()\n    // process data\n    println(data)\n  }\n}",
    "filename": "621bd1e2262e9440e0f55f692b1fbe93_1.scala"
  },
  {
    "conversation_hash": "621bd1e2262e9440e0f55f692b1fbe93",
    "code_index": 2,
    "language": "Scala",
    "libraries": [],
    "code": "object Main extends App {\n  val mySqlDatabase: Database = new MySqlDatabase()\n  val myService: Service = new MyService(mySqlDatabase)\n  myService.processData()\n}",
    "filename": "621bd1e2262e9440e0f55f692b1fbe93_2.scala"
  },
  {
    "conversation_hash": "5e8b207f7409b86e1958c0cd5693079f",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "<match my.logs>\n  @type elasticsearch\n  host my.elasticsearch.host\n  port my.elasticsearch.port\n  index_name my_logs-%Y.%m.%d\n  include_timestamp true\n</match>",
    "filename": "5e8b207f7409b86e1958c0cd5693079f_1.scala"
  },
  {
    "conversation_hash": "ddfdeaea98390d12c06d1ad052ac9f98",
    "code_index": 8,
    "language": "Scala",
    "libraries": [
      "androidx.compose.ui.text.font.Font",
      "androidx.compose.ui.text.font.FontFamily",
      "androidx.compose.ui.text.font.FontStyle",
      "androidx.compose.ui.text.font.Typeface"
    ],
    "code": "import androidx.compose.ui.text.font.Font\n   import androidx.compose.ui.text.font.FontFamily\n   import androidx.compose.ui.text.font.FontStyle\n   import androidx.compose.ui.text.font.Typeface\n\n   val myFont = FontFamily(\n       Font(R.font.my_custom_font, weight = FontWeight.Normal, style = FontStyle.Normal)\n   )",
    "filename": "ddfdeaea98390d12c06d1ad052ac9f98_8.scala"
  },
  {
    "conversation_hash": "83947040dad728657b8cac565be62484",
    "code_index": 3,
    "language": "Scala",
    "libraries": [],
    "code": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-consulta-ciudadano',\n  templateUrl: './consulta-ciudadano.component.html',\n  styleUrls: ['./consulta-ciudadano.component.css']\n})\nexport class ConsultaCiudadanoComponent {\n  foto: File;\n  huella: File;\n\n  consultar() {\n    // Enviar los datos de foto y huella al backend para realizar la consulta\n  }\n}",
    "filename": "83947040dad728657b8cac565be62484_3.scala"
  },
  {
    "conversation_hash": "5e25350d4d2fd322f3a0c234d3476fd4",
    "code_index": 2,
    "language": "Scala",
    "libraries": [],
    "code": "if (bucket.tryConsume(1)) {\n    // Action allowed, proceed\n} else {\n    // Action rate-limited, handle accordingly\n}",
    "filename": "5e25350d4d2fd322f3a0c234d3476fd4_2.scala"
  },
  {
    "conversation_hash": "ae6c495e1e5560cf05172db556abf524",
    "code_index": 0,
    "language": "Scala",
    "libraries": [
      "DataService",
      "an"
    ],
    "code": "import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class DataService {\n  getData(): string {\n    // Simulate fetching data from an external source\n    return 'Data from DataService';\n  }\n}",
    "filename": "ae6c495e1e5560cf05172db556abf524_0.scala"
  },
  {
    "conversation_hash": "ae6c495e1e5560cf05172db556abf524",
    "code_index": 2,
    "language": "Scala",
    "libraries": [],
    "code": "import { Injectable } from '@angular/core';\nimport { DataService } from './data.service';\nimport { LoggingService } from './logging.service';\n\n@Injectable()\nexport class DataFacade {\n  constructor(private dataService: DataService, private loggingService: LoggingService) {}\n\n  fetchData(): void {\n    const data = this.dataService.getData();\n    this.loggingService.log(`Fetched data: ${data}`);\n    // Additional logic or operations with the fetched data\n  }\n}",
    "filename": "ae6c495e1e5560cf05172db556abf524_2.scala"
  },
  {
    "conversation_hash": "ae6c495e1e5560cf05172db556abf524",
    "code_index": 3,
    "language": "Scala",
    "libraries": [],
    "code": "import { Component } from '@angular/core';\nimport { DataFacade } from './data.facade';\n\n@Component({\n  selector: 'app-root',\n  template: `<button (click)=\"fetchData()\">Fetch Data</button>`\n})\nexport class AppComponent {\n  constructor(private dataFacade: DataFacade) {}\n\n  fetchData(): void {\n    this.dataFacade.fetchData();\n  }\n}",
    "filename": "ae6c495e1e5560cf05172db556abf524_3.scala"
  },
  {
    "conversation_hash": "7d6db0592721334343e80b3762abdced",
    "code_index": 11,
    "language": "Scala",
    "libraries": [],
    "code": "class MyApp extends StatelessWidget {\n  @override\n  Widget build(BuildContext context) {\n    return MaterialApp(\n      home: Scaffold(\n        body: Center(\n          child: MyButton(),\n        ),\n      ),\n    );\n  }\n}",
    "filename": "7d6db0592721334343e80b3762abdced_11.scala"
  },
  {
    "conversation_hash": "438d2de1353e27befa21f53fe767e930",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "macro defineVar(name: untyped): untyped =\n  if defined(release):\n    quote do:\n      const `name` = initial_value\n    \n  else:\n    quote do:\n      var `name` = initial_value",
    "filename": "438d2de1353e27befa21f53fe767e930_0.scala"
  },
  {
    "conversation_hash": "5efb9d1bfc47ddc55503d615e7a6ef81",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "data class User(\n    val id: String,\n    val name: String,\n    val email: String,\n    val password: String,\n    val roles: List<String>\n)\n\ndata class Article(\n    val id: Int,\n    val title: String,\n    val content: String,\n    val categories: List<String>,\n    val tags: List<String>\n)\n\ndata class Advice(\n    val id: Int,\n    val author: String,\n    val date: String,\n    val text: String\n)\n\ndata class Emoji(\n    val id: Int,\n    val image: String\n)\n\ndata class FunctionCase(\n    val id: Int,\n    val description: String\n)",
    "filename": "5efb9d1bfc47ddc55503d615e7a6ef81_0.scala"
  },
  {
    "conversation_hash": "5efb9d1bfc47ddc55503d615e7a6ef81",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "data class ModelWithImage(\n    val id: Int,\n    val name: String,\n    val imageUri: String\n)",
    "filename": "5efb9d1bfc47ddc55503d615e7a6ef81_1.scala"
  },
  {
    "conversation_hash": "5efb9d1bfc47ddc55503d615e7a6ef81",
    "code_index": 2,
    "language": "Scala",
    "libraries": [],
    "code": "data class User(\n    val id: String,\n    val name: String,\n    val email: String,\n    val password: String,\n    val roles: List<String>,\n    val selectedEmojis: List<Emoji>\n)\n\ndata class Article(\n    val id: Int,\n    val title: String,\n    val content: String,\n    val categories: List<String>,\n    val tags: List<String>,\n    val user: User\n)\n\ndata class Advice(\n    val id: Int,\n    val author: String,\n    val date: String,\n    val text: String,\n    val user: User\n)\n\ndata class Emoji(\n    val id: Int,\n    val image: String\n)\n\ndata class FunctionCase(\n    val id: Int,\n    val description: String,\n    val emojis: List<Emoji>\n)",
    "filename": "5efb9d1bfc47ddc55503d615e7a6ef81_2.scala"
  },
  {
    "conversation_hash": "488d44754b5d4afb8690c3c9b3e437d3",
    "code_index": 3,
    "language": "Scala",
    "libraries": [],
    "code": "data class User(\n    val id: Long,\n    val username: String,\n    val firstName: String,\n    val lastName: String\n)\n\ndata class Emoji(\n    val id: Long\n)\n\ndata class Article(\n    val id: Long,\n    val title: String,\n    val author: String,\n    val datePublished: String,\n    val content: String,\n    val tags: List<String>\n)",
    "filename": "488d44754b5d4afb8690c3c9b3e437d3_3.scala"
  },
  {
    "conversation_hash": "1489b5b7562763dd5a2ee0126790f2cc",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "data class User(\n    val id: Long,\n    val username: String,\n    val firstName: String,\n    val lastName: String\n)\n\ndata class Emoji(\n    val id: Long,\n    val name: String,\n    val imageUrl: String,\n    val category: String\n)\n\ndata class Article(\n    val id: Long,\n    val title: String,\n    val author: String,\n    val datePublished: String,\n    val content: String,\n    val tags: List<String>\n)",
    "filename": "1489b5b7562763dd5a2ee0126790f2cc_0.scala"
  },
  {
    "conversation_hash": "1489b5b7562763dd5a2ee0126790f2cc",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "data class User(\n    val id: Long,\n    val username: String,\n    val firstName: String,\n    val lastName: String,\n    val selectedEmoji: Emoji?\n)\n\ndata class Emoji(\n    val id: Long,\n    val name: String,\n    val imageUrl: String,\n    val category: String\n)\n\ndata class Article(\n    val id: Long,\n    val title: String,\n    val author: String,\n    val datePublished: String,\n    val content: String,\n    val tags: List<String>,\n    val selectedEmoji: Emoji\n)",
    "filename": "1489b5b7562763dd5a2ee0126790f2cc_1.scala"
  },
  {
    "conversation_hash": "1489b5b7562763dd5a2ee0126790f2cc",
    "code_index": 2,
    "language": "Scala",
    "libraries": [],
    "code": "data class User(\n    val id: Long,\n    val username: String,\n    val firstName: String,\n    val lastName: String,\n    val selectedEmoji: Emoji?,\n    val articles: List<Article> = listOf()\n)\n\ndata class Emoji(\n    val id: Long,\n    val name: String,\n    val imageUrl: String,\n    val category: String\n)\n\ndata class Article(\n    val id: Long,\n    val title: String,\n    val author: String,\n    val datePublished: String,\n    val content: String,\n    val tags: List<String>\n)",
    "filename": "1489b5b7562763dd5a2ee0126790f2cc_2.scala"
  },
  {
    "conversation_hash": "1489b5b7562763dd5a2ee0126790f2cc",
    "code_index": 3,
    "language": "Scala",
    "libraries": [],
    "code": "val user = User(\n    id = 1,\n    username = \"user1\",\n    firstName = \"John\",\n    lastName = \"Doe\",\n    selectedEmoji = emoji\n)\n\nval emoji = Emoji(\n    id = 1,\n    name = \"Smile\",\n    imageUrl = \"smile.jpg\",\n    category = \"Emotion\"\n)\n\nval article1 = Article(\n    id = 1,\n    title = \"Article 1\",\n    author = \"John Doe\",\n    datePublished = \"2022-01-01\",\n    content = \"Lorem ipsum dolor sit amet...\",\n    tags = listOf(\"tag1\", \"tag2\")\n)\n\nval article2 = Article(\n    id = 2,\n    title = \"Article 2\",\n    author = \"John Doe\",\n    datePublished = \"2022-02-01\",\n    content = \"Lorem ipsum dolor sit amet...\",\n    tags = listOf(\"tag3\", \"tag4\")\n)\n\nuser.articles = listOf(article1, article2)",
    "filename": "1489b5b7562763dd5a2ee0126790f2cc_3.scala"
  },
  {
    "conversation_hash": "241e155ec87b11ecf3053f3d7dfd1eb8",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "data class PhoneNumber(\n    val countryCode: String,\n    val areaCode: String,\n    val number: String\n)",
    "filename": "241e155ec87b11ecf3053f3d7dfd1eb8_0.scala"
  },
  {
    "conversation_hash": "241e155ec87b11ecf3053f3d7dfd1eb8",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "data class User(\n    val id: String,\n    val name: String,\n    val phoneNumber: PhoneNumber\n)",
    "filename": "241e155ec87b11ecf3053f3d7dfd1eb8_1.scala"
  },
  {
    "conversation_hash": "9bdc102106148a684ae178d894a49795",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "data class User(\n   val name: String,\n   val email: String,\n   val password: String,\n   val age: Int,\n   val gender: String,\n   val location: String\n)",
    "filename": "9bdc102106148a684ae178d894a49795_0.scala"
  },
  {
    "conversation_hash": "9bdc102106148a684ae178d894a49795",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "data class User(\n   val name: String,\n   val email: String,\n   val password: String,\n   val phoneNumber: String,\n   val age: Int,\n   val gender: String,\n   val location: String\n)",
    "filename": "9bdc102106148a684ae178d894a49795_1.scala"
  },
  {
    "conversation_hash": "c92e456fbb85e8db6f0a072572a12cdc",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "class CAppEOT {\n    // ...\nprivate:\n    unsigned char m_crc16_L;\n    // move other member variables here\n}",
    "filename": "c92e456fbb85e8db6f0a072572a12cdc_0.scala"
  },
  {
    "conversation_hash": "5be19edf6eec762476140bcaac768f31",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "interface vlan 10\nip address 192.168.1.1 255.255.255.248\nexit\ninterface range gigabitethernet 1/1 - 1/6\n  switchport mode access\n  switchport access vlan 10\n  exit",
    "filename": "5be19edf6eec762476140bcaac768f31_0.scala"
  },
  {
    "conversation_hash": "5be19edf6eec762476140bcaac768f31",
    "code_index": 2,
    "language": "Scala",
    "libraries": [],
    "code": "interface vlan 30\nip address 192.168.3.1 255.255.255.192\nexit\ninterface range gigabitethernet 3/1 - 3/50\n  switchport mode access\n  switchport access vlan 30\n  exit",
    "filename": "5be19edf6eec762476140bcaac768f31_2.scala"
  },
  {
    "conversation_hash": "539df222d242fcc23b7d10fb72a70d19",
    "code_index": 4,
    "language": "Scala",
    "libraries": [],
    "code": "class YourComponent extends React.Component {\n  componentDidMount() {\n    this.props.updateStore(); // Вызывается при монтировании компонента и при изменении маршрутов\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.location !== prevProps.location) {\n      this.props.updateStore(); // Вызывается только при изменении маршрутов\n    }\n  }\n\n  // ...\n}\n\nexport default withRouter(connect(null, mapDispatchToProps)(YourComponent));",
    "filename": "539df222d242fcc23b7d10fb72a70d19_4.scala"
  },
  {
    "conversation_hash": "e13d6c72cfafb63d91305a5f4c082af9",
    "code_index": 2,
    "language": "Scala",
    "libraries": [],
    "code": "hostname Switch3\ninterface Vlan1\nip address 192.168.1.1 255.255.255.0\nexit\nip routing",
    "filename": "e13d6c72cfafb63d91305a5f4c082af9_2.scala"
  },
  {
    "conversation_hash": "8887c89a24d42cb73df48894dea548e9",
    "code_index": 8,
    "language": "Scala",
    "libraries": [],
    "code": "jar {\n    manifest {\n        attributes 'Class-Path': configurations.runtimeClasspath.files.collect { \"libs/\" + it.name }.join(' ')\n    }\n}",
    "filename": "8887c89a24d42cb73df48894dea548e9_8.scala"
  },
  {
    "conversation_hash": "ed6eb39ed922cd69ed9505c98603d781",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "import { Controller, Post, UploadedFile, UseInterceptors } from '@nestjs/common';\nimport { FileInterceptor } from '@nestjs/platform-express';\nimport { PrismaService } from 'path/to/prisma/service';\n\n@Controller('upload')\nexport class UploadController {\n  constructor(private prisma: PrismaService) {}\n\n  @Post()\n  @UseInterceptors(FileInterceptor('file'))\n  uploadFile(@UploadedFile() file): Promise<void> {\n    // Process 'file' which contains the uploaded file information\n    // Store the file in a specified location using fs or cloud storage service\n    // Create a new record in the database using Prisma\n    return this.prisma.image.create({ data: { filename: file.originalname, path: file.path } });\n  }\n}",
    "filename": "ed6eb39ed922cd69ed9505c98603d781_1.scala"
  },
  {
    "conversation_hash": "d0b7f8fd5fd83f6bcaea93348bd64e4c",
    "code_index": 2,
    "language": "Scala",
    "libraries": [],
    "code": "plugins {\n    id 'com.android.application'\n    id 'com.divpundir.mavlink.generator' version '0.5.0'\n}\n\nandroid {\n    // Android configuration options\n    // ...\n}\n\n// Rest of your build.gradle file\n// ...",
    "filename": "d0b7f8fd5fd83f6bcaea93348bd64e4c_2.scala"
  },
  {
    "conversation_hash": "d0b7f8fd5fd83f6bcaea93348bd64e4c",
    "code_index": 6,
    "language": "Scala",
    "libraries": [],
    "code": "plugins {\n    id 'com.android.application'\n    id 'com.divpundir.mavlink.generator' version '0.5.0'\n}\n\nandroid {\n    // Android configuration options\n    // ...\n}\n\n// Rest of your build.gradle file\n// ...",
    "filename": "d0b7f8fd5fd83f6bcaea93348bd64e4c_6.scala"
  },
  {
    "conversation_hash": "bd94be07255e0baa958bd26bfa6cfed8",
    "code_index": 4,
    "language": "Scala",
    "libraries": [],
    "code": "#!/bin/bash\n\n# 设置HBase和Spark的相关环境变量\nexport HBASE_HOME=/path/to/hbase\nexport SPARK_HOME=/path/to/spark\n\n# 指定连接HBase所需的类路径\nexport CLASSPATH=$HBASE_HOME/*:$HBASE_HOME/lib/*\n\n# 构建Spark的JAR包路径\nSPARK_JAR=$SPARK_HOME/jars/spark-hbase-connector.jar\n\n# 定义Spark任务的主类和相关参数\nMAIN_CLASS=\"com.example.HBaseSparkExample\"\nHBASE_TABLE=\"your-table-name\"\nROW_KEY=\"your-rowkey\"\n\n# 执行Spark任务\n$SPARK_HOME/bin/spark-shell \\\n--class $MAIN_CLASS \\\n--jars $SPARK_JAR \\\n--conf spark.executor.extraClassPath=$CLASSPATH \\\n--conf spark.driver.extraClassPath=$CLASSPATH \\\n--conf spark.hbase.host=<HBase_Master_IP> \\\n--conf spark.hbase.zookeeper.quorum=<Zookeeper_ip> \\\n--conf spark.hbase.zookeeper.property.clientPort=<Zookeeper_port> \\\n--conf spark.hbase.version=2.4.6 \\\n--conf hbase.client.keytab.file=$HBASE_KEYTAB_FILE \\\n--conf hbase.client.kerberos.principal=$HBASE_PRINCIPAL \\\n--conf hbase.regionserver.kerberos.principal=$HBASE_PRINCIPAL \\\n--conf spark.jars.packages=org.apache.hbase:hbase-spark:2.4.6 \\\n-c \"\\\nval hbaseConf = HBaseConfiguration.create()\nval connection = ConnectionFactory.createConnection(hbaseConf)\nval table = connection.getTable(TableName.valueOf('$HBASE_TABLE'))\n\nval rowKey = Bytes.toBytes('$ROW_KEY')\nval get = new Get(rowKey)\nval result = table.get(get)\n\n// 处理result中的数据\nresult.listCells().forEach { cell =>\n  val value = Bytes.toString(cell.getValueArray, cell.getValueOffset, cell.getValueLength)\n  // 进行处理\n}\n\ntable.close()\nconnection.close()\n\"",
    "filename": "bd94be07255e0baa958bd26bfa6cfed8_4.scala"
  },
  {
    "conversation_hash": "4b527bb7b6dd3a2360a57ea51f4da1a3",
    "code_index": 0,
    "language": "Scala",
    "libraries": [
      "org.apache.hadoop.hbase.",
      "org.apache.hadoop.hbase.client.",
      "org.apache.hadoop.hbase.util.Bytes"
    ],
    "code": "import org.apache.hadoop.hbase.{HBaseConfiguration, TableName}\nimport org.apache.hadoop.hbase.client.{Connection, ConnectionFactory, Put}\nimport org.apache.hadoop.hbase.util.Bytes\n\nval conf = HBaseConfiguration.create()\nval connection = ConnectionFactory.createConnection(conf)\nval table = connection.getTable(TableName.valueOf(\"your_table_name\"))\n\nval put = new Put(Bytes.toBytes(\"your_rowkey\"))  // 设置rowkey\nput.addColumn(Bytes.toBytes(\"your_column_family\"), Bytes.toBytes(\"your_column\"), Bytes.toBytes(\"your_value\"))\n\ntable.put(put)\ntable.close()\nconnection.close()",
    "filename": "4b527bb7b6dd3a2360a57ea51f4da1a3_0.scala"
  },
  {
    "conversation_hash": "9ee22f34b8e028245d09520dee8f3d47",
    "code_index": 5,
    "language": "Scala",
    "libraries": [
      "MapComponent"
    ],
    "code": "<template>\n  <div id=\"app\">\n    <MapComponent />\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { Component, Vue } from 'vue-property-decorator';\nimport MapComponent from './components/MapComponent.vue';\n\n@Component({\n  components: {\n    MapComponent,\n  },\n})\nexport default class App extends Vue {}\n</script>",
    "filename": "9ee22f34b8e028245d09520dee8f3d47_5.scala"
  },
  {
    "conversation_hash": "eaf52c287d517eb62d4d7e945a217361",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "<source>\n  @type aws_cloudwatch_logs\n  region us-west-1\n  tag aws.logs\n</source>\n\n<match aws.logs>\n  @type stdout\n</match>",
    "filename": "eaf52c287d517eb62d4d7e945a217361_1.scala"
  },
  {
    "conversation_hash": "eaf52c287d517eb62d4d7e945a217361",
    "code_index": 3,
    "language": "Scala",
    "libraries": [],
    "code": "<source>\n  @type aws_cloudwatch_logs\n  access_key_id <your_access_key>\n  secret_access_key <your_secret_key>\n  region us-west-1\n  tag aws.logs\n</source>",
    "filename": "eaf52c287d517eb62d4d7e945a217361_3.scala"
  },
  {
    "conversation_hash": "cab7da0d06ccc444d1d190ccbab18881",
    "code_index": 1,
    "language": "Scala",
    "libraries": [
      "the"
    ],
    "code": "# Variables\nvariable \"vpc_cidr_block\" {\n  default = \"10.0.0.0/16\"\n}\n\nvariable \"private_subnet_cidr_block\" {\n  default = \"10.0.1.0/24\"\n}\n\nvariable \"ecs_services\" {\n  type = map(object({\n    name            = string\n    container       = string\n    listener_arn    = string\n    internal_path   = string\n    sidecar_image   = string\n    sidecar_port    = number\n    target_group_vpc_id = string\n    cert_arn        = string\n  }))\n  default = {\n    service1 = {\n      name               = \"service1\"\n      container          = \"container1\"\n      listener_arn       = \"arn:aws:elasticloadbalancing:us-east-1:123456789012:listener/app/my-app-public-alb/abcd1234\"\n      internal_path      = \"/service1/*\"\n      sidecar_image      = \"123456789012.dkr.ecr.us-east-1.amazonaws.com/sidecar:latest\"\n      sidecar_port       = 443\n      target_group_vpc_id = \"vpc-xxxxxxxx\"\n      cert_arn           = \"arn:aws:acm:us-east-1:123456789012:certificate/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\"\n    },\n    service2 = {\n      name               = \"service2\"\n      container          = \"container2\"\n      listener_arn       = \"arn:aws:elasticloadbalancing:us-east-1:123456789012:listener/app/my-app-public-alb/abcd1234\"\n      internal_path      = \"/service2/*\"\n      sidecar_image      = \"123456789012.dkr.ecr.us-east-1.amazonaws.com/sidecar:latest\"\n      sidecar_port       = 443\n      target_group_vpc_id = \"vpc-xxxxxxxx\"\n      cert_arn           = \"arn:aws:acm:us-east-1:123456789012:certificate/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\"\n    }\n  }\n}\n\n# Create VPC\nresource \"aws_vpc\" \"vpc\" {\n  cidr_block = var.vpc_cidr_block\n}\n\n# Create private subnet\nresource \"aws_subnet\" \"private_subnet\" {\n  vpc_id            = aws_vpc.vpc.id\n  cidr_block        = var.private_subnet_cidr_block\n  availability_zone = \"us-east-1a\"\n}\n\n# Create internal ALB\nresource \"aws_lb\" \"internal_alb\" {\n  name               = \"internal-alb\"\n  internal           = true\n  load_balancer_type = \"application\"\n  security_groups    = [aws_security_group.internal_alb.id]\n  subnet_mapping {\n    subnet_id = aws_subnet.private_subnet.id\n  }\n}\n\n# Create security group for internal ALB\nresource \"aws_security_group\" \"internal_alb\" {\n  vpc_id = aws_vpc.vpc.id\n}\n\n# Create target groups for ECS services\nresource \"aws_lb_target_group\" \"target_groups\" {\n  for_each = var.ecs_services\n\n  name               = each.value.name\n  port               = 80\n  protocol           = \"HTTP\"\n  target_type        = \"ip\"\n  vpc_id             = each.value.target_group_vpc_id\n  health_check {\n    path                = \"/\"\n    protocol            = \"HTTP\"\n    matcher             = \"200-299\"\n    interval            = 30\n    timeout             = 5\n    healthy_threshold   = 3\n    unhealthy_threshold = 3\n  }\n}\n\n# Create listener rules for the internal ALB\nresource \"aws_lb_listener_rule\" \"listener_rules\" {\n  for_each = var.ecs_services\n\n  listener_arn = aws_lb.internal_alb.arn\n  priority     = 100\n\n  action {\n    type             = \"forward\"\n    target_group_arn = aws_lb_target_group.target_groups[each.key].arn\n  }\n\n  condition {\n    field  = \"path-pattern\"\n    values = [each.value.internal_path]\n  }\n}\n\n# Create ECS services\nresource \"aws_ecs_service\" \"ecs_services\" {\n  for_each = var.ecs_services\n\n  name            = each.value.name\n  cluster         = aws_ecs_cluster.cluster.id\n  task_definition = aws_ecs_task_definition.task_definitions[each.value.container].arn\n  desired_count   = 1\n\n  load_balancer {\n    target_group_arn = aws_lb_target_group.target_groups[each.key].arn\n    container_name   = each.value.container\n    container_port   = 80\n  }\n}\n\n# Create ECS cluster\nresource \"aws_ecs_cluster\" \"cluster\" {\n  name = \"my-cluster\"\n}\n\n# Create ECS task definitions with sidecar containers\nresource \"aws_ecs_task_definition\" \"task_definitions\" {\n  for_each = var.ecs_services\n\n  family                   = each.value.container\n  execution_role_arn       = aws_iam_role.task_execution_role.arn\n  network_mode             = \"awsvpc\"\n  requires_compatibilities = [\"FARGATE\"]\n  \n  container_definitions = jsonencode([\n    {\n      name         = each.value.container\n      image        = \"123456789012.dkr.ecr.us-east-1.amazonaws.com/${each.value.container}:latest\"\n      portMappings = [\n        {\n          containerPort = 80,\n          protocol      = \"tcp\",\n        },\n      ],\n    },\n    {\n      name        = \"sidecar\"\n      image       = each.value.sidecar_image\n      portMappings = [\n        {\n          containerPort     = each.value.sidecar_port,\n          protocol          = \"tcp\",\n          hostPort          = 0,\n        },\n      ],\n      environment = [\n        {\n          name  = \"SERVICE_NAME\"\n          value = each.value.name\n        },\n      ],\n      logConfiguration {\n        logDriver = \"awslogs\",\n        options = {\n          \"awslogs-group\"         = \"/ecs/${each.value.container}\",\n          \"awslogs-region\"        = \"us-east-1\",\n          \"awslogs-stream-prefix\" = \"sidecar\",\n        }\n      }\n    }\n  ])\n}\n\n# IAM role for ECS task execution\nresource \"aws_iam_role\" \"task_execution_role\" {\n  name = \"ecsTaskExecutionRole\"\n  assume_role_policy = <<EOF\n{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Effect\": \"Allow\",\n      \"Principal\": {\n        \"Service\": \"ecs-tasks.amazonaws.com\"\n      },\n      \"Action\": \"sts:AssumeRole\"\n    }\n  ]\n}\nEOF\n}\n\n# Attach policies to the ECS task execution role\nresource \"aws_iam_role_policy_attachment\" \"ecs_execution_role_policy_attachment\" {\n  policy_arn = \"arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy\"\n  role       = aws_iam_role.task_execution_role.name\n}\n\n# Create security group for ECS tasks allowing traffic from the internal ALB\nresource \"aws_security_group\" \"ecs_task_sg\" {\n  vpc_id = aws_vpc.vpc.id\n\n  ingress {\n    from_port   = 0\n    to_port     = 65535\n    protocol    = \"tcp\"\n    cidr_blocks = [aws_lb.internal_alb.dns_name]\n  }\n\n  egress {\n    from_port       = 0\n    to_port         = 0\n    protocol        = \"-1\"\n    cidr_blocks     = [\"0.0.0.0/0\"]\n    ipv6_cidr_blocks = [\"::/0\"]\n  }\n}\n\n# Create listener rules for the public ALB\nresource \"aws_lb_listener_rule\" \"public_listener_rules\" {\n  for_each = var.ecs_services\n\n  listener_arn = aws_lb.public_alb.arn\n  priority     = 100\n\n  action {\n    type             = \"forward\"\n    target_group_arn = aws_lb_target_group.target_groups[each.key].arn\n  }\n\n  condition {\n    field  = \"path-pattern\"\n    values = [each.value.path]\n  }\n}\n\n# Create security group for public ALB\nresource \"aws_security_group\" \"public_alb_sg\" {\n  vpc_id = aws_vpc.vpc.id\n}\n\n# Create public (internet-facing) ALB\nresource \"aws_lb\" \"public_alb\" {\n  name               = \"public-alb\"\n  load_balancer_type = \"application\"\n  subnets            = [aws_subnet.public_subnet.id]\n  security_groups    = [aws_security_group.public_alb_sg.id]\n}\n\n# Create public subnet\nresource \"aws_subnet\" \"public_subnet\" {\n  vpc_id            = aws_vpc.vpc.id\n  cidr_block        = \"10.0.0.0/24\"\n  availability_zone = \"us-east-1a\"\n}\n\n# Outputs\noutput \"public_alb_dns\" {\n  value = aws_lb.public_alb.dns_name\n}",
    "filename": "cab7da0d06ccc444d1d190ccbab18881_1.scala"
  },
  {
    "conversation_hash": "75069f6183a549865bb58de4a7cd9c84",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "cmake_minimum_required(VERSION 3.13)\nproject(MyLibrary)\n\nset(CMAKE_BUILD_TYPE \"Release\")\nset(CMAKE_POSITION_INDEPENDENT_CODE ON)\n\nadd_library(MyLibrary SHARED\n    src/mylibrary.cpp\n)\n\ntarget_include_directories(MyLibrary PUBLIC\n    include\n)",
    "filename": "75069f6183a549865bb58de4a7cd9c84_0.scala"
  },
  {
    "conversation_hash": "75069f6183a549865bb58de4a7cd9c84",
    "code_index": 3,
    "language": "Scala",
    "libraries": [],
    "code": "cmake_minimum_required(VERSION 3.13)\nproject(MyLibrary)\n\nset(CMAKE_BUILD_TYPE \"Release\")\nset(CMAKE_POSITION_INDEPENDENT_CODE ON)\n\nadd_library(MyLibrary SHARED\n    src/mylibrary.cpp\n)\n\ntarget_include_directories(MyLibrary PUBLIC\n    include\n)",
    "filename": "75069f6183a549865bb58de4a7cd9c84_3.scala"
  },
  {
    "conversation_hash": "75069f6183a549865bb58de4a7cd9c84",
    "code_index": 5,
    "language": "Scala",
    "libraries": [],
    "code": "cmake_minimum_required(VERSION 3.13)\nproject(MyLibrary)\n\nset(CMAKE_BUILD_TYPE \"Release\")\nset(CMAKE_POSITION_INDEPENDENT_CODE ON)\n\nadd_library(MyLibrary SHARED\n    src/mylibrary.cpp\n)\n\n# 设置其他依赖库的路径\nset(LIBRARY_DIR \"/path/to/dependency/libs\")\n\n# 添加其他依赖库\ntarget_link_libraries(MyLibrary PUBLIC\n    ${LIBRARY_DIR}/lib1.so\n    ${LIBRARY_DIR}/lib2.so\n    ${LIBRARY_DIR}/lib3.so\n)\n\ntarget_include_directories(MyLibrary PUBLIC\n    include\n    ${LIBRARY_DIR}/includes1\n    ${LIBRARY_DIR}/includes2\n)",
    "filename": "75069f6183a549865bb58de4a7cd9c84_5.scala"
  },
  {
    "conversation_hash": "75069f6183a549865bb58de4a7cd9c84",
    "code_index": 6,
    "language": "Scala",
    "libraries": [],
    "code": "cmake_minimum_required(VERSION 3.13)\nproject(MyLibrary)\n\nset(CMAKE_BUILD_TYPE \"Release\")\nset(CMAKE_POSITION_INDEPENDENT_CODE ON)\n\n# 添加静态库的路径\nset(STATIC_LIBRARY_DIR \"/path/to/static/lib\")\n\n# 添加静态库\nadd_library(StaticLibrary STATIC\n    ${STATIC_LIBRARY_DIR}/lib1.cpp\n    ${STATIC_LIBRARY_DIR}/lib2.cpp\n)\n\ntarget_include_directories(StaticLibrary PUBLIC\n    ${STATIC_LIBRARY_DIR}/includes\n)\n\nadd_library(MyLibrary SHARED\n    src/mylibrary.cpp\n)\n\n# 设置链接选项\ntarget_link_libraries(MyLibrary PUBLIC\n    StaticLibrary\n)\n\ntarget_include_directories(MyLibrary PUBLIC\n    include\n)",
    "filename": "75069f6183a549865bb58de4a7cd9c84_6.scala"
  },
  {
    "conversation_hash": "353957890fab866044e851417a2c361a",
    "code_index": 4,
    "language": "Scala",
    "libraries": [],
    "code": "interface Animal {\n  name: string;\n  age: number;\n}\n\ninterface Dog extends Animal {}",
    "filename": "353957890fab866044e851417a2c361a_4.scala"
  },
  {
    "conversation_hash": "353957890fab866044e851417a2c361a",
    "code_index": 5,
    "language": "Scala",
    "libraries": [],
    "code": "interface Animal {\n  name: string;\n  age: number;\n}\n\ninterface Dog extends Animal {}",
    "filename": "353957890fab866044e851417a2c361a_5.scala"
  },
  {
    "conversation_hash": "350fce3a64ede2a0c7650b15cd36da7f",
    "code_index": 2,
    "language": "Scala",
    "libraries": [],
    "code": "Concurrent(\n    ForAll(\n        varDuplicateSuppliers,\n        Relate(ThisRecord, Supplier)\n    )\n)",
    "filename": "350fce3a64ede2a0c7650b15cd36da7f_2.scala"
  },
  {
    "conversation_hash": "cf6e8d62093d1984651baf085b7b0b3b",
    "code_index": 8,
    "language": "Scala",
    "libraries": [],
    "code": "ENTRY(_start)\n\nSECTIONS\n{\n  . = 0x0;\n  .text : { *(.text) }\n  .data : { *(.data) }\n  .bss : { *(.bss) }\n  \n  .mpu_config :\n  {\n    KEEP(*(.mpu_config))\n  } : > mpu_region\n}",
    "filename": "cf6e8d62093d1984651baf085b7b0b3b_8.scala"
  },
  {
    "conversation_hash": "3879765c443edaba77ed44e96f1ebe3f",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "constructor(uint64 subscriptionId) VRFConsumerBaseV2(vrfCoordinator) {\n    ...\n    s_subscriptionId = subscriptionId;\n    ...\n}",
    "filename": "3879765c443edaba77ed44e96f1ebe3f_1.scala"
  },
  {
    "conversation_hash": "e1a14b626d73ab50f41f998fb70358cf",
    "code_index": 2,
    "language": "Scala",
    "libraries": [],
    "code": "# src/graphql/schema.graphql\n     \n     type Mutation {\n       uploadImage(file: UploadFileInput!): String!\n     }",
    "filename": "e1a14b626d73ab50f41f998fb70358cf_2.scala"
  },
  {
    "conversation_hash": "e1a14b626d73ab50f41f998fb70358cf",
    "code_index": 3,
    "language": "Scala",
    "libraries": [],
    "code": "// src/prisma/models/image.model.ts\n     \n     import { ObjectType, Field } from '@nestjs/graphql';\n     \n     @ObjectType()\n     export class Image {\n       @Field()\n       id: number;\n     \n       @Field()\n       imageUrl: string;\n     }",
    "filename": "e1a14b626d73ab50f41f998fb70358cf_3.scala"
  },
  {
    "conversation_hash": "e1a14b626d73ab50f41f998fb70358cf",
    "code_index": 4,
    "language": "Scala",
    "libraries": [],
    "code": "// prisma/schema.prisma\n     \n     model Image {\n       id        Int      @id @default(autoincrement())\n       imageUrl  String\n     }",
    "filename": "e1a14b626d73ab50f41f998fb70358cf_4.scala"
  },
  {
    "conversation_hash": "beb6e81c231b2c728251a88dc259fc7c",
    "code_index": 6,
    "language": "Scala",
    "libraries": [],
    "code": "3\nabc\ndef\nghi\n2\n12\n34",
    "filename": "beb6e81c231b2c728251a88dc259fc7c_6.scala"
  },
  {
    "conversation_hash": "beb6e81c231b2c728251a88dc259fc7c",
    "code_index": 10,
    "language": "Scala",
    "libraries": [],
    "code": "2\n3\nabc\ndef\n2\n12\n34",
    "filename": "beb6e81c231b2c728251a88dc259fc7c_10.scala"
  },
  {
    "conversation_hash": "beb6e81c231b2c728251a88dc259fc7c",
    "code_index": 14,
    "language": "Scala",
    "libraries": [],
    "code": "2\n3\nabc\ndef\n2\n12\n34",
    "filename": "beb6e81c231b2c728251a88dc259fc7c_14.scala"
  },
  {
    "conversation_hash": "8ebb5f50142fd4740b8bf49b0a48e6da",
    "code_index": 9,
    "language": "Scala",
    "libraries": [],
    "code": "value  percentile\n0    1.0        10.0\n1    2.0        20.0\n2    3.0        30.0\n3    4.0        40.0\n4    NaN         NaN\n5    6.0        60.0\n6    7.0        70.0\n7    NaN         NaN\n8    9.0        90.0\n9   10.0       100.0",
    "filename": "8ebb5f50142fd4740b8bf49b0a48e6da_9.scala"
  },
  {
    "conversation_hash": "8ebb5f50142fd4740b8bf49b0a48e6da",
    "code_index": 11,
    "language": "Scala",
    "libraries": [],
    "code": "value  percentile\n0    1.0        10.0\n1    2.0        20.0\n2    3.0        30.0\n3    4.0        40.0\n4    NaN         NaN\n5    6.0        60.0\n6    7.0        70.0\n7    NaN         NaN\n8    9.0        90.0\n9   10.0       100.0",
    "filename": "8ebb5f50142fd4740b8bf49b0a48e6da_11.scala"
  },
  {
    "conversation_hash": "ca472704b5e02799b3be2a3cb7eb0b91",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "import 'package:mockito/mockito.dart';\n\nclass MockBankBasicSpend extends Mock implements IBankBasicSpend {\n  @override\n  double get funds => 100.0; // Change this to your desired initial funds value\n\n  @override\n  bool spend(double amount) {\n    // Add your desired logic/mock behavior here\n    return true; // Change this to your desired return value\n  }\n}",
    "filename": "ca472704b5e02799b3be2a3cb7eb0b91_0.scala"
  },
  {
    "conversation_hash": "81825d802b51e23fc6ec98d3b9a4802c",
    "code_index": 3,
    "language": "Scala",
    "libraries": [],
    "code": "import 'package:flutter/material.dart';\nimport 'package:webview_flutter/webview_flutter.dart';\n\nclass PdfViewScreen extends StatelessWidget {\n  @override\n  Widget build(BuildContext context) {\n    return Scaffold(\n      appBar: AppBar(\n        title: Text('PDF Viewer'),\n      ),\n      body: WebView(\n        initialUrl: 'https://example.com/sample.pdf', // 表示したいPDFファイルのURL\n        javascriptMode: JavascriptMode.unrestricted,\n      ),\n    );\n  }\n}",
    "filename": "81825d802b51e23fc6ec98d3b9a4802c_3.scala"
  },
  {
    "conversation_hash": "c0180664720387197093c3313b00edab",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "TTT\n       TTT\n   TTTTTTTTTTT\n       TTT\n       TTT\n       TTT",
    "filename": "c0180664720387197093c3313b00edab_0.scala"
  },
  {
    "conversation_hash": "c5677f44029ff3ace441c27a480a7e3e",
    "code_index": 0,
    "language": "Scala",
    "libraries": [
      "org.apache.tinkerpop.gremlin.structure.util.GraphFactory",
      "org.janusgraph.core.JanusGraph"
    ],
    "code": "import org.apache.tinkerpop.gremlin.structure.util.GraphFactory\nimport org.janusgraph.core.JanusGraph\n\nval conf = new org.apache.commons.configuration.BaseConfiguration()\nconf.setProperty(\"storage.backend\", \"inmemory\") // replace with your actual storage backend configuration\nconf.setProperty(\"index.search.backend\", \"elasticsearch\") // replace with your actual indexing backend configuration\nconf.setProperty(\"index.search.hostname\", \"localhost\") // replace with your actual indexing hostname\n\nval graph: JanusGraph = GraphFactory.open(conf)",
    "filename": "c5677f44029ff3ace441c27a480a7e3e_0.scala"
  },
  {
    "conversation_hash": "c5677f44029ff3ace441c27a480a7e3e",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "val vertices = List(\n  (\"person1\", \"name\", \"John\"),\n  (\"person2\", \"name\", \"Jane\")\n)\n\nval edges = List(\n  (\"person1\", \"knows\", \"person2\")\n)",
    "filename": "c5677f44029ff3ace441c27a480a7e3e_1.scala"
  },
  {
    "conversation_hash": "c5677f44029ff3ace441c27a480a7e3e",
    "code_index": 2,
    "language": "Scala",
    "libraries": [
      "org.apache.tinkerpop.gremlin.structure.Edge",
      "org.apache.tinkerpop.gremlin.structure.Vertex"
    ],
    "code": "import org.apache.tinkerpop.gremlin.structure.Vertex\nimport org.apache.tinkerpop.gremlin.structure.Edge\n\nval tx = graph.newTransaction()\ntry {\n   vertices.foreach { case (id, label, value) =>\n     val vertex: Vertex = tx.addVertex(label)\n     vertex.property(\"id\", id)\n     vertex.property(\"name\", value)\n   }\n\n   edges.foreach { case (outV, label, inV) =>\n     val outVertex = tx.traversal().V().has(\"id\", outV).next()\n     val inVertex = tx.traversal().V().has(\"id\", inV).next()\n     val edge: Edge = outVertex.addEdge(label, inVertex)\n   }\n\n   tx.commit()\n} catch {\n   case e: Exception =>\n     tx.rollback()\n     throw e\n} finally {\n   tx.close()\n}",
    "filename": "c5677f44029ff3ace441c27a480a7e3e_2.scala"
  },
  {
    "conversation_hash": "897819886eb4ff18cc53209cd887a684",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "<List\n  bordered\n  dataSource={dita}\n  renderItem={(item) => (\n    <List.Item key={item.id}>\n      <Typography.Text mark>[ITEM]</Typography.Text> {item.txt}\n    </List.Item>\n  )}\n/>",
    "filename": "897819886eb4ff18cc53209cd887a684_0.scala"
  },
  {
    "conversation_hash": "25097a8ac40097f36c814ede432869c9",
    "code_index": 4,
    "language": "Scala",
    "libraries": [],
    "code": "class MyPage extends StatelessWidget {\n  @override\n  Widget build(BuildContext context) {\n    return Scaffold(\n      appBar: AppBar(\n        title: Text('Hero Animation Example'),\n      ),\n      body: Container(\n        child: Column(\n          children: [\n            Hero(\n              tag: 'imageHero1',\n              child: Image.asset('assets/image1.jpg'),\n            ),\n            SizedBox(height: 20),\n            Hero(\n              tag: 'imageHero2',\n              child: Image.asset('assets/image2.jpg'),\n            ),\n          ],\n        ),\n      ),\n    );\n  }\n}",
    "filename": "25097a8ac40097f36c814ede432869c9_4.scala"
  },
  {
    "conversation_hash": "25097a8ac40097f36c814ede432869c9",
    "code_index": 5,
    "language": "Scala",
    "libraries": [],
    "code": "class MyHomePage extends StatelessWidget {\n  @override\n  Widget build(BuildContext context) {\n    return Scaffold(\n      appBar: AppBar(\n        title: Text('Home Page'),\n      ),\n      body: Center(\n        child: InkWell(\n          onTap: () {\n            Navigator.push(\n              context,\n              MaterialPageRoute(\n                builder: (context) => MyPDFViewer(),\n              ),\n            );\n          },\n          child: Hero(\n            tag: 'pdfHero', // Unique tag for the Hero widget\n            child: Container(\n              width: 200,\n              height: 200,\n              decoration: BoxDecoration(\n                image: DecorationImage(\n                  image: AssetImage('assets/pdf_icon.png'),\n                  fit: BoxFit.contain,\n                ),\n              ),\n            ),\n          ),\n        ),\n      ),\n    );\n  }\n}\n\nclass MyPDFViewer extends StatelessWidget {\n  @override\n  Widget build(BuildContext context) {\n    return Scaffold(\n      appBar: AppBar(\n        title: Text('PDF Viewer'),\n      ),\n      body: Center(\n        child: Hero(\n          tag: 'pdfHero', // Same unique tag as in MyHomePage\n          child: Container(\n            width: 300,\n            height: 300,\n            decoration: BoxDecoration(\n              image: DecorationImage(\n                image: AssetImage('assets/pdf_preview.png'),\n                fit: BoxFit.contain,\n              ),\n            ),\n          ),\n        ),\n      ),\n    );\n  }\n}",
    "filename": "25097a8ac40097f36c814ede432869c9_5.scala"
  },
  {
    "conversation_hash": "25097a8ac40097f36c814ede432869c9",
    "code_index": 6,
    "language": "Scala",
    "libraries": [],
    "code": "class MyHomePage extends StatelessWidget {\n  @override\n  Widget build(BuildContext context) {\n    return Scaffold(\n      appBar: AppBar(\n        title: Text('Home Page'),\n      ),\n      body: Center(\n        child: InkWell(\n          onTap: () {\n            Navigator.push(\n              context,\n              MaterialPageRoute(\n                builder: (context) => MyPDFViewer(),\n              ),\n            );\n          },\n          child: Container(\n            width: 200,\n            height: 200,\n            decoration: BoxDecoration(\n              image: DecorationImage(\n                image: AssetImage('assets/pdf_icon.png'),\n                fit: BoxFit.contain,\n              ),\n            ),\n          ),\n        ),\n      ),\n    );\n  }\n}\n\nclass MyPDFViewer extends StatelessWidget {\n  @override\n  Widget build(BuildContext context) {\n    return Scaffold(\n      appBar: AppBar(\n        title: Text('PDF Viewer'),\n      ),\n      body: Center(\n        child: Container(\n          width: 300,\n          height: 300,\n          decoration: BoxDecoration(\n            image: DecorationImage(\n              image: AssetImage('assets/pdf_preview.png'),\n              fit: BoxFit.contain,\n            ),\n          ),\n        ),\n      ),\n    );\n  }\n}",
    "filename": "25097a8ac40097f36c814ede432869c9_6.scala"
  },
  {
    "conversation_hash": "f03871c48067f6567cfdb20e75653d90",
    "code_index": 3,
    "language": "Scala",
    "libraries": [],
    "code": "class MyApp extends StatelessWidget {\n  @override\n  Widget build(BuildContext context) {\n    return MaterialApp(\n      // ...\n      home: CustomPDFViewer(\n        pdfUrl: 'https://example.com/path/to/your/pdf.pdf',\n      ),\n    );\n  }\n}",
    "filename": "f03871c48067f6567cfdb20e75653d90_3.scala"
  },
  {
    "conversation_hash": "f03871c48067f6567cfdb20e75653d90",
    "code_index": 7,
    "language": "Scala",
    "libraries": [],
    "code": "class MyApp extends StatelessWidget {\n  @override\n  Widget build(BuildContext context) {\n    return MaterialApp(\n      // ...\n      home: CustomPDFViewer(\n        pdfUrl: 'https://example.com/path/to/your/pdf.pdf',\n      ),\n    );\n  }\n}",
    "filename": "f03871c48067f6567cfdb20e75653d90_7.scala"
  },
  {
    "conversation_hash": "f03871c48067f6567cfdb20e75653d90",
    "code_index": 11,
    "language": "Scala",
    "libraries": [],
    "code": "class MyApp extends StatelessWidget {\n  @override\n  Widget build(BuildContext context) {\n    return MaterialApp(\n      // ...\n      home: PDFViewerWeb(\n        pdfUrl: 'https://example.com/path/to/your/pdf.pdf',\n      ),\n    );\n  }\n}",
    "filename": "f03871c48067f6567cfdb20e75653d90_11.scala"
  },
  {
    "conversation_hash": "bf48d3f87fc3d6c156d269e30229c31c",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "db.collection.updateMany(\n  {\n    \"coming_soon\": true,\n    \"fecha_lanzamiento\": { $lt: ISODate(\"2022-06-01\") }\n  },\n  {\n    $set: { \"coming_soon\": false }\n  }\n)",
    "filename": "bf48d3f87fc3d6c156d269e30229c31c_0.scala"
  },
  {
    "conversation_hash": "5fdd2a380a7b85446773b74f2932049e",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "service firebase.storage {\n       match /b/{bucket}/o {\n         match /{allPaths=**} {\n           allow read, write: if request.method == \"OPTIONS\";\n           allow read, write: if true;\n         }\n       }\n     }",
    "filename": "5fdd2a380a7b85446773b74f2932049e_1.scala"
  },
  {
    "conversation_hash": "1ea83093e45c31c1df1ba7197590923f",
    "code_index": 2,
    "language": "Scala",
    "libraries": [],
    "code": "<dependency>\n    <groupId>org.apache.commons</groupId>\n    <artifactId>commons-dbcp2</artifactId>\n    <version>2.8.0</version>\n</dependency>",
    "filename": "1ea83093e45c31c1df1ba7197590923f_2.scala"
  },
  {
    "conversation_hash": "c00552691c8ee8a8ebe9b23647d0a34f",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "// schema.prisma\n\nmodel Post {\n  id         Int      @id @default(autoincrement())\n  createdAt  DateTime @default(now())\n  updatedAt  DateTime @updatedAt\n  // Các cột khác ...\n}",
    "filename": "c00552691c8ee8a8ebe9b23647d0a34f_0.scala"
  },
  {
    "conversation_hash": "cf6981de4a6085137ff8699819159092",
    "code_index": 2,
    "language": "Scala",
    "libraries": [],
    "code": "class MyApp extends StatelessWidget {\n  @override\n  Widget build(BuildContext context) {\n    return MaterialApp(\n      home: Scaffold(\n        appBar: AppBar(\n          title: Text(\"My App Title\"),\n        ),\n        body: Container(\n          child: Text(\"Hello, World!\"),\n        ),\n      ),\n    );\n  }\n}",
    "filename": "cf6981de4a6085137ff8699819159092_2.scala"
  },
  {
    "conversation_hash": "90017ea540dd8058b6e47aa0a04783cd",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "// main.dart\n\nimport 'package:flutter/material.dart';\n\nimport 'dropdown_search_widget.dart';\n\nvoid main() {\n  runApp(MyApp());\n}\n\nclass MyApp extends StatelessWidget {\n  @override\n  Widget build(BuildContext context) {\n    return MaterialApp(\n      home: Scaffold(\n        appBar: AppBar(\n          title: Text('DropdownSearch Example'),\n        ),\n        body: Center(\n          child: Column(\n            mainAxisAlignment: MainAxisAlignment.center,\n            children: [\n              DropdownSearchWidget(), // Use the DropdownSearchWidget\n              ElevatedButton(\n                onPressed: () {\n                  // Change the selected item\n                  setSelectedItem(ArabicEnglish('New Item'));\n                },\n                child: Text('Change Selected Item'),\n              ),\n            ],\n          ),\n        ),\n      ),\n    );\n  }\n}",
    "filename": "90017ea540dd8058b6e47aa0a04783cd_1.scala"
  },
  {
    "conversation_hash": "fda70f2ff6332a87c94fcba1815e67b5",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "-- Create the HTML5 canvas object\nput the rect of stack \"yourStackName\" into tRect\nset the htmlText of stack \"yourStackName\" to \"<canvas id='musicStaffCanvas' width='\" & item 3 of tRect & \"' height='\" & item 4 of tRect & \"'></canvas>\"\n\n-- Get the canvas object\nput revBrowserOpenStack(\"yourStackName\") into tBrowserID\nput revBrowserGetNativeField(tBrowserID, \"document\") into tDoc\nput tDoc[\"musicStaffCanvas\"] into tCanvasObj\n\n-- Set up the canvas context and drawing options\nput tCanvasObj.getContext(\"2d\") into tCtx\nput \"black\" into tCtx.fillStyle\nput 2 into tCtx.lineWidth\n\n-- Set up the staff position and dimensions\nput 50 into tStaffX\nput 50 into tStaffY\nput 300 into tStaffWidth\nput 5 into tStaffHeight\n\n-- Draw the staff lines\nput tStaffY into tLineY\nput tStaffHeight / 4 into tSpacing\n\nrepeat with i = 1 to 5\n   tCtx.moveTo(tStaffX, tLineY)\n   tCtx.lineTo(tStaffX + tStaffWidth, tLineY)\n   tCtx.stroke()\n   add tSpacing to tLineY\nend repeat",
    "filename": "fda70f2ff6332a87c94fcba1815e67b5_1.scala"
  },
  {
    "conversation_hash": "fda70f2ff6332a87c94fcba1815e67b5",
    "code_index": 2,
    "language": "Scala",
    "libraries": [],
    "code": "-- Create the HTML5 canvas object\nput the rect of stack \"yourStackName\" into tRect\nset the htmlText of stack \"yourStackName\" to \"<canvas id='musicStaffCanvas' width='\" & item 3 of tRect & \"' height='\" & item 4 of tRect & \"'></canvas>\"\n\n-- Get the canvas object\nput revBrowserOpenStack(\"yourStackName\") into tBrowserID\nput revBrowserGetNativeField(tBrowserID, \"document\") into tDoc\nput tDoc[\"musicStaffCanvas\"] into tCanvasObj\n\n-- Set up the canvas context and drawing options\nput tCanvasObj.getContext(\"2d\") into tCtx\nput \"black\" into tCtx.fillStyle\nput 2 into tCtx.lineWidth\n\n-- Set up the staff position and dimensions\nput 50 into tStaffX\nput 50 into tStaffY\nput 300 into tStaffWidth\nput 5 into tStaffHeight\n\n-- Draw the staff lines\nput tStaffY into tLineY\nput tStaffHeight / 4 into tSpacing\n\nrepeat with i = 1 to 5\n   -- Move to the start of the line\n   tCtx.moveTo tStaffX, tLineY\n   -- Draw a line to the end of the line\n   tCtx.lineTo tStaffX + tStaffWidth, tLineY\n   -- Stroke the path to actually render the line\n   tCtx.stroke()\n   -- Adjust the y position for the next line\n   add tSpacing to tLineY\nend repeat",
    "filename": "fda70f2ff6332a87c94fcba1815e67b5_2.scala"
  },
  {
    "conversation_hash": "fda70f2ff6332a87c94fcba1815e67b5",
    "code_index": 3,
    "language": "Scala",
    "libraries": [],
    "code": "-- Create the HTML5 canvas object\nput the rect of stack \"yourStackName\" into tRect\nset the htmlText of stack \"yourStackName\" to \"<canvas id='musicStaffCanvas' width='\" & item 3 of tRect & \"' height='\" & item 4 of tRect & \"'></canvas>\"\n\n-- Get the canvas object\nput revBrowserOpenStack(\"yourStackName\") into tBrowserID\nput revBrowserGetNativeField(tBrowserID, \"document\") into tDoc\nput tDoc[\"musicStaffCanvas\"] into tCanvasObj\n\n-- Set up the canvas context and drawing options\nput tCanvasObj.getContext(\"2d\") into tCtx\nput \"black\" into tCtx.fillStyle\nput 2 into tCtx.lineWidth\n\n-- Set up the staff position and dimensions\nput 50 into tStaffX\nput 50 into tStaffY\nput 300 into tStaffWidth\nput 5 into tStaffHeight\n\n-- Draw the staff lines\nput tStaffY into tLineY\nput tStaffHeight / 4 into tSpacing\n\nrepeat with i = 1 to 5\n   -- Move to the start of the line\n   tCtx.moveTo tStaffX, tLineY\n   -- Draw a line to the end of the line\n   tCtx.lineTo tStaffX + tStaffWidth, tLineY\n   -- Stroke the path to actually render the line\n   tCtx.stroke()\n   -- Adjust the y position for the next line\n   add tSpacing to tLineY\nend repeat",
    "filename": "fda70f2ff6332a87c94fcba1815e67b5_3.scala"
  },
  {
    "conversation_hash": "25aa08839c12c3c71ec0fab8fc168785",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "export interface IRoomEngine extends INitroManager\n{\n    // ...\n\n    isRestricted: boolean;\n\n    // ...\n}",
    "filename": "25aa08839c12c3c71ec0fab8fc168785_1.scala"
  },
  {
    "conversation_hash": "17c66a4b30ef58fe8aa57293451743da",
    "code_index": 2,
    "language": "Scala",
    "libraries": [],
    "code": "<RadioGroup onChange={handleRadioChange}>\n  <Radio label=\"Option 1\" value=\"option1\" />\n  <Radio label=\"Option 2\" value=\"option2\" />\n  <Radio label=\"Option 3\" value=\"option3\" />\n</RadioGroup>",
    "filename": "17c66a4b30ef58fe8aa57293451743da_2.scala"
  },
  {
    "conversation_hash": "b44170cbd841f38123616676317d4eca",
    "code_index": 10,
    "language": "Scala",
    "libraries": [],
    "code": "<xctk:PropertyGrid SelectedObject=\"{Binding YourObject}\">\n    <xctk:PropertyGrid.PropertyDefinitions>\n        <xctk:PropertyDefinition Name=\"YourProperty\" EditorTemplate=\"{StaticResource EnumDescriptionTemplate}\" />\n    </xctk:PropertyGrid.PropertyDefinitions>\n</xctk:PropertyGrid>",
    "filename": "b44170cbd841f38123616676317d4eca_10.scala"
  },
  {
    "conversation_hash": "b44170cbd841f38123616676317d4eca",
    "code_index": 13,
    "language": "Scala",
    "libraries": [],
    "code": "<xctk:PropertyGrid SelectedObject=\"{Binding YourObject}\">\n    <xctk:PropertyGrid.PropertyDefinitions>\n        <xctk:PropertyDefinition Name=\"YourProperty\" EditorTemplate=\"{StaticResource EnumDescriptionTemplate}\" />\n    </xctk:PropertyGrid.PropertyDefinitions>\n</xctk:PropertyGrid>",
    "filename": "b44170cbd841f38123616676317d4eca_13.scala"
  },
  {
    "conversation_hash": "bb52bf3b1a527948f926a64df9ee38c4",
    "code_index": 10,
    "language": "Scala",
    "libraries": [
      "androidx.compose.material.Button",
      "androidx.compose.material.Scaffold",
      "androidx.compose.material.ScaffoldState",
      "androidx.compose.material.SnackbarHostState",
      "androidx.compose.material.Text",
      "androidx.compose.runtime.Composable",
      "androidx.compose.runtime.LaunchedEffect",
      "androidx.compose.runtime.getValue",
      "androidx.compose.runtime.mutableStateOf",
      "androidx.compose.runtime.setValue"
    ],
    "code": "import androidx.compose.material.Button\nimport androidx.compose.material.Scaffold\nimport androidx.compose.material.Text\nimport androidx.compose.material.SnackbarHostState\nimport androidx.compose.material.ScaffoldState\nimport androidx.compose.runtime.getValue\nimport androidx.compose.runtime.mutableStateOf\nimport androidx.compose.runtime.setValue\nimport androidx.compose.runtime.Composable\nimport androidx.compose.runtime.LaunchedEffect",
    "filename": "bb52bf3b1a527948f926a64df9ee38c4_10.scala"
  },
  {
    "conversation_hash": "e225f3be02c08076b29c9dd40dafd219",
    "code_index": 2,
    "language": "Scala",
    "libraries": [],
    "code": "class PDFViewerApp extends StatelessWidget {\n  @override\n  Widget build(BuildContext context) {\n    return MaterialApp(\n      home: Scaffold(\n        appBar: AppBar(\n          title: Text('PDF Viewer'),\n        ),\n        body: PDF.asset(\n          'assets/sample.pdf', // Replace with your PDF file path\n          height: MediaQuery.of(context).size.height, // Set height based on screen height\n          width: MediaQuery.of(context).size.width, // Set width based on screen width\n        ),\n      ),\n    );\n  }\n}",
    "filename": "e225f3be02c08076b29c9dd40dafd219_2.scala"
  },
  {
    "conversation_hash": "56b04eb465d91711c34f38da55ef56af",
    "code_index": 5,
    "language": "Scala",
    "libraries": [
      "io.sentry.spring.EnableSentry",
      "org.springframework.context.annotation.Configuration"
    ],
    "code": "import org.springframework.context.annotation.Configuration;\nimport io.sentry.spring.EnableSentry;\n\n@Configuration\n@EnableSentry\npublic class AppConfig {\n  // ...\n}",
    "filename": "56b04eb465d91711c34f38da55ef56af_5.scala"
  },
  {
    "conversation_hash": "6c86156b8299b575016bd8f760946aba",
    "code_index": 11,
    "language": "Scala",
    "libraries": [],
    "code": "OnSelect property of SendButton:\nClear(UserInputTxtInput);\nCollect(ChatCollection, { Message: UserInputTxtInput.Text, Sender: \"User\" });\n\nIf(StartsWith(Lower(UserInputTxtInput.Text), \"hello\"),\n    Collect(ChatCollection, { Message: \"Hello! How can I assist you today?\", Sender: \"Chatbot\" })\n    ,\n    If(StartsWith(Lower(UserInputTxtInput.Text), \"goodbye\"),\n        Collect(ChatCollection, { Message: \"Goodbye! Have a great day!\", Sender: \"Chatbot\" })\n        ,\n        Collect(ChatCollection, { Message: \"I'm sorry, but I didn't understand that. Can you please rephrase?\", Sender: \"Chatbot\" })\n    )\n);",
    "filename": "6c86156b8299b575016bd8f760946aba_11.scala"
  },
  {
    "conversation_hash": "8622e1db600a0ce15ee48ba97ec026cc",
    "code_index": 4,
    "language": "Scala",
    "libraries": [],
    "code": "spring.artemis.mode=native\nspring.artemis.host=<your-jms-host>\nspring.artemis.port=<your-jms-port>\nspring.artemis.user=<your-jms-username>\nspring.artemis.password=<your-jms-password>",
    "filename": "8622e1db600a0ce15ee48ba97ec026cc_4.scala"
  },
  {
    "conversation_hash": "f8ef0e1c3c79744ae4da8b9cd8315a93",
    "code_index": 12,
    "language": "Scala",
    "libraries": [],
    "code": "jar {\n    manifest {\n        attributes 'Main-Class': 'com.example.ExamplePlugin'\n    }\n    from {\n        configurations.compileClasspath.collect { it.isDirectory() ? it : zipTree(it) }\n    }\n    with jar\n}",
    "filename": "f8ef0e1c3c79744ae4da8b9cd8315a93_12.scala"
  },
  {
    "conversation_hash": "f8ef0e1c3c79744ae4da8b9cd8315a93",
    "code_index": 14,
    "language": "Scala",
    "libraries": [],
    "code": "dependencies {\n    implementation 'com.example:plugin-api:1.0.0'\n    // Добавьте остальные зависимости плагина\n}\n\njar {\n    manifest {\n        attributes 'Main-Class': 'com.example.ExamplePlugin'\n    }\n    from {\n        configurations.compileClasspath.collect { it.isDirectory() ? it : zipTree(it) }\n    }\n    with jar\n}",
    "filename": "f8ef0e1c3c79744ae4da8b9cd8315a93_14.scala"
  },
  {
    "conversation_hash": "6f5fc72728aa19601df716001a813044",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "export class YourComponent {\n  dataSource: MatTableDataSource<any>;\n  intl: any;\n\n  constructor(private titleCasePipe: TitleCasePipe) {\n    this.intl = {\n      ...this.dataSource.intl,\n      itemsPerPageLabel: (pageSize: number, first: number, last: number, total: number) =>\n        `${first}-${last} ${this.titleCasePipe.transform('из')} ${total}`\n    };\n  }\n}",
    "filename": "6f5fc72728aa19601df716001a813044_1.scala"
  },
  {
    "conversation_hash": "8f732de4669580efa7418094a5081e4c",
    "code_index": 3,
    "language": "Scala",
    "libraries": [],
    "code": "array_name=(\n  value1\n  value2\n  value3\n  ...\n  valueN\n)",
    "filename": "8f732de4669580efa7418094a5081e4c_3.scala"
  },
  {
    "conversation_hash": "ff06f954f8e2a33842431b5ef578d83c",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "Object CalibrationIntervalParams is\n    Field InstrumentType as CatalogRef.<InstrumentTypeCatalog>\n    Field Interval as Number\n    Field Unit as Enumeration.Constant.<CalibrationUnit>    \nEndObject",
    "filename": "ff06f954f8e2a33842431b5ef578d83c_0.scala"
  },
  {
    "conversation_hash": "ff06f954f8e2a33842431b5ef578d83c",
    "code_index": 2,
    "language": "Scala",
    "libraries": [],
    "code": "Form MeasurementEntry is\n    Field InstrumentId as CatalogRef.<InstrumentCatalog>\n    Field MeasurementData as Decimal\n    Field CalibrationDate as Date\n    Field CalibrationStatus as Enumeration.Constant.<CalibrationStatus>\nEndForm\n\nProcedure UpdateCalibrationStatus()\n    // Retrieve calibration interval for the instrument type\n    // Retrieve the last recorded calibration date for the instrument\n    // Calculate the next calibration date based on the interval\n    // Compare the next calibration date with the current date\n    // Update the calibration status accordingly (Due, Overdue, Up to Date)\nEndProcedure",
    "filename": "ff06f954f8e2a33842431b5ef578d83c_2.scala"
  },
  {
    "conversation_hash": "fa0fd06b71d298a1d0de834e8eb08dad",
    "code_index": 2,
    "language": "Scala",
    "libraries": [],
    "code": "def factor = 7\n\nfor (int i = 1; i <= 10; i++) {\n    def result = i * factor\n    println \"$i x $factor = $result\"\n}",
    "filename": "fa0fd06b71d298a1d0de834e8eb08dad_2.scala"
  },
  {
    "conversation_hash": "585ce41bc2c4b60a8c70768e4182d328",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "export class SystemPage {\n  // ...\n\n  readonly buttonDeleteIp: Locator;\n\n  constructor(page: Page) {\n    // ...\n    this.buttonDeleteIp = page.locator('fieldset button');\n    // ...\n  }\n\n  // ...\n}",
    "filename": "585ce41bc2c4b60a8c70768e4182d328_0.scala"
  },
  {
    "conversation_hash": "585ce41bc2c4b60a8c70768e4182d328",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "export class SystemPage {\n  readonly page: Page;\n  readonly buttonEditWhiteList: Locator;\n  readonly buttonDeleteIp: (n: number) => Locator;\n  readonly buttonSave: Locator;\n  readonly buttonAdd: Locator;\n  readonly ipList: Locator;\n\n  constructor(page: Page) {\n    this.page = page;\n    this.buttonEditWhiteList = page.locator('[class^=\"rui-card-module__titleWrapper\"]', { hasText: 'Белый список' }).locator('button');\n    this.buttonDeleteIp = (n: number) => page.locator('fieldset button').nth(n);\n    // ...\n  }\n\n  // ...\n}",
    "filename": "585ce41bc2c4b60a8c70768e4182d328_1.scala"
  },
  {
    "conversation_hash": "585ce41bc2c4b60a8c70768e4182d328",
    "code_index": 2,
    "language": "Scala",
    "libraries": [],
    "code": "export class SystemPage {\n  readonly page: Page;\n  readonly buttonEditWhiteList: Locator;\n  readonly buttonDeleteIp: (n: number) => Locator;\n  readonly buttonSave: Locator;\n  readonly buttonAdd: Locator;\n  readonly ipList: Locator;\n\n  constructor(page: Page) {\n    this.page = page;\n    this.buttonEditWhiteList = page.locator('[class^=\"rui-card-module__titleWrapper\"]', { hasText: 'Белый список' }).locator('button');\n    this.buttonDeleteIp = (n: number) => page.locator('fieldset button').nth(n);\n    // ...\n  }\n\n  // ...\n}",
    "filename": "585ce41bc2c4b60a8c70768e4182d328_2.scala"
  },
  {
    "conversation_hash": "28b54a52f2424cf97edb7b191cb610cc",
    "code_index": 6,
    "language": "Scala",
    "libraries": [
      "io.sentry.SentryOptions",
      "io.sentry.protocol.Breadcrumb",
      "io.sentry.protocol.SentryId",
      "io.sentry.protocol.User",
      "io.sentry.spring.tracing.SentryTransaction"
    ],
    "code": "import io.sentry.SentryOptions;\nimport io.sentry.protocol.Breadcrumb;\nimport io.sentry.protocol.SentryId;\nimport io.sentry.protocol.User;\nimport io.sentry.spring.tracing.SentryTransaction;",
    "filename": "28b54a52f2424cf97edb7b191cb610cc_6.scala"
  },
  {
    "conversation_hash": "ad13fe100f71dfb0c21fb051e59e1eea",
    "code_index": 8,
    "language": "Scala",
    "libraries": [
      "org.apache.spark.sql.SparkSession"
    ],
    "code": "import org.apache.spark.sql.SparkSession\n\nval spark = SparkSession.builder()\n  .appName(\"Example\")\n  .master(\"local\")\n  .getOrCreate()\n\n// 假设有一个 DataFrame，名为 df\nval df = spark.read.format(\"csv\").load(\"path/to/file.csv\")\n\n// 获取 Spark Session\nval session = df.sparkSession",
    "filename": "ad13fe100f71dfb0c21fb051e59e1eea_8.scala"
  },
  {
    "conversation_hash": "84dff8e7da89dded17706337f637a8e8",
    "code_index": 2,
    "language": "Scala",
    "libraries": [],
    "code": "import { AppSettings } from '@ionic-native/app-settings/ngx';\n   \n   // ...\n   \n   @NgModule({\n     // ...\n     providers: [\n       // ...\n       AppSettings,\n       // ...\n     ],\n   })\n   export class AppModule { }",
    "filename": "84dff8e7da89dded17706337f637a8e8_2.scala"
  },
  {
    "conversation_hash": "93c595960360e152e268fc7b3374b5f4",
    "code_index": 4,
    "language": "Scala",
    "libraries": [],
    "code": "import { FilterPipe } from './filter.pipe';\n\n@NgModule({\n  declarations: [\n    FilterPipe\n  ],\n  ...\n})\nexport class AppModule { }",
    "filename": "93c595960360e152e268fc7b3374b5f4_4.scala"
  },
  {
    "conversation_hash": "5b86ca86d973eb8de33169d3a5c565c8",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "val PI = 3.14159  // глобальная переменная PI\n\nclass Circle {\n    companion object {\n        val radius: Int = 5  // глобальная переменная radius, объявленная внутри объекта-компаньона\n    }\n}",
    "filename": "5b86ca86d973eb8de33169d3a5c565c8_1.scala"
  },
  {
    "conversation_hash": "25f0e4d319c03bc87229203dbbb2bbb7",
    "code_index": 9,
    "language": "Scala",
    "libraries": [
      "io.sentry.spring.EnableSentry",
      "org.springframework.context.annotation.Configuration"
    ],
    "code": "import io.sentry.spring.EnableSentry;\nimport org.springframework.context.annotation.Configuration;\n\n@Configuration\n@EnableSentry(tracesSampleRate = 1.0)\npublic class SentryConfig {\n}",
    "filename": "25f0e4d319c03bc87229203dbbb2bbb7_9.scala"
  },
  {
    "conversation_hash": "25f0e4d319c03bc87229203dbbb2bbb7",
    "code_index": 10,
    "language": "Scala",
    "libraries": [
      "io.sentry.spring.EnableSentryExceptionHandling",
      "org.springframework.context.annotation.Configuration"
    ],
    "code": "import io.sentry.spring.EnableSentryExceptionHandling;\nimport org.springframework.context.annotation.Configuration;\n\n@Configuration\n@EnableSentryExceptionHandling\npublic class SentryConfig {\n}",
    "filename": "25f0e4d319c03bc87229203dbbb2bbb7_10.scala"
  },
  {
    "conversation_hash": "1fe581efa5259e5340d01f63ce71984b",
    "code_index": 15,
    "language": "Scala",
    "libraries": [
      "io.sentry.spring.EnableSentryTracing",
      "org.springframework.context.annotation.Configuration"
    ],
    "code": "import io.sentry.spring.EnableSentryTracing;\nimport org.springframework.context.annotation.Configuration;\n\n@Configuration\n@EnableSentryTracing\npublic class SentryConfig {\n    // Дополнительная конфигурация, если необходимо\n}",
    "filename": "1fe581efa5259e5340d01f63ce71984b_15.scala"
  },
  {
    "conversation_hash": "1fe581efa5259e5340d01f63ce71984b",
    "code_index": 17,
    "language": "Scala",
    "libraries": [
      "io.sentry.spring.common.SentryTransactionallyManaged",
      "org.springframework.context.annotation.Configuration"
    ],
    "code": "import io.sentry.spring.common.SentryTransactionallyManaged;\nimport org.springframework.context.annotation.Configuration;\n\n@Configuration\n@SentryTransactionallyManaged\npublic class SentryConfig {\n    // Дополнительная конфигурация, если необходимо\n}",
    "filename": "1fe581efa5259e5340d01f63ce71984b_17.scala"
  },
  {
    "conversation_hash": "17bd3e62d94701de9210d1766eb445a6",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "<ComboBox x:Name=\"comboBoxNumbers\" Width=\"120\" Height=\"25\">\n    <ComboBox.ItemsSource>\n        <x:Array Type=\"{x:Type sys:Int32}\">\n            <sys:Int32>0</sys:Int32>\n            <sys:Int32>1</sys:Int32>\n            <sys:Int32>2</sys:Int32>\n            <sys:Int32>3</sys:Int32>\n            <sys:Int32>4</sys:Int32>\n            <sys:Int32>5</sys:Int32>\n            <sys:Int32>6</sys:Int32>\n            <sys:Int32>7</sys:Int32>\n            <sys:Int32>8</sys:Int32>\n        </x:Array>\n    </ComboBox.ItemsSource>\n</ComboBox>",
    "filename": "17bd3e62d94701de9210d1766eb445a6_0.scala"
  },
  {
    "conversation_hash": "d1898e1e59801a73a5c54b44441278d9",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "val a = 5\nval b = 3\n\nval result = a.plus(b) // result равен 8\n\n// Еще один способ использования метода plus():\nval result2 = a + b // result2 также равен 8",
    "filename": "d1898e1e59801a73a5c54b44441278d9_1.scala"
  },
  {
    "conversation_hash": "a3246f086b91275f119af572a2091745",
    "code_index": 2,
    "language": "Scala",
    "libraries": [
      "android.util.Log"
    ],
    "code": "import android.util.Log\n\n...\n\nLog.d(\"Tag\", \"Debug message\") // Запись отладочного сообщения\nLog.i(\"Tag\", \"Info message\") // Запись информационного сообщения\nLog.e(\"Tag\", \"Error message\") // Запись сообщения об ошибке",
    "filename": "a3246f086b91275f119af572a2091745_2.scala"
  },
  {
    "conversation_hash": "d7d4398458b653537c09a078f2fedda4",
    "code_index": 15,
    "language": "Scala",
    "libraries": [
      "io.sentry.spring.SentryBeanPostProcessor",
      "org.springframework.boot.autoconfigure.condition.ConditionalOnClass",
      "org.springframework.boot.autoconfigure.condition.ConditionalOnProperty",
      "org.springframework.context.annotation.Bean",
      "org.springframework.context.annotation.Configuration"
    ],
    "code": "import io.sentry.spring.SentryBeanPostProcessor;\nimport org.springframework.boot.autoconfigure.condition.ConditionalOnClass;\nimport org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Configuration;\n\n@Configuration\n@ConditionalOnClass({ SentryBeanPostProcessor.class })\n@ConditionalOnProperty(value = \"sentry.performance.enabled\", havingValue = \"true\")\npublic class SentryConfiguration {\n\n    @Bean\n    public SentryBeanPostProcessor sentryBeanPostProcessor() {\n        return new SentryBeanPostProcessor();\n    }\n\n    // Дополнительные настройки и бины, если это необходимо\n}",
    "filename": "d7d4398458b653537c09a078f2fedda4_15.scala"
  },
  {
    "conversation_hash": "1176245c672d1c7c64ef232e943cecb1",
    "code_index": 2,
    "language": "Scala",
    "libraries": [],
    "code": "<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 3 entries, 0 to 2\nData columns (total 3 columns):\nName    3 non-null object\nAge     3 non-null int64\nCity    3 non-null object\ndtypes: int64(1), object(2)\nmemory usage: 200.0+ bytes",
    "filename": "1176245c672d1c7c64ef232e943cecb1_2.scala"
  },
  {
    "conversation_hash": "2d1bd1528335b47bfc2500eb33763c62",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "alias spam_loop \"say_line; wait; spam_loop\"\nalias say_line \"say YourSpamMessageHere\"\n\n// Set the initial delay before spamming\nalias wait \"wait 0.1\"\n\nalias togglespam \"spamon\"\nalias spamon \"spam_loop; alias togglespam spamoff\"\nalias spamoff \"alias togglespam spamon; alias spam wait\"\n\nbind F9 togglespam",
    "filename": "2d1bd1528335b47bfc2500eb33763c62_1.scala"
  },
  {
    "conversation_hash": "6d8525aba6b3c9a20154ff92349b8d3b",
    "code_index": 4,
    "language": "Scala",
    "libraries": [
      "io.sentry.spring.EnableSentry",
      "org.springframework.context.annotation.Configuration"
    ],
    "code": "import io.sentry.spring.EnableSentry;\nimport org.springframework.context.annotation.Configuration;\n\n@Configuration\n@EnableSentry\npublic class SentryConfig {\n    // Дополнительные настройки...\n}",
    "filename": "6d8525aba6b3c9a20154ff92349b8d3b_4.scala"
  },
  {
    "conversation_hash": "bd5b8d220d4a80eea5451c1eead9a130",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "\"Print Line\": {\n   \"prefix\": \"sout\",\n   \"body\": [\n       \"System.out.println($1);\"\n   ],\n   \"description\": \"System.out.println snippet\"\n}",
    "filename": "bd5b8d220d4a80eea5451c1eead9a130_0.scala"
  },
  {
    "conversation_hash": "259886b465fc95d820c236e34831dadf",
    "code_index": 2,
    "language": "Scala",
    "libraries": [
      "javax.xml.bind.annotation.XmlRootElement"
    ],
    "code": "import javax.xml.bind.annotation.XmlRootElement;\n\n@XmlRootElement(name = \"YourWebServiceRequest\")\npublic class YourWebServiceRequest {\n    // Request fields and getters/setters\n}\n\n@XmlRootElement(name = \"YourWebServiceResponse\")\npublic class YourWebServiceResponse {\n    // Response fields and getters/setters\n}",
    "filename": "259886b465fc95d820c236e34831dadf_2.scala"
  },
  {
    "conversation_hash": "0dd74820b31fca06b808f7fdd9eaf2c7",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "export class Task {\n  id: number;\n  title: string;\n  description: string;\n  status: string;\n\n  constructor(element) {\n    this.id = element.id;\n    this.title = element.title;\n    this.description = element.description;\n    this.status = element.status;\n  }\n}",
    "filename": "0dd74820b31fca06b808f7fdd9eaf2c7_0.scala"
  },
  {
    "conversation_hash": "0dd74820b31fca06b808f7fdd9eaf2c7",
    "code_index": 3,
    "language": "Scala",
    "libraries": [],
    "code": "export class TaskModel {\n  id: number;\n  title: string;\n  description: string;\n  status: string;\n\n  constructor(element: Task) {\n    this.id = element.id;\n    this.title = element.title;\n    this.description = element.description;\n    this.status = element.status;\n  }\n}\n\nexport interface Task {\n  id: number;\n  title: string;\n  description: string;\n  status: string;\n}",
    "filename": "0dd74820b31fca06b808f7fdd9eaf2c7_3.scala"
  },
  {
    "conversation_hash": "c6c2c8bece60c96555bb94137f4bf094",
    "code_index": 2,
    "language": "Scala",
    "libraries": [],
    "code": "val recyclerView: RecyclerView = findViewById(R.id.recyclerview)\n\nval layoutManager = LinearLayoutManager(this)\nrecyclerView.layoutManager = layoutManager\n\nval adapter = RecyclerViewAdapter(data) // подставьте свой собственный адаптер и данные\nrecyclerView.adapter = adapter",
    "filename": "c6c2c8bece60c96555bb94137f4bf094_2.scala"
  },
  {
    "conversation_hash": "41aa5837212c2e9d1d1ccd6e623026fa",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "// UserContext.tsx\n    import { createContext } from 'react';\n\n    interface UserContextProps {\n      user: string;\n      setUser: (user: string) => void;\n    }\n\n    const UserContext = createContext<UserContextProps>({\n      user: '',\n      setUser: () => {}\n    });\n\n    export default UserContext;",
    "filename": "41aa5837212c2e9d1d1ccd6e623026fa_0.scala"
  },
  {
    "conversation_hash": "c07e751249cb673fb1eef5eeadfa678d",
    "code_index": 11,
    "language": "Scala",
    "libraries": [],
    "code": "<script setup>\nimport { defineProps } from 'vue'\n\nconst props = defineProps({\n  childData: {\n    type: String,\n    required: true\n  }\n})\n</script>",
    "filename": "c07e751249cb673fb1eef5eeadfa678d_11.scala"
  },
  {
    "conversation_hash": "0e2d4c2b023145aa21a16f866f57b772",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "data class CustomHeaders(\n    @SerializedName(\"header1\")\n    val header1: String,\n\n    @SerializedName(\"header2\")\n    val header2: String,\n\n    // Add more headers as needed\n)",
    "filename": "0e2d4c2b023145aa21a16f866f57b772_0.scala"
  },
  {
    "conversation_hash": "0e2d4c2b023145aa21a16f866f57b772",
    "code_index": 2,
    "language": "Scala",
    "libraries": [],
    "code": "val retrofit = Retrofit.Builder()\n    .baseUrl(\"your_base_url\")\n    .addConverterFactory(GsonConverterFactory.create())\n    .build()\n\nval apiService = retrofit.create(ApiService::class.java)\nval response = apiService.getHeaders()\n\nif (response.isSuccessful) {\n    val customHeaders = response.body()\n    \n    // Access the desired headers\n    val header1Value = customHeaders?.header1\n    val header2Value = customHeaders?.header2\n} else {\n    // Handle error\n}",
    "filename": "0e2d4c2b023145aa21a16f866f57b772_2.scala"
  },
  {
    "conversation_hash": "270be3673b47ca055bc47eba69ed2c5b",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "export class YourComponent implements AfterViewChecked {\n     ngAfterViewChecked() {\n       // Code to check rendered HTML templates\n     }\n   }",
    "filename": "270be3673b47ca055bc47eba69ed2c5b_1.scala"
  },
  {
    "conversation_hash": "09ff2359b17ffd04152a8f09978aa0e0",
    "code_index": 8,
    "language": "Scala",
    "libraries": [],
    "code": "type Query {\n  user(id: ID!): User @auth\n}\n\ntype Mutation {\n  updateUser(id: ID!, input: UpdateUserInput!): User @auth\n}",
    "filename": "09ff2359b17ffd04152a8f09978aa0e0_8.scala"
  },
  {
    "conversation_hash": "e23b41aa810c694af6fabb28b6e439e4",
    "code_index": 0,
    "language": "Scala",
    "libraries": [
      "org.apache.spark.sql."
    ],
    "code": "import org.apache.spark.sql.{SparkSession, DataFrame}\n\n// 创建SparkSession对象\nval spark = SparkSession.builder()\n  .appName(\"Read Multiple Tables\")\n  .config(\"spark.master\", \"local\")\n  .getOrCreate()\n\n// 定义需要读取的表名\nval tableNames = Array(\"table1\", \"table2\", \"table3\")\n\n// 创建一个空的DataFrame，用于存储所有表的数据\nvar resultDf: DataFrame = spark.emptyDataFrame\n\n// 循环读取每个表的数据，并将它们合并到resultDf中\nfor (tableName <- tableNames) {\n  val df = spark.read\n    .format(\"jdbc\")\n    .option(\"url\", \"jdbc:mysql://localhost:3306/mydatabase\")\n    .option(\"dbtable\", tableName)\n    .option(\"user\", \"myuser\")\n    .option(\"password\", \"mypassword\")\n    .load()\n\n  resultDf = resultDf.union(df)\n}\n\n// 打印合并后的结果\nresultDf.show()",
    "filename": "e23b41aa810c694af6fabb28b6e439e4_0.scala"
  },
  {
    "conversation_hash": "6ac2ee56ccb25ca70370efbda265fbd3",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "class Vehicle:\n  make\n  model\n\nclass Car extends Vehicle:\n  numDoors\n\nclass Bike extends Vehicle:\n  numWheels\n\nclass Truck extends Vehicle:\n  cargoCapacity",
    "filename": "6ac2ee56ccb25ca70370efbda265fbd3_1.scala"
  },
  {
    "conversation_hash": "c6ea53e9a578176496df1df7602b87d1",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "<set xmlns:android=\"http://schemas.android.com/apk/res/android\">\n    <objectAnimator\n        android:propertyName=\"scaleX\"\n        android:duration=\"200\"\n        android:valueTo=\"1.2\"\n        android:valueType=\"floatType\"\n        android:interpolator=\"@android:anim/accelerate_decelerate_interpolator\"/>\n    <objectAnimator\n        android:propertyName=\"scaleY\"\n        android:duration=\"200\"\n        android:valueTo=\"1.2\"\n        android:valueType=\"floatType\"\n        android:interpolator=\"@android:anim/accelerate_decelerate_interpolator\"/>\n</set>",
    "filename": "c6ea53e9a578176496df1df7602b87d1_0.scala"
  },
  {
    "conversation_hash": "c6ea53e9a578176496df1df7602b87d1",
    "code_index": 3,
    "language": "Scala",
    "libraries": [],
    "code": "val bottomNavigationView = findViewById<BottomNavigationView>(R.id.bottom_navigation)\n\n// Установка слушателя кликов для элементов BottomNavigationView\nbottomNavigationView.setOnNavigationItemSelectedListener { item ->\n    // Переключение настройки анимации для элемента\n    item.isChecked = true\n\n    // Дополнительный код для обработки выбора элементов\n    ...\n\n    true\n}",
    "filename": "c6ea53e9a578176496df1df7602b87d1_3.scala"
  },
  {
    "conversation_hash": "6dfad6ca564a640cfad52ea7dddaa0e5",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "<androidx.recyclerview.widget.RecyclerView\n    android:id=\"@+id/sliderRecyclerView\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"200dp\"\n    android:clipToPadding=\"false\"\n    android:paddingStart=\"16dp\"\n    android:paddingEnd=\"16dp\"\n    android:background=\"@android:color/white\" />",
    "filename": "6dfad6ca564a640cfad52ea7dddaa0e5_0.scala"
  },
  {
    "conversation_hash": "32d96cb285ddaa70439c40bd2a571a5c",
    "code_index": 3,
    "language": "Scala",
    "libraries": [],
    "code": "val apiService = retrofit.create(ApiService::class.java)\nval suggestions: List<Suggestion> = apiService.getSuggestions()\n\nfor (suggestion in suggestions) {\n    println(suggestion.value)\n}",
    "filename": "32d96cb285ddaa70439c40bd2a571a5c_3.scala"
  },
  {
    "conversation_hash": "5700bcc54842f3ba6e15889ebd454316",
    "code_index": 4,
    "language": "Scala",
    "libraries": [],
    "code": "val slideItems = listOf(\n    SlideItem(\"Slide 1\", \"Description 1\", R.drawable.image1),\n    SlideItem(\"Slide 2\", \"Description 2\", R.drawable.image2),\n    SlideItem(\"Slide 3\", \"Description 3\", R.drawable.image3),\n    SlideItem(\"Slide 4\", \"Description 4\", R.drawable.image4),\n    SlideItem(\"Slide 5\", \"Description 5\", R.drawable.image5)\n)",
    "filename": "5700bcc54842f3ba6e15889ebd454316_4.scala"
  },
  {
    "conversation_hash": "5700bcc54842f3ba6e15889ebd454316",
    "code_index": 5,
    "language": "Scala",
    "libraries": [],
    "code": "companion object {\n    private const val AUTO_SCROLL_DELAY = 4000L // Задержка в миллисекундах (4 секунды)\n}\n\nprivate val scrollHandler = Handler()\nprivate lateinit var scrollRunnable: Runnable",
    "filename": "5700bcc54842f3ba6e15889ebd454316_5.scala"
  },
  {
    "conversation_hash": "4855089786a9a25f093fbd62f30eae57",
    "code_index": 2,
    "language": "Scala",
    "libraries": [],
    "code": "$ vi playbook.yml\n---\n- name: Playbook for deploying chornyd\n  hosts: your_hosts\n  roles:\n    - chornyd",
    "filename": "4855089786a9a25f093fbd62f30eae57_2.scala"
  },
  {
    "conversation_hash": "4855089786a9a25f093fbd62f30eae57",
    "code_index": 8,
    "language": "Scala",
    "libraries": [],
    "code": "$ vi playbook.yml\n---\n- name: Playbook for installing Chrony\n  hosts: your_hosts\n  become: yes\n  roles:\n    - chrony",
    "filename": "4855089786a9a25f093fbd62f30eae57_8.scala"
  },
  {
    "conversation_hash": "7e2f5b70f96dccd349bad75791749092",
    "code_index": 2,
    "language": "Scala",
    "libraries": [],
    "code": "xml\n<TextView\n    android:id=\"@+id/itemNameTextView\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"wrap_content\"\n    android:textSize=\"16sp\"\n    android:padding=\"8dp\"/>",
    "filename": "7e2f5b70f96dccd349bad75791749092_2.scala"
  },
  {
    "conversation_hash": "9646a84d533f38813b7eed570a8b0f21",
    "code_index": 6,
    "language": "Scala",
    "libraries": [],
    "code": "// Importer les bibliothèques nécessaires\nIMPORT \"Cryptage.dll\"\n\n// Fonction de cryptage\nFONCTION CrypterQRCode(texte AS Chaîne, clé AS Chaîne) RENVOYER Chaîne\n    cryptageAES est une Cryptage..AES\n    cryptageAES..Initialise(clé)\n    texteCrypte est une Chaîne = cryptageAES..Crypter(texte)\n    RETOURNE texteCrypte\nFINFONCTION\n\n// Fonction de décryptage\nFONCTION DecrypterQRCode(texteCrypte AS Chaîne, clé AS Chaîne) RENVOYER Chaîne\n    cryptageAES est une Cryptage..AES\n    cryptageAES..Initialise(clé)\n    texteDecrypte est une Chaîne = cryptageAES..Decrypter(texteCrypte)\n    RETOURNE texteDecrypte\nFINFONCTION",
    "filename": "9646a84d533f38813b7eed570a8b0f21_6.scala"
  },
  {
    "conversation_hash": "b943bbf561eb7db18aefc8ee9bb1ac1a",
    "code_index": 3,
    "language": "Scala",
    "libraries": [],
    "code": "import 'package:flutter/material.dart';\n\nvoid main() {\n  runApp(MyApp());\n}\n\nclass MyApp extends StatelessWidget {\n  @override\n  Widget build(BuildContext context) {\n    return MaterialApp(\n      home: Scaffold(\n        appBar: AppBar(\n          title: Text('Checkbox Example'),\n        ),\n        body: MyCheckbox(),\n      ),\n    );\n  }\n}\n\nclass MyCheckbox extends StatefulWidget {\n  @override\n  _MyCheckboxState createState() => _MyCheckboxState();\n}\n\nclass _MyCheckboxState extends State<MyCheckbox> {\n  bool isChecked = false;\n\n  @override\n  Widget build(BuildContext context) {\n    return Column(\n      children: [\n        Checkbox(\n          value: isChecked,\n          onChanged: (bool value) {\n            setState(() {\n              isChecked = value;\n            });\n          },\n        ),\n        Text('Checkbox value: $isChecked'),\n      ],\n    );\n  }\n}",
    "filename": "b943bbf561eb7db18aefc8ee9bb1ac1a_3.scala"
  },
  {
    "conversation_hash": "b943bbf561eb7db18aefc8ee9bb1ac1a",
    "code_index": 16,
    "language": "Scala",
    "libraries": [],
    "code": "import 'package:flutter/material.dart';\n\nvoid main() {\n  runApp(MyApp());\n}\n\nclass MyApp extends StatelessWidget {\n  @override\n  Widget build(BuildContext context) {\n    return MaterialApp(\n      home: Scaffold(\n        appBar: AppBar(\n          title: Text('Checkbox Example'),\n        ),\n        body: MyCheckbox(),\n      ),\n    );\n  }\n}\n\nclass MyCheckbox extends StatefulWidget {\n  @override\n  _MyCheckboxState createState() => _MyCheckboxState();\n}\n\nclass _MyCheckboxState extends State<MyCheckbox> {\n  bool isChecked = false;\n\n  @override\n  Widget build(BuildContext context) {\n    return Column(\n      children: [\n        Checkbox(\n          value: isChecked,\n          onChanged: (bool? value) {\n            setState(() {\n              isChecked = value ?? false; // Use null-aware operator (??) to set a default value\n            });\n          },\n        ),\n        Text('Checkbox value: $isChecked'),\n      ],\n    );\n  }\n}",
    "filename": "b943bbf561eb7db18aefc8ee9bb1ac1a_16.scala"
  },
  {
    "conversation_hash": "cd6eac61d17647857431e4646ff0ebd4",
    "code_index": 6,
    "language": "Scala",
    "libraries": [],
    "code": "val lastVisiblePosition = (recyclerView.layoutManager as LinearLayoutManager).findLastVisibleItemPosition()\nif (lastVisiblePosition == Slider_List.size - 1) {\n    recyclerView.smoothScrollToPosition(0)\n} else {\n    recyclerView.smoothScrollToPosition(lastVisiblePosition + 1)\n}",
    "filename": "cd6eac61d17647857431e4646ff0ebd4_6.scala"
  },
  {
    "conversation_hash": "298ca81797cc4496d93c79078399d360",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "db.collection.update(\n   <query>,\n   <update>,\n   {\n     upsert: <boolean>,\n     multi: <boolean>,\n     writeConcern: <document>\n   }\n)",
    "filename": "298ca81797cc4496d93c79078399d360_0.scala"
  },
  {
    "conversation_hash": "4c182f32fe12b9e1c60eb7da7af40acf",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "if (getPackageManager().hasSystemFeature(PackageManager.FEATURE_CAMERA)) {\n    // Camera available on the device\n} else {\n    // Camera not available on the device\n}",
    "filename": "4c182f32fe12b9e1c60eb7da7af40acf_1.scala"
  },
  {
    "conversation_hash": "41fa3cc2ae08f86e3a35daae500d63a9",
    "code_index": 5,
    "language": "Scala",
    "libraries": [],
    "code": "src\n└── main\n    ├── java\n    │   └── com\n    │       └── exemplo\n    │           ├── Qrcode.java\n    │           ├── QrcodeService.java\n    │           └── QrcodeApplication.java\n    └── resources",
    "filename": "41fa3cc2ae08f86e3a35daae500d63a9_5.scala"
  },
  {
    "conversation_hash": "55f479c39c53e5049a354382db11547a",
    "code_index": 3,
    "language": "Scala",
    "libraries": [],
    "code": "<q-input filled placeholder=\"请输入\" v-mode=\"programCode\" outlined dense square lazy-rules\n    :rules=\"[val => val && val.length > 0 || '请输入项目编码']\" clearable></q-input>\n<q-input filled placeholder=\"请输入\" v-mode=\"programName\" outlined dense square lazy-rules\n    :rules=\"[val => val && val.length > 0 || '请输入项目名称']\" clearable></q-input>\n<q-input filled placeholder=\"请输入\" v-mode=\"programEngineer\" outlined dense square lazy-rules\n    :rules=\"[val => val && val.length > 0 || '请输入项目名称']\" clearable></q-input>",
    "filename": "55f479c39c53e5049a354382db11547a_3.scala"
  },
  {
    "conversation_hash": "b5ee4317293c6f33ea2ee9b91ee661a7",
    "code_index": 27,
    "language": "Scala",
    "libraries": [],
    "code": "0    10.0\n1     NaN\n2     8.0\n3     2.0\ndtype: float64",
    "filename": "b5ee4317293c6f33ea2ee9b91ee661a7_27.scala"
  },
  {
    "conversation_hash": "747026f0b8c07f9861466300085d4200",
    "code_index": 2,
    "language": "Scala",
    "libraries": [
      "org.apache.tools.ant.filters."
    ],
    "code": "import org.apache.tools.ant.filters.*\n\nplugins {\n    id(\"com.github.johnrengelman.shadow\") version \"7.0.0\"\n}\n\nrepositories {\n    mavenCentral()\n}\n\ndependencies {\n    implementation(\"net.sf.saxon:Saxon-EE:VERSION_NUMBER\")\n}\n\ntasks.withType<ShadowJar> {\n    configurations = project.configurations\n    manifest.attributes[\"Main-Class\"] = \"your.main.class\"\n    \n    // 将许可证文件包含在生成的 Shadow JAR 中\n    from(resources.filter { it.name == \"license.lic\" }) {\n        into(\"META-INF\")\n        rename(\"license.lic\", \"saxon-license.lic\")\n        filter(ReplaceTokens, tokens: [token: \"LICENSE_KEY\", value: licenseKey]) // 替换许可证文件中的占位符\n    }\n}",
    "filename": "747026f0b8c07f9861466300085d4200_2.scala"
  },
  {
    "conversation_hash": "4982ff42784557f092410f110b406ba0",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "// iframeLoader.js\nimport { LightningElement, api } from 'lwc';\n\nexport default class IframeLoader extends LightningElement {\n    @api iframeUrl;\n}",
    "filename": "4982ff42784557f092410f110b406ba0_1.scala"
  },
  {
    "conversation_hash": "4982ff42784557f092410f110b406ba0",
    "code_index": 3,
    "language": "Scala",
    "libraries": [],
    "code": "// parentComponent.js\nimport { LightningElement, track } from 'lwc';\n\nexport default class ParentComponent extends LightningElement {\n    @track url = 'https://d92d-75-53-9-218.ngrok-free.app/hpmiframe/getParams';\n    // You can update 'url' dynamically based on your requirement\n}",
    "filename": "4982ff42784557f092410f110b406ba0_3.scala"
  },
  {
    "conversation_hash": "659782ebc3cd6dc4eb6853d785521c97",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "<dependency>\n    <groupId>javax.jws</groupId>\n    <artifactId>javax.jws-api</artifactId>\n    <version>1.1</version>\n</dependency>",
    "filename": "659782ebc3cd6dc4eb6853d785521c97_1.scala"
  },
  {
    "conversation_hash": "bab98b7bf48393f9e538bd1094fbff08",
    "code_index": 0,
    "language": "Scala",
    "libraries": [
      "React"
    ],
    "code": "import React, { Component } from 'react';\nimport { PixiComponent } from 'react-pixi-fiber';\n\nclass App extends Component {\n  render() {\n    return (\n      <PixiComponent ref={(ref) => { this.pixiComponent = ref; }}>\n        {/* ваше содержимое */}\n      </PixiComponent>\n    );\n  }\n}\n\nexport default App;",
    "filename": "bab98b7bf48393f9e538bd1094fbff08_0.scala"
  },
  {
    "conversation_hash": "55cba6503c88ff74b60d2388f1e270f4",
    "code_index": 1,
    "language": "Scala",
    "libraries": [
      "runnable"
    ],
    "code": "val runnable: Runnable = Runnable {\n    println(\"Hello, from runnable!\")\n}\n\nval thread = Thread(runnable)\nthread.start()",
    "filename": "55cba6503c88ff74b60d2388f1e270f4_1.scala"
  },
  {
    "conversation_hash": "4a75cf1e328bcb6dd8fcfc2da77ef881",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "val runnable = {\n    for (i in 1..15) {\n        Toast.makeText(this, \"message - > $i\", Toast.LENGTH_SHORT).show()\n    }\n}",
    "filename": "4a75cf1e328bcb6dd8fcfc2da77ef881_1.scala"
  },
  {
    "conversation_hash": "2cd3f88aac19b4465205e400161c63f9",
    "code_index": 0,
    "language": "Scala",
    "libraries": [
      "React"
    ],
    "code": "import React from 'react';\n\nclass NewPage extends React.Component {\n  render() {\n    return (\n      <div>\n        <h1>New Page</h1>\n        {/* Добавьте остальной контент страницы */}\n      </div>\n    );\n  }\n}\n\nexport default NewPage;",
    "filename": "2cd3f88aac19b4465205e400161c63f9_0.scala"
  },
  {
    "conversation_hash": "2cd3f88aac19b4465205e400161c63f9",
    "code_index": 1,
    "language": "Scala",
    "libraries": [
      "HomePage",
      "NewPage",
      "React"
    ],
    "code": "import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\nimport HomePage from './HomePage';\nimport NewPage from './NewPage';\n\nclass App extends React.Component {\n  render() {\n    return (\n      <Router>\n        <Switch>\n          <Route exact path=\"/\" component={HomePage} />\n          <Route path=\"/newpage\" component={NewPage} />\n        </ Switch>\n      </Router>\n    );\n  }\n}\n\nexport default App;",
    "filename": "2cd3f88aac19b4465205e400161c63f9_1.scala"
  },
  {
    "conversation_hash": "ee101e3fc9b5e1dc430398fa54fe3277",
    "code_index": 0,
    "language": "Scala",
    "libraries": [
      "MyComponent",
      "Vue"
    ],
    "code": "// MyComponent.vue\nexport default {\n  data() {\n    return {\n      message: 'Hello, Vue!'\n    }\n  }\n}\n\n// main.js\nimport Vue from 'vue'\nimport MyComponent from './MyComponent.vue'\n\nnew Vue({\n  render: h => h(MyComponent)\n}).$mount('#app')",
    "filename": "ee101e3fc9b5e1dc430398fa54fe3277_0.scala"
  },
  {
    "conversation_hash": "fd8c53c45dc9094f08c6b55a6e1cfe28",
    "code_index": 8,
    "language": "Scala",
    "libraries": [
      "the"
    ],
    "code": "NonPromoDays = \nVAR SelectedStartDate = MIN('Table'[Date])                 -- Store the minimum selected start date from the slicer in a variable\nVAR SelectedEndDate = MAX('Table'[Date])                   -- Store the maximum selected end date from the slicer in a variable\nVAR TotalDays = SELECTEDVALUE(DATEDIFF(SelectedStartDate, SelectedEndDate, DAY))   -- Calculate the total number of selected days\nVAR PromoDays = CALCULATE(\n    COUNTROWS('Table'), \n    'Table'[Date] >= SelectedStartDate && \n    'Table'[Date] <= SelectedEndDate &&\n    ISINSCOPE('Table'[Product]) &&\n    CALCULATE(COUNTROWS('Table'), \n        'Table'[Start Date] <= 'Table'[Date] && \n        'Table'[Final Date] >= 'Table'[Date]) > 0\n)           -- Calculate the number of days with promo within the selected date range\nRETURN\nTotalDays - PromoDays    -- Subtract the number of days with promo from the total number of selected days to get non-promo days",
    "filename": "fd8c53c45dc9094f08c6b55a6e1cfe28_8.scala"
  },
  {
    "conversation_hash": "c0dcf30feabcadb492d94466479dd3dd",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "<dependency>\n    <groupId>org.xerial</groupId>\n    <artifactId>sqlite-jdbc</artifactId>\n    <version>VERSION_NUMBER</version>\n</dependency>",
    "filename": "c0dcf30feabcadb492d94466479dd3dd_0.scala"
  },
  {
    "conversation_hash": "3988424919a04889a14d2b846dfbee19",
    "code_index": 14,
    "language": "Scala",
    "libraries": [],
    "code": "export class ExampleComponent {\n  dynamicValue: string|null = null; // Assign the dynamic value or keep it null if not available\n\n  constructor() {\n    this.dynamicValue = 'Default Value'; // Set a default value for dynamicValue if you want to display a specific value when it is not defined\n  }\n}",
    "filename": "3988424919a04889a14d2b846dfbee19_14.scala"
  },
  {
    "conversation_hash": "661e163a6f13cebd7ba9306b3944992e",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "renderValue={(selected) => (\n  <div>\n    {selected.map((value, index) => (\n      <StyledTag key={value} label={value} option={value} />\n    ))}\n  </div>\n)}",
    "filename": "661e163a6f13cebd7ba9306b3944992e_0.scala"
  },
  {
    "conversation_hash": "661e163a6f13cebd7ba9306b3944992e",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "renderValue={(selected) => (\n  <div>\n    {selected.map((value, index) => (\n      <span key={index}>\n        <StyledTag\n          label={value}\n          option={value}\n          data-tag-index={index} // добавляем свойство data-tag-index\n          tabIndex={0} // добавляем свойство tabIndex\n          onDeletets={() => handleTagDelete(index)} // добавляем обработчик события onDeletets\n        />\n      </span>\n    ))}\n  </div>\n)}",
    "filename": "661e163a6f13cebd7ba9306b3944992e_1.scala"
  },
  {
    "conversation_hash": "86527ebccf1d3b93c4fe2663c54e723e",
    "code_index": 2,
    "language": "Scala",
    "libraries": [],
    "code": "data class Movie(\n    val title: String,\n    val parts: List<MoviePart>\n)\n\ndata class MoviePart(\n    val image: Int,\n    val title: String\n)",
    "filename": "86527ebccf1d3b93c4fe2663c54e723e_2.scala"
  },
  {
    "conversation_hash": "86527ebccf1d3b93c4fe2663c54e723e",
    "code_index": 5,
    "language": "Scala",
    "libraries": [],
    "code": "val movies = listOf(\n    Movie(\n        \"Movie 1\",\n        listOf(\n            MoviePart(R.drawable.movie_part_1, \"Part 1\"),\n            MoviePart(R.drawable.movie_part_2, \"Part 2\"),\n            MoviePart(R.drawable.movie_part_3, \"Part 3\")\n        )\n    ),\n    Movie(\n        \"Movie 2\",\n        listOf(\n            MoviePart(R.drawable.movie_part_4, \"Part 1\"),\n            MoviePart(R.drawable.movie_part_5, \"Part 2\")\n        )\n    )\n)\n\nval movieAdapter = MovieAdapter(movies)\nrecyclerView.adapter = movieAdapter\nrecyclerView.layoutManager = LinearLayoutManager(this)",
    "filename": "86527ebccf1d3b93c4fe2663c54e723e_5.scala"
  },
  {
    "conversation_hash": "2a9021391d8d2cf8900ea647bb0213ca",
    "code_index": 0,
    "language": "Scala",
    "libraries": [
      "android.os.Bundle",
      "android.support.v7.app.AppCompatActivity",
      "android.view.View",
      "android.widget.Button",
      "android.widget.Toast"
    ],
    "code": "import android.support.v7.app.AppCompatActivity;\nimport android.os.Bundle;\nimport android.view.View;\nimport android.widget.Button;\nimport android.widget.Toast;",
    "filename": "2a9021391d8d2cf8900ea647bb0213ca_0.scala"
  },
  {
    "conversation_hash": "49adf743bd14fde873b01e1918f7e361",
    "code_index": 7,
    "language": "Scala",
    "libraries": [],
    "code": "val dataList = listOf(\n    Data(R.drawable.icon1_1, R.drawable.icon1_2),\n    Data(R.drawable.icon2_1, R.drawable.icon2_2),\n    // Добавьте больше элементов данных по необходимости\n)\n\nval recyclerView: RecyclerView = findViewById(R.id.recyclerView)\nval adapter = CustomAdapter(dataList)\nrecyclerView.adapter = adapter\nrecyclerView.layoutManager = LinearLayoutManager(this)",
    "filename": "49adf743bd14fde873b01e1918f7e361_7.scala"
  },
  {
    "conversation_hash": "6ade27f4323fd489333a83603a02000d",
    "code_index": 2,
    "language": "Scala",
    "libraries": [],
    "code": "class CustomRecycleAdapter(\n    private val list: List<CustomDataClass>,\n    private val homeFragment: HomeFragment\n) : RecyclerView.Adapter<CustomRecycleAdapter.ViewHolder>() {\n    // ...\n}",
    "filename": "6ade27f4323fd489333a83603a02000d_2.scala"
  },
  {
    "conversation_hash": "ebccd5f2a90713fb3233de4109900ffa",
    "code_index": 1,
    "language": "Scala",
    "libraries": [
      "dayGridPlugin",
      "interactionPlugin",
      "timeGridPlugin"
    ],
    "code": "import { FullCalendarModule } from '@fullcalendar/angular';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport timeGridPlugin from '@fullcalendar/timegrid';\nimport interactionPlugin from '@fullcalendar/interaction';\n\n@NgModule({\n  imports: [ FullCalendarModule.forRoot({ \n    plugins: [ dayGridPlugin, timeGridPlugin, interactionPlugin ] \n  }) ],\n  // ...\n})\nexport class AppModule { }",
    "filename": "ebccd5f2a90713fb3233de4109900ffa_1.scala"
  },
  {
    "conversation_hash": "d79d355acaab2b33f6ce7af683818b11",
    "code_index": 3,
    "language": "Scala",
    "libraries": [],
    "code": "// MeasureHeight.js\n\nexport default class MeasureHeight {\n   // ...\n\n   activate() {\n      // ...\n   }\n\n   deactivate() {\n      // ...\n   }\n\n   clear() {\n      // ...\n   }\n\n   // 其他需要触发的函数\n   // ...\n}",
    "filename": "d79d355acaab2b33f6ce7af683818b11_3.scala"
  },
  {
    "conversation_hash": "2c83e125d92302f1e386de1ce2079da3",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-product-search',\n  templateUrl: './product-search.component.html',\n  styleUrls: ['./product-search.component.css']\n})\nexport class ProductSearchComponent {\n  minPrice: number;\n  maxPrice: number;\n  searchResults: any[]; // Replace 'any' with your actual product interface or class\n\n  searchProducts() {\n    // Call a service or perform an API request to fetch the products based on the min and max prices\n    // Update the 'searchResults' array with the fetched products\n    // You can use 'HttpClient' for making API calls\n  }\n}",
    "filename": "2c83e125d92302f1e386de1ce2079da3_1.scala"
  },
  {
    "conversation_hash": "0387aa5c6279d02d4286d4db4574e7f3",
    "code_index": 2,
    "language": "Scala",
    "libraries": [],
    "code": "(defun divide (a b)\n  (catch 'division-error\n    (if (zerop b)\n        (throw 'division-error \"Division by zero\")\n        (/ a b))))\n\n(defun test-divide (a b)\n  (format t \"Result: ~A~%\" (divide a b))\n  (format t \"Continuing with other operations.~%\"))\n\n(defun main ()\n  (let ((a 10) (b 0))\n    (handler-case (test-divide a b)\n      (division-error (condition)\n        (format t \"Error: ~A~%\" condition)))))",
    "filename": "0387aa5c6279d02d4286d4db4574e7f3_2.scala"
  },
  {
    "conversation_hash": "8f080a1c61b81b8882fac741955c3f29",
    "code_index": 2,
    "language": "Scala",
    "libraries": [],
    "code": "VAR SummaryTable = \n    SUMMARIZE(\n        'Share16вед',\n        'Payers_clients'[Плательщик:#],\n        'Share16вед'[SCU Code],\n        'Share16вед'[Year],\n        'Share16вед'[Month],\n        \"SUM_TotVol\", SUM('Share16вед'[Итого отгрузка, л.]),           \n        \"SUM_PromoVol\", SUM('Share16вед'[Отгрузка по акции, л.]),       \n        \"SUM_GP\", SUM('Share16вед'[GP with share.byn]),\n        \"SUM_Log\", SUM('Share16вед'[Log with share.byn]),\n        \"SUM_Disc\", SUM('Share16вед'[Отгрузка по акции Discount, BYN]),\n        \"ROI\", (SUM('Share16вед'[GP with share.byn])-SUM('Share16вед'[Log with share.byn]))/SUM('Share16вед'[Отгрузка по акции Discount, BYN])\n    )\n\nVAR FilteredSummaryTable =\n    CALCULATETABLE(\n        SummaryTable,\n        'Share16вед'[SUM_PromoVol] <> 0 && 'Share16вед'[SUM_TotVol] <> 0\n    )\n\nRETURN\n    FilteredSummaryTable",
    "filename": "8f080a1c61b81b8882fac741955c3f29_2.scala"
  },
  {
    "conversation_hash": "c68c55ad3ba3d5f19a140a1472ecb52d",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "<Line\n  type=\"linear\"\n  dataKey=\"profit\"\n  stroke=\"#006943\"\n  strokeWidth={3}\n  dot={(data: ProfitChartWidgetType) => data.dot}\n/>",
    "filename": "c68c55ad3ba3d5f19a140a1472ecb52d_1.scala"
  },
  {
    "conversation_hash": "481bb6cacdc6c8c8269e4d47d9a6b239",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "import { RouterModule } from '@angular/router';\n// Other modules...\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(routes),\n    // Other modules...\n  ],\n  // ...\n})\nexport class AppModule { }",
    "filename": "481bb6cacdc6c8c8269e4d47d9a6b239_1.scala"
  },
  {
    "conversation_hash": "d2bb237057717a7097219cbdc1920d8b",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "export class YourComponent {\n  mainMenuItemsDataSet = [...]; // Your array of menu items\n  allButtonsRendered = false;\n\n  onSelectMenuTabs(tab: any) {\n    // Handle menu tab selection\n  }\n\n  onGoToAllProducts() {\n    // Handle going to all products\n  }\n\n  ngAfterViewInit() {\n    // After the view has been initialized and buttons have been rendered, set the flag to true\n    this.allButtonsRendered = true;\n  }\n}",
    "filename": "d2bb237057717a7097219cbdc1920d8b_1.scala"
  },
  {
    "conversation_hash": "d2bb237057717a7097219cbdc1920d8b",
    "code_index": 3,
    "language": "Scala",
    "libraries": [],
    "code": "export class YourComponent {\n  mainMenuItemsDataSet = [...]; // Your array of menu items\n  isRendered = false;\n\n  onSelectMenuTabs(tab: any) {\n    // Handle menu tab selection\n  }\n\n  onGoToAllProducts() {\n    // Handle going to all products\n  }\n}",
    "filename": "d2bb237057717a7097219cbdc1920d8b_3.scala"
  },
  {
    "conversation_hash": "441626d3bdc6d464e4e142aa81464714",
    "code_index": 0,
    "language": "Scala",
    "libraries": [
      "com.fasterxml.jackson.annotation.JsonIgnoreProperties"
    ],
    "code": "import com.fasterxml.jackson.annotation.JsonIgnoreProperties;\n\n@JsonIgnoreProperties(ignoreUnknown = true)\npublic class YourDataClass {\n   // Поля вашего объекта\n}",
    "filename": "441626d3bdc6d464e4e142aa81464714_0.scala"
  },
  {
    "conversation_hash": "64b532bbfd84f8e71570026036cae9d2",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "<androidx.appcompat.widget.Toolbar\n    android:id=\"@+id/toolbar\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"?attr/actionBarSize\"\n    android:background=\"?attr/colorPrimary\"\n    android:elevation=\"4dp\"\n    android:theme=\"@style/ThemeOverlay.AppCompat.ActionBar\"/>",
    "filename": "64b532bbfd84f8e71570026036cae9d2_0.scala"
  },
  {
    "conversation_hash": "358e35350098b5803babf8a06e6a37ff",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "A     B\n0            # A was empty, so B remains empty\n1  abc  Other\n2  def   TPR\n3  ghi  Other\n4  jkl  Other",
    "filename": "358e35350098b5803babf8a06e6a37ff_1.scala"
  },
  {
    "conversation_hash": "358e35350098b5803babf8a06e6a37ff",
    "code_index": 3,
    "language": "Scala",
    "libraries": [],
    "code": "A     B     C\n0                 val1\n1  abc  Other  val2\n2  def   TPR   val3\n3  ghi  Other  val4\n4  jkl  Other  val5",
    "filename": "358e35350098b5803babf8a06e6a37ff_3.scala"
  },
  {
    "conversation_hash": "358e35350098b5803babf8a06e6a37ff",
    "code_index": 5,
    "language": "Scala",
    "libraries": [],
    "code": "A     B     C\n0                 val1\n1  abc  Other  val2\n2  def   TPR   val3\n3  ghi  Other  val4\n4  jkl  Other  val5",
    "filename": "358e35350098b5803babf8a06e6a37ff_5.scala"
  },
  {
    "conversation_hash": "358e35350098b5803babf8a06e6a37ff",
    "code_index": 7,
    "language": "Scala",
    "libraries": [],
    "code": "order_number comment other_column\n0          019   Other         val1\n1                   val2\n2          123     TPR         val3\n3          456   Other         val4\n4          789                   val5",
    "filename": "358e35350098b5803babf8a06e6a37ff_7.scala"
  },
  {
    "conversation_hash": "6ae893cf59bc94b97c1791c72438ef05",
    "code_index": 4,
    "language": "Scala",
    "libraries": [],
    "code": "class MyApp extends StatelessWidget {\n  @override\n  Widget build(BuildContext context) {\n    return MaterialApp(\n      home: Scaffold(\n        appBar: AppBar(\n          title: Text('Button Row'),\n        ),\n        body: Center(\n          child: ButtonRow(),\n        ),\n      ),\n    );\n  }\n}",
    "filename": "6ae893cf59bc94b97c1791c72438ef05_4.scala"
  },
  {
    "conversation_hash": "da16bdee443b1cf173537bf4a526d939",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "\"Thread-1\" #12 prio=5 os_prio=0 tid=0x000000001d89e800 nid=0xe9f waiting on condition [0x000000001e31f000]\n   java.lang.Thread.State: TIMED_WAITING (sleeping)\n    at java.lang.Thread.sleep(Native Method)\n    at com.example.MyClass.myMethod(MyClass.java:20)\n    at com.example.MyClass$MyRunnable.run(MyClass.java:30)\n    ...\n\n\"main\" #1 prio=5 os_prio=0 tid=0x000000001d84e800 nid=0x5d0 waiting on condition [0x000000001dffe000]\n   java.lang.Thread.State: TIMED_WAITING (sleeping)\n    at java.lang.Thread.sleep(Native Method)\n    at com.example.MainClass.main(MainClass.java:10)\n    ...",
    "filename": "da16bdee443b1cf173537bf4a526d939_1.scala"
  },
  {
    "conversation_hash": "0822725de714f950ff0fd445d75040f9",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "val obj: Any = \"Пример строки\"\nif (obj is String) {\n    // Выполнить операции, специфичные для строк\n    println(obj.length)\n} else {\n    // Выполнить операции, которые не специфичны для строк\n    println(\"Не является строкой\")\n}",
    "filename": "0822725de714f950ff0fd445d75040f9_1.scala"
  },
  {
    "conversation_hash": "e2a9702972f634c58d32c83ae7d91246",
    "code_index": 8,
    "language": "Scala",
    "libraries": [],
    "code": "import { FormsModule } from '@angular/forms';\n\n@NgModule({\n  imports: [\n    FormsModule\n  ],\n  // ...\n})\nexport class YourModule { }",
    "filename": "e2a9702972f634c58d32c83ae7d91246_8.scala"
  },
  {
    "conversation_hash": "62a44a6af8d5f8eb3ab37bebebc10452",
    "code_index": 6,
    "language": "Scala",
    "libraries": [],
    "code": "org.hibernate.MappingException: No Dialect mapping for JDBC type: 1111\n  at org.hibernate.dialect.TypeNames.get(TypeNames.java:83)\n  at org.hibernate.dialect.TypeNames.get(TypeNames.java:109)\n  at org.hibernate.dialect.Dialect.getHibernateTypeName(Dialect.java:690)\n  at org.hibernate.loader.custom.CustomLoader$Metadata.getHibernateType(CustomLoader.java:690)\n  ...",
    "filename": "62a44a6af8d5f8eb3ab37bebebc10452_6.scala"
  },
  {
    "conversation_hash": "1eaa68d60f3beaee8772065f8b49e8e8",
    "code_index": 8,
    "language": "Scala",
    "libraries": [],
    "code": "val tabLayout = view.findViewById<TabLayout>(R.id.tabLayout)\nval viewPager = view.findViewById<ViewPager>(R.id.viewPager)\n\nval adapter = ViewPagerAdapter(childFragmentManager)\nviewPager.adapter = adapter\ntabLayout.setupWithViewPager(viewPager)",
    "filename": "1eaa68d60f3beaee8772065f8b49e8e8_8.scala"
  },
  {
    "conversation_hash": "c763a75788263fde99dc11de787eca25",
    "code_index": 4,
    "language": "Scala",
    "libraries": [],
    "code": "import { Component, ViewChild, ElementRef } from '@angular/core';\n\n@Component({\n  selector: 'app-my-component',\n  templateUrl: './my-component.component.html',\n  styleUrls: ['./my-component.component.css']\n})\nexport class MyComponentComponent {\n  @ViewChild('myIframe', { static: true }) myIframe: ElementRef;\n  iframeUrl = 'https://example.com';\n  \n  // 在这里编写设置 CSS、HTML 和 JavaScript 的代码\n}",
    "filename": "c763a75788263fde99dc11de787eca25_4.scala"
  },
  {
    "conversation_hash": "d7b9ef9b94dd8a94b242685b49ec7acb",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "val str = \"Hello, World!\"\nval str_remove = \"World\"\n\nval result = remove_str(str, str_remove)\nprintln(result) // Output: \"Hello, !\"",
    "filename": "d7b9ef9b94dd8a94b242685b49ec7acb_1.scala"
  },
  {
    "conversation_hash": "b96eced66b0c9c80737e6da30732bb1e",
    "code_index": 5,
    "language": "Scala",
    "libraries": [],
    "code": "val instance = MyClass.createInstance()\n\ninstance.variable1 = \"Hello\"\ninstance.variable2 = 10\n\ninstance.method()",
    "filename": "b96eced66b0c9c80737e6da30732bb1e_5.scala"
  },
  {
    "conversation_hash": "c3ef24046797e45c45982e7661b931db",
    "code_index": 3,
    "language": "Scala",
    "libraries": [],
    "code": "<Button onClick={handleButtonClick}>Кнопка</Button>\n\n<Dropdown visible={showDropdown}>\n  {/* Содержимое Dropdown */}\n</Dropdown>",
    "filename": "c3ef24046797e45c45982e7661b931db_3.scala"
  },
  {
    "conversation_hash": "1550483dbbc83c15c8570b23ff36a75b",
    "code_index": 2,
    "language": "Scala",
    "libraries": [],
    "code": "t_env.execute_sql(\"\"\"\n    CREATE TABLE source_table (\n        id INT,\n        name STRING\n    ) WITH (\n        'connector' = 'kafka',\n        'topic' = 'input_topic',\n        'properties.bootstrap.servers' = 'localhost:9092',\n        'format' = 'json'\n    )\n\"\"\")",
    "filename": "1550483dbbc83c15c8570b23ff36a75b_2.scala"
  },
  {
    "conversation_hash": "1550483dbbc83c15c8570b23ff36a75b",
    "code_index": 3,
    "language": "Scala",
    "libraries": [],
    "code": "t_env.execute_sql(\"\"\"\n    CREATE TABLE result_table (\n        id INT,\n        name STRING,\n        `partition` INT\n    ) WITH (\n        'connector' = 'kafka',\n        'topic' = 'output_topic',\n        'properties.bootstrap.servers' = 'localhost:9092',\n        'format' = 'json'\n    ) PARTITIONED BY (`partition`)\n    AS\n    SELECT\n        id,\n        name,\n        HASH_CODE(id) % 3 AS `partition`\n    FROM\n        source_table\n\"\"\")",
    "filename": "1550483dbbc83c15c8570b23ff36a75b_3.scala"
  },
  {
    "conversation_hash": "73fc53a44b08daa3b2bc58650835e19d",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-my-component',\n  templateUrl: './my-component.component.html',\n  styleUrls: ['./my-component.component.css']\n})\nexport class MyComponent {\n  isMobileVisible = false;\n\n  toggleMobileVisibility() {\n    this.isMobileVisible = !this.isMobileVisible;\n  }\n}",
    "filename": "73fc53a44b08daa3b2bc58650835e19d_0.scala"
  },
  {
    "conversation_hash": "73fc53a44b08daa3b2bc58650835e19d",
    "code_index": 3,
    "language": "Scala",
    "libraries": [],
    "code": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-my-component',\n  templateUrl: './my-component.component.html',\n  styleUrls: ['./my-component.component.css']\n})\nexport class MyComponent {\n  isMobileVisible = false;\n\n  toggleMobileVisibility() {\n    this.isMobileVisible = !this.isMobileVisible;\n  }\n}",
    "filename": "73fc53a44b08daa3b2bc58650835e19d_3.scala"
  },
  {
    "conversation_hash": "c6c090a6f03dd53ca26d24a9dbe57109",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "-- Impor modul yang dibutuhkan\nrequire \"import\"\nimport \"android.widget.*\"\nimport \"android.view.*\"\nimport \"android.app.*\"\n\n-- Menginisialisasi variabel activity\nactivity = MainActivity()\n\n-- Membuat tampilan utama\nactivity.setTitle(\"Contoh AndroLua\")\nlayout = LinearLayout(activity)\nlayout.orientation = LinearLayout.VERTICAL\n\n-- Membuat tombol\nbutton = Button(activity)\nbutton.setText(\"Klik Saya!\")\nlayout.addView(button)\n\n-- Menambahkan tampilan ke dalam layout\nactivity.setContentView(layout)",
    "filename": "c6c090a6f03dd53ca26d24a9dbe57109_1.scala"
  },
  {
    "conversation_hash": "c6c090a6f03dd53ca26d24a9dbe57109",
    "code_index": 2,
    "language": "Scala",
    "libraries": [],
    "code": "-- Impor modul yang dibutuhkan\nimport \"android.widget.*\"\nimport \"android.view.*\"\nimport \"android.app.*\"\n\n-- Menginisialisasi variabel activity\nactivity = MainActivity()\n\n-- Membuat tampilan utama\nactivity.setTitle(\"Contoh AndroLua\")\nlayout = LinearLayout(activity)\nlayout.orientation = LinearLayout.VERTICAL\n\n-- Membuat tombol\nbutton = Button(activity)\nbutton.setText(\"Klik Saya!\")\nlayout.addView(button)\n\n-- Menambahkan tampilan ke dalam layout\nactivity.setContentView(layout)",
    "filename": "c6c090a6f03dd53ca26d24a9dbe57109_2.scala"
  },
  {
    "conversation_hash": "a0415a75d34c10fa1e9881414c7a3489",
    "code_index": 6,
    "language": "Scala",
    "libraries": [],
    "code": "t_env.execute_sql(\"\"\"\n    INSERT INTO my_output_table\n    SELECT\n        process_df(data)\n    FROM\n        my_table\n\"\"\").wait()",
    "filename": "a0415a75d34c10fa1e9881414c7a3489_6.scala"
  },
  {
    "conversation_hash": "0f85c6bf49a9b9ae2c627cd7e9e4d1c5",
    "code_index": 0,
    "language": "Scala",
    "libraries": [
      "router"
    ],
    "code": "import { Cookies } from \"quasar\";\nimport router from \"./index\";\nconst routes = [\n  {\n    path: \"/\",\n    component: () => import(\"layouts/MainLayout.vue\"),\n    children: [\n      { path: \"/login\", component: () => import(\"pages/loginPage.vue\"), meta: { layout: \"none\" } },\n      { path: \"/register\", component: () => import(\"pages/registerPage.vue\") },\n      {\n        path: \"\",\n        component: () => import(\"pages/loginSuccess.vue\"),\n        meta: { requiresAuth: true },\n      },\n    ],\n  },\n\n  // Always leave this as last one,\n  // but you can also remove it\n  {\n    path: \"/:catchAll(.*)*\",\n    component: () => import(\"pages/ErrorNotFound.vue\"),\n  },\n];\nexport default routes;",
    "filename": "0f85c6bf49a9b9ae2c627cd7e9e4d1c5_0.scala"
  },
  {
    "conversation_hash": "0f85c6bf49a9b9ae2c627cd7e9e4d1c5",
    "code_index": 2,
    "language": "Scala",
    "libraries": [
      "router"
    ],
    "code": "import { Cookies } from \"quasar\";\nimport router from \"./index\";\nconst routes = [\n  {\n    path: \"/\",\n    component: () => import(\"layouts/MainLayout.vue\"),\n    children: [\n      { path: \"/login\", component: () => import(\"layouts/MainLayout.vue\"), meta: { layout: \"login\" } },\n      { path: \"/register\", component: () => import(\"pages/registerPage.vue\") },\n      {\n        path: \"\",\n        component: () => import(\"pages/loginSuccess.vue\"),\n        meta: { requiresAuth: true },\n      },\n    ],\n  },\n\n  // Always leave this as last one,\n  // but you can also remove it\n  {\n    path: \"/:catchAll(.*)*\",\n    component: () => import(\"pages/ErrorNotFound.vue\"),\n  },\n];\nexport default routes;",
    "filename": "0f85c6bf49a9b9ae2c627cd7e9e4d1c5_2.scala"
  },
  {
    "conversation_hash": "0f85c6bf49a9b9ae2c627cd7e9e4d1c5",
    "code_index": 4,
    "language": "Scala",
    "libraries": [
      "router"
    ],
    "code": "import { Cookies } from \"quasar\";\nimport router from \"./index\";\nconst routes = [\n  {\n    path: \"/\",\n    component: () => import(\"layouts/MainLayout.vue\"),\n    children: [\n      { path: \"/login\", component: () => import(\"layouts/LoginLayout.vue\") },\n      { path: \"/register\", component: () => import(\"pages/registerPage.vue\") },\n      {\n        path: \"\",\n        component: () => import(\"pages/loginSuccess.vue\"),\n        meta: { requiresAuth: true },\n      },\n    ],\n  },\n\n  // Always leave this as last one,\n  // but you can also remove it\n  {\n    path: \"/:catchAll(.*)*\",\n    component: () => import(\"pages/ErrorNotFound.vue\"),\n  },\n];\nexport default routes;",
    "filename": "0f85c6bf49a9b9ae2c627cd7e9e4d1c5_4.scala"
  },
  {
    "conversation_hash": "4aa9ad9978d5ec1847c9673513b308b8",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "{\n  path: \"/login\",\n  component: () => import(\"pages/loginPage.vue\"),\n  meta: { layout: \"none\" },\n}",
    "filename": "4aa9ad9978d5ec1847c9673513b308b8_0.scala"
  },
  {
    "conversation_hash": "89a24070d16f0edf716c7eb7f652380c",
    "code_index": 8,
    "language": "Scala",
    "libraries": [],
    "code": "@dataclass\nclass Arguments:\n    model_name: str\n    batch_size: int\n    num_epochs: int",
    "filename": "89a24070d16f0edf716c7eb7f652380c_8.scala"
  },
  {
    "conversation_hash": "89a24070d16f0edf716c7eb7f652380c",
    "code_index": 14,
    "language": "Scala",
    "libraries": [],
    "code": "@dataclass\nclass Arguments:\n    model_name: str = field(\n        metadata={\"help\": \"模型的名称\"},\n    )\n    batch_size: int = field(\n        metadata={\"help\": \"批量大小\"},\n    )\n    num_epochs: int = field(\n        metadata={\"help\": \"训练的轮数\"},\n    )",
    "filename": "89a24070d16f0edf716c7eb7f652380c_14.scala"
  },
  {
    "conversation_hash": "5344ace607460cdab43f439c55eebc16",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "val squaresLayout: LinearLayout = view.findViewById(R.id.squaresLayout)\nsquaresLayout.orientation = LinearLayout.HORIZONTAL\nsquaresLayout.weightSum = 2f // Устанавливаем сумму весов в 2\n\ncreateSquare(squaresLayout, \"Sample Text\", resources.getColor(R.color.silver), 15f)\ncreateSquare(squaresLayout, \"Another Text\", resources.getColor(R.color.silver), 10f)\ncreateSquare(squaresLayout, \"Another Text\", resources.getColor(R.color.silver), 10f)\ncreateSquare(squaresLayout, \"Another Text\", resources.getColor(R.color.silver), 10f)",
    "filename": "5344ace607460cdab43f439c55eebc16_0.scala"
  },
  {
    "conversation_hash": "3c4437d27dfd50a97350afb90cb439ea",
    "code_index": 2,
    "language": "Scala",
    "libraries": [],
    "code": "import { Component } from '@angular/core';\n\n   @Component({\n     selector: 'app-angular-component',\n     template: '<h2>Angular Code</h2>'\n   })\n   export class AngularComponent {}",
    "filename": "3c4437d27dfd50a97350afb90cb439ea_2.scala"
  },
  {
    "conversation_hash": "f1f431b217255b11537cdaf24747316f",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "<dependency>\n    <groupId>org.xerial</groupId>\n    <artifactId>sqlite-jdbc</artifactId>\n    <version>3.36.0.1</version>\n    <scope>runtime</scope>\n</dependency>",
    "filename": "f1f431b217255b11537cdaf24747316f_0.scala"
  },
  {
    "conversation_hash": "27708b189954ec61345787032b6a61a5",
    "code_index": 0,
    "language": "Scala",
    "libraries": [
      "the"
    ],
    "code": "type\n  Rect = object\n    x, y: int\n    w, h: int\n    wasPacked: bool\n\nproc SortByHeight(a, b: var Rect): int =\n  # Implement your sorting logic here\n  if a.h < b.h:\n    result = -1\n  elif a.h > b.h:\n    result = 1\n  else:\n    result = 0\n\nproc PackRectsNaiveRows(var rects: seq[Rect]) =\n  # Sort by a heuristic\n  rects.sort(SortByHeight)\n\n  var\n    xPos = 0\n    yPos = 0\n    largestHThisRow = 0\n\n  # Loop over all the rectangles\n  for rect in rects:\n    # If this rectangle will go past the width of the image\n    # Then loop around to next row, using the largest height from the previous row\n    if xPos + rect.w > 700:\n      yPos += largestHThisRow\n      xPos = 0\n      largestHThisRow = 0\n\n    # If we go off the bottom edge of the image, then we've failed\n    if yPos + rect.h > 700:\n      break\n\n    # This is the position of the rectangle\n    rect.x = xPos\n    rect.y = yPos\n\n    # Move along to the next spot in the row\n    xPos += rect.w\n\n    # Just saving the largest height in the new row\n    if rect.h > largestHThisRow:\n      largestHThisRow = rect.h\n\n    # Success!\n    rect.wasPacked = true",
    "filename": "27708b189954ec61345787032b6a61a5_0.scala"
  },
  {
    "conversation_hash": "9b4391dc1d2ced25c107c05768d892b5",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "<dependency>\n    <groupId>org.xerial</groupId>\n    <artifactId>sqlite-jdbc</artifactId>\n    <version>3.36.0</version>\n</dependency>",
    "filename": "9b4391dc1d2ced25c107c05768d892b5_0.scala"
  },
  {
    "conversation_hash": "c9aeeb024b01d46b329ec64fab7a95f8",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "import {Entity, PrimaryGeneratedColumn, Column, ManyToOne} from 'typeorm';\n\n@Entity()\nexport class User {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column()\n  name: string;\n\n  @ManyToOne(() => User, user => user.friends)\n  friend: User;\n}",
    "filename": "c9aeeb024b01d46b329ec64fab7a95f8_0.scala"
  },
  {
    "conversation_hash": "c9aeeb024b01d46b329ec64fab7a95f8",
    "code_index": 2,
    "language": "Scala",
    "libraries": [],
    "code": "import { Entity, PrimaryGeneratedColumn, Column, OneToMany, ManyToOne, JoinColumn } from 'typeorm';\n\n@Entity()\nexport class User {\n\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column()\n  name: string;\n\n  @OneToMany(() => User, user => user.friend)\n  friends: User[];\n\n  @ManyToOne(() => User, user => user.friends)\n  @JoinColumn({ name: 'friend_id' })\n  friend: User;\n\n}",
    "filename": "c9aeeb024b01d46b329ec64fab7a95f8_2.scala"
  },
  {
    "conversation_hash": "c9aeeb024b01d46b329ec64fab7a95f8",
    "code_index": 5,
    "language": "Scala",
    "libraries": [],
    "code": "import { Entity, PrimaryGeneratedColumn, Column, ManyToOne } from 'typeorm';\n\n@Entity()\nexport class User {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column()\n  name: string;\n\n  @ManyToOne(() => User, user => user.friends)\n  friend: User;\n}",
    "filename": "c9aeeb024b01d46b329ec64fab7a95f8_5.scala"
  },
  {
    "conversation_hash": "38040843c1a1e298f3fb8b0255d8b7de",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "import 'package:flutter/material.dart';\n\nvoid main() {\n  runApp(MyApp());\n}\n\nclass MyApp extends StatelessWidget {\n  @override\n  Widget build(BuildContext context) {\n    return MaterialApp(\n      home: Scaffold(\n        appBar: AppBar(\n          title: Text('Fill Image'),\n        ),\n        body: Container(\n          width: double.infinity,\n          height: double.infinity,\n          child: Image(\n            image: AssetImage('assets/image.jpg'),\n            fit: BoxFit.fill,\n          ),\n        ),\n      ),\n    );\n  }\n}",
    "filename": "38040843c1a1e298f3fb8b0255d8b7de_0.scala"
  },
  {
    "conversation_hash": "6837df26aca94533ef81cdf21eb606bd",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "import 'package:flutter/material.dart';\n\nclass MyPage extends StatefulWidget {\n  @override\n  _MyPageState createState() => _MyPageState();\n}\n\nclass _MyPageState extends State<MyPage> {\n  @override\n  Widget build(BuildContext context) {\n    return Scaffold(\n      appBar: AppBar(\n        title: Text('My Page'),\n      ),\n      body: Center(\n        child: Column(\n          mainAxisAlignment: MainAxisAlignment.center,\n          children: [\n            Text('Page Content'),\n            RaisedButton(\n              onPressed: () {\n                setState(() {});\n              },\n              child: Text('Reload'),\n            ),\n          ],\n        ),\n      ),\n    );\n  }\n}",
    "filename": "6837df26aca94533ef81cdf21eb606bd_0.scala"
  },
  {
    "conversation_hash": "e0c15661902530b4c613b00ea2d1a9d6",
    "code_index": 2,
    "language": "Scala",
    "libraries": [],
    "code": "<dependency>\n    <groupId>org.xerial</groupId>\n    <artifactId>sqlite-jdbc</artifactId>\n    <version>3.42.0.0</version>\n</dependency>",
    "filename": "e0c15661902530b4c613b00ea2d1a9d6_2.scala"
  },
  {
    "conversation_hash": "d806a385ed29457c4813e5fea3ead1e5",
    "code_index": 3,
    "language": "Scala",
    "libraries": [],
    "code": "val retrofit = Retrofit.Builder()\n    .baseUrl(\"https://api.example.com/\")\n    .addConverterFactory(GsonConverterFactory.create())\n    .build()\n\nval apiService = retrofit.create(ApiService::class.java)",
    "filename": "d806a385ed29457c4813e5fea3ead1e5_3.scala"
  },
  {
    "conversation_hash": "ac7a09d41d30a2815447450480da48ec",
    "code_index": 2,
    "language": "Scala",
    "libraries": [],
    "code": "// Example usage\nval networkError = UiError.NetworkError\nhandleUiError(networkError)\n\nval validationError = UiError.ValidationError(\"Invalid input\")\nhandleUiError(validationError)\n\nval serverError = UiError.ServerError(500, \"Internal Server Error\")\nhandleUiError(serverError)",
    "filename": "ac7a09d41d30a2815447450480da48ec_2.scala"
  },
  {
    "conversation_hash": "ac7a09d41d30a2815447450480da48ec",
    "code_index": 5,
    "language": "Scala",
    "libraries": [],
    "code": "open class Superclass(val value: String) {\n    // ...\n}\n\nclass Subclass(value: String, val additionalValue: Int) : Superclass(value) {\n    // ...\n}",
    "filename": "ac7a09d41d30a2815447450480da48ec_5.scala"
  },
  {
    "conversation_hash": "ac7a09d41d30a2815447450480da48ec",
    "code_index": 16,
    "language": "Scala",
    "libraries": [],
    "code": "val string: String = \"example\"\n\nval progressionArray = Array(string.length) { index ->\n    val substring = string.take(index + 1)\n    if (substring.isNotBlank()) substring else null\n}",
    "filename": "ac7a09d41d30a2815447450480da48ec_16.scala"
  },
  {
    "conversation_hash": "ac7a09d41d30a2815447450480da48ec",
    "code_index": 20,
    "language": "Scala",
    "libraries": [],
    "code": "val word: String = \"example\"\nval arraySize = 17\nval result = Array(arraySize) { index ->\n    val substring = word.substring(0, index)\n    if (substring.isNotEmpty()) substring else null\n}",
    "filename": "ac7a09d41d30a2815447450480da48ec_20.scala"
  },
  {
    "conversation_hash": "ac7a09d41d30a2815447450480da48ec",
    "code_index": 22,
    "language": "Scala",
    "libraries": [],
    "code": "val a = -5\nval b = 10\n\nval absoluteA = a.absoluteValue\nval absoluteB = b.absoluteValue\n\nif (absoluteA < absoluteB) {\n    println(\"Absolute value of a ($absoluteA) is less than the absolute value of b ($absoluteB)\")\n} else if (absoluteA > absoluteB) {\n    println(\"Absolute value of a ($absoluteA) is greater than the absolute value of b ($absoluteB)\")\n} else {\n    println(\"Absolute value of a ($absoluteA) is equal to the absolute value of b ($absoluteB)\")\n}",
    "filename": "ac7a09d41d30a2815447450480da48ec_22.scala"
  },
  {
    "conversation_hash": "f6a93c1ffddcc79d9ed52c1337eb89df",
    "code_index": 2,
    "language": "Scala",
    "libraries": [],
    "code": "<dependency>\n    <groupId>org.xerial</groupId>\n    <artifactId>sqlite-jdbc</artifactId>\n    <version>3.42.0.0</version>\n</dependency>",
    "filename": "f6a93c1ffddcc79d9ed52c1337eb89df_2.scala"
  },
  {
    "conversation_hash": "e503c669fe2be7a4f916f433f29db8ee",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "val map: MutableMap<Int, Set<Int>> = mutableMapOf(\n    1 to setOf(1, 2, 3),\n    2 to setOf(4, 5),\n    3 to setOf(6, 7, 8, 9)\n)",
    "filename": "e503c669fe2be7a4f916f433f29db8ee_0.scala"
  },
  {
    "conversation_hash": "e503c669fe2be7a4f916f433f29db8ee",
    "code_index": 3,
    "language": "Scala",
    "libraries": [],
    "code": "val map = RestrictedMap()\n\nmap[1] = mutableSetOf(1, 2, 3)\nmap[2] = mutableSetOf(4, 5)\nmap[3] = mutableSetOf(6, 7, 8, 9)\n\nprintln(map) // Output: {1=[1, 2, 3], 2=[4, 5], 3=[6, 7, 8, 9]}\n\nmap[4] = mutableSetOf(10, 11) // Throws an IllegalArgumentException since the key is outside the allowed range",
    "filename": "e503c669fe2be7a4f916f433f29db8ee_3.scala"
  },
  {
    "conversation_hash": "e503c669fe2be7a4f916f433f29db8ee",
    "code_index": 4,
    "language": "Scala",
    "libraries": [],
    "code": "val set: MutableSet<Int> = mutableSetOf()\n\nfor (i in 1..15) {\n    set.add(i)\n}\n\nprintln(set) // Output: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]",
    "filename": "e503c669fe2be7a4f916f433f29db8ee_4.scala"
  },
  {
    "conversation_hash": "e503c669fe2be7a4f916f433f29db8ee",
    "code_index": 10,
    "language": "Scala",
    "libraries": [],
    "code": "val set = setOf(1, 2, 3, 4, 5)\nval containsValue = set.contains(3)\nval size = set.size\n\nprintln(containsValue) // Output: true\nprintln(size) // Output: 5",
    "filename": "e503c669fe2be7a4f916f433f29db8ee_10.scala"
  },
  {
    "conversation_hash": "e503c669fe2be7a4f916f433f29db8ee",
    "code_index": 11,
    "language": "Scala",
    "libraries": [],
    "code": "val set = setOf(1, 2, 3, 4, 5)\nval list = set.toList()\nval array = set.toTypedArray()\n\nprintln(list) // Output: [1, 2, 3, 4, 5]\nprintln(array.joinToString()) // Output: 1, 2, 3, 4, 5",
    "filename": "e503c669fe2be7a4f916f433f29db8ee_11.scala"
  },
  {
    "conversation_hash": "e503c669fe2be7a4f916f433f29db8ee",
    "code_index": 14,
    "language": "Scala",
    "libraries": [],
    "code": "val map : MutableMap<Int, MutableSet<Int>> = mutableMapOf(\n        1 to mutableSetOf(1, 2, 3),\n        2 to mutableSetOf(4, 5),\n        3 to mutableSetOf(6, 7, 8, 9)\n)",
    "filename": "e503c669fe2be7a4f916f433f29db8ee_14.scala"
  },
  {
    "conversation_hash": "e503c669fe2be7a4f916f433f29db8ee",
    "code_index": 17,
    "language": "Scala",
    "libraries": [],
    "code": "if (map.containsValue(value)) {\n    // The value exists in the map\n} else {\n    // The value does not exist in the map\n}",
    "filename": "e503c669fe2be7a4f916f433f29db8ee_17.scala"
  },
  {
    "conversation_hash": "e503c669fe2be7a4f916f433f29db8ee",
    "code_index": 20,
    "language": "Scala",
    "libraries": [],
    "code": "val map = mutableMapOf(\"A\" to 1, \"B\" to 2, \"C\" to 3)\n\nif (map.containsKey(key)) {\n    // The map contains the specified key\n} else {\n    // The map does not contain the specified key\n}",
    "filename": "e503c669fe2be7a4f916f433f29db8ee_20.scala"
  },
  {
    "conversation_hash": "605a97dc444efb0e587e32b6b2829c97",
    "code_index": 2,
    "language": "Scala",
    "libraries": [],
    "code": "val set: Set<Int> = setOf(1, 2, 3, 4, 5)\n\nfor (element in set) {\n    println(element)\n}",
    "filename": "605a97dc444efb0e587e32b6b2829c97_2.scala"
  },
  {
    "conversation_hash": "605a97dc444efb0e587e32b6b2829c97",
    "code_index": 3,
    "language": "Scala",
    "libraries": [],
    "code": "val set: Set<Int> = setOf(1, 2, 3, 4, 5)\n\nset.forEach { element ->\n    println(element)\n}",
    "filename": "605a97dc444efb0e587e32b6b2829c97_3.scala"
  },
  {
    "conversation_hash": "605a97dc444efb0e587e32b6b2829c97",
    "code_index": 17,
    "language": "Scala",
    "libraries": [],
    "code": "val numbers: MutableMap<Int, MutableSet<Int>> = mutableMapOf()\n\n// Add a key-value pair to the map\nnumbers.put(1, mutableSetOf(2, 3, 4))\n\n// Add another key-value pair\nnumbers.put(2, mutableSetOf(1, 5, 6))",
    "filename": "605a97dc444efb0e587e32b6b2829c97_17.scala"
  },
  {
    "conversation_hash": "605a97dc444efb0e587e32b6b2829c97",
    "code_index": 18,
    "language": "Scala",
    "libraries": [],
    "code": "val numbers: MutableMap<Int, MutableSet<Int>> = mutableMapOf()\n\n// Add a key-value pair to the map\nnumbers[1] = mutableSetOf(2, 3, 4)\n\n// Add another key-value pair\nnumbers[2] = mutableSetOf(1, 5, 6)",
    "filename": "605a97dc444efb0e587e32b6b2829c97_18.scala"
  },
  {
    "conversation_hash": "207cef7b57bcf509a130baff5ba0150e",
    "code_index": 3,
    "language": "Scala",
    "libraries": [],
    "code": "import { Shader as OriginalShader } from 'библиотека';\n\nconst OriginalShaderConstructor = OriginalShader;\n\nexport class Shader extends OriginalShaderConstructor {\n  constructor() {\n    super();\n    // Добавь свою дополнительную логику здесь\n  }\n}",
    "filename": "207cef7b57bcf509a130baff5ba0150e_3.scala"
  },
  {
    "conversation_hash": "207cef7b57bcf509a130baff5ba0150e",
    "code_index": 4,
    "language": "Scala",
    "libraries": [],
    "code": "// В файле библиотеки, содержащем код класса Shader\nexport class Shader {\n  constructor() {\n    // Исходный код конструктора библиотеки\n  \n    // Добавь свою дополнительную логику здесь\n  }\n}",
    "filename": "207cef7b57bcf509a130baff5ba0150e_4.scala"
  },
  {
    "conversation_hash": "5e51b6da2f50a24b304cc036412e3c92",
    "code_index": 13,
    "language": "Scala",
    "libraries": [],
    "code": "data class Player(\n    val id: Int,\n    val name: String,\n    val level: Int,\n    val score: Int\n)",
    "filename": "5e51b6da2f50a24b304cc036412e3c92_13.scala"
  },
  {
    "conversation_hash": "81da8ec3dc5a54ba537e445d8627c1a9",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "class MyHomePage extends StatelessWidget {\n  @override\n  Widget build(BuildContext context) {\n    return Scaffold(\n      appBar: AppBar(\n        title: Text('Zoom In/Out'),\n      ),\n      body: Center(\n        child: ZoomInZoomOutWidget(),\n      ),\n    );\n  }\n}",
    "filename": "81da8ec3dc5a54ba537e445d8627c1a9_1.scala"
  },
  {
    "conversation_hash": "81da8ec3dc5a54ba537e445d8627c1a9",
    "code_index": 3,
    "language": "Scala",
    "libraries": [],
    "code": "class MyHomePage extends StatelessWidget {\n  @override\n  Widget build(BuildContext context) {\n    return Scaffold(\n      appBar: AppBar(\n        title: Text('Zoom In/Out'),\n      ),\n      body: Center(\n        child: ZoomInZoomOutWidget(),\n      ),\n    );\n  }\n}",
    "filename": "81da8ec3dc5a54ba537e445d8627c1a9_3.scala"
  },
  {
    "conversation_hash": "a40783dd36eeb50aaedbae032a582c72",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "val map: MutableMap<Int, MutableSet<Int>> = mutableMapOf(\n    1 to mutableSetOf(1, 2, 3),\n    2 to mutableSetOf(4, 5, 6),\n    3 to mutableSetOf(7, 8, 9)\n)\n\nval set = map[2] // Access the MutableSet<Int> corresponding to key 2\nprintln(set)   // Output: [4, 5, 6]\n\nval element = map[1]?.get(2) // Access the element at index 2 in the MutableSet<Int> corresponding to key 1\nprintln(element)   // Output: 3",
    "filename": "a40783dd36eeb50aaedbae032a582c72_0.scala"
  },
  {
    "conversation_hash": "a40783dd36eeb50aaedbae032a582c72",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "val map: MutableMap<Int, MutableSet<Int>> = mutableMapOf(\n    1 to mutableSetOf(1, 2, 3),\n    2 to mutableSetOf(4, 5, 6),\n    3 to mutableSetOf(7, 8, 9)\n)\n\nval containsKey = map.containsKey(2) // Check if the map contains key 2\nprintln(containsKey) // Output: true\n\nval notContainsKey = map.containsKey(4) // Check if the map contains key 4\nprintln(notContainsKey) // Output: false",
    "filename": "a40783dd36eeb50aaedbae032a582c72_1.scala"
  },
  {
    "conversation_hash": "a40783dd36eeb50aaedbae032a582c72",
    "code_index": 2,
    "language": "Scala",
    "libraries": [],
    "code": "val map: MutableMap<Int, MutableSet<Int>> = mutableMapOf(\n    1 to mutableSetOf(1, 2, 3),\n    2 to mutableSetOf(4, 5, 6),\n    3 to mutableSetOf(7, 8, 9)\n)\n\nval containsValue = map[1]?.contains(2) // Check if the MutableSet<Int> at key 1 contains the value 2\nprintln(containsValue) // Output: true\n\nval notContainsValue = map[1]?.contains(4) // Check if the MutableSet<Int> at key 1 contains the value 4\nprintln(notContainsValue) // Output: false",
    "filename": "a40783dd36eeb50aaedbae032a582c72_2.scala"
  },
  {
    "conversation_hash": "a40783dd36eeb50aaedbae032a582c72",
    "code_index": 3,
    "language": "Scala",
    "libraries": [],
    "code": "val map: MutableMap<Int, MutableSet<Int>> = mutableMapOf(\n    1 to mutableSetOf(1, 2, 3),\n    2 to mutableSetOf(4, 5, 6),\n    3 to mutableSetOf()\n)\n\nval isEmptyKey1 = map[1]?.isEmpty() ?: true // Check if the MutableSet<Int> at key 1 is empty or null\nprintln(isEmptyKey1) // Output: false\n\nval isEmptyKey3 = map[3]?.isEmpty() ?: true // Check if the MutableSet<Int> at key 3 is empty or null\nprintln(isEmptyKey3) // Output: true\n\nval isEmptyKey4 = map[4]?.isEmpty() ?: true // Check if the MutableSet<Int> at key 4 is empty or null\nprintln(isEmptyKey4) // Output: true",
    "filename": "a40783dd36eeb50aaedbae032a582c72_3.scala"
  },
  {
    "conversation_hash": "d1c91eceb8a0b9b6107de1a61f025194",
    "code_index": 6,
    "language": "Scala",
    "libraries": [],
    "code": "val apiService = IMDbApiService()\nval movieDetails = apiService.getMovieDetails(\"tt1234567\", \"your_api_key\")\n\nval movieTitle = movieDetails.getString(\"title\")\nval movieDescription = movieDetails.getString(\"description\")\n// и так далее, доступ к другим свойствам фильма",
    "filename": "d1c91eceb8a0b9b6107de1a61f025194_6.scala"
  },
  {
    "conversation_hash": "97dc13118cf678dbf124f72df55f52e1",
    "code_index": 5,
    "language": "Scala",
    "libraries": [],
    "code": "data class Movie(\n    val d: List<DataItem>,\n    val q: String,\n    val v: Int\n)\n\ndata class DataItem(\n    val height: Int,\n    val imageUrl: String?,\n    val width: Int,\n    val id: String?,\n    val l: String?,\n    val s: String?,\n    val i: List<Item>?\n)\n\ndata class Item(\n    val height: Int,\n    val imageUrl: String?,\n    val width: Int,\n    val id: String?,\n    val l: String?,\n    val s: String?,\n    val y: Int,\n    val yr: String?\n)",
    "filename": "97dc13118cf678dbf124f72df55f52e1_5.scala"
  },
  {
    "conversation_hash": "cd033e766011f9ac93850ba461193b4b",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "val CATS_COUNT = 10\n\nval catDownloaderV2 = CatDownloaderV2()\ncatDownloaderV2.downloadCats(\n    count = CATS_COUNT,\n    onNext = { cat -> showCat(cat) },\n    onComplete = { showComplete() },\n    onError = { showError() }\n)",
    "filename": "cd033e766011f9ac93850ba461193b4b_0.scala"
  },
  {
    "conversation_hash": "9dcc0b0cc0c65220eeed92a3e6c56cf8",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "val names = listOf(\n    \"ActiveCaloriesBurned\",\n    \"ActivityEvent\",\n    \"ActivityLap\",\n    \"ActivitySession\",\n    \"BasalBodyTemperature\",\n    \"BasalMetabolicRate\",\n    \"BloodGlucose\",\n    \"BloodPressure\",\n    \"BodyFat\",\n    \"BodyTemperature\",\n    \"BodyWaterMass\",\n    \"BoneMass\",\n    \"CervicalMucus\",\n    \"CyclingPedalingCadenceSeries\",\n    \"Distance\",\n    \"ElevationGained\",\n    \"FloorsClimbed\",\n    \"Heart Rate\",\n    \"HeartRateVariabilityDifferentialIndex\",\n    \"HeartRateVariabilityRmssd\",\n    \"HeartRateVariabilityS\",\n    \"HeartRateVariabilitySd2\",\n    \"HeartRateVariabilitySdann\",\n    \"HeartRateVariabilitySdnn\",\n    \"HeartRateVariabilitySdnnIndex\",\n    \"HeartRateVariabilitySdsd\",\n    \"HeartRateVariabilityTinn\",\n    \"Height\",\n    \"HipCircumference\",\n    \"Hydration\",\n    \"LeanBodyMass\",\n    \"Menstruation\",\n    \"Nutrition\",\n    \"OvulationTest\",\n    \"OxygenSaturation\",\n    \"PowerSeries\",\n    \"Repetitions\",\n    \"RespiratoryRate\",\n    \"RestingHeartRate\",\n    \"SexualActivity\",\n    \"SleepSession\",\n    \"SleepStage\",\n    \"SpeedSeries\",\n    \"Steps\",\n    \"StepsCadenceSeries\",\n    \"SwimmingStrokes\",\n    \"TotalCaloriesBurned\",\n    \"Vo2Max\",\n    \"WaistCircumference\",\n    \"WheelchairPushes\",\n    \"Weight\"\n)",
    "filename": "9dcc0b0cc0c65220eeed92a3e6c56cf8_0.scala"
  },
  {
    "conversation_hash": "9dcc0b0cc0c65220eeed92a3e6c56cf8",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "val names = listOf(\n    \"ActiveCaloriesBurned\",\n    \"ActivityEvent\",\n    \"ActivityLap\",\n    \"ActivitySession\",\n    \"BasalBodyTemperature\",\n    \"BasalMetabolicRate\",\n    \"BloodGlucose\",\n    \"BloodPressure\",\n    \"BodyFat\",\n    \"BodyTemperature\",\n    \"BodyWaterMass\",\n    \"BoneMass\",\n    \"CervicalMucus\",\n    \"CyclingPedalingCadenceSeries\",\n    \"Distance\",\n    \"ElevationGained\",\n    \"FloorsClimbed\",\n    \"Heart Rate\",\n    \"HeartRateVariabilityDifferentialIndex\",\n    \"HeartRateVariabilityRmssd\",\n    \"HeartRateVariabilityS\",\n    \"HeartRateVariabilitySd2\",\n    \"HeartRateVariabilitySdann\",\n    \"HeartRateVariabilitySdnn\",\n    \"HeartRateVariabilitySdnnIndex\",\n    \"HeartRateVariabilitySdsd\",\n    \"HeartRateVariabilityTinn\",\n    \"Height\",\n    \"HipCircumference\",\n    \"Hydration\",\n    \"LeanBodyMass\",\n    \"Menstruation\",\n    \"Nutrition\",\n    \"OvulationTest\",\n    \"OxygenSaturation\",\n    \"PowerSeries\",\n    \"Repetitions\",\n    \"RespiratoryRate\",\n    \"RestingHeartRate\",\n    \"SexualActivity\",\n    \"SleepSession\",\n    \"SleepStage\",\n    \"SpeedSeries\",\n    \"Steps\",\n    \"StepsCadenceSeries\",\n    \"SwimmingStrokes\",\n    \"TotalCaloriesBurned\",\n    \"Vo2Max\",\n    \"WaistCircumference\",\n    \"WheelchairPushes\",\n    \"Weight\"\n)",
    "filename": "9dcc0b0cc0c65220eeed92a3e6c56cf8_1.scala"
  },
  {
    "conversation_hash": "257bc531b176e3af4ed788fac87f6f52",
    "code_index": 4,
    "language": "Scala",
    "libraries": [
      "React"
    ],
    "code": "import React from 'react';\n\ninterface BigOrdersTableProps {\n  bigOrders: any[];\n}\n\nconst BigOrdersTable: React.FC<BigOrdersTableProps> = ({ bigOrders }) => {\n  return (\n    <table>\n      <thead>\n        <tr>\n          <th>Symbol</th>\n          <th>Price</th>\n          <th>Quantity</th>\n        </tr>\n      </thead>\n      <tbody>\n        {bigOrders.map((order, index) => (\n          <tr key={index}>\n            <td>{order.BigOrder.exchange}</td>\n            <td>{order.BigOrder.price}</td>\n            <td>{order.BigOrder.quantity}</td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n\nexport default BigOrdersTable;",
    "filename": "257bc531b176e3af4ed788fac87f6f52_4.scala"
  },
  {
    "conversation_hash": "8c76fb2c5944aaecc95c1dca52b15656",
    "code_index": 3,
    "language": "Scala",
    "libraries": [],
    "code": "class MyApp extends StatelessWidget {\n  @override\n  Widget build(BuildContext context) {\n    return MaterialApp(\n      home: PdfViewPage(\n        pdfUrl: 'https://example.com/path/to/file.pdf',\n        pageNumber: 2, // Show the 2nd page of the PDF\n      ),\n    );\n  }\n}",
    "filename": "8c76fb2c5944aaecc95c1dca52b15656_3.scala"
  },
  {
    "conversation_hash": "8c76fb2c5944aaecc95c1dca52b15656",
    "code_index": 7,
    "language": "Scala",
    "libraries": [],
    "code": "class MyApp extends StatelessWidget {\n  @override\n  Widget build(BuildContext context) {\n    return MaterialApp(\n      home: PdfViewPage(\n        pdfUrl: 'https://example.com/path/to/file.pdf',\n      ),\n    );\n  }\n}",
    "filename": "8c76fb2c5944aaecc95c1dca52b15656_7.scala"
  },
  {
    "conversation_hash": "5bcfbb8e940c26a4eac52a4cafabd1cc",
    "code_index": 4,
    "language": "Scala",
    "libraries": [],
    "code": "Status.READY\nStatus.PROCESS\nStatus.PAUSE\nready\nprocess\npause",
    "filename": "5bcfbb8e940c26a4eac52a4cafabd1cc_4.scala"
  },
  {
    "conversation_hash": "653cf064c3afbc740556d3d0b7ebd686",
    "code_index": 2,
    "language": "Scala",
    "libraries": [],
    "code": "DECLARE @input VARCHAR(20) = 'nancy'\nDECLARE @expectedOutput VARCHAR(20) = 'ycnan'\n\nDECLARE @output VARCHAR(20) = dbo.udf_getreverse(@input)\n\nIF @output = @expectedOutput\n    PRINT 'Output is correct.'\nELSE\n    PRINT 'Output is incorrect. Expected: ' + @expectedOutput + ', Actual: ' + @output",
    "filename": "653cf064c3afbc740556d3d0b7ebd686_2.scala"
  },
  {
    "conversation_hash": "59e0e5b0a6264f5a0fb9b20d4c1e46a4",
    "code_index": 2,
    "language": "Scala",
    "libraries": [],
    "code": "CREATE TABLE new_table (\n       id Int32,\n       name String,\n       age Int32,\n       PRIMARY KEY (id) -- 将 id 字段设置为主键\n   ) ENGINE = MergeTree()\n   ORDER BY id;",
    "filename": "59e0e5b0a6264f5a0fb9b20d4c1e46a4_2.scala"
  },
  {
    "conversation_hash": "0f625cc598a893bee78994c0619913c2",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "val catDownloader = CatDownloader()\nval cat: Cat? = getCatFromInternet()\n\ncatDownloader.downloadCat(\n    onSuccess = { cat -> /* handle success */ },\n    onError = { message ->\n        getCatFromInternet()\n        /* handle error */\n    },\n    onStart = { /* handle start */ },\n    allowErrors = { flag -> /* handle allow errors */ }\n)",
    "filename": "0f625cc598a893bee78994c0619913c2_0.scala"
  },
  {
    "conversation_hash": "0af988b7e026b25b606ee6f344c6a6e1",
    "code_index": 5,
    "language": "Scala",
    "libraries": [],
    "code": "class MyPdfViewer extends StatelessWidget {\n  @override\n  Widget build(BuildContext context) {\n    return Scaffold(\n      appBar: AppBar(\n        title: Text('PDF Viewer'),\n      ),\n      body: SfPdfViewer.network(\n        'http://www.example.com/sample.pdf', // Replace with your PDF URL\n        initialPagesCount: 3,\n      ),\n    );\n  }\n}",
    "filename": "0af988b7e026b25b606ee6f344c6a6e1_5.scala"
  },
  {
    "conversation_hash": "9ca23f76e92c6b68ceb2f634ca00661b",
    "code_index": 3,
    "language": "Scala",
    "libraries": [],
    "code": "class HomePage extends StatelessWidget {\n  @override\n  Widget build(BuildContext context) {\n    return Scaffold(\n      appBar: AppBar(\n        title: Text('PDF Viewer Example'),\n      ),\n      body: Center(\n        child: ElevatedButton(\n          onPressed: () {\n            Navigator.push(\n              context,\n              MaterialPageRoute(\n                builder: (context) => PDFViewer(\n                  url: 'https://example.com/path/to/pdf.pdf',\n                ),\n              ),\n            );\n          },\n          child: Text('Open PDF'),\n        ),\n      ),\n    );\n  }\n}",
    "filename": "9ca23f76e92c6b68ceb2f634ca00661b_3.scala"
  },
  {
    "conversation_hash": "7161a9c87314b3d44a99eabbefe9b7de",
    "code_index": 0,
    "language": "Scala",
    "libraries": [
      "java.util.Calendar"
    ],
    "code": "import java.util.Calendar\n\n// Tworzenie obiektu Calendar i ustawienie początkowej daty\nCalendar calendar = Calendar.getInstance()\ncalendar.set(2022, Calendar.JANUARY, 1)\n\n// Dodanie 10 dni do daty\ncalendar.add(Calendar.DAY_OF_MONTH, 10)\n\n// Pobranie zaktualizowanej daty\nDate updatedDate = calendar.time\n\n// Wyświetlenie zaktualizowanej daty\nprintln \"Zaktualizowana data: ${updatedDate}\"",
    "filename": "7161a9c87314b3d44a99eabbefe9b7de_0.scala"
  },
  {
    "conversation_hash": "7161a9c87314b3d44a99eabbefe9b7de",
    "code_index": 1,
    "language": "Scala",
    "libraries": [
      "java.util.Calendar",
      "java.util.Date"
    ],
    "code": "import java.util.Calendar\nimport java.util.Date\n\n// Tworzenie obiektu Calendar\nCalendar calendar = Calendar.getInstance()\n\n// Tworzenie obiektu Date\nDate date = new Date()\n\n// Ustawienie daty na podstawie obiektu Date\ncalendar.setTime(date)\n\n// Wyświetlenie ustawionej daty\nprintln \"Ustawiona data: ${calendar.time}\"",
    "filename": "7161a9c87314b3d44a99eabbefe9b7de_1.scala"
  },
  {
    "conversation_hash": "7161a9c87314b3d44a99eabbefe9b7de",
    "code_index": 2,
    "language": "Scala",
    "libraries": [
      "java.text.SimpleDateFormat"
    ],
    "code": "import java.text.SimpleDateFormat\n\n// Tworzenie obiektów SimpleDateFormat\nSimpleDateFormat sdf = new SimpleDateFormat(\"yyyy-MM-dd\")\n\n// Tworzenie dwóch obiektów Date do porównania\nDate date1 = sdf.parse(\"2022-01-01\")\nDate date2 = sdf.parse(\"2022-02-01\")\n\n// Porównywanie dat za pomocą operatorów porównania\nprintln \"Czy date1 jest równa date2: ${date1 == date2}\"\nprintln \"Czy date1 jest wcześniejsza niż date2: ${date1 < date2}\"\nprintln \"Czy date1 jest późniejsza niż date2: ${date1 > date2}\"",
    "filename": "7161a9c87314b3d44a99eabbefe9b7de_2.scala"
  },
  {
    "conversation_hash": "0ec8a9383296aa99907539bff930c1ce",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "type ValueOrType<T> = T extends infer V ? V : never;\n\n// Example usage\ntype TypeOfValue = ValueOrType<true>; // typeof true is \"boolean\"\ntype TypeOfAssignedValue = ValueOrType<\"Hello\">; // typeof \"Hello\" is \"string\"",
    "filename": "0ec8a9383296aa99907539bff930c1ce_0.scala"
  },
  {
    "conversation_hash": "95b25b99c73ef6889b385f48ab8c5701",
    "code_index": 3,
    "language": "Scala",
    "libraries": [],
    "code": "class MyApp extends StatelessWidget {\n  @override\n  Widget build(BuildContext context) {\n    return MaterialApp(\n      title: 'PDF Viewer',\n      home: Scaffold(\n        appBar: AppBar(\n          title: Text('PDF Viewer'),\n        ),\n        body: PDFPages(pdfUrl: 'https://example.com/sample.pdf'),\n      ),\n    );\n  }\n}",
    "filename": "95b25b99c73ef6889b385f48ab8c5701_3.scala"
  },
  {
    "conversation_hash": "95b25b99c73ef6889b385f48ab8c5701",
    "code_index": 7,
    "language": "Scala",
    "libraries": [],
    "code": "class MyApp extends StatelessWidget {\n  @override\n  Widget build(BuildContext context) {\n    return MaterialApp(\n      title: 'PDF Viewer',\n      home: Scaffold(\n        appBar: AppBar(\n          title: Text('PDF Viewer'),\n        ),\n        body: PDFPages(pdfUrl: 'https://example.com/sample.pdf'),\n      ),\n    );\n  }\n}",
    "filename": "95b25b99c73ef6889b385f48ab8c5701_7.scala"
  },
  {
    "conversation_hash": "95b25b99c73ef6889b385f48ab8c5701",
    "code_index": 12,
    "language": "Scala",
    "libraries": [],
    "code": "class MyApp extends StatelessWidget {\n  @override\n  Widget build(BuildContext context) {\n    return MaterialApp(\n      title: 'PDF Viewer',\n      home: Scaffold(\n        appBar: AppBar(\n          title: Text('PDF Viewer'),\n        ),\n        body: PDFPages(pdfUrl: 'https://example.com/sample.pdf'),\n      ),\n    );\n  }\n}",
    "filename": "95b25b99c73ef6889b385f48ab8c5701_12.scala"
  },
  {
    "conversation_hash": "95b25b99c73ef6889b385f48ab8c5701",
    "code_index": 16,
    "language": "Scala",
    "libraries": [],
    "code": "class MyApp extends StatelessWidget {\n  @override\n  Widget build(BuildContext context) {\n    return MaterialApp(\n      title: 'PDF Viewer',\n      home: Scaffold(\n        appBar: AppBar(\n          title: Text('PDF Viewer'),\n        ),\n        body: PDFPages(pdfUrl: 'https://example.com/sample.pdf'),\n      ),\n    );\n  }\n}",
    "filename": "95b25b99c73ef6889b385f48ab8c5701_16.scala"
  },
  {
    "conversation_hash": "c31f41e3cb6e77bb68656f84abf0e4ba",
    "code_index": 3,
    "language": "Scala",
    "libraries": [],
    "code": "if (XRDevice.isPresent)\n{\n    // VR设备已连接\n}\nelse\n{\n    // VR设备未连接\n}",
    "filename": "c31f41e3cb6e77bb68656f84abf0e4ba_3.scala"
  },
  {
    "conversation_hash": "3041301cc2fe6cdcdb2b37f8e1b81554",
    "code_index": 6,
    "language": "Scala",
    "libraries": [],
    "code": "// src/app.module.ts\n   import { Module } from '@nestjs/common';\n   import { TypeOrmModule } from '@nestjs/typeorm';\n   import { User } from './user/user.entity';\n   import { UserController } from './user/user.controller';\n   import { UserService } from './user/user.service';\n   \n   @Module({\n     imports: [TypeOrmModule.forRoot(), TypeOrmModule.forFeature([User])],\n     controllers: [UserController],\n     providers: [UserService],\n   })\n   export class AppModule {}",
    "filename": "3041301cc2fe6cdcdb2b37f8e1b81554_6.scala"
  },
  {
    "conversation_hash": "8dd22452dbaf0e21c131123bdaba8373",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "import { getCurrentInstance } from 'vue'\n\nexport default {\n  install: (app) => {\n    app.config.globalProperties.$keycloak = getCurrentInstance().appContext.config.globalProperties.$keycloak\n  }\n}",
    "filename": "8dd22452dbaf0e21c131123bdaba8373_0.scala"
  },
  {
    "conversation_hash": "d577ef4b2d7eb1720c6f63bd4f3129ed",
    "code_index": 3,
    "language": "Scala",
    "libraries": [
      "the"
    ],
    "code": "val mutableList: MutableList<Pair<String, Int>> = mutableListOf()\n\n// Adding elements to the mutableList\nmutableList.add(\"Element 1\" to 10)\nmutableList.add(\"Element 2\" to 20)\n\n// Modifying elements in the mutableList\nmutableList[0] = \"Updated Element\" to 30\n\n// Accessing elements from the mutableList\nval element1 = mutableList[0]\nval name = element1.first\nval value = element1.second\n\nprintln(\"Name: $name, Value: $value\")",
    "filename": "d577ef4b2d7eb1720c6f63bd4f3129ed_3.scala"
  },
  {
    "conversation_hash": "59e322ffade1e1f62c72706e6fef4549",
    "code_index": 4,
    "language": "Scala",
    "libraries": [],
    "code": "val myList = listOf(\"Apple\", \"Banana\", \"Orange\")\n\nval element1 = myList.get(0) // Retrieve element at index 0\nval element2 = myList[1] // Retrieve element at index 1\n\nprintln(element1) // Output: \"Apple\"\nprintln(element2) // Output: \"Banana\"",
    "filename": "59e322ffade1e1f62c72706e6fef4549_4.scala"
  },
  {
    "conversation_hash": "59e322ffade1e1f62c72706e6fef4549",
    "code_index": 9,
    "language": "Scala",
    "libraries": [],
    "code": "val mainMenu = Menu(\"Main Menu\", null, true)\nval subMenu = Menu(\"Sub Menu\", mainMenu, false)\n\nmainMenu.printMenu()  // Output: Menu: Main Menu, Previous Menu: null, Has Next Menu: true\nsubMenu.printMenu()   // Output: Menu: Sub Menu, Previous Menu: Main Menu, Has Next Menu: false",
    "filename": "59e322ffade1e1f62c72706e6fef4549_9.scala"
  },
  {
    "conversation_hash": "2cfb753640da206cc345f7237f570498",
    "code_index": 4,
    "language": "Scala",
    "libraries": [],
    "code": "val myList: MutableList<Pair<String, Int?>> = mutableListOf(\n    Pair(\"Apple\", 10),\n    Pair(\"Banana\", null),\n    Pair(\"Orange\", 5)\n)\n\nval elementAtIndex1: Pair<String, Int?> = myList[1]\nval stringPart: String = elementAtIndex1.first\n\nprintln(stringPart) // prints \"Banana\"",
    "filename": "2cfb753640da206cc345f7237f570498_4.scala"
  },
  {
    "conversation_hash": "576ffa0aec88d114eb3c557a032130e9",
    "code_index": 4,
    "language": "Scala",
    "libraries": [],
    "code": "<Radio.Group onChange={handleRadioChange} value={defaultRadio}>\n  {item.radioElement.map((option, index) => (\n    <Radio key={option} value={option}>\n      {option}\n    </Radio>\n  ))}\n</Radio.Group>",
    "filename": "576ffa0aec88d114eb3c557a032130e9_4.scala"
  },
  {
    "conversation_hash": "cf052943e8bb9cc676e7150952a7bdda",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "val list = mutableListOf<Pair<String, E?>>()\n\n// Adding a new element using add()\nlist.add(Pair(\"key\", value))\n\n// Adding a new element using +=\nlist += Pair(\"key\", value)",
    "filename": "cf052943e8bb9cc676e7150952a7bdda_0.scala"
  },
  {
    "conversation_hash": "cf052943e8bb9cc676e7150952a7bdda",
    "code_index": 5,
    "language": "Scala",
    "libraries": [
      "com.example.menu.Menu"
    ],
    "code": "package com.example.submenu\n\nimport com.example.menu.Menu\n\nclass SubMenu(menuName: String, previousMenu: Menu?, nameOfElement: String, nextElementName: String?) : Menu(menuName, previousMenu, nameOfElement, nextElementName) {\n    // Additional code for the SubMenu class\n}",
    "filename": "cf052943e8bb9cc676e7150952a7bdda_5.scala"
  },
  {
    "conversation_hash": "cf052943e8bb9cc676e7150952a7bdda",
    "code_index": 10,
    "language": "Scala",
    "libraries": [],
    "code": "val message = if (input in 1..99) {\n    \"Input is within the range of 1 to 99.\"\n} else {\n    \"Input is outside the range of 1 to 99.\"\n}",
    "filename": "cf052943e8bb9cc676e7150952a7bdda_10.scala"
  },
  {
    "conversation_hash": "9d6286e31478392e1a0ae7c662df69b6",
    "code_index": 5,
    "language": "Scala",
    "libraries": [],
    "code": "apiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: my-config\ndata:\n  database.url: {{ printf \"jdbc:mysql://%s:%d/%s\" .Values.dbHost .Values.dbPort .Values.dbName }}",
    "filename": "9d6286e31478392e1a0ae7c662df69b6_5.scala"
  },
  {
    "conversation_hash": "24225de137b4fffb76ad2014b1f4c0c4",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "export class MyComponent {\n  value: string;\n\n  constructor() {\n    this.value = condition ? 'Value if condition is true' : 'Value if condition is false';\n  }\n}",
    "filename": "24225de137b4fffb76ad2014b1f4c0c4_1.scala"
  },
  {
    "conversation_hash": "24225de137b4fffb76ad2014b1f4c0c4",
    "code_index": 4,
    "language": "Scala",
    "libraries": [],
    "code": "export class MyComponent {\n  condition: boolean = true;\n\n  getValueBasedOnCondition(): string {\n    if (this.condition) {\n      return 'Value if condition is true';\n    } else {\n      return 'Value if condition is false';\n    }\n  }\n}",
    "filename": "24225de137b4fffb76ad2014b1f4c0c4_4.scala"
  },
  {
    "conversation_hash": "605a0ec3b712098aba2c8f0e128805d8",
    "code_index": 7,
    "language": "Scala",
    "libraries": [],
    "code": "val archiveList: Menu = Menu(\"список архивов\", true, \"архив\")\narchiveList.contents = mutableListOf(\n    Pair(\"Element 1\", null),\n    Pair(\"Element 2\", null),\n    Pair(\"Element 3\", null),\n    Pair(\"Exit/Go Back\", null)\n)",
    "filename": "605a0ec3b712098aba2c8f0e128805d8_7.scala"
  },
  {
    "conversation_hash": "c1bea1ff3de312d8e9f21962cf7928fd",
    "code_index": 4,
    "language": "Scala",
    "libraries": [],
    "code": "r1.ToList().ForEach(x1 => \n{\n    // Perform additional logic here\n    // For example, you can calculate the new value based on some conditions\n    int newValue = 5; // Example logic, modify according to your requirements\n\n    x1.OverDueDebitSrdAmount = newValue;\n});",
    "filename": "c1bea1ff3de312d8e9f21962cf7928fd_4.scala"
  },
  {
    "conversation_hash": "c8e7ccce56d6dbbb2ab202f7b770188d",
    "code_index": 7,
    "language": "Scala",
    "libraries": [],
    "code": "val a: Any? = 5\nmyMethod(a) // Output: 10\n\nval b: Any? = \"Hello\"\nmyMethod(b) // Output: Error: 'a' is not an Int",
    "filename": "c8e7ccce56d6dbbb2ab202f7b770188d_7.scala"
  },
  {
    "conversation_hash": "9134506b07282fef7e3eafaf9d08e237",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": ".element {\n  width: 100%;\n  height: 100vh;\n  background: cyan;\n  position: relative;\n  overflow: hidden;\n}\n\n.square {\n  position: absolute;\n  width: 10px;\n  height: 10px;\n  background: cyan;\n}\n\n@keyframes spiral {\n  0% {\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n  }\n  100% {\n    top: calc(50% - (var(--n) * 5px));\n    left: calc(50% - (var(--n) * 5px));\n    transform: translate(-50%, -50%);\n  }\n}\n\n/* Set the number of squares to achieve the desired spiral effect */\n.element {\n  --n: 20;\n}\n\n.element .square {\n  animation: spiral calc(var(--n) * 0.05s) linear;\n  animation-fill-mode: both;\n  animation-delay: calc(var(--n) * 0.05s);\n}",
    "filename": "9134506b07282fef7e3eafaf9d08e237_0.scala"
  },
  {
    "conversation_hash": "9085f3b57ea9a2914690aab06e49aca3",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "{\n  \"_id\": ObjectId(\"612f727c848349f080f2c8a1\"),\n  \"personId\": ObjectId(\"612f71d9848349f080f2c89f\"),\n  \"organizationId\": ObjectId(\"612f726e848349f080f2c8a0\")\n}",
    "filename": "9085f3b57ea9a2914690aab06e49aca3_0.scala"
  },
  {
    "conversation_hash": "9085f3b57ea9a2914690aab06e49aca3",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "{\n  \"_id\": ObjectId(\"612f72a3848349f080f2c8a2\"),\n  \"personId\": ObjectId(\"612f71d9848349f080f2c89f\"),\n  \"dealId\": ObjectId(\"612f7296848349f080f2c8a3\")\n}",
    "filename": "9085f3b57ea9a2914690aab06e49aca3_1.scala"
  },
  {
    "conversation_hash": "9085f3b57ea9a2914690aab06e49aca3",
    "code_index": 3,
    "language": "Scala",
    "libraries": [],
    "code": "{\n  \"_id\": ObjectId(\"612f72df848349f080f2c8a6\"),\n  \"organizationId\": ObjectId(\"612f726e848349f080f2c8a0\"),\n  \"dealId\": ObjectId(\"612f7296848349f080f2c8a3\")\n}",
    "filename": "9085f3b57ea9a2914690aab06e49aca3_3.scala"
  },
  {
    "conversation_hash": "9085f3b57ea9a2914690aab06e49aca3",
    "code_index": 4,
    "language": "Scala",
    "libraries": [],
    "code": "{\n  \"_id\": ObjectId(\"612f72f8848349f080f2c8a7\"),\n  \"organizationId\": ObjectId(\"612f726e848349f080f2c8a0\"),\n  \"taskId\": ObjectId(\"612f72b9848349f080f2c8a5\")\n}",
    "filename": "9085f3b57ea9a2914690aab06e49aca3_4.scala"
  },
  {
    "conversation_hash": "9085f3b57ea9a2914690aab06e49aca3",
    "code_index": 5,
    "language": "Scala",
    "libraries": [],
    "code": "{\n  \"_id\": ObjectId(\"612f731b848349f080f2c8a8\"),\n  \"dealId\": ObjectId(\"612f7296848349f080f2c8a3\"),\n  \"taskId\": ObjectId(\"612f72b9848349f080f2c8a5\")\n}",
    "filename": "9085f3b57ea9a2914690aab06e49aca3_5.scala"
  },
  {
    "conversation_hash": "e2b502054ff69966cafc7fda3e1eb274",
    "code_index": 3,
    "language": "Scala",
    "libraries": [],
    "code": "import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { AppComponent } from './app.component';\nimport { PublisherComponent } from './components/publisher.component';\nimport { ConsumerComponent } from './components/consumer.component';\n\nconst routes: Routes = [\n  { path: 'publisher', component: PublisherComponent },\n  { path: 'consumer', component: ConsumerComponent },\n  { path: '', redirectTo: 'publisher', pathMatch: 'full' },\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    PublisherComponent,\n    ConsumerComponent\n  ],\n  imports: [\n    BrowserModule,\n    RouterModule.forRoot(routes)\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }",
    "filename": "e2b502054ff69966cafc7fda3e1eb274_3.scala"
  },
  {
    "conversation_hash": "e392827486ef6e23294981f519d53479",
    "code_index": 3,
    "language": "Scala",
    "libraries": [],
    "code": "import { Column, Entity, PrimaryGeneratedColumn } from 'typeorm';\n\n@Entity()\nexport class MyEntity {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column()\n  name: string;\n\n  @Column()\n  companyId: number;\n}",
    "filename": "e392827486ef6e23294981f519d53479_3.scala"
  },
  {
    "conversation_hash": "e392827486ef6e23294981f519d53479",
    "code_index": 4,
    "language": "Scala",
    "libraries": [],
    "code": "import { MigrationInterface, QueryRunner } from 'typeorm';\n\nexport class AddUniqueConstraint1600000000000 implements MigrationInterface {\n  async up(queryRunner: QueryRunner): Promise<void> {\n    await queryRunner.query('ALTER TABLE my_entity ADD CONSTRAINT UQ_company_id UNIQUE (companyId)');\n  }\n\n  async down(queryRunner: QueryRunner): Promise<void> {\n    await queryRunner.query('ALTER TABLE my_entity DROP CONSTRAINT UQ_company_id');\n  }\n}",
    "filename": "e392827486ef6e23294981f519d53479_4.scala"
  },
  {
    "conversation_hash": "8d74bb87de8af4cacb4b2e328a5f4036",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "# Ativando o circuit breaker para todas as solicitações HTTP\nresilience4j.circuitbreaker.enabled=true\n\n# Limite de falhas consecutivas antes de abrir o circuit breaker\nresilience4j.circuitbreaker.failureRateThreshold=50\n\n# Tempo mínimo em que o circuit breaker ficará aberto\nresilience4j.circuitbreaker.waitDurationInOpenState=10000ms\n\n# Número mínimo de solicitações para fazer antes de avaliar a disponibilidade do circuit breaker\nresilience4j.circuitbreaker.permittedNumberOfCallsInHalfOpenState=10\n\n# Número máximo de solicitações permitidas no circuit breaker em um intervalo de tempo específico\nresilience4j.circuitbreaker.slidingWindowSize=100\n\n# Duração do intervalo em que o circuit breaker contará as solicitações para acionar a abertura\nresilience4j.circuitbreaker.slidingWindowType=COUNT_BASED\n\n# Tempo mínimo em que o circuit breaker ficará fechado antes de tentar abrir novamente\nresilience4j.circuitbreaker.waitDurationInOpenState=30s\n\n# Ativando métricas do circuit breaker\nmanagement.metrics.export.resilience4j.enabled=true\nmanagement.metrics.export.resilience4j.names=backendCircuitBreaker\n\n# Ativando logs do circuit breaker\nlogging.level.io.github.resilience4j.circuitbreaker=DEBUG",
    "filename": "8d74bb87de8af4cacb4b2e328a5f4036_1.scala"
  },
  {
    "conversation_hash": "6116557ce559b3ac4c26c3d82ab48114",
    "code_index": 4,
    "language": "Scala",
    "libraries": [],
    "code": "<FormControl sx={{mr: 2}}>\n  <InputLabel>Статус заявки</InputLabel>\n  <Select\n    value={statusFilter}\n    onChange={e => setStatusFilter(e.target.value as string|null)}\n    autoWidth\n  >\n    <MenuItem value={null}>Выбрать все</MenuItem>\n    <MenuItem value=\"оплачен\">Оплачен</MenuItem>\n    <MenuItem value=\"отменен\">Отменен</MenuItem>\n    <MenuItem value=\"новый\">Новый</MenuItem>\n  </Select>\n</FormControl>\n<FormControl sx={{mr: 2}}>\n  <InputLabel>Курс</InputLabel>\n  <Select\n    value={courseFilter}\n    onChange={e => setCourseFilter(e.target.value as string|null)}\n    autoWidth\n  >\n    <MenuItem value={null}>Выбрать все</MenuItem>\n    {orders?.data.map(order => (\n      order.courses.map(course => (\n        <MenuItem key={course} value={course}>{course}</MenuItem>\n      ))\n    ))}\n  </Select>\n</FormControl>\n<TextField\n  type=\"date\"\n  label=\"Период (с)\"\n  value={startDateFilter}\n  onChange={e => setStartDateFilter(e.target.value)}\n  InputLabelProps={{shrink: true}}\n  sx={{mr: 2}}\n/>\n<TextField\n  type=\"date\"\n  label=\"Период (по)\"\n  value={endDateFilter}\n  onChange={e => setEndDateFilter(e.target.value)}\n  InputLabelProps={{shrink: true}}\n  sx={{mr: 2}}\n/>",
    "filename": "6116557ce559b3ac4c26c3d82ab48114_4.scala"
  },
  {
    "conversation_hash": "1746f2178bb06f60574fd4a3167d71aa",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "Array\n(\n    [0] => Hel\n    [1] => loW\n    [2] => orl\n    [3] => d\n)",
    "filename": "1746f2178bb06f60574fd4a3167d71aa_1.scala"
  },
  {
    "conversation_hash": "1403d3ade46411f6a537dda230172d22",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "import { LightningElement, track } from 'lwc';\n\nexport default class YourComponent extends LightningElement {\n    @track defaultCloseDate = '2022-01-01';\n    @track defaultOpportunityName = 'Default Opportunity';\n    @track defaultAmount = 1000;\n    \n    // ... other code ...\n\n    // Getter and setter for default Close Date\n    get defaultCloseDateValue() {\n        return this.defaultCloseDate;\n    }\n    \n    set defaultCloseDateValue(value) {\n        this.defaultCloseDate = value;\n        // Handle any logic you need when the value changes\n    }\n    \n    // Getter and setter for default Opportunity Name\n    get defaultOpportunityNameValue() {\n        return this.defaultOpportunityName;\n    }\n    \n    set defaultOpportunityNameValue(value) {\n        this.defaultOpportunityName = value;\n        // Handle any logic you need when the value changes\n    }\n    \n    // Getter and setter for default Amount\n    get defaultAmountValue() {\n        return this.defaultAmount;\n    }\n    \n    set defaultAmountValue(value) {\n        this.defaultAmount = value;\n        // Handle any logic you need when the value changes\n    }\n\n    // ... other code ...\n}",
    "filename": "1403d3ade46411f6a537dda230172d22_0.scala"
  },
  {
    "conversation_hash": "1403d3ade46411f6a537dda230172d22",
    "code_index": 4,
    "language": "Scala",
    "libraries": [
      "Lead",
      "Partner"
    ],
    "code": "import { LightningElement, track } from 'lwc';\n\nexport default class YourComponent extends LightningElement {\n    @track opportunityName;\n\n    // ... other code ...\n\n    get defaultOpportunityNameValue() {\n        const leadCompany = this.lead.Company; // Assuming the Lead object is available and the field is named \"Company\"\n        this.opportunityName = `${leadCompany} from Partner Account Name`; // Using the Company field from Lead to set the opportunity name\n        return this.opportunityName;\n    }\n\n    set defaultOpportunityNameValue(value) {\n        this.opportunityName = value;\n        // Handle any logic you need when the value changes\n    }\n\n    // ... other code ...\n}",
    "filename": "1403d3ade46411f6a537dda230172d22_4.scala"
  },
  {
    "conversation_hash": "12e45ff1edf148f4e15c945929893dcb",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "struct Point\n    x::Float64\n    y::Float64\nend\n\np = Point(3.0, 4.0)\nprintln(p.x)  # Выведет 3.0\nprintln(p.y)  # Выведет 4.0",
    "filename": "12e45ff1edf148f4e15c945929893dcb_1.scala"
  },
  {
    "conversation_hash": "761fb26bae93aff929933a66c4c7aab2",
    "code_index": 0,
    "language": "Scala",
    "libraries": [
      "com.atlassian.confluence.pages.AttachmentManager",
      "com.atlassian.plugin.spring.scanner.annotation.imports.ComponentImport",
      "org.springframework.beans.factory.annotation.Autowired"
    ],
    "code": "import com.atlassian.confluence.pages.AttachmentManager\nimport com.atlassian.plugin.spring.scanner.annotation.imports.ComponentImport\nimport org.springframework.beans.factory.annotation.Autowired\n\n// disable thumbnails\n@ComponentImport\nprivate AttachmentManager attachmentManager\nAttachments.RepresentationsMode disableThumbnails() {\n    Attachments.RepresentationsMode originalMode = attachmentManager.getAttachmentsRepresentationsMode()\n    attachmentManager.setAttachmentsRepresentationsMode(Attachments.RepresentationsMode.NONE)\n    return originalMode\n}\n\n// enable thumbnails\n@ComponentImport\nprivate AttachmentManager attachmentManager\nvoid enableThumbnails(Attachments.RepresentationsMode originalMode) {\n    attachmentManager.setAttachmentsRepresentationsMode(originalMode)\n}\n\ndisableThumbnails()\n// enableThumbnails(<originalMode>) if you want to enable thumbnails again",
    "filename": "761fb26bae93aff929933a66c4c7aab2_0.scala"
  },
  {
    "conversation_hash": "2e5d7e9a44e4cadc56cc13b0dfcb5c5d",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "mapping(uint8 => mapping(uint8 => Player)) public gamePlayers; //gameId(index => Player)\n\n// Exemple de définition des joueurs pour un jeu donné (gameId) avec leur index correspondant\ngamePlayers[gameId][0] = Player({\n    playerAddress: player1,\n    index: 0\n});\ngamePlayers[gameId][1] = Player({\n    playerAddress: player2,\n    index: 1\n});",
    "filename": "2e5d7e9a44e4cadc56cc13b0dfcb5c5d_1.scala"
  },
  {
    "conversation_hash": "2e5d7e9a44e4cadc56cc13b0dfcb5c5d",
    "code_index": 4,
    "language": "Scala",
    "libraries": [],
    "code": "mapping(uint8 => Bet) public gameBets;\nmapping(uint8 => mapping(address => uint256)) public playerBalances; //on utilise un mapping indépendant pour les balances des joueurs\n\nstruct Bet {\n    uint256 bet; \n    bool player1hasWithdrawn;\n    bool player2hasWithdrawn; \n}",
    "filename": "2e5d7e9a44e4cadc56cc13b0dfcb5c5d_4.scala"
  },
  {
    "conversation_hash": "54ea637be9b7b5c31331c39c2e1bba7c",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "def cashMoneyItems = []\n\nresponse.Result.items.each { item ->\n    def surname = item.surname\n    def cashMoney = item.cashMoney\n\n    def cashMoneyItem = [\n        surname: surname,\n        cashMoney: cashMoney\n    ]\n    \n    cashMoneyItems.add(cashMoneyItem)\n}\n\nprintln cashMoneyItems",
    "filename": "54ea637be9b7b5c31331c39c2e1bba7c_0.scala"
  },
  {
    "conversation_hash": "54ea637be9b7b5c31331c39c2e1bba7c",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "def cashMoneyItems = []\n\nresponse.Result.items.each { item ->\n    def surname = item.surname\n    def cashMoney = item.cashMoney\n\n    cashMoney.each { key, value ->\n        def cashMoneyItem = [\n            surname: surname,\n            cashMoneyKey: key,\n            cashMoneyValue: value\n        ]\n        \n        cashMoneyItems.add(cashMoneyItem)\n    }\n}\n\nprintln cashMoneyItems",
    "filename": "54ea637be9b7b5c31331c39c2e1bba7c_1.scala"
  },
  {
    "conversation_hash": "21f9ccb98b4be766a86bb31f86f17cdf",
    "code_index": 4,
    "language": "Scala",
    "libraries": [],
    "code": "Client    Product       Date  Class\n0  Client A  Product X 2021-01-01      1\n2  Client A  Product Y 2021-02-10      2\n3  Client A  Product Z 2021-02-11      3\n4  Client B  Product X 2021-01-15      1\n5  Client B  Product Y 2021-01-16      1\n6  Client B  Product X 2021-03-01      2",
    "filename": "21f9ccb98b4be766a86bb31f86f17cdf_4.scala"
  },
  {
    "conversation_hash": "763e03aaa72f75a6ddbb8fb18f44aa9c",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "humanResourceCatalogItems.items.findAll { it.role != 'lector' }.each { human ->\n    responeMap.values().each { response ->\n        if (response.surname == human.surname) {\n            // выполнить операцию над отфильтрованным элементом\n        }\n    }\n}",
    "filename": "763e03aaa72f75a6ddbb8fb18f44aa9c_0.scala"
  },
  {
    "conversation_hash": "06d45d90a966c0eed7c5ac7bc117ff97",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "humanResourceCatalogItems.items.findAll { it.role != 'lector' }.each { human ->\n    responseMap.values().each { response ->\n        if (response.surname == human.surname) {\n            // ...\n        }\n    }\n}\n\n// Удаление лекторов из responseMap\nresponseMap.removeIf { key, value -> value.role == 'lector' }\n\nexchange.setProperty(TEST_WARDROBE_POCKETS_LIST, responseMap)",
    "filename": "06d45d90a966c0eed7c5ac7bc117ff97_0.scala"
  },
  {
    "conversation_hash": "c367353fe8c7cafe737df09be6edb9ab",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "def newMap = responseMap.findAll { key, value ->\n    humanResourceCatalogItems.items.findAll { it.role != 'lector' }.any { human->\n        value.surname == human.surname\n    }\n}",
    "filename": "c367353fe8c7cafe737df09be6edb9ab_1.scala"
  },
  {
    "conversation_hash": "0661043b042eaba9d1c5a6a4fc42b6c4",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "responseMap = responseMap.findAll { key, value ->\n    humanResourceCatalogItems.items.findAll { it.role != 'lector' }.each { human ->\n        if(value.surname == human.surname) {\n            return true  // сохранение найденных элементов в responseMap\n        }\n    }\n    return false\n}",
    "filename": "0661043b042eaba9d1c5a6a4fc42b6c4_0.scala"
  },
  {
    "conversation_hash": "9fe93f10d2e61259fd43794fe5225747",
    "code_index": 6,
    "language": "Scala",
    "libraries": [],
    "code": "@foreach (var course in Model)\n{\n    <!-- Display course details with a link to its details page -->\n    <div>\n        <h3>@course.Name</h3>\n        <p>@course.Description</p>\n        <a href=\"/course/@course.Id\">View Details</a>\n    </div>\n}",
    "filename": "9fe93f10d2e61259fd43794fe5225747_6.scala"
  },
  {
    "conversation_hash": "81d90b0d5348e6dbff3ef28f3a778db5",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "<androidx.appcompat.widget.AppCompatButton\n    android:layout_width=\"wrap_content\"\n    android:layout_height=\"wrap_content\"\n    android:background=\"@drawable/button_background\"\n    android:text=\"My Rounded Button\" />",
    "filename": "81d90b0d5348e6dbff3ef28f3a778db5_1.scala"
  },
  {
    "conversation_hash": "e3081188863e23ddd4b52240057899cc",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "id fp_1 fp_2 fp_3 fp_4 v_1 v_2  v_3  v_4\n0   1    1    2    3    4   a   b    c    d\n1   2    5    6    7  NaN   e   f    g  NaN\n2   3    8    9   10   11   h   i    j    k\n3   3    8    9   10   11   h   i    j    k\n4   3    8    9   10   11   h   i    j    k\n5   3    8    9   10   11   h   i    j    k\n6   3   12  NaN  NaN  NaN   l NaN  NaN  NaN",
    "filename": "e3081188863e23ddd4b52240057899cc_1.scala"
  },
  {
    "conversation_hash": "e3081188863e23ddd4b52240057899cc",
    "code_index": 5,
    "language": "Scala",
    "libraries": [],
    "code": "id fp_1 fp_2 fp_3 fp_4 v_1 v_2  v_3  v_4\n0   1    1    2    3    4   a   b    c    d\n1   2    5    6    7  NaN   e   f    g  NaN\n2   3    8    9   10   11   h   i    j    k\n3   3   12  NaN  NaN  NaN   l NaN  NaN  NaN",
    "filename": "e3081188863e23ddd4b52240057899cc_5.scala"
  },
  {
    "conversation_hash": "353c72f5a7b68b8256e5a69f56ef2b17",
    "code_index": 4,
    "language": "Scala",
    "libraries": [],
    "code": "C#\nforeach (GameObject obj in taggedObjects)\n{\n    // ...\n}",
    "filename": "353c72f5a7b68b8256e5a69f56ef2b17_4.scala"
  },
  {
    "conversation_hash": "dfdfbe54f4443a274f36f9f210e5bc26",
    "code_index": 2,
    "language": "Scala",
    "libraries": [],
    "code": "val replacementsArray: Array<Replacement> = arrayOf(\n    Replacement(\"совпадение1\", \"замена1\"),\n    Replacement(\"совпадение2\", \"замена2\"),\n    Replacement(\"совпадение3\", \"замена3\")\n)",
    "filename": "dfdfbe54f4443a274f36f9f210e5bc26_2.scala"
  },
  {
    "conversation_hash": "4452073aa49eaed76d6b1b19e60922ef",
    "code_index": 4,
    "language": "Scala",
    "libraries": [],
    "code": "val intent = VpnService.prepare(this)\n   if (intent != null) {\n       startActivityForResult(intent, REQUEST_VPN)\n   } else {\n       onActivityResult(REQUEST_VPN, Activity.RESULT_OK, null)\n   }",
    "filename": "4452073aa49eaed76d6b1b19e60922ef_4.scala"
  },
  {
    "conversation_hash": "4452073aa49eaed76d6b1b19e60922ef",
    "code_index": 6,
    "language": "Scala",
    "libraries": [],
    "code": "val startForResult =\n    registerForActivityResult(ActivityResultContracts.StartActivityForResult()) { result ->\n        if (result.resultCode == Activity.RESULT_OK) {\n            // Обработка успешного результата\n        }\n    }\n\nval intent = VpnService.prepare(this)\nif (intent != null) {\n    startForResult.launch(intent)\n} else {\n    // Без prepare\n    //...\n}",
    "filename": "4452073aa49eaed76d6b1b19e60922ef_6.scala"
  },
  {
    "conversation_hash": "e7caca7871e791bbc07c9566f20d7485",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "ngOnChanges(changes: SimpleChanges) {\n       if (changes.filteredCountries) {\n         this.calculateTotalPages();\n       }\n     }",
    "filename": "e7caca7871e791bbc07c9566f20d7485_0.scala"
  },
  {
    "conversation_hash": "e0ac3c56965c6a79a486ff163461790f",
    "code_index": 2,
    "language": "Scala",
    "libraries": [],
    "code": "var routesForFulan = await _dbContext.RouteSummaries\n    .Where(r => locationsForFulan.Contains(r.SourceLocationNavigation.LocationName) && r.LocationSequence == 1) // Filter routes based on accessible locations and location sequence is 1\n    .Select(r => new\n    {\n        r.RouteId,\n        routeName = r.RouteName,\n        sourceLocation = r.SourceLocationNavigation.LocationName,\n        destinationLocation = r.DestinationLocationNavigation.LocationName\n    })\n    .Distinct()\n    .ToListAsync();",
    "filename": "e0ac3c56965c6a79a486ff163461790f_2.scala"
  },
  {
    "conversation_hash": "992bac84c2622ea9e715e3d1a989549c",
    "code_index": 5,
    "language": "Scala",
    "libraries": [],
    "code": "import { Component } from '@angular/core';\n   import { UserService } from 'path-to-user-service';\n\n   @Component({\n     selector: 'app-toggle-server',\n     template: `\n       <button (click)=\"toggleServer()\">Toggle Server</button>\n     `\n   })\n   export class ToggleServerComponent {\n     constructor(private userService: UserService) {}\n\n     toggleServer(): void {\n       this.userService.toggleServer();\n     }\n   }",
    "filename": "992bac84c2622ea9e715e3d1a989549c_5.scala"
  },
  {
    "conversation_hash": "9c3c93ed2cb6fb9e04a06faf8fda5eb5",
    "code_index": 5,
    "language": "Scala",
    "libraries": [],
    "code": "cmake_minimum_required(VERSION 3.0)\nproject(MyProject)\n\nset(SOURCE_FILES main.cpp)  # Замените main.cpp на список ваших исходных файлов\n\nadd_executable(MyApp ${SOURCE_FILES})",
    "filename": "9c3c93ed2cb6fb9e04a06faf8fda5eb5_5.scala"
  },
  {
    "conversation_hash": "420ea0dad08936b13c0646b88ce0a03e",
    "code_index": 2,
    "language": "Scala",
    "libraries": [],
    "code": "cmake_minimum_required(VERSION 3.12)\nproject(YourProjectName)\n\nset(CMAKE_CXX_STANDARD 20)  # Устанавливаем C++20\n\nfind_package(SDL2 REQUIRED)  # Поиск установленной библиотеки SDL2\n\ninclude_directories(${SDL2_INCLUDE_DIRS})\n\nadd_executable(YourExecutable main.cpp)  # Замените \"YourExecutable\" на имя вашего исполняемого файла\n\ntarget_link_libraries(YourExecutable ${SDL2_LIBRARIES})",
    "filename": "420ea0dad08936b13c0646b88ce0a03e_2.scala"
  },
  {
    "conversation_hash": "fbc2165e4390882c4477fed6b6aa8924",
    "code_index": 3,
    "language": "Scala",
    "libraries": [],
    "code": "println(to_vector(10))  # Вывод: [10]\nprintln(to_vector(\"Hello\"))  # Вывод: [\"Hello\"]\nprintln(to_vector([1, 2, 3]))  # Вывод: [1, 2, 3]\n\n# Пример, когда вход уже является многомерным массивом\ninput_array = [[1, 2], [3, 4]]\nprintln(to_vector(input_array))  # Вывод: [[1, 2], [3, 4]]",
    "filename": "fbc2165e4390882c4477fed6b6aa8924_3.scala"
  },
  {
    "conversation_hash": "fbc2165e4390882c4477fed6b6aa8924",
    "code_index": 7,
    "language": "Scala",
    "libraries": [],
    "code": "println(to_matrix(10))  # Вывод: [10]\nprintln(to_matrix(\"Hello\"))  # Вывод: [\"Hello\"]\nprintln(to_matrix([1, 2, 3]))  # Вывод: [[1, 2, 3]]\n\n# Пример, когда вход уже является многомерным массивом\ninput_array = [[1, 2], [3, 4]]\nprintln(to_matrix(input_array))  # Вывод: [[[1, 2], [3, 4]]]",
    "filename": "fbc2165e4390882c4477fed6b6aa8924_7.scala"
  },
  {
    "conversation_hash": "fbc2165e4390882c4477fed6b6aa8924",
    "code_index": 9,
    "language": "Scala",
    "libraries": [],
    "code": "println(to_vector(10))  # Вывод: [10]\nprintln(to_vector(\"Hello\"))  # Вывод: [\"Hello\"]\nprintln(to_vector([1, 2, 3]))  # Вывод: [1, 2, 3]\n\n# Пример, когда вход уже является многомерным массивом\ninput_array = [[1, 2], [3, 4]]\nprintln(to_vector(input_array))  # Вывод: [[1, 2], [3, 4]]",
    "filename": "fbc2165e4390882c4477fed6b6aa8924_9.scala"
  },
  {
    "conversation_hash": "3092ec3521588689f242eaae8394cc2c",
    "code_index": 5,
    "language": "Scala",
    "libraries": [],
    "code": "matrix1 = [1 2; 3 4]\nmatrix2 = [1 2; 3 4; 5 6]\n\nprintln(check_matrix_dimension(matrix1))  # true\nprintln(check_matrix_dimension(matrix2))  # false",
    "filename": "3092ec3521588689f242eaae8394cc2c_5.scala"
  },
  {
    "conversation_hash": "3092ec3521588689f242eaae8394cc2c",
    "code_index": 7,
    "language": "Scala",
    "libraries": [],
    "code": "matrix1 = [1 2 3]\nmatrix2 = [1; 2; 3]\nmatrix3 = [1 2; 3 4; 5 6]\n\nprintln(check_matrix_dimension(matrix1))  # false\nprintln(check_matrix_dimension(matrix2))  # false\nprintln(check_matrix_dimension(matrix3))  # true",
    "filename": "3092ec3521588689f242eaae8394cc2c_7.scala"
  },
  {
    "conversation_hash": "3092ec3521588689f242eaae8394cc2c",
    "code_index": 9,
    "language": "Scala",
    "libraries": [],
    "code": "matrix1 = [1 2 3]\nmatrix2 = [1; 2; 3]\nmatrix3 = [1 2; 3 4; 5 6]\n\nprintln(check_matrix_dimension(matrix1))  # false\nprintln(check_matrix_dimension(matrix2))  # false\nprintln(check_matrix_dimension(matrix3))  # true",
    "filename": "3092ec3521588689f242eaae8394cc2c_9.scala"
  },
  {
    "conversation_hash": "fef37416c92b1e566c7cd17be80b807f",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "val path2 = Path().apply {\n    arcTo(\n        -view1Location[0].toFloat(),\n        -view2Location[1].toFloat(),\n        view1Location[0].toFloat(),\n        view2Location[1].toFloat(),\n        -0f,\n        90f,\n        false\n    )\n}",
    "filename": "fef37416c92b1e566c7cd17be80b807f_0.scala"
  },
  {
    "conversation_hash": "fef37416c92b1e566c7cd17be80b807f",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "val path2 = Path().apply {\n    arcTo(\n        view1Location[0].toFloat(),\n        view2Location[1].toFloat(),\n        -view1Location[0].toFloat(),\n        -view2Location[1].toFloat(),\n        -0f,\n        -90f,\n        false\n    )\n}",
    "filename": "fef37416c92b1e566c7cd17be80b807f_1.scala"
  },
  {
    "conversation_hash": "fef37416c92b1e566c7cd17be80b807f",
    "code_index": 2,
    "language": "Scala",
    "libraries": [],
    "code": "val path2 = Path().apply {\n    arcTo(\n        view1Location[0].toFloat(),\n        view2Location[1].toFloat(),\n        -view1Location[0].toFloat(),\n        -view2Location[1].toFloat(),\n        -0f,\n        -90f,\n        false\n    )\n}\nval positionAnimator = ObjectAnimator.ofFloat(view3, View.X, View.Y, path2).apply {\n    duration = 2000\n    start()\n}",
    "filename": "fef37416c92b1e566c7cd17be80b807f_2.scala"
  },
  {
    "conversation_hash": "b7b1574cf849db10aa65264f04c0db07",
    "code_index": 2,
    "language": "Scala",
    "libraries": [
      "client"
    ],
    "code": "extends Node\n\nfunc _ready():\n    var server = GameServer.new()\n    server.start(1234)\n\n    var client = GameClient.new()\n    client.connect_to_server(\"127.0.0.1\", 1234)\n    client.send_to_server(\"Hello from client!\")",
    "filename": "b7b1574cf849db10aa65264f04c0db07_2.scala"
  },
  {
    "conversation_hash": "9ff7726c5c53a94e7bcd2b35f8f364d4",
    "code_index": 7,
    "language": "Scala",
    "libraries": [],
    "code": "import { ElementRef, ViewChild } from '@angular/core';\n\nexport class ChatComponent {\n  @ViewChild(\"chatContainer\") chatContainer: ElementRef;\n\n  scrollToBottom(): void {\n    const container = this.chatContainer.nativeElement;\n    container.scrollTop = container.scrollHeight;\n  }\n}",
    "filename": "9ff7726c5c53a94e7bcd2b35f8f364d4_7.scala"
  },
  {
    "conversation_hash": "55ce28aea90d830c85a97263772958ae",
    "code_index": 7,
    "language": "Scala",
    "libraries": [],
    "code": "export class YourComponent {\n  categories: string[] = ['Category 1', 'Category 2', 'Category 3'];\n  selectedCategories: string[] = [];\n\n  toggleCategorySelection(category: string): void {\n    if (this.selectedCategories.includes(category)) {\n      // Deselect the category\n      this.selectedCategories = this.selectedCategories.filter(c => c !== category);\n    } else {\n      // Select the category\n      this.selectedCategories.push(category);\n    }\n  }\n}",
    "filename": "55ce28aea90d830c85a97263772958ae_7.scala"
  },
  {
    "conversation_hash": "55ce28aea90d830c85a97263772958ae",
    "code_index": 9,
    "language": "Scala",
    "libraries": [],
    "code": "export class YourComponent {\n  rows: string[] = ['Row 1', 'Row 2', 'Row 3'];\n  selectedRows: string[] = [];\n\n  toggleRowSelection(row: string): void {\n    if (this.selectedRows.includes(row)) {\n      // Deselect the row\n      this.selectedRows = this.selectedRows.filter(r => r !== row);\n    } else {\n      // Select the row\n      this.selectedRows.push(row);\n    }\n  }\n}",
    "filename": "55ce28aea90d830c85a97263772958ae_9.scala"
  },
  {
    "conversation_hash": "2eefd2b813ff9b8fb9cb9fe809c064d1",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": ".addUserOption(option =>\n    option\n        .setName('member')\n        .setDescription('пользователь для взаимодействия')\n        .setRequired(true)),\n\n.addStringOption(option =>",
    "filename": "2eefd2b813ff9b8fb9cb9fe809c064d1_0.scala"
  },
  {
    "conversation_hash": "e642c93c043befcf6b1aaf5de3c5551e",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "export ZEPPELIN_SSL=\"true\"\n     export ZEPPELIN_SSL_PORT=<desired SSL port>\n     export ZEPPELIN_SSL_KEYSTORE_PATH=<path to .pem certificate file>\n     export ZEPPELIN_SSL_KEYSTORE_TYPE=\"PEM\"\n     export ZEPPELIN_SSL_KEYSTORE_PASSWORD=<password for the .pem certificate file>",
    "filename": "e642c93c043befcf6b1aaf5de3c5551e_0.scala"
  },
  {
    "conversation_hash": "30c440ba9ce15d8112f663228926cc0c",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConfigService {\n  private baseUrl = 'https://localhost:78/api/';\n\n  constructor() { }\n\n  getBaseUrl(): string {\n    return this.baseUrl;\n  }\n}",
    "filename": "30c440ba9ce15d8112f663228926cc0c_0.scala"
  },
  {
    "conversation_hash": "c4ba4af05e995e1a9c606373cfe7f522",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "<dependency>\n    <groupId>io.springfox</groupId>\n    <artifactId>springfox-swagger2</artifactId>\n    <version>версия</version>\n</dependency>",
    "filename": "c4ba4af05e995e1a9c606373cfe7f522_0.scala"
  },
  {
    "conversation_hash": "c4ba4af05e995e1a9c606373cfe7f522",
    "code_index": 5,
    "language": "Scala",
    "libraries": [],
    "code": "<dependency>\n    <groupId>io.springfox</groupId>\n    <artifactId>springfox-boot-starter</artifactId>\n    <version>версия</version>\n</dependency>",
    "filename": "c4ba4af05e995e1a9c606373cfe7f522_5.scala"
  },
  {
    "conversation_hash": "15b6e4e24649c4a4c2f1f6a341f9c8c7",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "var horizontalScrollView = HorizontalScrollView(scrollViewPn.context)\nval layoutParams = LinearLayout.LayoutParams(\n    LinearLayout.LayoutParams.MATCH_PARENT,  // Устанавливаем ширину на MATCH_PARENT\n    500  // Здесь вы можете указать желаемую высоту\n)\nhorizontalScrollView.layoutParams = layoutParams",
    "filename": "15b6e4e24649c4a4c2f1f6a341f9c8c7_1.scala"
  },
  {
    "conversation_hash": "15b6e4e24649c4a4c2f1f6a341f9c8c7",
    "code_index": 2,
    "language": "Scala",
    "libraries": [],
    "code": "var imageView = ImageView(horizontalLinearLayout.context)\nval layoutParams = LinearLayout.LayoutParams(\n    200,  // Устанавливаем ширину в пикселях\n    300  // Устанавливаем высоту в пикселях\n)\nimageView.layoutParams = layoutParams\nimageView.setImageResource(R.drawable.your_image_resource)",
    "filename": "15b6e4e24649c4a4c2f1f6a341f9c8c7_2.scala"
  },
  {
    "conversation_hash": "b26a18cf907a259e25ba0c3f21906fb0",
    "code_index": 3,
    "language": "Scala",
    "libraries": [],
    "code": "val newArrayOfArrays = Array(2) { index ->\n    if (index == 0) {\n        arrayAddrR[0]\n    } else {\n        Array(mCntX * mCntY) { 0 }\n    }\n}\n\narrayAddrR = newArrayOfArrays",
    "filename": "b26a18cf907a259e25ba0c3f21906fb0_3.scala"
  },
  {
    "conversation_hash": "b26a18cf907a259e25ba0c3f21906fb0",
    "code_index": 4,
    "language": "Scala",
    "libraries": [],
    "code": "val newArrayOfArrays = Array(arrayAddrR.size) { index ->\n    if (index == id) {\n        arrayAddrR[0]\n    } else {\n        arr.clone()\n    }\n}\narrayAddrR = newArrayOfArrays",
    "filename": "b26a18cf907a259e25ba0c3f21906fb0_4.scala"
  },
  {
    "conversation_hash": "b26a18cf907a259e25ba0c3f21906fb0",
    "code_index": 7,
    "language": "Scala",
    "libraries": [],
    "code": "arrayAddrR = Array(2) { Array(mCntX * mCntY) { 0 } }\nval arr = Array(xsize!! * ysize!!) {\n    arrayOfNulls<Int>(1)\n}\narrayAddrR[0] = arr as Array<Int>",
    "filename": "b26a18cf907a259e25ba0c3f21906fb0_7.scala"
  },
  {
    "conversation_hash": "a5e28a2901f4a4057466edf0867c4671",
    "code_index": 0,
    "language": "Scala",
    "libraries": [
      "MyModule"
    ],
    "code": "module MyModule\n\nexport myVariable\n\nmyVariable = 0\n\nend\n\nmodule Main\n\nusing .MyModule\n\n# Assign a value to myVariable from MyModule\nMyModule.myVariable = 5\n\nprintln(MyModule.myVariable)  # Output: 5\n\nend",
    "filename": "a5e28a2901f4a4057466edf0867c4671_0.scala"
  },
  {
    "conversation_hash": "f698603ba6acd23ff90fa5fe171f3179",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "mutable struct Complex\n    real::Float64\n    imag::Float64\nend\n\nc = Complex(1.0, 2.0)\nprintln(c)  # Output: Complex(1.0, 2.0)\n\nc.real = 3.0\nprintln(c)  # Output: Complex(3.0, 2.0)",
    "filename": "f698603ba6acd23ff90fa5fe171f3179_0.scala"
  },
  {
    "conversation_hash": "9c54acd831dbd307cc1ce3b119485fe0",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "Array\n(\n    [0] => 118.0.5993.90\n    [1] => 118.0.5993.117\n    [2] => 118.0.5993.118\n)",
    "filename": "9c54acd831dbd307cc1ce3b119485fe0_1.scala"
  },
  {
    "conversation_hash": "8cb920df68523d2c5e28b05ec827cdc2",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "Array\n(\n    [0] => 118.0.5993.90\n    [1] => 118.0.5993.117\n    [2] => 118.0.5993.118\n)",
    "filename": "8cb920df68523d2c5e28b05ec827cdc2_1.scala"
  },
  {
    "conversation_hash": "076f54c2c2e840a78cf7d6551c6a24ac",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "table.controltable {\n  display: block; /* Cambiamos el display a block */\n  height: 300px; /* Establecemos la altura deseada */\n  /* Agrega otros estilos según sea necesario */\n}",
    "filename": "076f54c2c2e840a78cf7d6551c6a24ac_1.scala"
  },
  {
    "conversation_hash": "076f54c2c2e840a78cf7d6551c6a24ac",
    "code_index": 2,
    "language": "Scala",
    "libraries": [],
    "code": "table.controltable {\n  display: block; /* Cambiamos el display a block */\n}\ntbody {\n  display: block; /* Cambiamos el display a block para poder establecer la altura */\n  height: 300px; /* Establecemos la altura deseada para tbody */\n  overflow: auto; /* Agregamos desplazamiento vertical si el contenido excede la altura */\n}",
    "filename": "076f54c2c2e840a78cf7d6551c6a24ac_2.scala"
  },
  {
    "conversation_hash": "070f7ba3eacc9e1b4ce11cb998c27a73",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "import 'package:flutter/material.dart';\nimport 'package:webview_flutter/webview_flutter.dart';\n\nclass CheckoutPage extends StatelessWidget {\n  // Update the `checkoutUrl` with your CloudPayments Checkout script URL\n  final String checkoutUrl = 'https://your-cloudpayments-checkout-url.com';\n\n  @override\n  Widget build(BuildContext context) {\n    return Scaffold(\n      appBar: AppBar(\n        title: Text('CloudPayments Checkout'),\n      ),\n      body: WebView(\n        initialUrl: checkoutUrl,\n      ),\n    );\n  }\n}",
    "filename": "070f7ba3eacc9e1b4ce11cb998c27a73_0.scala"
  },
  {
    "conversation_hash": "b3e75d4727a9ae9d47604d8586df25c7",
    "code_index": 3,
    "language": "Scala",
    "libraries": [],
    "code": "import { Component, forwardRef, OnInit } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\n@Component({\n  selector: 'custom-checkbox',\n  template: `\n    <input type=\"checkbox\" [(ngModel)]=\"value\" (change)=\"onChange($event.target.checked)\">\n  `,\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => CustomCheckboxComponent),\n      multi: true\n    }\n  ]\n})\nexport class CustomCheckboxComponent implements ControlValueAccessor, OnInit {\n  value: boolean;\n  onChange: any = () => {};\n  onTouched: any = () => {};\n\n  ngOnInit() {}\n\n  writeValue(value: any) {\n    this.value = value;\n  }\n\n  registerOnChange(fn: any) {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: any) {\n    this.onTouched = fn;\n  }\n}",
    "filename": "b3e75d4727a9ae9d47604d8586df25c7_3.scala"
  },
  {
    "conversation_hash": "cdc637215e413a1203a2eeb93e037cc2",
    "code_index": 3,
    "language": "Scala",
    "libraries": [],
    "code": "target_link_libraries(rtype_server \n    sfml-graphics \n    sfml-audio \n    sfml-window \n    sfml-system \n    ${CONAN_LIBS_SFML} \n    ${asio_LIBRARIES}\n    ${CMAKE_DL_LIBS}) # link dl library only for Linux",
    "filename": "cdc637215e413a1203a2eeb93e037cc2_3.scala"
  },
  {
    "conversation_hash": "cdc637215e413a1203a2eeb93e037cc2",
    "code_index": 4,
    "language": "Scala",
    "libraries": [],
    "code": "target_link_libraries(rtype_client \n    sfml-graphics \n    sfml-audio \n    sfml-window \n    sfml-system \n    ${CONAN_LIBS_SFML} \n    ${asio_LIBRARIES}\n    ${CMAKE_DL_LIBS}) # link dl library only for Linux",
    "filename": "cdc637215e413a1203a2eeb93e037cc2_4.scala"
  },
  {
    "conversation_hash": "fa66feebd0f27b9cce9a7cac212ea879",
    "code_index": 5,
    "language": "Scala",
    "libraries": [],
    "code": "{\n  \"your_index\": {\n    \"mappings\": {\n      \"properties\": {\n        \"timestamp\": {\n          \"type\": \"date\",\n          \"format\": \"strict_date_optional_time||epoch_millis\"\n        }\n      }\n    }\n  }\n}",
    "filename": "fa66feebd0f27b9cce9a7cac212ea879_5.scala"
  },
  {
    "conversation_hash": "fa66feebd0f27b9cce9a7cac212ea879",
    "code_index": 6,
    "language": "Scala",
    "libraries": [],
    "code": "{\n  \"your_index\": {\n    \"mappings\": {\n      \"properties\": {\n        \"timestamp\": {\n          \"type\": \"date\",\n          \"format\": \"yyyy-MM-dd HH:mm:ss\"\n        }\n      }\n    }\n  }\n}",
    "filename": "fa66feebd0f27b9cce9a7cac212ea879_6.scala"
  },
  {
    "conversation_hash": "873f34341bb80a32202347b2bc706a70",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "Array\n(\n    [0] => 3\n    [1] => 1\n    [2] => 5\n    [3] => 4\n    [4] => 2\n)",
    "filename": "873f34341bb80a32202347b2bc706a70_1.scala"
  },
  {
    "conversation_hash": "73f7f0167f3a90366050c8439d1bb51b",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "struct Game {\n    // ...\n    mapping(address => uint256) playerAttempts; // Variable pour conserver le nombre de tentatives par joueur\n    // ...\n}",
    "filename": "73f7f0167f3a90366050c8439d1bb51b_1.scala"
  },
  {
    "conversation_hash": "3e6ae72f477d86239d119dd27ac4a4d5",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "val vertexShaderCode = \"\"\"\n    attribute vec4 vPosition;\n    void main() {\n        gl_Position = vPosition;\n    }\n\"\"\"",
    "filename": "3e6ae72f477d86239d119dd27ac4a4d5_1.scala"
  },
  {
    "conversation_hash": "3e6ae72f477d86239d119dd27ac4a4d5",
    "code_index": 3,
    "language": "Scala",
    "libraries": [],
    "code": "val squareCoords = floatArrayOf(\n    -0.5f,  0.5f, 0.0f,  // Верхний левый вершинный координат\n    -0.5f, -0.5f, 0.0f,  // Нижний левый вершинный координат\n    0.5f, -0.5f, 0.0f,  // Нижний правый вершинный координат\n    0.5f,  0.5f, 0.0f   // Верхний правый вершинный координат\n)\n\nval vertexBuffer: FloatBuffer =\n    ByteBuffer.allocateDirect(squareCoords.size * 4)\n        .order(ByteOrder.nativeOrder()).asFloatBuffer()\nvertexBuffer.put(squareCoords)\nvertexBuffer.position(0)",
    "filename": "3e6ae72f477d86239d119dd27ac4a4d5_3.scala"
  },
  {
    "conversation_hash": "3e6ae72f477d86239d119dd27ac4a4d5",
    "code_index": 4,
    "language": "Scala",
    "libraries": [],
    "code": "GLES20.glUseProgram(program)\nval positionHandle = GLES20.glGetAttribLocation(program, \"vPosition\")\nGLES20.glEnableVertexAttribArray(positionHandle)\nGLES20.glVertexAttribPointer(\n    positionHandle, 3,\n    GLES20.GL_FLOAT, false,\n    12, vertexBuffer\n)\nGLES20.glDrawArrays(GLES20.GL_TRIANGLE_FAN, 0, 4)\nGLES20.glDisableVertexAttribArray(positionHandle)",
    "filename": "3e6ae72f477d86239d119dd27ac4a4d5_4.scala"
  },
  {
    "conversation_hash": "3e6ae72f477d86239d119dd27ac4a4d5",
    "code_index": 6,
    "language": "Scala",
    "libraries": [],
    "code": "val vertexShaderCode = \"\"\"\n    attribute vec4 vPosition;\n    void main() {\n        gl_Position = vPosition;\n    }\n\"\"\"",
    "filename": "3e6ae72f477d86239d119dd27ac4a4d5_6.scala"
  },
  {
    "conversation_hash": "3e6ae72f477d86239d119dd27ac4a4d5",
    "code_index": 10,
    "language": "Scala",
    "libraries": [],
    "code": "GLES20.glUseProgram(program)\nval positionHandle = GLES20.glGetAttribLocation(program, \"vPosition\")\nGLES20.glEnableVertexAttribArray(positionHandle)\n\n// Отрисовка квадрата\nGLES20.glVertexAttribPointer(\n    positionHandle, 3,\n    GLES20.GL_FLOAT, false,\n    12, vertexBuffer\n)\nGLES20.glDrawArrays(GLES20.GL_TRIANGLE_FAN, 0, 4)\n\n// Отрисовка треугольника\nGLES20.glVertexAttribPointer(\n    positionHandle, 3,\n    GLES20.GL_FLOAT, false,\n    12, vertexBufferTriangle\n)\nGLES20.glDrawElements(\n    GLES20.GL_TRIANGLES, indices.size,\n    GLES20.GL_UNSIGNED_SHORT, indexBuffer\n)\n\nGLES20.glDisableVertexAttribArray(positionHandle)",
    "filename": "3e6ae72f477d86239d119dd27ac4a4d5_10.scala"
  },
  {
    "conversation_hash": "3e6ae72f477d86239d119dd27ac4a4d5",
    "code_index": 11,
    "language": "Scala",
    "libraries": [
      "android.opengl.GLES20",
      "java.nio.ByteBuffer",
      "java.nio.ByteOrder",
      "java.nio.FloatBuffer",
      "java.nio.ShortBuffer"
    ],
    "code": "import android.opengl.GLES20\nimport java.nio.ByteBuffer\nimport java.nio.ByteOrder\nimport java.nio.FloatBuffer\nimport java.nio.ShortBuffer",
    "filename": "3e6ae72f477d86239d119dd27ac4a4d5_11.scala"
  },
  {
    "conversation_hash": "3e6ae72f477d86239d119dd27ac4a4d5",
    "code_index": 13,
    "language": "Scala",
    "libraries": [],
    "code": "val textureIds = IntArray(1)\nGLES20.glGenTextures(1, textureIds, 0)\n\nval textureHandle = textureIds[0]\nGLES20.glBindTexture(GLES20.GL_TEXTURE_2D, textureHandle)\nGLES20.glTexParameteri(GLES20.GL_TEXTURE_2D, GLES20.GL_TEXTURE_MIN_FILTER, GLES20.GL_LINEAR)\nGLES20.glTexParameteri(GLES20.GL_TEXTURE_2D, GLES20.GL_TEXTURE_MAG_FILTER, GLES20.GL_LINEAR)\n\nval options = BitmapFactory.Options().apply {\n    inScaled = false\n}\n\nval bitmap = BitmapFactory.decodeResource(c.resources, R.drawable.water1, options)\nGLUtils.texImage2D(GLES20.GL_TEXTURE_2D, 0, bitmap, 0)\n\nbitmap.recycle()",
    "filename": "3e6ae72f477d86239d119dd27ac4a4d5_13.scala"
  },
  {
    "conversation_hash": "3e6ae72f477d86239d119dd27ac4a4d5",
    "code_index": 14,
    "language": "Scala",
    "libraries": [],
    "code": "val vertex_shader = \"uniform mat4 u_modelViewProjectionMatrix;\" +\n        \"attribute vec3 a_vertex;\" +\n        \"attribute vec3 a_normal;\" +\n        \"attribute vec2 a_texCoord;\" + // Добавленный атрибут текстурных координат\n        \"varying vec3 v_vertex;\" +\n        \"varying vec3 v_normal;\" +\n        \"varying vec2 v_texCoord;\" + // Добавленная переменная текстурных координат\n        \"void main() {\" +\n        \"v_vertex = a_vertex;\" +\n        \"vec3 n_normal = normalize(a_normal);\" +\n        \"v_normal = n_normal;\" +\n        \"v_texCoord = a_texCoord;\" + // Присваивание значения атрибута текстурных координат\n        \"gl_Position = u_modelViewProjectionMatrix * vec4(a_vertex, 1.0);\" +\n        \"}\"",
    "filename": "3e6ae72f477d86239d119dd27ac4a4d5_14.scala"
  },
  {
    "conversation_hash": "1281a0fd73e3c7d63494b00017c60b88",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "input {\n    # Your input configuration here\n}\n\nfilter {\n    json {\n        source => \"message\"\n        remove_field => [\"message\"]\n    }\n}\n\noutput {\n    # Your output configuration here\n}",
    "filename": "1281a0fd73e3c7d63494b00017c60b88_0.scala"
  },
  {
    "conversation_hash": "1281a0fd73e3c7d63494b00017c60b88",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "input {\n    # Your input configuration here\n}\n\nfilter {\n    json {\n        source => \"message\"\n    }\n}\n\noutput {\n    elasticsearch {\n        hosts => [\"your_elasticsearch_host:9200\"]\n        index => \"your_index_name\"\n    }\n}",
    "filename": "1281a0fd73e3c7d63494b00017c60b88_1.scala"
  },
  {
    "conversation_hash": "1281a0fd73e3c7d63494b00017c60b88",
    "code_index": 2,
    "language": "Scala",
    "libraries": [],
    "code": "input {\n    # Your input configuration here\n}\n\nfilter {\n    json {\n        source => \"message\"\n        remove_field => [\"message\"]\n    }\n    \n    mutate {\n        add_field => { \"[@metadata][log_level]\" => \"%{[WARNING][1698944096][response][status]}\" }\n    }\n}\n\noutput {\n    if [@metadata][log_level] == \"400\" {\n        # Process log events with status 400\n    } else if [@metadata][log_level] == \"500\" {\n        # Process log events with status 500\n    } else {\n        # Process log events with other log levels\n    }\n}",
    "filename": "1281a0fd73e3c7d63494b00017c60b88_2.scala"
  },
  {
    "conversation_hash": "6d3315223a270be44f51de104cf87632",
    "code_index": 9,
    "language": "Scala",
    "libraries": [],
    "code": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-nombre-componente',\n  templateUrl: './nombre-componente.component.html',\n  styleUrls: ['./nombre-componente.component.css']\n})\nexport class NombreComponenteComponent {\n  calcularCotizacion() {\n    // Inserta aquí el código de la función calcularCotizacion()\n  }\n\n  reservarServicio() {\n    // Inserta aquí el código de la función reservarServicio()\n  }\n\n  enviarReserva() {\n    // Inserta aquí el código de la función enviarReserva()\n  }\n}",
    "filename": "6d3315223a270be44f51de104cf87632_9.scala"
  },
  {
    "conversation_hash": "6d3315223a270be44f51de104cf87632",
    "code_index": 12,
    "language": "Scala",
    "libraries": [],
    "code": "import { ReservaComponente } from './reserva.component';\n\n     @NgModule({\n       declarations: [\n         ...\n         ReservaComponente\n       ],\n       ...\n     })\n     export class AppModule { }",
    "filename": "6d3315223a270be44f51de104cf87632_12.scala"
  },
  {
    "conversation_hash": "c76aa9f37310fb6082c634cdcd8183c9",
    "code_index": 3,
    "language": "Scala",
    "libraries": [],
    "code": "import { HttpClientModule } from '@angular/common/http';\n\n@NgModule({\n  imports: [HttpClientModule]\n})\nexport class AppModule { }",
    "filename": "c76aa9f37310fb6082c634cdcd8183c9_3.scala"
  },
  {
    "conversation_hash": "b572f090b1521083a0813304100c0bbb",
    "code_index": 4,
    "language": "Scala",
    "libraries": [],
    "code": "{\n  \"_source\": {\n    \"script_fields\": {\n      \"parsed_message\": {\n        \"script\": {\n          \"source\": \"doc['message'].value\"\n        }\n      }\n    }\n  },\n  \"size\": 100\n}",
    "filename": "b572f090b1521083a0813304100c0bbb_4.scala"
  },
  {
    "conversation_hash": "3e90004abed67a76ccf930c5568a42d5",
    "code_index": 3,
    "language": "Scala",
    "libraries": [
      "React",
      "Soldier"
    ],
    "code": "import React from \"react\";\nimport Soldier from \"../models/Soldier\";\n\ninterface Props {\n  soldier: Soldier;\n  onDelete: (soldierId: number, ammoType: string) => void;\n}\n\nconst AmmoList: React.FC<Props> = ({ soldier, onDelete }) => {\n  const handleDelete = (ammoType: string) => {\n    onDelete(soldier.id, ammoType);\n  };\n\n  return (\n    <div>\n      {soldier.ammunition.map((ammo, index) => (\n        <div key={index}>\n          Type: {ammo.type} | Quantity: {ammo.quantity}\n          <button onClick={() => handleDelete(ammo.type)}>Delete</button>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default AmmoList;",
    "filename": "3e90004abed67a76ccf930c5568a42d5_3.scala"
  },
  {
    "conversation_hash": "cc71318bc7b4f916f7276527ab4bfb14",
    "code_index": 0,
    "language": "Scala",
    "libraries": [
      "React"
    ],
    "code": "import React from 'react';\n\n// Functional component\nconst MyComponent: React.FC = () => {\n  // Your component logic here\n  return <div>Hello World</div>;\n}\n\n// Class component\nclass MyComponent extends React.Component {\n  render() {\n    // Your component logic here\n    return <div>Hello World</div>;\n  }\n}\n\nexport default MyComponent;",
    "filename": "cc71318bc7b4f916f7276527ab4bfb14_0.scala"
  },
  {
    "conversation_hash": "cc71318bc7b4f916f7276527ab4bfb14",
    "code_index": 3,
    "language": "Scala",
    "libraries": [
      "MyComponent",
      "React"
    ],
    "code": "import React from 'react';\nimport MyComponent from './MyComponent';\n\nclass App extends React.Component {\n  render() {\n    return (\n      <div>\n        <h1>My App</h1>\n        <MyComponent />\n      </div>\n    );\n  }\n}\n\nexport default App;",
    "filename": "cc71318bc7b4f916f7276527ab4bfb14_3.scala"
  },
  {
    "conversation_hash": "cc71318bc7b4f916f7276527ab4bfb14",
    "code_index": 5,
    "language": "Scala",
    "libraries": [
      "MyFragment",
      "React"
    ],
    "code": "import React from 'react';\nimport MyFragment from './MyFragment';\n\nclass App extends React.Component {\n  render() {\n    return (\n      <div>\n        <h1>My App</h1>\n        <MyFragment name=\"John Doe\" age={25} />\n      </div>\n    );\n  }\n}\n\nexport default App;",
    "filename": "cc71318bc7b4f916f7276527ab4bfb14_5.scala"
  },
  {
    "conversation_hash": "cc71318bc7b4f916f7276527ab4bfb14",
    "code_index": 7,
    "language": "Scala",
    "libraries": [
      "MyFragment",
      "React"
    ],
    "code": "import React from 'react';\nimport MyFragment from './MyFragment';\n\nclass App extends React.Component {\n  render() {\n    return (\n      <div>\n        <h1>My App</h1>\n        <MyFragment name=\"John Doe\" age={25} />\n      </div>\n    );\n  }\n}\n\nexport default App;",
    "filename": "cc71318bc7b4f916f7276527ab4bfb14_7.scala"
  },
  {
    "conversation_hash": "1878376c151b04d9e2f45112659b849b",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "ENTRY(_start)\nSECTIONS {\n   . = 0x10000;\n   .text : {\n       *(.text)\n   }\n   .data : {\n       *(.data)\n   }\n   .bss : {\n       *(.bss)\n   }\n}",
    "filename": "1878376c151b04d9e2f45112659b849b_0.scala"
  },
  {
    "conversation_hash": "129ebd8787e8eb899a9eccfa2f3b16a2",
    "code_index": 6,
    "language": "Scala",
    "libraries": [],
    "code": "# Install required dependencies\nnpm install webpack --save-dev\n# Create a webpack.config.js file with appropriate configuration\n\n# Run the bundler (Webpack)\nnpx webpack",
    "filename": "129ebd8787e8eb899a9eccfa2f3b16a2_6.scala"
  },
  {
    "conversation_hash": "0f600aa3a5c5dd39f146a4a24ec5ddc6",
    "code_index": 4,
    "language": "Scala",
    "libraries": [],
    "code": "extends CharacterBody3D\n\nexport var rotation_speed: float = 180  # Adjust as necessary\n\nfunc _physics_process(delta: float) -> void:\n    var input_direction = Vector2(\n        Input.get_action_strength(\"ui_right\") - Input.get_action_strength(\"ui_left\"),\n        Input.get_action_strength(\"ui_down\") - Input.get_action_strength(\"ui_up\")\n    ).normalized()\n\n    var movement_direction = Vector3(input_direction.x, 0, input_direction.y)\n    if movement_direction.length_squared() > 0.01:\n        # Rotate the character in the direction it's moving\n        var target_rotation = movement_direction.angle_to(Vector3.FORWARD) - deg2rad(90)\n        rotation = rotation.linear_interpolate(Vector3.UP.rotated(Vector3.UP, target_rotation), rotation_speed * delta)",
    "filename": "0f600aa3a5c5dd39f146a4a24ec5ddc6_4.scala"
  },
  {
    "conversation_hash": "0f600aa3a5c5dd39f146a4a24ec5ddc6",
    "code_index": 5,
    "language": "Scala",
    "libraries": [],
    "code": "extends KinematicBody\n\nexport var rotation_speed: float = 180  # Adjust as necessary\n\nfunc _physics_process(delta: float) -> void:\n    var input_direction = Vector2(\n        Input.get_action_strength(\"ui_right\") - Input.get_action_strength(\"ui_left\"),\n        Input.get_action_strength(\"ui_down\") - Input.get_action_strength(\"ui_up\")\n    ).normalized()\n\n    var movement_direction = Vector3(input_direction.x, 0, input_direction.y)\n    if movement_direction.length_squared() > 0.01:\n        # Rotate the character in the direction it's moving\n        var target_rotation = movement_direction.angle_to(Vector3.FORWARD) - deg2rad(90)\n        rotation = rotation.linear_interpolate(Vector3(0, target_rotation, 0), rotation_speed * delta)",
    "filename": "0f600aa3a5c5dd39f146a4a24ec5ddc6_5.scala"
  },
  {
    "conversation_hash": "9b7be84797f38a08fee51838c4536457",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "val textureIds = IntArray(1)\nGLES20.glGenTextures(1, textureIds, 0)\nval textureId = textureIds[0]\n\nval options = BitmapFactory.Options()\noptions.inScaled = false\nval bitmap = BitmapFactory.decodeResource(context.resources, R.drawable.background_texture, options)\n\nGLES20.glBindTexture(GLES20.GL_TEXTURE_2D, textureId)\nGLES20.glTexParameteri(GLES20.GL_TEXTURE_2D, GLES20.GL_TEXTURE_MIN_FILTER, GLES20.GL_LINEAR)\nGLES20.glTexParameteri(GLES20.GL_TEXTURE_2D, GLES20.GL_TEXTURE_MAG_FILTER, GLES20.GL_LINEAR)\nGLUtils.texImage2D(GLES20.GL_TEXTURE_2D, 0, bitmap, 0)\nbitmap.recycle()\nGLES20.glBindTexture(GLES20.GL_TEXTURE_2D, 0)",
    "filename": "9b7be84797f38a08fee51838c4536457_0.scala"
  },
  {
    "conversation_hash": "9b7be84797f38a08fee51838c4536457",
    "code_index": 3,
    "language": "Scala",
    "libraries": [],
    "code": "val textureUniformHandle = GLES20.glGetUniformLocation(program, \"uTexture\")\nGLES20.glUniform1i(textureUniformHandle, 0)\n\nGLES20.glActiveTexture(GLES20.GL_TEXTURE0)\nGLES20.glBindTexture(GLES20.GL_TEXTURE_2D, textureId)",
    "filename": "9b7be84797f38a08fee51838c4536457_3.scala"
  },
  {
    "conversation_hash": "9b7be84797f38a08fee51838c4536457",
    "code_index": 5,
    "language": "Scala",
    "libraries": [],
    "code": "val textureIds = IntArray(1)\nGLES20.glGenTextures(1, textureIds, 0)\nval textureId = textureIds[0]\n\nval options = BitmapFactory.Options()\noptions.inScaled = false\nval bitmap = BitmapFactory.decodeResource(context.resources, R.drawable.background_texture, options)\n\nGLES20.glBindTexture(GLES20.GL_TEXTURE_2D, textureId)\nGLES20.glTexParameteri(GLES20.GL_TEXTURE_2D, GLES20.GL_TEXTURE_MIN_FILTER, GLES20.GL_LINEAR)\nGLES20.glTexParameteri(GLES20.GL_TEXTURE_2D, GLES20.GL_TEXTURE_MAG_FILTER, GLES20.GL_LINEAR)\nGLUtils.texImage2D(GLES20.GL_TEXTURE_2D, 0, bitmap, 0)\nbitmap.recycle()\nGLES20.glBindTexture(GLES20.GL_TEXTURE_2D, 0)",
    "filename": "9b7be84797f38a08fee51838c4536457_5.scala"
  },
  {
    "conversation_hash": "9b7be84797f38a08fee51838c4536457",
    "code_index": 6,
    "language": "Scala",
    "libraries": [],
    "code": "GLES20.glUseProgram(m_shader.program)\nval textureUniformHandle = GLES20.glGetUniformLocation(m_shader.program, \"u_texture0\")\nGLES20.glUniform1i(textureUniformHandle, 0)\n\nGLES20.glActiveTexture(GLES20.GL_TEXTURE0)\nGLES20.glBindTexture(GLES20.GL_TEXTURE_2D, textureId)",
    "filename": "9b7be84797f38a08fee51838c4536457_6.scala"
  },
  {
    "conversation_hash": "60d4b053c158491d019ed5a09a3c3bfd",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "// Ваш код программирования шейдера:\nglUseProgram(shaderProgram)\n// Получаем позицию uniform-переменной screenWidth в шейдере\nval screenWidthLocation = glGetUniformLocation(shaderProgram, \"screenWidth\")\n// Получаем позицию uniform-переменной screenHeight в шейдере\nval screenHeightLocation = glGetUniformLocation(shaderProgram, \"screenHeight\")\n// Задаем значения screenWidth и screenHeight и передаем их в шейдер\nval screenWidth: Float = 800f // Пример значения ширины экрана\nval screenHeight: Float = 600f // Пример значения высоты экрана\nglUniform1f(screenWidthLocation, screenWidth)\nglUniform1f(screenHeightLocation, screenHeight)",
    "filename": "60d4b053c158491d019ed5a09a3c3bfd_1.scala"
  },
  {
    "conversation_hash": "5c41496723184a323cbdf3e885d4fd4b",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "val displayMetrics = resources.displayMetrics\nval widthPixels = displayMetrics.widthPixels\nval heightPixels = displayMetrics.heightPixels\n\nval screenWidthCm = (widthPixels / displayMetrics.xdpi).roundToInt()\nval screenHeightCm = (heightPixels / displayMetrics.ydpi).roundToInt()\n\nprintln(\"Ширина экрана: $screenWidthCm см\")\nprintln(\"Высота экрана: $screenHeightCm см\")",
    "filename": "5c41496723184a323cbdf3e885d4fd4b_0.scala"
  },
  {
    "conversation_hash": "d7812a53f22cd15c563db3dcd912c331",
    "code_index": 2,
    "language": "Scala",
    "libraries": [],
    "code": "extends Camera3D\n\nvar sensitivity: float = 0.2\nvar rotation_speed: float = 1.0\n\nvar mouse_delta: Vector2 = Vector2.ZERO\nvar custom_rotation: Vector2 = Vector2.ZERO\n\nfunc _ready():\n    set_process_input(true)\n\nfunc _input(event: InputEvent):\n    if event is InputEventMouseMotion:\n        var event_motion = event as InputEventMouseMotion\n        var viewport_size = get_viewport().get_size()\n        mouse_delta = (event_motion.relative.to_vector2() / viewport_size.to_vector2()).normalized() * sensitivity * rotation_speed\n        custom_rotation += mouse_delta\n        \n        custom_rotation.x = clamp(custom_rotation.x, -90, 90)\n        \n        set_rotation_degrees(Vector3(custom_rotation.x, custom_rotation.y, 0.0))",
    "filename": "d7812a53f22cd15c563db3dcd912c331_2.scala"
  },
  {
    "conversation_hash": "3b898578a065f38417502ce327f12c7c",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "6\nabc\ndef\nabc\nghi\nabc\ndef",
    "filename": "3b898578a065f38417502ce327f12c7c_1.scala"
  },
  {
    "conversation_hash": "28a793aceb28687e92867a98fad4fd64",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "menu.setOnMenuItemClickListener { menuItem ->\n    // your code logic here\n    \n    // return true if the click event is consumed, false otherwise\n    true\n}",
    "filename": "28a793aceb28687e92867a98fad4fd64_0.scala"
  },
  {
    "conversation_hash": "283448d156c6b2b38974379200a13136",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "DispatchQueue.global().async {\n    // Code exécuté de manière asynchrone dans un thread global\n    // Cette tâche peut être exécutée en parallèle avec d'autres tâches\n    // Elle n'interfère pas avec le thread principal (UI) de l'application\n}",
    "filename": "283448d156c6b2b38974379200a13136_0.scala"
  },
  {
    "conversation_hash": "86dc19f102fbf1806dda6899d8dfe37a",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "Déclarer une variable entière a\nDéclarer une variable entière b\nDéclarer une variable entière somme\n\nDemander à l'utilisateur d'entrer la valeur de a\nDemander à l'utilisateur d'entrer la valeur de b\n\nsomme = a + b\n\nAfficher la valeur de somme",
    "filename": "86dc19f102fbf1806dda6899d8dfe37a_0.scala"
  },
  {
    "conversation_hash": "77ffe869479513dc04ca567829e9ee00",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "def text = \"这是一段包含中文字符的字符串！\"\ndef pattern = /[\\u4E00-\\u9FFF]+/\n\ndef matcher = text =~ pattern\nmatcher.each { match ->\n    println match\n}",
    "filename": "77ffe869479513dc04ca567829e9ee00_0.scala"
  },
  {
    "conversation_hash": "77ffe869479513dc04ca567829e9ee00",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "def text = \"This is a text containing email addresses abc@example.com and xyz@example.com\"\n\ndef pattern = /\\b[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,}\\b/\n\ndef matcher = text =~ pattern\n\nmatcher.each { match ->\n    println match[0]\n}",
    "filename": "77ffe869479513dc04ca567829e9ee00_1.scala"
  },
  {
    "conversation_hash": "77ffe869479513dc04ca567829e9ee00",
    "code_index": 2,
    "language": "Scala",
    "libraries": [],
    "code": "def name = \"Kelly.Chen\"\n\nif (name == \"Kelly.Chen\") {\n    println \"String matches\"\n} else {\n    println \"String does not match\"\n}",
    "filename": "77ffe869479513dc04ca567829e9ee00_2.scala"
  },
  {
    "conversation_hash": "77ffe869479513dc04ca567829e9ee00",
    "code_index": 3,
    "language": "Scala",
    "libraries": [],
    "code": "def name = \"John Doe\"\ndef pattern = /^[A-Za-z\\s]+$/\n\nif (name ==~ pattern) {\n    println \"Name matches\"\n} else {\n    println \"Name does not match\"\n}",
    "filename": "77ffe869479513dc04ca567829e9ee00_3.scala"
  },
  {
    "conversation_hash": "7bd2ad1852fb191540a92caad34f2a53",
    "code_index": 4,
    "language": "Scala",
    "libraries": [],
    "code": "val vertexBuffer: FloatBuffer =\n    ByteBuffer.allocateDirect(squareCoords.size * 4).run {\n        order(ByteOrder.nativeOrder())\n        asFloatBuffer().apply {\n            put(squareCoords)\n            position(0)\n        }\n    }\n\nval positionHandle = glGetAttribLocation(shaderProgram, \"vPosition\")\nglEnableVertexAttribArray(positionHandle)\nglVertexAttribPointer(positionHandle, 3, GL_FLOAT, false, 0, vertexBuffer)",
    "filename": "7bd2ad1852fb191540a92caad34f2a53_4.scala"
  },
  {
    "conversation_hash": "7bd2ad1852fb191540a92caad34f2a53",
    "code_index": 7,
    "language": "Scala",
    "libraries": [],
    "code": "val vertexBuffer: FloatBuffer =\n    ByteBuffer.allocateDirect(squareCoords.size * 4).run {\n        order(ByteOrder.nativeOrder())\n        asFloatBuffer().apply {\n            put(squareCoords)\n            position(0)\n        }\n    }\n\nval positionHandle = glGetAttribLocation(shaderProgram, \"vPosition\")\nglEnableVertexAttribArray(positionHandle)\nglVertexAttribPointer(positionHandle, 3, GL_FLOAT, false, 0, vertexBuffer)",
    "filename": "7bd2ad1852fb191540a92caad34f2a53_7.scala"
  },
  {
    "conversation_hash": "4ec395ce149048a38c8e76d423127260",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "val squareVertexCoords = floatArrayOf(\n    -0.5f, 0.5f, 0.0f,  // верхний левый угол\n    -0.5f, -0.5f, 0.0f, // нижний левый угол\n    0.5f, 0.5f, 0.0f,   // верхний правый угол\n    0.5f, -0.5f, 0.0f   // нижний правый угол\n)\n\nval squareVertexBuffer = ByteBuffer.allocateDirect(squareVertexCoords.size * 4)\n    .order(ByteOrder.nativeOrder())\n    .asFloatBuffer()\n    .put(squareVertexCoords)\nsquareVertexBuffer.position(0)",
    "filename": "4ec395ce149048a38c8e76d423127260_0.scala"
  },
  {
    "conversation_hash": "4ec395ce149048a38c8e76d423127260",
    "code_index": 2,
    "language": "Scala",
    "libraries": [],
    "code": "val squareNormal = floatArrayOf(\n    0.0f, 0.0f, 1.0f,  // верх\n    0.0f, 0.0f, 1.0f,  // верх\n    0.0f, 0.0f, 1.0f,  // верх\n    0.0f, 0.0f, 1.0f   // верх\n)\n\nval squareNormalBuffer = ByteBuffer.allocateDirect(squareNormal.size * 4)\n        .order(ByteOrder.nativeOrder())\n        .asFloatBuffer()\n        .put(squareNormal)\nsquareNormalBuffer.position(0)\n\nm_shader!!.link_normal_buffer(squareNormalBuffer)",
    "filename": "4ec395ce149048a38c8e76d423127260_2.scala"
  },
  {
    "conversation_hash": "4ec395ce149048a38c8e76d423127260",
    "code_index": 7,
    "language": "Scala",
    "libraries": [],
    "code": "val squareVertexCoords = floatArrayOf(\n    -0.5f, -0.5f, 0.0f,   // нижний левый угол\n    -0.5f, 0.5f, 0.0f,    // верхний левый угол\n    0.5f, -0.5f, 0.0f,    // нижний правый угол\n    0.5f, 0.5f, 0.0f      // верхний правый угол\n)",
    "filename": "4ec395ce149048a38c8e76d423127260_7.scala"
  },
  {
    "conversation_hash": "665a860a75ed92f669a9e143b14da7ef",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "glfwInit()\nglfwWindowHint(GLFW_VISIBLE, GLFW_FALSE) // Создать невидимое окно\nval window = glfwCreateWindow(width, height, \"Квадрат\", NULL, NULL)\nglfwMakeContextCurrent(window)\nGL.createCapabilities() // Инициализировать контекст OpenGL\nglfwShowWindow(window)",
    "filename": "665a860a75ed92f669a9e143b14da7ef_1.scala"
  },
  {
    "conversation_hash": "f7203b27df324db1dbd250bf1fdcbc65",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "def input = \"Hello, Groovy!\"\ndef regex = /[A-Za-z]+/\ndef matches = (input =~ regex)\n\nmatches.each { match ->\n    println match[0]\n}",
    "filename": "f7203b27df324db1dbd250bf1fdcbc65_0.scala"
  },
  {
    "conversation_hash": "f7203b27df324db1dbd250bf1fdcbc65",
    "code_index": 2,
    "language": "Scala",
    "libraries": [],
    "code": "def email = \"example@example.com\"\ndef regex = /\\b[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,}\\b/\ndef isMatch = email.matches(regex)\n\nif (isMatch) {\n    println \"Email地址有效\"\n} else {\n    println \"Email地址无效\"\n}",
    "filename": "f7203b27df324db1dbd250bf1fdcbc65_2.scala"
  },
  {
    "conversation_hash": "f7203b27df324db1dbd250bf1fdcbc65",
    "code_index": 4,
    "language": "Scala",
    "libraries": [],
    "code": "def list = [1, 2, 3, 4, 5]\ndef sublist1 = list[1..3] // 提取索引为1到3的元素，结果为[2, 3, 4]\ndef sublist2 = list.subList(2, 4) // 提取索引为2到3的元素，结果为[3, 4]\nprintln sublist1\nprintln sublist2",
    "filename": "f7203b27df324db1dbd250bf1fdcbc65_4.scala"
  },
  {
    "conversation_hash": "f7203b27df324db1dbd250bf1fdcbc65",
    "code_index": 6,
    "language": "Scala",
    "libraries": [],
    "code": "def list = [1, 2, 3, 4, 5]\ndef evenNumbers = list.findAll { it % 2 == 0 } // 提取所有偶数，结果为[2, 4]\ndef greaterThanThree = list.findAll { it > 3 } // 提取所有大于3的元素，结果为[4, 5]\nprintln evenNumbers\nprintln greaterThanThree",
    "filename": "f7203b27df324db1dbd250bf1fdcbc65_6.scala"
  },
  {
    "conversation_hash": "f7203b27df324db1dbd250bf1fdcbc65",
    "code_index": 8,
    "language": "Scala",
    "libraries": [],
    "code": "pipeline {\n    agent any\n\n    stages {\n        stage('Build') {\n            steps {\n                // 构建步骤\n                // 在此处执行你的Robot Framework测试\n            }\n        }\n    }\n\n    post {\n        always {\n            script {\n                // 筛选带有指定标签的测试结果\n                def tag = 'regression'\n                def filteredResults = sh(script: \"robot --outputdir results --report NONE --log NONE --tag ${tag} path/to/tests\", returnStdout: true).trim()\n\n                // 发送邮件通知\n                emailext body: \"<p>你的Robot Framework测试已完成。</p><p>带有标签 '<strong>${tag}</strong>' 的测试结果：</p><pre>${filteredResults}</pre>\",\n                         mimeType: 'text/html',\n                         subject: 'Robot Framework测试报告',\n                         to: '你的收件人邮箱地址',\n                         attachmentsPattern: 'results/*.html'\n            }\n        }\n    }\n}",
    "filename": "f7203b27df324db1dbd250bf1fdcbc65_8.scala"
  },
  {
    "conversation_hash": "c6efccc794c028b25090a94ab5186684",
    "code_index": 12,
    "language": "Scala",
    "libraries": [],
    "code": "module example.com/myproject\n\ngo 1.17\n\nrequire (\n    example.com/myproject/xyz v1.0.0\n    example.com/myproject/abc v1.0.0\n)",
    "filename": "c6efccc794c028b25090a94ab5186684_12.scala"
  },
  {
    "conversation_hash": "de340c7f683c233320f80683fd7c0542",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "variable_0\nvariable_1\nvariable_2\nvariable_3\nvariable_4",
    "filename": "de340c7f683c233320f80683fd7c0542_1.scala"
  },
  {
    "conversation_hash": "5b73ce042daeeb341b2e7011ee6dfe33",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "var updateEmployees = existEmployees\n    .Where(x => readEmployees.Any(y => y.Id == x.Id))\n    .Select(z =>\n        Employee.CreateOrUpdate(\n            z.Id,\n            z.Building,\n            z.Floor,\n            z.Department,\n            true,\n            z.IsActiveOnLunchSelection,\n            z.Type,\n            z.FullName,\n            UserType.ActiveDirectory).Value\n    ).ToList();",
    "filename": "5b73ce042daeeb341b2e7011ee6dfe33_0.scala"
  },
  {
    "conversation_hash": "e5b365797fa4f72c294aa912289f9811",
    "code_index": 6,
    "language": "Scala",
    "libraries": [],
    "code": "<dependency>\n    <groupId>javax.ws.rs</groupId>\n    <artifactId>javax.ws.rs-api</artifactId>\n    <version>2.1.1</version>\n</dependency>",
    "filename": "e5b365797fa4f72c294aa912289f9811_6.scala"
  },
  {
    "conversation_hash": "f55b12bbb2f07538bb1b1951b67d9d2f",
    "code_index": 3,
    "language": "Scala",
    "libraries": [],
    "code": "node_modules\nnpm-debug.log\nDockerfile\n.dockerignore\n.git\n.gitignore",
    "filename": "f55b12bbb2f07538bb1b1951b67d9d2f_3.scala"
  },
  {
    "conversation_hash": "b5820394780d24ab6268f0849490dd81",
    "code_index": 7,
    "language": "Scala",
    "libraries": [],
    "code": "<script lang=\"ts\">\nimport { defineComponent } from 'vue'\n\nexport default defineComponent({\n  props: {\n    // 明确指定属性的类型\n    title: String,\n    likes: Number,\n  },\n  // 无需类型注解(data 内容会自动推导)\n  data() {\n    return {\n      message: 'Typed Vue!'\n    }\n  }\n})\n</script>",
    "filename": "b5820394780d24ab6268f0849490dd81_7.scala"
  },
  {
    "conversation_hash": "b5820394780d24ab6268f0849490dd81",
    "code_index": 15,
    "language": "Scala",
    "libraries": [],
    "code": "// 在 TypeScript 文件或声明文件 (*.d.ts) 中\ndeclare global {\n  interface Window {\n    myGlobal: any; // 使用适当的类型替换 `any`\n  }\n}",
    "filename": "b5820394780d24ab6268f0849490dd81_15.scala"
  },
  {
    "conversation_hash": "0d436b4002e62ec9221288871f626ac4",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "4\nfalse true false true\nfalse false false false\nfalse true true false\ntrue false false true",
    "filename": "0d436b4002e62ec9221288871f626ac4_1.scala"
  },
  {
    "conversation_hash": "d5c067bd46b34754e4213d038dd8f5f7",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "data = Array( _\n        Array(\"Philosophical Thinker\", \"Someone who deeply contemplates the nature of human existence and believes in the profound connection between inner values and the outward representation of dignity. This type of person may often express ideas about the significance of integrity and principles in shaping one's public persona.\"), _\n        Array(\"Ethical Leader\", \"A person in a leadership role, perhaps in business or community affairs, who emphasizes the importance of maintaining a dignified and principled image. This individual likely values integrity and sees it as a crucial aspect of leadership, understanding that the external portrayal reflects the inner ethical compass.\"), _\n        Array(\"Cultural Observer\", \"An individual with a keen interest in societal norms and behaviors, someone who observes the dynamics of human interaction. This person may comment on how dignity serves as a reflection of personal values within a broader cultural context, acknowledging the impact of individual integrity on the collective face presented to the world.\") _\n        )",
    "filename": "d5c067bd46b34754e4213d038dd8f5f7_0.scala"
  },
  {
    "conversation_hash": "b588d6d598134a2a4b2ccb6555394dd5",
    "code_index": 5,
    "language": "Scala",
    "libraries": [],
    "code": "# A tibble: 5 x 3\n# Groups:   group [3]\n  group value new_value       \n  <chr> <int> <chr>          \n1 A         1 Assigned value \n2 A         2 2              \n3 B         3 Assigned value \n4 B         4 4              \n5 C         5 Assigned value",
    "filename": "b588d6d598134a2a4b2ccb6555394dd5_5.scala"
  },
  {
    "conversation_hash": "2821f017689fae3bf2fa13000a51c570",
    "code_index": 5,
    "language": "Scala",
    "libraries": [],
    "code": "my name is <PRESIDIO_ANONYMIZED_PERSON>, I am 20 years old\nmy skills are:\n- python (beginner)\n- java (veteran)\n- programming (semiprofessional)\nI am looking for a job with a salary of 2000-3000 euros per month",
    "filename": "2821f017689fae3bf2fa13000a51c570_5.scala"
  },
  {
    "conversation_hash": "a856dd59b63782a5abf9386c4a13cb98",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "SELECT\n       conname AS foreign_key,\n       conrelid::regclass AS child_table,\n       confrelid::regclass AS parent_table\n   FROM\n       pg_constraint\n   WHERE\n       confrelid = 'child_table'::regclass;",
    "filename": "a856dd59b63782a5abf9386c4a13cb98_1.scala"
  },
  {
    "conversation_hash": "510052f47fa827fa1d8d82f461c41b8f",
    "code_index": 4,
    "language": "Scala",
    "libraries": [],
    "code": "extends Node\n\n# Constants and exported properties\nclass_name PlayerBase\nconst MAX_HEALTH: int = 200\n\nexport var speed: float = 5.0\nexport var jump_strength: float = 4.5\n\n# Player health\nvar health: int = MAX_HEALTH setget set_health\n\nonready var player_life_bar: ProgressBar = $\"../HUD/PlayerLifeBar\" if $\"../HUD/PlayerLifeBar\" else null\n\nfunc _ready() -> void:\n    initialize_ui()\n\nfunc _process(delta: float) -> void:\n    if player_life_bar:\n        player_life_bar.value = health\n\nfunc initialize_ui() -> void:\n    if player_life_bar:\n        player_life_bar.max_value = MAX_HEALTH\n        player_life_bar.value = health\n\n# Abstract methods (placeholders to be implemented in the derived classes)\nfunc take_damage(damage: int) -> void:\n    pass # Implement in the derived class\n\nfunc heal(amount: int) -> void:\n    pass # Implement in the derived class\n\nfunc attack() -> void:\n    pass # Implement in the derived class\n\nfunc move(input_vector: Vector2) -> void:\n    pass # Implement in the derived class\n\n# Setter for health to include logic (e.g., updating UI or PlayerState)\nfunc set_health(new_health: int) -> void:\n    health = clamp(new_health, 0, MAX_HEALTH)\n    if player_life_bar:\n        player_life_bar.value = health\n    # Update player state health if needed\n    # PlayerState.health = health",
    "filename": "510052f47fa827fa1d8d82f461c41b8f_4.scala"
  },
  {
    "conversation_hash": "d2d2259549101b90b11500fdd41cebee",
    "code_index": 6,
    "language": "Scala",
    "libraries": [
      "PlayerBase"
    ],
    "code": "extends PlayerBase\nclass_name Player2D\n\nenum State { IDLE, RUN, JUMP, ATTACK }\nvar state = State.IDLE\n# Data (now stats will come from PlayerBase health)\nvar bullets_amount: int = 30\nvar attack_animation: String = \"Attack1\"\n@export var movement_data: MovementData\nvar stats: Stats = null\n\n# References\n@onready var animator: AnimatedSprite2D = $AnimatedSprite2D\n@onready var guns_animator: AnimationPlayer = $ShootingAnimationPlayer\n@onready var hit_animator: AnimationPlayer = $HitAnimationPlayer\n@onready var hand: Node2D = $Hand\n@onready var pistol: Sprite2D = $Hand/Pivot/Pistol\n@onready var pistol_bullet_marker: Marker2D = $Hand/Pivot/Pistol/PistolBulletMarker\n@onready var attacking: bool = false\n@export var camera: Camera2D\n\n# Load Scenes\n@onready var muzzle_load: PackedScene = preload(\"res://Scenes/Particles/muzzle.tscn\")\n@onready var bullet_load: PackedScene = preload(\"res://Scenes/Props/bullet.tscn\")\n@onready var death_particle_load: PackedScene = preload(\"res://Scenes/Particles/player_death_particle.tscn\")\n\nfunc _ready():\n    # Call the PlayerBase's ready method to initialize health and UI\n    .health = MAX_HEALTH # PlayerBase's variable\n    stats.health = .health # You might need to adapt Stats structure for this\n    EventManager.bullets_amount = bullets_amount\n    EventManager.update_bullet_ui.emit()\n    update_health_ui()\n\n\nfunc _physics_process(delta):\n    apply_gravity(delta)\n    var input_vector: Vector2 = Vector2(\n        Input.get_action_strength(\"move_right\") - Input.get_action_strength(\"move_left\"),\n        0 # This is specific to 2D so ignore up and down\n    )\n    move(input_vector)\n    if input_vector.x != 0:\n        state = State.RUN\n    else:\n        state = State.IDLE\n    # ... Other actions (jump, shoot, etc)\n\n    animate() # This should now only be responsible for animation, not logic\n\n\n# Adapt existing methods to follow new architecture.\n# Several methods omitted for brevity (like apply_acceleration, apply_friction, apply_gravity...)\n# Make sure to integrate all methods you need according to the game's logic.\n\nfunc jump():\n    if state != State.JUMP and is_on_floor():\n        velocity.y = -jump_strength\n        state = State.JUMP\n\nfunc shoot():\n    if bullets_amount > 0 and state != State.ATTACK:\n        # Shooting logic\n        bullets_amount -= 1\n        var bullet_instance: Node2D = bullet_load.instance()\n        # Configure and spawn bullet\n        get_parent().add_child(bullet_instance)\n    \n    state = State.IDLE # Set the state back after shooting\n\nfunc animate():\n    # Decide on the animation based on the current state and other conditions\n    match state:\n        State.IDLE:\n            animator.play(\"Idle\")\n        State.RUN:\n            animator.play(\"Run\")\n        State.JUMP:\n            animator.play(\"Jump\")\n        # Add more conditions as necessary\n\nfunc _on_hurtbox_area_entered(area: Area2D):\n    if not area.is_in_group(\"Bullet\"):\n        take_damage(1) # You might want to pass the actual damage\n        if health == 0:\n            die()\n        else:\n            # Playing hit animation and sound",
    "filename": "d2d2259549101b90b11500fdd41cebee_6.scala"
  },
  {
    "conversation_hash": "f2a8d0c440572bfe67bacdc0649f9544",
    "code_index": 13,
    "language": "Scala",
    "libraries": [],
    "code": "extends Node\nclass_name PlayerBase\n\nconst MAX_HEALTH: int = 200\n\n# Use the single `=` operator for explicit type variable assignment with setget\nvar health: int = MAX_HEALTH setget set_health\nvar speed: float = 5.0\nvar jump_strength: float = 4.5\n\nsignal health_changed(new_health)\n\nfunc _ready() -> void:\n    initialize_ui()\n\nfunc initialize_ui() -> void:\n    var player_lifebar: ProgressBar = get_tree().current_scene.get_node(\"HUD/PlayerLifeBar\")\n    player_lifebar.max_value = MAX_HEALTH\n    player_lifebar.value = health\n\nfunc set_health(value: int) -> void:\n    health = clamp(value, 0, MAX_HEALTH)\n    update_health_ui()\n    emit_signal(\"health_changed\", health)\n\nfunc update_health_ui() -> void:\n    # Assuming the rest of the code is here\n    pass",
    "filename": "f2a8d0c440572bfe67bacdc0649f9544_13.scala"
  },
  {
    "conversation_hash": "f2a8d0c440572bfe67bacdc0649f9544",
    "code_index": 15,
    "language": "Scala",
    "libraries": [],
    "code": "extends Node\n   class_name PlayerBase\n\n   const MAX_HEALTH: int = 200\n\n   var health: int = MAX_HEALTH setget set_health",
    "filename": "f2a8d0c440572bfe67bacdc0649f9544_15.scala"
  },
  {
    "conversation_hash": "154bd405e1c98aa7bdaaf112635fed37",
    "code_index": 5,
    "language": "Scala",
    "libraries": [],
    "code": "# Ensure that the preload does not return null. Check the paths are correct.\n@onready var muzzle_load: PackedScene = preload(\"res://Scenes/Particles/muzzle.tscn\")\n# If these can be null, check for null before accessing 'resource_path'\nif muzzle_load:\n    var path = muzzle_load.resource_path",
    "filename": "154bd405e1c98aa7bdaaf112635fed37_5.scala"
  },
  {
    "conversation_hash": "154bd405e1c98aa7bdaaf112635fed37",
    "code_index": 16,
    "language": "Scala",
    "libraries": [],
    "code": "extends PlayerBase\nclass_name Player2D\n# ...\n\n@export var jump_strength: float = 4.5  # Add this line\n\n# ...",
    "filename": "154bd405e1c98aa7bdaaf112635fed37_16.scala"
  },
  {
    "conversation_hash": "a83df7d51df0f1d5a96a9dabf8b7e3fa",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "extends Node\n\n# Singleton for changing scenes\n\nfunc change_to_3d(player_2d_position: Vector2):\n    # Save the 2D position if you need to retain it\n    var main_3d_scene = preload(\"res://PathTo3DScene.tscn\") # Update path to your 3D scene\n    var new_scene = main_3d_scene.instance()\n    # Additional setup can be done here, such as setting the player's position\n    get_tree().change_scene_to(new_scene)\n\nfunc change_to_2d(player_3d_position: Vector3):\n    # Save the 3D position if you need to retain it\n    var main_2d_scene = preload(\"res://PathTo2DScene.tscn\") # Update path to your 2D scene\n    var new_scene = main_2d_scene.instance()\n    # Additional setup can be done here, such as setting the player's position\n    get_tree().change_scene_to(new_scene)",
    "filename": "a83df7d51df0f1d5a96a9dabf8b7e3fa_0.scala"
  },
  {
    "conversation_hash": "a83df7d51df0f1d5a96a9dabf8b7e3fa",
    "code_index": 3,
    "language": "Scala",
    "libraries": [],
    "code": "extends Node\n\n# Singleton for changing scenes\n\nfunc change_to_3d(player_2d_position: Vector2):\n    # Preload the 3D scene PackedScene resource\n    var main_3d_scene = preload(\"res://PathTo3DScene.tscn\") # Update path to your 3D scene\n    # Instance the packed scene to create a new scene\n    var new_scene = main_3d_scene.instance()\n    # Additional setup could be done here, like transferring the player's position\n    get_tree().change_scene_to(new_scene)\n\nfunc change_to_2d(player_3d_position: Vector3):\n    # Preload the 2D scene PackedScene resource\n    var main_2d_scene = preload(\"res://PathTo2DScene.tscn\") # Update path to your 2D scene\n    # Instance the packed scene to create a new scene\n    var new_scene = main_2d_scene.instance()\n    # Additional setup could be done here, like transferring the player's position\n    get_tree().change_scene_to(new_scene)",
    "filename": "a83df7d51df0f1d5a96a9dabf8b7e3fa_3.scala"
  },
  {
    "conversation_hash": "cfe6efb5c3290a6f523cb08fb865d855",
    "code_index": 6,
    "language": "Scala",
    "libraries": [],
    "code": "def parentJobName = env.UPSTREAM_JOB_NAME\ndef parentBuildNumber = env.UPSTREAM_BUILD_NUMBER\n\nprintln \"Parent Job Name: \" + parentJobName\nprintln \"Parent Build Number: \" + parentBuildNumber",
    "filename": "cfe6efb5c3290a6f523cb08fb865d855_6.scala"
  },
  {
    "conversation_hash": "2b1b94082abbaf1a50337deff0814b29",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "(define (memo-proc proc)\n  (let ((already-run? #f) (result #f))\n    (lambda ()\n      (if (not already-run?)\n          (begin \n            (set! result (proc))\n            (set! already-run? #t))\n          )\n        result)))",
    "filename": "2b1b94082abbaf1a50337deff0814b29_0.scala"
  },
  {
    "conversation_hash": "2b1b94082abbaf1a50337deff0814b29",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "(define (memo-proc proc)\n  (let ((already-run? #f) (result #f))\n    (lambda ()\n      (if (not already-run?)\n          (begin \n            (display-line already-run?)\n            (set! result (proc))\n            (set! already-run? #t))\n          else)\n        result)))",
    "filename": "2b1b94082abbaf1a50337deff0814b29_1.scala"
  },
  {
    "conversation_hash": "2b1b94082abbaf1a50337deff0814b29",
    "code_index": 2,
    "language": "Scala",
    "libraries": [],
    "code": "(define (memo-proc proc)\n  (let ((already-run? #f) (result #f))\n    (lambda ()\n      (cond (already-run? result)\n            (else (begin \n                    (display-line already-run?)\n                    (set! result (proc))\n                    (set! already-run? #t)\n                    result))))))",
    "filename": "2b1b94082abbaf1a50337deff0814b29_2.scala"
  },
  {
    "conversation_hash": "2b1b94082abbaf1a50337deff0814b29",
    "code_index": 3,
    "language": "Scala",
    "libraries": [],
    "code": "(define (cons-stream a b) (cons a (lambda () b)))\n(define (stream-car stream) (car stream))\n(define (stream-cdr stream) ((cdr stream)))\n\n(define (my-stream-filter pred stream)\n  (cond ((null? stream) '())\n        ((pred (stream-car stream))\n         (cons-stream (stream-car stream)\n                      (my-stream-filter pred\n                                         (stream-cdr stream))))\n        (else (my-stream-filter pred (stream-cdr stream)))))\n\n(define (stream-enumerate-interval low high)\n  (if (> low high)\n      '()\n      (cons-stream\n       low\n       (stream-enumerate-interval (+ low 1) high))))\n\n(define (stream-for-each proc s)\n  (if (null? s)\n      'done\n      (begin (proc (stream-car s))\n             (stream-for-each proc (stream-cdr s)))))\n\n(define (display-stream s)\n  (stream-for-each display-line s))\n\n(display-stream\n (stream-cdr\n  (my-stream-filter (lambda (x) (< x 5))\n                    (stream-enumerate-interval 1 10))))",
    "filename": "2b1b94082abbaf1a50337deff0814b29_3.scala"
  },
  {
    "conversation_hash": "2b1b94082abbaf1a50337deff0814b29",
    "code_index": 5,
    "language": "Scala",
    "libraries": [],
    "code": "(define (my-stream-filter pred stream)\n  (cond ((null? stream) '())\n        ((pred (stream-car stream))\n         (cons-stream (stream-car stream)\n                      (delay (my-stream-filter pred (stream-cdr stream)))))\n        (else (delay (my-stream-filter pred (stream-cdr stream))))))\n\n(define (stream-force stream) (force stream))\n\n(stream-car\n (stream-cdr\n  (stream-force\n   (my-stream-filter (lambda (x) (< x 5))\n                     (stream-enumerate-interval 1 10)))))",
    "filename": "2b1b94082abbaf1a50337deff0814b29_5.scala"
  },
  {
    "conversation_hash": "c80a6bb069577600cc5b32d2c6952463",
    "code_index": 6,
    "language": "Scala",
    "libraries": [
      "a"
    ],
    "code": "# Correct way to instantiate a node from a script:\nvar Player3DClass = preload(\"res://Scripts/Characters/Player/player3D.gd\")\nvar player_instance = Player3DClass.new()\n\n# Or if changing to a new scene:\nget_tree().change_scene(\"res://path_to_scene_that_uses_player3D.tscn\")",
    "filename": "c80a6bb069577600cc5b32d2c6952463_6.scala"
  },
  {
    "conversation_hash": "e71ecd200d67c3c7cb22a9032d0e7ef0",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "var mouse_position: Vector2 = (get_global_mouse_position() - global_position).normalized()\n...\nbullet.global_position = pistol_bullet_marker.global_position\n...\ndeath_particle.global_position = global_position\n...\nPlayerState.set_last_2d_position(global_position)",
    "filename": "e71ecd200d67c3c7cb22a9032d0e7ef0_1.scala"
  },
  {
    "conversation_hash": "14c7364c03b0adb3e8f6bf487ed880ef",
    "code_index": 4,
    "language": "Scala",
    "libraries": [],
    "code": "val iconArray = resources.obtainTypedArray(R.array.icons_array)\nval iconList = ArrayList<Int>()\nfor (i in 0 until iconArray.length()) {\n    val iconId = iconArray.getResourceId(i, 0)\n    iconList.add(iconId)\n}\niconArray.recycle()\n\nval viewPager2: ViewPager2 = findViewById(R.id.viewPager2)\nval iconPagerAdapter = IconPagerAdapter(iconList)\nviewPager2.adapter = iconPagerAdapter",
    "filename": "14c7364c03b0adb3e8f6bf487ed880ef_4.scala"
  },
  {
    "conversation_hash": "a51e6025e46895bc96f136471ce4c246",
    "code_index": 2,
    "language": "Scala",
    "libraries": [],
    "code": "# 数据库连接配置\nspring.datasource.url=jdbc:mysql://localhost:3306/mydb?useUnicode=true&characterEncoding=utf8&serverTimezone=UTC\nspring.datasource.username=root\nspring.datasource.password=root\n\n# MyBatis-Plus 配置\nmybatis-plus.mapper-locations=classpath:mapper/*.xml\n\n# 分页插件配置\nmybatis-plus.configuration.cache-enabled=false\nmybatis-plus.configuration.map-underscore-to-camel-case=true\nmybatis-plus.configuration.use-generated-keys=true\nmybatis-plus.configuration.jdbc-type-for-null=null\nmybatis-plus.configuration.log-impl=org.apache.ibatis.logging.stdout.StdOutImpl",
    "filename": "a51e6025e46895bc96f136471ce4c246_2.scala"
  },
  {
    "conversation_hash": "1da760a62aee445ee68dbfee9b982cbd",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "ActiveRecord::Base.connection.execute('UPDATE \"spree_variants\" AS v1\n    SET v1.markdown = p.amount\n    FROM \"spree_prices\" AS p\n        INNER JOIN \"spree_variants\" AS v2 ON v2.\"id\" = p.\"variant_id\"\n        INNER JOIN \"spree_products_taxons\" ON v1.\"product_id\" = \"spree_products_taxons\".\"product_id\"\n        INNER JOIN \"spree_taxons\" ON \"spree_products_taxons\".\"taxon_id\" = \"spree_taxons\".\"id\"\n        INNER JOIN \"spree_taxonomies\" ON \"spree_taxons\".\"taxonomy_id\" = \"spree_taxonomies\".\"id\"        \n WHERE p.\"deleted_at\" IS NULL AND \"spree_taxonomies\".\"name\" IN (\"Categories\", \"Wheels\")')",
    "filename": "1da760a62aee445ee68dbfee9b982cbd_0.scala"
  },
  {
    "conversation_hash": "7649e134d5495a73f7df6196d6c10e5a",
    "code_index": 2,
    "language": "Scala",
    "libraries": [],
    "code": "export default {\n  // ...\n  beforeRouteEnter(to, from, next) {\n    // Perform checks before entering the route\n    // Access to component instance through `this` is not available here\n    next();\n  },\n  beforeRouteUpdate(to, from, next) {\n    // Perform checks before updating the route\n    next();\n  },\n  beforeRouteLeave(to, from, next) {\n    // Perform checks before leaving the route\n    next();\n  }\n}",
    "filename": "7649e134d5495a73f7df6196d6c10e5a_2.scala"
  },
  {
    "conversation_hash": "9de7570df66a9c21b24b292bdd8f85de",
    "code_index": 6,
    "language": "Scala",
    "libraries": [],
    "code": "extends Node2D\n\nfunc set_room_size(size: Vector2):\n    # Assuming the child node is a ColorRect.\n    var color_rect = get_node(\"ColorRect\")\n    color_rect.rect_min_size = size",
    "filename": "9de7570df66a9c21b24b292bdd8f85de_6.scala"
  },
  {
    "conversation_hash": "9de7570df66a9c21b24b292bdd8f85de",
    "code_index": 9,
    "language": "Scala",
    "libraries": [],
    "code": "extends Node2D\n\nvar sprite # Change to 'color_rect' if using a ColorRect instead of a sprite.\n\nfunc _ready():\n    sprite = get_node(\"Sprite\") # or \"ColorRect\"\n\nfunc set_room_size(size: Vector2):\n    sprite.rect_min_size = size # If you're using a ColorRect.\n    # If using a Sprite, you would adjust the scale instead. E.g.:\n    # sprite.scale = size / original_sprite_size",
    "filename": "9de7570df66a9c21b24b292bdd8f85de_9.scala"
  },
  {
    "conversation_hash": "53cee7ecf239cdc0c54a345dba8cc80c",
    "code_index": 3,
    "language": "Scala",
    "libraries": [],
    "code": "sd = sd.Query(qd => qd\n    .Bool(bqd => bqd\n        .Filter(fqd => ApplyFilters(request, fqd))\n        .Must(qdi => qdi\n            .Prefix(s => s.SparePartId, escapedText, 40)\n            .Prefix(s => s.Oem, escapedText, 39)\n            .Prefix(s => s.NamePrefix, escapedText, 3)\n            .QueryString(mmqd => mmqd.Query(fuzzySearchText).Fields(f => f.All))\n            .QueryString(mmqd => mmqd.Query(\"\\\"\" + escapedText + \"\\\"\").Fields(f => f.All).Boost(3))\n            .QueryString(qsd => qsd\n                .Fuzzy(f => f\n                    .Fields(fd => fd\n                        .Field(s => s.SparePartId).Boost(5)\n                        .Field(s => s.Oem).Boost(5)\n                        .Field(s => s.Name).Boost(2)\n                        .Field(s => s.ProductLineNamesAnalyzed).Boost(2)\n                        .Field(s => s.Bom).Boost(6)\n                    )\n                    .MinimumSimilarity(0.7)\n                    .PrefixLength(0)\n                    .Value(fuzzySearchText)\n                )\n            )\n        )\n    )\n);",
    "filename": "53cee7ecf239cdc0c54a345dba8cc80c_3.scala"
  },
  {
    "conversation_hash": "842daba62c69f58be37eccf8047b9022",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "extends Node2D\n\nvar color_rect: ColorRect\n\nfunc _ready():\n    color_rect = $ColorRect # Assuming ColorRect is a direct child of the Room scene's root node\n\nfunc set_room_size(size: Vector2):\n    color_rect.rect_min_size = size",
    "filename": "842daba62c69f58be37eccf8047b9022_0.scala"
  },
  {
    "conversation_hash": "5a14a37e49c5e842ca6bc0936a9198e6",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "return sd.Query(fd =>\n    fd.Term(s => s.FilterType, filterType) &&\n    (\n        fd.QueryString(qd => qd.Query(EscapeText(text) + \"~\").Fields(m => m.Name).FuzzyMinimumSimilarity(0.8)) ||\n        fd.QueryString(qd => qd.Query(MultiWordWildcard(text)).Fields(m => m.Name).Boost(2))\n    )\n);",
    "filename": "5a14a37e49c5e842ca6bc0936a9198e6_1.scala"
  },
  {
    "conversation_hash": "5a14a37e49c5e842ca6bc0936a9198e6",
    "code_index": 2,
    "language": "Scala",
    "libraries": [],
    "code": "return sd.Query(fd =>\n    fd.Term(s => s.FilterType, filterType) &&\n    (\n        fd.QueryString(qd => qd.Query(EscapeText(text) + \"~\").Fields(m => m.FullName).FuzzyMinimumSimilarity(0.8)) ||\n        fd.QueryString(qd => qd.Query(MultiWordWildcard(text)).Fields(m => m.FullName).Boost(2))\n    )\n);",
    "filename": "5a14a37e49c5e842ca6bc0936a9198e6_2.scala"
  },
  {
    "conversation_hash": "6dad28a0d41456656c956a8df49d8c9f",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "sd = sd.Query(q => q\n    .Bool(b => b\n        .Filter(f => ApplyFilters(request, f))\n        .Must(qd => qd\n            .Prefix(s => s.SparePartId, escapedText, 40)\n            || qd.Prefix(s => s.Oem, escapedText, 39)\n            || qd.Prefix(s => s.NamePrefix, escapedText, 3)\n            || qd.QueryString(mmqd => mmqd\n                .Query(fuzzySearchText)\n                .OnFields(\"_all\"))\n            || qd.QueryString(mmqd => mmqd\n                .Query(\"\\\"\" + escapedText + \"\\\"\")\n                .OnFields(\"_all\")\n                .Boost(3))\n            || qd.QueryString(qsd => qsd\n                .Fuzziness(Fuzziness.EditDistance(2))\n                .Query(fuzzySearchText)\n                .OnFieldsWithBoost(fd => fd\n                    .Add(s => s.SparePartId, 5)\n                    .Add(s => s.Oem, 5)\n                    .Add(s => s.Name, 2)\n                    .Add(s => s.ProductLineNamesAnalyzed, 2)\n                    .Add(s => s.Bom, 6)))));",
    "filename": "6dad28a0d41456656c956a8df49d8c9f_0.scala"
  },
  {
    "conversation_hash": "6dad28a0d41456656c956a8df49d8c9f",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "sd = sd.Query(q => q\n    .Bool(b => b\n        .Filter(f => ApplyFilters(request, f))\n        .Must(qd => qd\n            .Prefix(s => s.SparePartId, escapedText, 40)\n            || qd.Prefix(s => s.Oem, escapedText, 39)\n            || qd.Prefix(s => s.NamePrefix, escapedText, 3)\n            || qd.QueryString(mmqd => mmqd\n                .Query(fuzzySearchText)\n                .OnFields(\"_all\"))\n            || qd.QueryString(mmqd => mmqd\n                .Query(\"\\\"\" + escapedText + \"\\\"\")\n                .OnFields(\"_all\")\n                .Boost(3))\n            || qd.QueryString(qsd => qsd\n                .Fuzziness(Fuzziness.EditDistance(2))\n                .Query(fuzzySearchText)\n                .OnFields(fs => fs\n                    .Field(s => s.SparePartId, 5)\n                    .Field(s => s.Oem, 5)\n                    .Field(s => s.Name, 2)\n                    .Field(s => s.ProductLineNamesAnalyzed, 2)\n                    .Field(s => s.Bom, 6))))));",
    "filename": "6dad28a0d41456656c956a8df49d8c9f_1.scala"
  },
  {
    "conversation_hash": "0daca4253edfe00281dbb265f4ac744b",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "<dependency>\n    <groupId>org.apache.flink</groupId>\n    <artifactId>flink-connector-jdbc</artifactId>\n    <version>${flink.version}</version>\n</dependency>\n\n<dependency>\n    <groupId>com.microsoft.sqlserver</groupId>\n    <artifactId>mssql-jdbc</artifactId>\n    <version>${sqlserver.jdbc.version}</version>\n</dependency>",
    "filename": "0daca4253edfe00281dbb265f4ac744b_0.scala"
  },
  {
    "conversation_hash": "58b5fa0ffc0e52a10eaa1b1e69b11d98",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "put '{' into myLiveCodeJSONString\n\nput \"    \"\"name\"\": \"\"my-new-repository\"\",\" after myLiveCodeJSONString\nput \"    \"\"description\"\": \"\"This is my new repository\"\",\" after myLiveCodeJSONString\nput \"    \"\"private\"\": false\" after myLiveCodeJSONString\n\ndelete char -1 to -2 of myLiveCodeJSONString\nput '}' after myLiveCodeJSONString\n\nput jsonImport(myLiveCodeJSONString) into myLiveCodeJSON\nput jsonExport(myLiveCodeJSON) into myLiveCodeJSONString",
    "filename": "58b5fa0ffc0e52a10eaa1b1e69b11d98_1.scala"
  },
  {
    "conversation_hash": "a06406fe77ae0e73ecada86f9265dffe",
    "code_index": 2,
    "language": "Scala",
    "libraries": [],
    "code": ";; ListOfBlob -> ListOfBlob\n;; produce a list of blobs that sinks the given solid blobs by one\n\n(define (sink lob)\n  (cond [(empty? lob) empty]\n        [(and (string=? (first lob) \"solid\")\n              (empty? (rest lob)))\n         (cons \"bubble\" empty)]\n        [(and (string=? (first lob) \"solid\") \n              (string=? (second lob) \"bubble\"))\n         (cons \"bubble\"\n               (cons \"solid\"\n                     (sink (rest (rest lob)))))]\n\n        [else (cons (first lob) (sink (rest lob)))]))",
    "filename": "a06406fe77ae0e73ecada86f9265dffe_2.scala"
  },
  {
    "conversation_hash": "6ac2d60321823aa121366623c7e2e644",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "mapping(uint256 => Game) public games;\n\nstruct Game {\n    address payable player1;\n    address payable player2;\n    // ... autres propriétés de la structure Game\n}",
    "filename": "6ac2d60321823aa121366623c7e2e644_0.scala"
  },
  {
    "conversation_hash": "4e3dd1444052bb88fc8202abc5e184d7",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "// For the first validateInput prop\nvalidateInput={(_: string | undefined, files?: File[]) => {\n  // Check if files exist and there's at least one file\n  return !!(files && files.length > 0);\n}}\n\n// ...\n\n// For the second validateInput prop\nvalidateInput={(text?: string, files?: File[]) => {\n  // Check if text is not empty and there's at least one file\n  return !!(text?.trim() !== '' && files && files.length > 0);\n}}",
    "filename": "4e3dd1444052bb88fc8202abc5e184d7_1.scala"
  },
  {
    "conversation_hash": "48b3a2e6c4fb998be9d9d280cff73b0a",
    "code_index": 18,
    "language": "Scala",
    "libraries": [],
    "code": "val locale = Locale(\"ru\")\nLocale.setDefault(locale)\nval config = Configuration()\nconfig.locale = locale\nwebView.context.resources.updateConfiguration(config, webView.context.resources.displayMetrics)",
    "filename": "48b3a2e6c4fb998be9d9d280cff73b0a_18.scala"
  },
  {
    "conversation_hash": "43559309d5280a8cf283ba4bff7d4aa4",
    "code_index": 7,
    "language": "Scala",
    "libraries": [],
    "code": "// Определите переменные для фрагментов и инициализируйте их в onCreate\nval fragmentZaimy = WebViewFragment.newInstance(\"https://app2.zaimbotmanager.ru/?scrollTo=Займы\")\nval fragmentKredity = WebViewFragment.newInstance(\"https://app2.zaimbotmanager.ru/?scrollTo=Кредиты\")\nval fragmentKarty = WebViewFragment.newInstance(\"https://app2.zaimbotmanager.ru/?scrollTo=Карты\")\n\n// В BottomNavigationView настройте обработчики нажатий для переключения фрагментов\n// с использованием FragmentManager",
    "filename": "43559309d5280a8cf283ba4bff7d4aa4_7.scala"
  },
  {
    "conversation_hash": "3ec7d4b340f0a6720e9d85e68b8e283b",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "android {\n    compileSdk 34\n\n    defaultConfig {\n        applicationId \"com.example.mywebviewapp\"\n        minSdkVersion 21\n        targetSdkVersion 34\n        versionCode 1\n        versionName \"1.0\"\n    }\n}",
    "filename": "3ec7d4b340f0a6720e9d85e68b8e283b_0.scala"
  },
  {
    "conversation_hash": "126f12137d20c9278e88734abea819cd",
    "code_index": 3,
    "language": "Scala",
    "libraries": [],
    "code": "{formData.options.map((option, index) => (\n  <input\n    key={index}\n    name={`option${index + 1}`}\n    id={`option${index + 1}`}\n    type=\"text\"\n    value={option.description}\n    onChange={(e) => handleOptionChange(e, index)}\n    required\n  />\n))}",
    "filename": "126f12137d20c9278e88734abea819cd_3.scala"
  },
  {
    "conversation_hash": "3263a223c1e8564338d21b9c9d8f47d4",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "{formData.options.map((option, index) => (\n  <input\n    key={index}\n    name={`option${index + 1}`}\n    id={`option${index + 1}`}\n    type=\"text\"\n    value={option.description}\n    onChange={(e) => handleOptionChange(e, index)}\n    required\n  />\n))}",
    "filename": "3263a223c1e8564338d21b9c9d8f47d4_0.scala"
  },
  {
    "conversation_hash": "db142cfb377e0f51c11df244eae2fc3c",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "{formData.options.map((option, index) => (\n  <input\n    key={index}\n    name={`option${index + 1}`}\n    id={`option${index + 1}`}\n    type=\"text\"\n    value={option.description}\n    onChange={(e) => handleOptionChange(e, index)}\n    required\n  />\n))}",
    "filename": "db142cfb377e0f51c11df244eae2fc3c_0.scala"
  },
  {
    "conversation_hash": "3f51c5feef528fcddf74acd85c7b83a6",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "import 'package:flutter/material.dart';\n\nclass ChatScreen extends StatefulWidget {\n  @override\n  _ChatScreenState createState() => _ChatScreenState();\n}\n\nclass _ChatScreenState extends State<ChatScreen> {\n  List<String> messages = [];\n\n  @override\n  Widget build(BuildContext context) {\n    return Scaffold(\n      appBar: AppBar(title: Text('Chat')),\n      body: Column(\n        children: [\n          Expanded(\n            child: ListView.builder(\n              itemCount: messages.length,\n              itemBuilder: (context, index) => ListTile(\n                title: Text(messages[index]),\n              ),\n            ),\n          ),\n          Container(\n            padding: EdgeInsets.symmetric(horizontal: 10),\n            child: TextField(\n              onSubmitted: (text) {\n                // Enviar mensagem para o ChatGPT\n              },\n              decoration: InputDecoration(\n                hintText: 'Digite uma mensagem...',\n                suffixIcon: IconButton(\n                  icon: Icon(Icons.send),\n                  onPressed: () {\n                    // Enviar mensagem para o ChatGPT\n                  },\n                ),\n              ),\n            ),\n          ),\n        ],\n      ),\n    );\n  }\n}",
    "filename": "3f51c5feef528fcddf74acd85c7b83a6_1.scala"
  },
  {
    "conversation_hash": "b29aa07ed33c9fa258e446a2c30444f8",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "PagedListView<int, Data>(\n  pagingController: _pagingController,\n  builderDelegate: PagedChildBuilderDelegate<Data>(\n    itemBuilder: (context, item, index) => YourItemWidget(item: item),\n    firstPageErrorIndicatorBuilder: (context) => YourErrorWidget(),\n    newPageErrorIndicatorBuilder: (context) => YourErrorWidget(),\n    // Optionally handle a no items found scenario\n    // noItemsFoundIndicatorBuilder: (context) => YourEmptyListWidget(),\n  ),\n),",
    "filename": "b29aa07ed33c9fa258e446a2c30444f8_0.scala"
  },
  {
    "conversation_hash": "4fadc0c6720c19bb1d7f05823f4ba885",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "val usageStatsManager = getSystemService(Context.USAGE_STATS_SERVICE) as UsageStatsManager\n   val timeNow = System.currentTimeMillis()\n   val stats = usageStatsManager.queryUsageStats(UsageStatsManager.INTERVAL_DAILY, timeNow - 1000*60*60*24, timeNow)\n   stats?.let {\n       for (usageStat in it) {\n           if ((usageStat.packageName == \"com.google.android.youtube\" ||\n               usageStat.packageName == \"some.live.tv.app.package\") && \n               usageStat.totalTimeInForeground >= certainThreshold) {\n                   println(\"YouTube/Live TV was running for long time.\")\n           }\n       }\n   }",
    "filename": "4fadc0c6720c19bb1d7f05823f4ba885_1.scala"
  },
  {
    "conversation_hash": "c036de1a13af8cad0859873818bd56b4",
    "code_index": 0,
    "language": "Scala",
    "libraries": [
      "a",
      "the"
    ],
    "code": "#lang racket\n\n;; Define a dictionary to store the mappings between short and original URLs\n(define url-dictionary (hash))\n\n;; Function to generate a unique short URL\n(define (generate-short-url)\n  (let loop ([short-url (random 100000)]) ; Generate a random number between 0 and 100000\n    (if (hash-has-key? url-dictionary short-url)\n        (loop (random 100000)) ; If generated number already exists, generate a new one\n        short-url)))\n\n;; Function to shorten a given URL\n(define (shorten-url original-url)\n  (define short-url (generate-short-url))\n  (hash-set! url-dictionary short-url original-url)\n  short-url)\n\n;; Function to retrieve the original URL from a shortened URL\n(define (get-original-url short-url)\n  (hash-ref url-dictionary short-url #f))\n\n;; Generate a shortened URL for a given original URL\n(define shortened-url (shorten-url \"https://www.example.com\"))\n\n;; Retrieve the original URL from the shortened URL\n(define original-url (get-original-url shortened-url))\n\n(println \"Shortened URL: \" shortened-url)\n(println \"Original URL: \" original-url)",
    "filename": "c036de1a13af8cad0859873818bd56b4_0.scala"
  },
  {
    "conversation_hash": "a24bb7b79ca1af577f89f5472761e2d7",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "val usm = getSystemService(Context.USAGE_STATS_SERVICE) as UsageStatsManager\n   val time = System.currentTimeMillis()\n   // Query for the last 24 hours (for example)\n   val stats = usm.queryUsageStats(UsageStatsManager.INTERVAL_DAILY, time - 1000 * 60 * 60 * 24, time)\n\n   stats?.forEach { usageStats ->\n       if (usageStats.packageName.contains(\"youtube\") || usageStats.packageName.contains(\"livetv\")) {\n           println(\"${usageStats.packageName} was last used at ${Date(usageStats.lastTimeUsed)}\")\n       }\n   }",
    "filename": "a24bb7b79ca1af577f89f5472761e2d7_1.scala"
  },
  {
    "conversation_hash": "a24bb7b79ca1af577f89f5472761e2d7",
    "code_index": 2,
    "language": "Scala",
    "libraries": [],
    "code": "val activityManager = getSystemService(Context.ACTIVITY_SERVICE) as ActivityManager\n   val memoryInfo = ActivityManager.MemoryInfo()\n   activityManager.getMemoryInfo(memoryInfo)\n\n   val availableMemoryInMB = memoryInfo.availMem / 1048576L\n   val isMemoryLow = memoryInfo.lowMemory\n\n   println(\"Available memory: $availableMemoryInMB MB\")\n   println(\"Is memory low: $isMemoryLow\")",
    "filename": "a24bb7b79ca1af577f89f5472761e2d7_2.scala"
  },
  {
    "conversation_hash": "3d5b98a8280c5b3f41984549885268eb",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "sealed trait Expr\ncase class Operand(value: Char) extends Expr\ncase class Operator(op: Char, left: Expr, right: Expr) extends Expr\n\nobject InfixToPostfix {\n  // A simple method to define precedence of operators\n  def precedence(op: Char): Int = op match {\n    case '+' | '-' => 1\n    case '*' | '/' => 2\n    case _ => 0\n  }\n\n  // A simple method to check if a character is an operator\n  def isOperator(c: Char): Boolean = precedence(c) > 0\n\n  // Parse infix expression and build a binary tree\n  def parseInfix(expr: String): Expr = {\n    def parse(tokens: List[Char]): (Expr, List[Char]) = tokens match {\n      case c :: rest if c.isLetter =>\n        (Operand(c), rest)\n\n      case c :: rest if isOperator(c) =>\n        val (leftExpr, afterLeft) = parse(rest)\n        val (rightExpr, remaining) = parse(afterLeft)\n        (Operator(c, leftExpr, rightExpr), remaining)\n\n      case _ => throw new IllegalArgumentException(\"Invalid expression\")\n    }\n\n    parse(expr.toList)._1\n  }\n\n  // Convert the binary tree to postfix expression\n  def toPostfix(expr: Expr): String = expr match {\n    case Operand(value) => value.toString\n    case Operator(op, left, right) =>\n      toPostfix(left) + toPostfix(right) + op\n  }\n\n  def main(args: Array[String]): Unit = {\n    val infix = \"A*B+C\"\n    val tree = parseInfix(infix)\n    val postfix = toPostfix(tree)\n    println(s\"Infix: $infix\")\n    println(s\"Postfix: $postfix\")\n  }\n}",
    "filename": "3d5b98a8280c5b3f41984549885268eb_1.scala"
  },
  {
    "conversation_hash": "8aba66dd1e109c35f8850f7d4e584024",
    "code_index": 2,
    "language": "Scala",
    "libraries": [],
    "code": "∅           // The empty set\n∅           // A new set containing the empty set (singleton set)\n\n∅\n∅           // A new set that is interpreted as containing two sets, both of which are the empty set",
    "filename": "8aba66dd1e109c35f8850f7d4e584024_2.scala"
  },
  {
    "conversation_hash": "21c9e503b6ca4cbbaf937d7c32222ad7",
    "code_index": 3,
    "language": "Scala",
    "libraries": [
      "Line"
    ],
    "code": "(Empty Line)       // Line 1: The true empty set, {}.\n∅                  // Line 2: The set containing the empty set, {∅}.\n∅∅                 // Line 3: The set containing the empty set and a set containing the empty set, {∅, {∅}}.\n(∅)                // Line 4: The set containing the set from Line 2, {{∅}}.\n(^)                // Line 5: The set containing the set from Line 3, {{∅, {∅}}}.\n(∅∅)               // Line 6: The set containing the empty set and a set containing the empty set, {{∅, {∅}}}.\n^∅                 // Line 7: The union of the set from Line 6 with the set containing the empty set: {{∅, {∅}}, ∅}.\n(∅^)               // Line 8: The set containing the empty set and the set from Line 7, {∅, {{∅, {∅}}, ∅}}.",
    "filename": "21c9e503b6ca4cbbaf937d7c32222ad7_3.scala"
  },
  {
    "conversation_hash": "712e72f24b013b2ef2652eb272a07bde",
    "code_index": 12,
    "language": "Scala",
    "libraries": [],
    "code": "val chooserIntent = Intent.createChooser(shareIntent, \"Share via\")\nchooserIntent.putExtra(Intent.EXTRA_INITIAL_INTENTS, arrayOf(smsIntent))\nchooserIntent.putExtra(Intent.EXTRA_CHOOSER_TARGETS, arrayOf(createCustomChooserTarget()))\nchooserIntent.putExtra(Intent.EXTRA_CHOOSER_TITLE, \"Choose an app\")\n\n// Apply the custom dialog style\nval dialogStyle = R.style.CustomDialogStyle\nval dialogTheme = R.style.CustomDialogTheme\nchooserIntent.putExtra(Intent.EXTRA_CHOOSER_DIALOG_THEME, dialogTheme)\nchooserIntent.putExtra(Intent.EXTRA_CHOOSER_DIALOG_THEME_ALLOCATOR, dialogStyle)",
    "filename": "712e72f24b013b2ef2652eb272a07bde_12.scala"
  },
  {
    "conversation_hash": "712e72f24b013b2ef2652eb272a07bde",
    "code_index": 14,
    "language": "Scala",
    "libraries": [],
    "code": "val packageName = packageName // Get the package name of the current app\nval packageInfo = packageManager.getPackageInfo(packageName, 0)\n\nval apkUri = FileProvider.getUriForFile(this, \"$packageName.fileprovider\", packageInfo.applicationInfo.sourceDir)\n\nval shareIntent = Intent(Intent.ACTION_SEND)\nshareIntent.type = \"application/vnd.android.package-archive\"\nshareIntent.putExtra(Intent.EXTRA_STREAM, apkUri)\nshareIntent.addFlags(Intent.FLAG_GRANT_READ_URI_PERMISSION)",
    "filename": "712e72f24b013b2ef2652eb272a07bde_14.scala"
  },
  {
    "conversation_hash": "712e72f24b013b2ef2652eb272a07bde",
    "code_index": 15,
    "language": "Scala",
    "libraries": [],
    "code": "val packageName = packageName // Get the package name of the current app\nval packageInfo = packageManager.getPackageInfo(packageName, 0)\n\nval apkUri = FileProvider.getUriForFile(this, \"$packageName.fileprovider\", File(packageInfo.applicationInfo.sourceDir))\n\nval shareIntent = Intent(Intent.ACTION_SEND)\nshareIntent.type = \"application/vnd.android.package-archive\"\nshareIntent.putExtra(Intent.EXTRA_STREAM, apkUri)\nshareIntent.addFlags(Intent.FLAG_GRANT_READ_URI_PERMISSION)",
    "filename": "712e72f24b013b2ef2652eb272a07bde_15.scala"
  },
  {
    "conversation_hash": "7a4046bf9d0181e9a53d6d35186baea7",
    "code_index": 3,
    "language": "Scala",
    "libraries": [],
    "code": "{skills.map((skill, index) => (\n  <Chip\n    key={index}\n    label={skill}\n    variant=\"outlined\"\n    onDelete={() => handleDeleteSkill(index)}\n    deleteIcon={<CloseIcon />} // Asegúrate de importar CloseIcon desde '@mui/icons-material/Close'\n  />\n))}",
    "filename": "7a4046bf9d0181e9a53d6d35186baea7_3.scala"
  },
  {
    "conversation_hash": "7a4046bf9d0181e9a53d6d35186baea7",
    "code_index": 7,
    "language": "Scala",
    "libraries": [],
    "code": "<Chip\n  key={index}\n  label={skill}\n  variant=\"outlined\"\n  onDelete={() => handleDeleteSkill(index)}\n  deleteIcon={<CloseIcon />}\n  className={classes.chip} // Agrega la clase a la etiqueta Chip\n/>",
    "filename": "7a4046bf9d0181e9a53d6d35186baea7_7.scala"
  },
  {
    "conversation_hash": "23fe442c804574997c186a17abc6178c",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "import { defineComponent } from 'vue';\n\ninterface MyData {\n  date: string;\n  content: string;\n}\n\nexport default defineComponent({\n  template: `\n    <div class=\"notice-item\" v-for=\"(item, index) in data\" :key=\"index\">\n      <div class=\"date\">\n        <div>{{ item.date.split('-')?.[0] }}</div>\n        <div>11-22</div>\n      </div>\n      <div class=\"content\">\n        <el-tooltip :content=\"item.content\">{{ item.content }}</el-tooltip>\n      </div>\n    </div>\n  `,\n  data(): { data: MyData[] } {\n    return {\n      data: []\n    };\n  }\n});",
    "filename": "23fe442c804574997c186a17abc6178c_0.scala"
  },
  {
    "conversation_hash": "6d567cc7fca589bc1ef41f026c80663e",
    "code_index": 4,
    "language": "Scala",
    "libraries": [],
    "code": "val recipient = \"recipient@example.com\"\nval subject = \"Subject\"\nval body = \"Hello! This is the content of the email.\"\n\nval data = Uri.parse(\"mailto:$recipient?subject=${Uri.encode(subject)}&body=${Uri.encode(body)}\")\nval intent = Intent(Intent.ACTION_VIEW, data)\n\nif (intent.resolveActivity(packageManager) != null) {\n    startActivity(intent)\n} else {\n    Toast.makeText(this, \"No email clients found!\", Toast.LENGTH_SHORT).show()\n}",
    "filename": "6d567cc7fca589bc1ef41f026c80663e_4.scala"
  },
  {
    "conversation_hash": "6d567cc7fca589bc1ef41f026c80663e",
    "code_index": 5,
    "language": "Scala",
    "libraries": [],
    "code": "val recipient = \"recipient@example.com\"\nval subject = \"Subject\"\nval body = \"Hello! This is the content of the email.\"\n\nval data = Uri.parse(\"mailto:$recipient?subject=${Uri.encode(subject)}&body=${Uri.encode(body)}\")\nval intent = Intent(Intent.ACTION_VIEW, data)\n\nif (intent.resolveActivity(packageManager) != null) {\n    startActivity(intent)\n} else {\n    Toast.makeText(this, \"No email clients found!\", Toast.LENGTH_SHORT).show()\n}",
    "filename": "6d567cc7fca589bc1ef41f026c80663e_5.scala"
  },
  {
    "conversation_hash": "3d144df16902213aff70fc5650044920",
    "code_index": 5,
    "language": "Scala",
    "libraries": [],
    "code": "spring.datasource.url=jdbc:h2:mem:bank_db\nspring.datasource.driverClassName=org.h2.Driver\nspring.jpa.database-platform=org.hibernate.dialect.H2Dialect\nspring.jpa.show-sql=true\nspring.h2.console.enabled=true",
    "filename": "3d144df16902213aff70fc5650044920_5.scala"
  },
  {
    "conversation_hash": "8a48ef165d68b883311a2b3b5dff6e01",
    "code_index": 2,
    "language": "Scala",
    "libraries": [],
    "code": "<template>\n  <button @click=\"$emit('click')\">{{ title }}</button>\n</template>\n\n<script>\nexport default {\n  props: {\n    title: String\n  }\n}\n</script>",
    "filename": "8a48ef165d68b883311a2b3b5dff6e01_2.scala"
  },
  {
    "conversation_hash": "87616ddee00a432b0235e2722b3a2434",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "@main\nstruct MyApp: App {\n    // Создание экземпляра данных\n    var exampleData = ExampleData()\n\n    var body: some Scene {\n        WindowGroup {\n            ContentView()\n                .environmentObject(exampleData) // Передача в environment\n        }\n    }\n}",
    "filename": "87616ddee00a432b0235e2722b3a2434_1.scala"
  },
  {
    "conversation_hash": "515bd3eb5b91a6700adfe898bed0d06e",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "# bootstrap.yml\nspring:\n  application:\n    name: myapp\n  config:\n    activate:\n      on-profile: default",
    "filename": "515bd3eb5b91a6700adfe898bed0d06e_0.scala"
  },
  {
    "conversation_hash": "ddbcf61b3f3305a23cfe03d3e630be17",
    "code_index": 2,
    "language": "Scala",
    "libraries": [],
    "code": "import { Exclude, Expose } from 'class-transformer';\n\nexport class AnagraficaDto {\n\n  // ... altre proprietà\n\n  @Expose()\n  figli: RelazioneAnagraficaDto[];\n\n  // ... altre proprietà\n}\n\nexport class RelazioneAnagraficaDto {\n\n  // ... altre proprietà\n\n  @Exclude()\n  genitore: AnagraficaDto;\n\n  // ... altre proprietà\n}",
    "filename": "ddbcf61b3f3305a23cfe03d3e630be17_2.scala"
  },
  {
    "conversation_hash": "ddbcf61b3f3305a23cfe03d3e630be17",
    "code_index": 5,
    "language": "Scala",
    "libraries": [],
    "code": "// Usato quando converti l'entità in un oggetto plain durante la risposta HTTP\n@Exclude({ toPlainOnly: true })\n\n// Usato quando converti un oggetto DTO in un'entità, come nel processo di salvataggio\n@Exclude({ toClassOnly: true })",
    "filename": "ddbcf61b3f3305a23cfe03d3e630be17_5.scala"
  },
  {
    "conversation_hash": "ddbcf61b3f3305a23cfe03d3e630be17",
    "code_index": 6,
    "language": "Scala",
    "libraries": [],
    "code": "export class RelazioniAnagraficaMapper {\n  static toDto(relazioneEntity: RelazioniAnagraficaEntity): RelazioniAnagraficaDto {\n    return {\n      id: relazioneEntity.id,\n      // Rimuovi o commenta le chiamate ricorsive per evitare cicli\n      // genitore: AnagraficaMapper.toDto(relazioneEntity.genitore),\n      // figlio: AnagraficaMapper.toDto(relazioneEntity.figlio),\n      tipoRelazione: TipologicaMapper.toDto<TipoRelazione>(\n        relazioneEntity.tipoRelazione,\n      ),\n    };\n  }\n\n  // Restanti metodi\n}",
    "filename": "ddbcf61b3f3305a23cfe03d3e630be17_6.scala"
  },
  {
    "conversation_hash": "ddbcf61b3f3305a23cfe03d3e630be17",
    "code_index": 7,
    "language": "Scala",
    "libraries": [],
    "code": "export class AnagraficaMapper {\n  static toDto(anagraficaEntity: AnagraficaEntity): AnagraficaDto {\n    return {\n      // Restanti proprietà\n      // Anche qui, commenta le parti problematiche o mappa solo gli IDs o proprietà base\n      // figli: // Mappa solo gli IDs o proprietà base, evita l'intero oggetto DTO se possibile\n      // genitori: // Stessa cosa per i genitori\n      // Rimaniendo vaghi, puoi quindi limitarti a includere gli IDs e gli altri attributi base\n    };\n  }\n\n  // Restanti metodi\n}",
    "filename": "ddbcf61b3f3305a23cfe03d3e630be17_7.scala"
  },
  {
    "conversation_hash": "5e1bec7017698619caf63e76d2b606ac",
    "code_index": 2,
    "language": "Scala",
    "libraries": [
      "type"
    ],
    "code": "import type { arrowItem } from \"./ArrowsPage.types\";\n\nexport default defineComponent({\n  ...\n});",
    "filename": "5e1bec7017698619caf63e76d2b606ac_2.scala"
  },
  {
    "conversation_hash": "eda29ee333ea8dc15b6f6ed980598261",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "<dependency>\n    <groupId>org.apache.logging.log4j</groupId>\n    <artifactId>log4j-core</artifactId>\n    <version>2.17.1</version>\n</dependency>",
    "filename": "eda29ee333ea8dc15b6f6ed980598261_0.scala"
  },
  {
    "conversation_hash": "65d4e96cc4180e2ea3418ed4d85ed366",
    "code_index": 3,
    "language": "Scala",
    "libraries": [],
    "code": "type: entities\ntitle: Example Configurable Card\nentities:\n  - light.bedroom\n  - light.living_room",
    "filename": "65d4e96cc4180e2ea3418ed4d85ed366_3.scala"
  },
  {
    "conversation_hash": "7090cba5cf59181f4ff7439c714f490c",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "export class IscrizioneAsiloNidoDto {\n  // Assuming we only want to receive IDs for relations, not whole objects\n  praticaId: number;\n  richiedenteId: number;\n  beneficiarioId: number;\n  iseeId: number;\n  preferenzaOrarioScolasticoId: number;\n  privacy: boolean;\n  invaliditaFiglio: boolean;\n  preferenzaAsiloNido: number;\n  punteggioGraduatoria: number;\n  situazioneParentaleId: number;\n  nucleoFamiliareQuantitaFigli: number;\n  gravidanzaMadre: boolean;\n  figliGiaIscrittiIds: number[];\n  ruoloRichiedenteId: number;\n}",
    "filename": "7090cba5cf59181f4ff7439c714f490c_0.scala"
  },
  {
    "conversation_hash": "399ca546e84f650ea699f3cdb6a4a5c1",
    "code_index": 0,
    "language": "Scala",
    "libraries": [
      "me.clip.placeholderapi.expansion.PlaceholderExpansion",
      "org.bukkit.entity.Player"
    ],
    "code": "package ваш_пакет;\n\nimport me.clip.placeholderapi.expansion.PlaceholderExpansion;\nimport org.bukkit.entity.Player;\n\npublic class ВашПлагинExpansion extends PlaceholderExpansion {\n    // Реализуйте методы, необходимые для вашего плагина\n}",
    "filename": "399ca546e84f650ea699f3cdb6a4a5c1_0.scala"
  },
  {
    "conversation_hash": "a4d055041906d48288fec80793c8bef8",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "<Target Name=\"MoveSatelliteAssemblies\" AfterTargets=\"Build\">\n    <ItemGroup>\n      <SatelliteAssemblies Include=\"$(OutputPath)**\\*.resources.dll\" />\n    </ItemGroup>\n    <Copy SourceFiles=\"@(SatelliteAssemblies)\" DestinationFolder=\"$(OutputPath)Localizations\\%(RecursiveDir)\" />\n    <Delete Files=\"@(SatelliteAssemblies)\" />\n    <RemoveDir Directories=\"$(OutputPath)ru;$(OutputPath)de;$(OutputPath)it;$(OutputPath)ja\" />\n</Target>",
    "filename": "a4d055041906d48288fec80793c8bef8_0.scala"
  },
  {
    "conversation_hash": "2a4802a4ca2db4f052f14b4e23024884",
    "code_index": 2,
    "language": "Scala",
    "libraries": [],
    "code": "val buttonOpenSecondActivity = findViewById<Button>(R.id.button_open_second_activity)\nbuttonOpenSecondActivity.setOnClickListener {\n    val intent = Intent(this, SecondActivity::class.java)\n    startActivity(intent)\n}",
    "filename": "2a4802a4ca2db4f052f14b4e23024884_2.scala"
  },
  {
    "conversation_hash": "e0be0c35f4d25ed59e13aa4057760a7a",
    "code_index": 1,
    "language": "Scala",
    "libraries": [
      "android.content.Intent",
      "android.provider.MediaStore"
    ],
    "code": "import android.content.Intent\nimport android.provider.MediaStore\n\nval takePictureIntent = Intent(MediaStore.ACTION_IMAGE_CAPTURE)\nstartActivityForResult(takePictureIntent, REQUEST_IMAGE_CAPTURE)",
    "filename": "e0be0c35f4d25ed59e13aa4057760a7a_1.scala"
  },
  {
    "conversation_hash": "e0be0c35f4d25ed59e13aa4057760a7a",
    "code_index": 7,
    "language": "Scala",
    "libraries": [],
    "code": "if (packageManager.hasSystemFeature(PackageManager.FEATURE_CAMERA_ANY)) {\n    // The device has a camera - you can set up camera features\n} else {\n    // The device does not have a camera - disable camera features\n}",
    "filename": "e0be0c35f4d25ed59e13aa4057760a7a_7.scala"
  },
  {
    "conversation_hash": "e0be0c35f4d25ed59e13aa4057760a7a",
    "code_index": 16,
    "language": "Scala",
    "libraries": [],
    "code": "dependencies {\n    // Other dependencies...\n\n    def camerax_version = \"1.0.0-rc05\"\n    implementation \"androidx.camera:camera-camera2:$camerax_version\"\n    implementation \"androidx.camera:camera-lifecycle:$camerax_version\"\n    implementation \"androidx.camera:camera-view:1.0.0-alpha24\"\n}",
    "filename": "e0be0c35f4d25ed59e13aa4057760a7a_16.scala"
  },
  {
    "conversation_hash": "e9ef1133fc955e5111cceb11c3ada443",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "dependencies {\n        def camerax_version = \"1.0.0-rc01\" // Check for the latest version\n        implementation \"androidx.camera:camera-core:${camerax_version}\"\n        implementation \"androidx.camera:camera-camera2:${camerax_version}\"\n        implementation \"androidx.camera:camera-lifecycle:${camerax_version}\"\n        // If you need additional features like viewfinder, analysis, etc.\n        implementation \"androidx.camera:camera-view:1.0.0-alpha10\"\n        implementation \"androidx.camera:camera-extensions:1.0.0-alpha10\"\n    }",
    "filename": "e9ef1133fc955e5111cceb11c3ada443_0.scala"
  },
  {
    "conversation_hash": "3d7e59b03c9980481e9e4034604feb8e",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "dependencies {\n    // CameraX core library\n    def camerax_version = \"1.1.0\" // Replace with the latest version available\n    implementation \"androidx.camera:camera-camera2:$camerax_version\"\n    implementation \"androidx.camera:camera-lifecycle:$camerax_version\"\n    implementation \"androidx.camera:camera-view:1.0.0-alpha27\" // View for preview\n    implementation \"androidx.camera:camera-extensions:1.0.0-alpha27\" // Optional, if you need extensions\n    \n    // If you're using the new 'androidx.camera:camera-camera2' dependency,\n    // make sure to remove the old Camera2 dependency in your build.gradle as it is included in camera-core\n\n    // ... other dependencies\n}",
    "filename": "3d7e59b03c9980481e9e4034604feb8e_0.scala"
  },
  {
    "conversation_hash": "b8d752840d0127dc9b47fd2c25fb9f06",
    "code_index": 0,
    "language": "Scala",
    "libraries": [
      "fasta_channel",
      "reads_channel"
    ],
    "code": "process test {\n    input:\n    file fasta from fasta_channel\n    tuple val(sample), path(reads) from reads_channel\n\n    output:\n    tuple val(sample), path(\"*.dedup.bam\") into dedup_bam_channel\n\n    script:\n    \"\"\"\n    bwa mem ${fasta} ${reads} | samtools view -b | samtools sort -o ${sample}.bam && \\\n    picard MarkDuplicates I=input.bam O=output.dedup.bam M=metrics.txt REMOVE_DUPLICATES=true && \\\n    samtools index ${sample}.dedup.bam\n    \"\"\"\n}",
    "filename": "b8d752840d0127dc9b47fd2c25fb9f06_0.scala"
  },
  {
    "conversation_hash": "e6a35b7130e9b036240906e6f3402fbd",
    "code_index": 2,
    "language": "Scala",
    "libraries": [],
    "code": "// ... other code ...\n\nprocess index {\n    input:\n    file(fasta)\n\n    output:\n    path(\"${fasta}.*\") // Changed output to capture all index files\n\n    script:\n    \"\"\"\n    bwa index ${fasta}\n    \"\"\"\n}\n\nprocess x {\n    input:\n    path(idx) // Changed to capture all index files\n    tuple val(sample), file(reads)\n\n    script:\n    \"\"\"\n    bwa mem ${idx.baseName} ${reads} | ... // Use baseName without extension\n    \"\"\"\n}\n\n// ... other code ...",
    "filename": "e6a35b7130e9b036240906e6f3402fbd_2.scala"
  },
  {
    "conversation_hash": "11d8c858f3a2ce27a8eeb64d3766d5fe",
    "code_index": 0,
    "language": "Scala",
    "libraries": [
      "java.io.ByteArrayOutputStream",
      "java.io.File",
      "java.util.concurrent.Executors",
      "okhttp3.MediaType.Companion.toMediaType",
      "okhttp3.MultipartBody",
      "okhttp3.OkHttpClient",
      "okhttp3.Request",
      "okhttp3.RequestBody.Companion.asRequestBody"
    ],
    "code": "import okhttp3.MediaType.Companion.toMediaType\nimport okhttp3.MultipartBody\nimport okhttp3.OkHttpClient\nimport okhttp3.Request\nimport okhttp3.RequestBody.Companion.asRequestBody\nimport java.io.ByteArrayOutputStream\nimport java.io.File\nimport java.util.concurrent.Executors",
    "filename": "11d8c858f3a2ce27a8eeb64d3766d5fe_0.scala"
  },
  {
    "conversation_hash": "d490da7193d55e046cbcfb750c7a6da4",
    "code_index": 2,
    "language": "Scala",
    "libraries": [],
    "code": "...\nval bitmap = BitmapFactory.decodeByteArray(bytes, 0, bytes.size)\nthis@MainActivity.image.value = bitmap\nsendImageToServer(bitmap)\n...",
    "filename": "d490da7193d55e046cbcfb750c7a6da4_2.scala"
  },
  {
    "conversation_hash": "8cd6e1df7dd8b013065aacc0e3cd8918",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "add_custom_command(\n   OUTPUT mylib.a\n   COMMAND <your_build_command> -o mylib.a\n   DEPENDS <your_source_files>\n   WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/src\n)",
    "filename": "8cd6e1df7dd8b013065aacc0e3cd8918_0.scala"
  },
  {
    "conversation_hash": "dcb5c7904d713c9a3cb81b4dd0af651e",
    "code_index": 15,
    "language": "Scala",
    "libraries": [],
    "code": "<dependency>\n    <groupId>javax.xml.bind</groupId>\n    <artifactId>jaxb-api</artifactId>\n    <version>2.3.1</version>\n</dependency>",
    "filename": "dcb5c7904d713c9a3cb81b4dd0af651e_15.scala"
  },
  {
    "conversation_hash": "6dd0fc0478e1208d56fbbf5bbec4bf02",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "add_custom_target(my_target\n    COMMAND ${CMAKE_COMMAND} -E copy_directory ${CMAKE_CURRENT_SOURCE_DIR}/path_to_source ${CMAKE_CURRENT_BINARY_DIR}/path_to_destination\n    WORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}/path_to_destination\n    )\n\nset_target_properties(my_target PROPERTIES\n    RUNTIME_OUTPUT_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}/path_to_destination\n    )",
    "filename": "6dd0fc0478e1208d56fbbf5bbec4bf02_0.scala"
  },
  {
    "conversation_hash": "31ffaaf372b69b4c840724c64f90360b",
    "code_index": 4,
    "language": "Scala",
    "libraries": [],
    "code": "<!-- Spring Boot Security -->\n<dependency>\n    <groupId>org.springframework.boot</groupId>\n    <artifactId>spring-boot-starter-security</artifactId>\n</dependency>",
    "filename": "31ffaaf372b69b4c840724c64f90360b_4.scala"
  },
  {
    "conversation_hash": "3134a01f875c385e915863730fff0f86",
    "code_index": 4,
    "language": "Scala",
    "libraries": [
      "retrofit2.Retrofit",
      "retrofit2.converter.moshi.MoshiConverterFactory"
    ],
    "code": "// RetrofitInstance.kt\n\nimport retrofit2.Retrofit\nimport retrofit2.converter.moshi.MoshiConverterFactory\n\nobject RetrofitInstance {\n    private val retrofit by lazy {\n        Retrofit.Builder()\n            .baseUrl(\"http://your-api-url.com/api/\") // Change to your API's base URL\n            .addConverterFactory(MoshiConverterFactory.create())\n            .build()\n    }\n\n    val api: ApiService by lazy {\n        retrofit.create(ApiService::class.java)\n    }\n}",
    "filename": "3134a01f875c385e915863730fff0f86_4.scala"
  },
  {
    "conversation_hash": "0d655c098076a313eed6386bb3a8d678",
    "code_index": 4,
    "language": "Scala",
    "libraries": [
      "retrofit2.Retrofit",
      "retrofit2.converter.gson.GsonConverterFactory"
    ],
    "code": "// RetrofitClient.kt\n\nimport retrofit2.Retrofit\nimport retrofit2.converter.gson.GsonConverterFactory\n\nobject RetrofitClient {\n    private const val BASE_URL = \"https://your-laravel-api.com/\"\n\n    val instance: MessageService by lazy {\n        Retrofit.Builder()\n            .baseUrl(BASE_URL)\n            .addConverterFactory(GsonConverterFactory.create())\n            .build()\n            .create(MessageService::class.java)\n    }\n}",
    "filename": "0d655c098076a313eed6386bb3a8d678_4.scala"
  },
  {
    "conversation_hash": "a2bb6cab0aaa0ccc87cb51ef873f1ea6",
    "code_index": 6,
    "language": "Scala",
    "libraries": [
      "com.squareup.moshi.Moshi",
      "com.squareup.retrofit2.Retrofit",
      "com.squareup.retrofit2.converter.moshi.MoshiConverterFactory"
    ],
    "code": "import com.squareup.moshi.Moshi\nimport com.squareup.retrofit2.Retrofit\nimport com.squareup.retrofit2.converter.moshi.MoshiConverterFactory\n\nobject RetrofitClient {\n    private const val BASE_URL = \"http://your-api-url-here/api/\"\n\n    private val moshi = Moshi.Builder()\n        .build()\n\n    private val retrofit = Retrofit.Builder()\n        .baseUrl(BASE_URL)\n        .addConverterFactory(MoshiConverterFactory.create(moshi))\n        .build()\n\n    val chatService: ChatService by lazy {\n        retrofit.create(ChatService::class.java)\n    }\n}",
    "filename": "a2bb6cab0aaa0ccc87cb51ef873f1ea6_6.scala"
  },
  {
    "conversation_hash": "df769e157b392b9a1b52c8f5029ccf76",
    "code_index": 3,
    "language": "Scala",
    "libraries": [],
    "code": "object RetrofitInstance {\n    private val retrofit = Retrofit.Builder()\n        .baseUrl(\"https://yourapi.com/\")\n        .addConverterFactory(GsonConverterFactory.create())\n        .build()\n\n    val apiService: ApiService by lazy {\n        retrofit.create(ApiService::class.java)\n    }\n}",
    "filename": "df769e157b392b9a1b52c8f5029ccf76_3.scala"
  },
  {
    "conversation_hash": "d6ef06665cf9dcdf63f9845a17a935dd",
    "code_index": 11,
    "language": "Scala",
    "libraries": [],
    "code": "name: MySprintPlugin\nversion: 1.0.0\nmain: com.example.mysprintplugin.MySprintPlugin\napi-version: 1.12\nauthor: YourName\ndescription: Custom Sprint Plugin for Minecraft 1.12.2",
    "filename": "d6ef06665cf9dcdf63f9845a17a935dd_11.scala"
  },
  {
    "conversation_hash": "80686d410274d9d0e85b3368d3a2ccc2",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "(defrule preference-table-games\n  (preference (question \"Какой тип игр вы предпочитаете?\") (answer \"Настольные\"))\n  =>\n  (printout t \"Какой тип настольной игры вы предпочитаете?\" crlf)\n  ;; Допустим пользователь вводит \"Классические\"\n  (assert (preference (question \"Какой тип настольной игры вы предпочитаете?\") (answer \"Классические\"))))",
    "filename": "80686d410274d9d0e85b3368d3a2ccc2_1.scala"
  },
  {
    "conversation_hash": "6daae677ef11e53dc4589bd59d22377d",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "(defrule rule-with-multiple-facts\n  (fact-type1 (attribute1 ?val1))\n  (fact-type2 (attribute2 ?val2))\n  =>\n  (printout t \"Обработаны факты: \" ?val1 \" и \" ?val2 crlf)\n)",
    "filename": "6daae677ef11e53dc4589bd59d22377d_0.scala"
  },
  {
    "conversation_hash": "6daae677ef11e53dc4589bd59d22377d",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "(defrule rule-with-matching-attributes\n  (fact-type1 (attribute1 ?val))\n  (fact-type2 (attribute2 ?val))\n  =>\n  (printout t \"Найдены совпадающие факты со значением: \" ?val crlf)\n)",
    "filename": "6daae677ef11e53dc4589bd59d22377d_1.scala"
  },
  {
    "conversation_hash": "6daae677ef11e53dc4589bd59d22377d",
    "code_index": 2,
    "language": "Scala",
    "libraries": [],
    "code": "(defrule monopoly\n  (or \n    (and\n      (game_type board)\n      (game_board_type family)\n      (game_board_family_preference Finance and investment)\n    )\n    (and\n      (game_type board)\n      (game_board_type economic)\n      (game_board_economic_preference Finance and investment/Trades/Theory of Chances)\n    )\n  )\n  =>\n  (assert (game Monopoly))\n)",
    "filename": "6daae677ef11e53dc4589bd59d22377d_2.scala"
  },
  {
    "conversation_hash": "6daae677ef11e53dc4589bd59d22377d",
    "code_index": 3,
    "language": "Scala",
    "libraries": [],
    "code": "(defrule monopoly\n  (or \n    (and\n      (game_type board)\n      (game_board_type family)\n      (game_board_family_preference Finance and investment)\n    )\n    (and\n      (game_type board)\n      (game_board_type economic)\n      (or\n        (game_board_economic_preference Finance and investment)\n        (game_board_economic_preference Trades)\n        (game_board_economic_preference Theory of Chances)\n      )\n    )\n  )\n  =>\n  (assert (game Monopoly))\n)",
    "filename": "6daae677ef11e53dc4589bd59d22377d_3.scala"
  },
  {
    "conversation_hash": "c03d759657de245684a04f8628ab1e25",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "CLIPS> (printout t \"This is the first line\" crlf\n          \"This is the second line\" crlf)\nThis is the first line\nThis is the second line\nCLIPS>",
    "filename": "c03d759657de245684a04f8628ab1e25_0.scala"
  },
  {
    "conversation_hash": "98ce6893b72f20e0d1f31b0e49b6ab4d",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "#!/usr/bin/env nextflow\n\nnextflow.enable.dsl=2\n\nparams.trimmomatic_path = '/path/to/trimmomatic/jar' // Update this path\nparams.adapters_path = '/path/to/trimmomatic/adapters' // Update this path\n\nprocess TRIMMOMATIC {\n\n    cpus 6\n\n    input:\n        tuple val(sample), path(fastq)\n        val metadata\n\n    output:\n        tuple val(sample), path(\"*.paired.trim*.fastq.gz\"), emit: trim_paired\n\n    script:\n    def adapter_file = ''\n    if (sample.startsWith('DL_LTE_rn1_')) {\n        adapter_file = \"${params.adapters_path}/NexteraPE-PE.fa\"\n    } else if (sample.startsWith('ara')) {\n        adapter_file = \"${params.adapters_path}/NexteraPE-PE.fa\"\n    } else if (sample.startsWith('batch')) {\n        adapter_file = \"${params.adapters_path}/NexteraPE-PE.fa\"\n    } else if (sample.startsWith('CL')) {\n        adapter_file = \"${params.adapters_path}/NexteraPE-PE.fa\"\n    } else if (sample.startsWith('SRR') || sample.startsWith('ERR')) {\n        adapter_file = \"${params.adapters_path}/TruSeq3-PE-2.fa\"\n    } else {\n        // Set default adapter or raise an error\n        adapter_file = \"${params.adapters_path}/default-adapter.fa\" // Update this line\n    }\n\n    \"\"\"\n    trimmomatic PE \\\\\n    -threads ${task.cpus} \\\\\n    ${fastq[0]} ${fastq[1]} \\\\\n    ${sample}.paired.trim_1.fastq.gz ${sample}.unpaired.trim_1.fastq.gz \\\\\n    ${sample}.paired.trim_2.fastq.gz ${sample}.unpaired.trim_2.fastq.gz \\\\\n    -phred33 \\\\\n    ILLUMINACLIP:${adapter_file}:2:30:10:2:'false' \\\\\n    SLIDINGWINDOW:4:20 MINLEN:30\n\n    rm ${sample}.unpaired.trim_1.fastq.gz ${sample}.unpaired.trim_2.fastq.gz\n    \"\"\"\n}",
    "filename": "98ce6893b72f20e0d1f31b0e49b6ab4d_0.scala"
  },
  {
    "conversation_hash": "66c709db93e3e1f4bb7abab32535921f",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "#!/usr/bin/env nextflow\n\nnextflow.enable.dsl=2\n\nprocess GROUP {\n    input:\n    val sample\n    val dir\n\n    output:\n    tuple val(sample), val([\"${dir}/${sample}_1.fastq.gz\", \"${dir}/${sample}_2.fastq.gz\"]), emit: fastq_pair\n\n    script:\n    \"\"\"\n    # Assuming that no actual processing is needed, since script is empty in the initial question\n    \"\"\"\n}\n\nworkflow {\n    group = params.group // File containing list of sample names\n    dir = params.dir // Directory containing FASTQ files\n    samples = Channel.fromPath(group).splitText().map{it.trim()}\n    fastq_pairs = GROUP(samples, dir).fastq_pair\n\n    fastq_pairs.view()\n}",
    "filename": "66c709db93e3e1f4bb7abab32535921f_0.scala"
  },
  {
    "conversation_hash": "66c709db93e3e1f4bb7abab32535921f",
    "code_index": 2,
    "language": "Scala",
    "libraries": [],
    "code": "#!/usr/bin/env nextflow\n\nnextflow.enable.dsl=2\n\nprocess GROUP {\n    input:\n    val sample\n    val dir\n\n    output:\n    tuple val(sample), path(\"${dir}/${sample}_1.fastq.gz\"), path(\"${dir}/${sample}_2.fastq.gz\"), emit: fastq_pair\n\n    script:\n    \"\"\"\n    # Assuming that no actual processing is needed, since the script block is empty in the initial question\n    touch ${dir}/${sample}_1.fastq.gz ${dir}/${sample}_2.fastq.gz\n    \"\"\"\n}\n\nworkflow {\n    group = params.group // File containing list of sample names\n    dir = params.dir // Directory containing FASTQ files\n    samples = Channel.fromPath(group).splitText().map{it.trim()}\n    fastq_pairs = GROUP(samples, dir).set{ fastq_pairs_ch }\n\n    fastq_pairs_ch.view { sample, file1, file2 -> \"[${sample}, [${file1}, ${file2}]]\" }\n}",
    "filename": "66c709db93e3e1f4bb7abab32535921f_2.scala"
  },
  {
    "conversation_hash": "1fe2e6fee29b284a6afd69c23eec5c2b",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "#!/usr/bin/env nextflow\n\nnextflow.enable.dsl=2\n\nprocess GROUP {\n    input:\n    val sample\n    val dir\n\n    output:\n    tuple val(sample), path(\"${dir}/${sample}_*.fastq.gz\"), emit: fastq\n\n    script:\n    \"\"\"\n    // No processing required as we're just grouping files by name pattern\n    \"\"\"\n}\n\nworkflow MAKE_GROUP {\n    take:\n    group // file with list of samples\n    dir // directory with fastq files\n\n    main:\n    runs = Channel.fromPath(group).splitText().map{it.trim()}\n    fastqs = GROUP(runs, dir).fastq.map{ tuple(it[0], it[1..-1]) }\n\n    emit:\n    fastqs\n}",
    "filename": "1fe2e6fee29b284a6afd69c23eec5c2b_0.scala"
  },
  {
    "conversation_hash": "ebca63f9d99358c825c618061dc27157",
    "code_index": 47,
    "language": "Scala",
    "libraries": [],
    "code": "android {\n    ...\n    defaultConfig {\n        ...\n        // whether Hermes should be enabled\n        def hermesEnabled = false\n    }\n    ...\n}",
    "filename": "ebca63f9d99358c825c618061dc27157_47.scala"
  },
  {
    "conversation_hash": "2553f0bc645e9a921bbf8238b9aa49f0",
    "code_index": 3,
    "language": "Scala",
    "libraries": [],
    "code": "def create_employee(employee_data: Dict) -> Employee:\n    employee = Employee()\n    employee.email = employee_data['email']\n    # Другие поля модели\n    session.add(employee)\n    session.commit()\n    return employee",
    "filename": "2553f0bc645e9a921bbf8238b9aa49f0_3.scala"
  },
  {
    "conversation_hash": "89ab74bad3ea2bb33d56f1731ade9525",
    "code_index": 4,
    "language": "Scala",
    "libraries": [
      "org.gradle.caching.BuildCacheKey"
    ],
    "code": "plugins {\n    id 'java'\n}\n\ngroup 'com.example.plugin'\nversion '1.0-SNAPSHOT'\n\napply plugin: 'groovy'\napply plugin: 'maven'\n\nsourceCompatibility = 1.8\n\nrepositories {\n    mavenCentral()\n}\n\ndependencies {\n    implementation gradleApi()\n    implementation localGroovy()\n\n    implementation 'org.codehaus.groovy:groovy-all:3.0.7'\n    implementation 'com.spotify:docker-client:20.10.11'\n}\n\njar {\n    dependsOn tasks.createImageTask\n}\n\nimport org.gradle.caching.BuildCacheKey\n\ntask createImageTask(type: com.example.plugin.tasks.CreateDockerImageTask) {\n    // Configuration for the Docker task\n    imageName = 'my-docker-image'\n    dockerfilePath = 'path/to/Dockerfile'\n    srcDir = 'src/'\n    envVariables = ['VAR1=value1', 'VAR2=value2'] // Optional environment variables\n\n    // Include environment variables in the task's cache key\n    inputs.property('envVariables', envVariables)\n\n    doLast {\n        // Additional configuration when the task is executed\n        println \"Docker image created!\"\n    }\n}",
    "filename": "89ab74bad3ea2bb33d56f1731ade9525_4.scala"
  },
  {
    "conversation_hash": "89ab74bad3ea2bb33d56f1731ade9525",
    "code_index": 6,
    "language": "Scala",
    "libraries": [
      "org.gradle.caching.BuildCacheKey"
    ],
    "code": "plugins {\n    id 'java'\n}\n\ngroup 'com.example.plugin'\nversion '1.0-SNAPSHOT'\n\napply plugin: 'groovy'\napply plugin: 'maven'\n\nsourceCompatibility = 1.8\n\nrepositories {\n    mavenCentral()\n}\n\ndependencies {\n    implementation gradleApi()\n    implementation localGroovy()\n\n    implementation 'org.codehaus.groovy:groovy-all:3.0.7'\n    implementation 'com.spotify:docker-client:20.10.11'\n}\n\ndependencies {\n    implementation gradleApi()\n    implementation localGroovy()\n\n    implementation 'org.codehaus.groovy:groovy-all:3.0.7'\n    implementation 'com.spotify:docker-client:20.10.11'\n}\n\njar {\n    dependsOn(tasks.createImageTask)\n}\n\nimport org.gradle.caching.BuildCacheKey\n\nconfigure(tasks.createImageTask) {\n    // Configuration for the Docker task\n    imageName = 'my-docker-image'\n    dockerfilePath = 'path/to/Dockerfile'\n    srcDir = 'src/'\n    \n    // Optional environment variables\n    envVariables = {[\n        'VAR1': 'value1',\n        'VAR2': 'value2'\n    ]}\n\n    // Include environment variables in the task's cache key\n    inputs.property('envVariables', envVariables)\n\n    doLast {\n        // Additional configuration when the task is executed\n        println \"Docker image created!\"\n    }\n}",
    "filename": "89ab74bad3ea2bb33d56f1731ade9525_6.scala"
  },
  {
    "conversation_hash": "73b66c7ef408806e8021d67501bc4b10",
    "code_index": 0,
    "language": "Scala",
    "libraries": [
      "org.gradle.api.Plugin",
      "org.gradle.api.Project",
      "org.gradle.api.tasks.Exec"
    ],
    "code": "import org.gradle.api.Plugin\nimport org.gradle.api.Project\nimport org.gradle.api.tasks.Exec\n\nclass DockerBuildPlugin implements Plugin<Project> {\n    void apply(Project project) {\n        project.task('dockerBuild', type: DockerBuildTask) {\n            description = 'Builds Docker images'\n\n            // Input and output files for task\n            inputs.dir 'src/main/docker'\n            outputs.file 'build/docker/image.tar'\n\n            doLast {\n                exec {\n                    // Docker build command\n                    commandLine 'docker', 'build', '-t', 'my-docker-image', 'src/main/docker'\n\n                    // Cache Docker image build based on input files\n                    inputs.files fileTree('src/main/docker')\n                    outputs.file 'build/docker/image.tar'\n                }\n            }\n        }\n    }\n}\n\nclass DockerBuildTask extends Exec {\n    DockerBuildTask() {\n        // Sets the working directory for the task\n        workingDir = project.projectDir\n    }\n}\n\napply plugin: DockerBuildPlugin",
    "filename": "73b66c7ef408806e8021d67501bc4b10_0.scala"
  },
  {
    "conversation_hash": "9f9667b715c8cd35b26dda8f03b8ee63",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "// build.sbt\nlibraryDependencies ++= Seq(\n  // Other dependencies...\n  \"com.typesafe.akka\" %% \"akka-http\" % \"10.2.3\",\n  \"com.typesafe.akka\" %% \"akka-stream\" % \"2.6.13\"\n)",
    "filename": "9f9667b715c8cd35b26dda8f03b8ee63_1.scala"
  },
  {
    "conversation_hash": "33c6a10c058650e7d527ece3fcf2a9fe",
    "code_index": 4,
    "language": "Scala",
    "libraries": [
      "MyComponent",
      "React"
    ],
    "code": "import React from \"react\";\nimport MyComponent from \"./MyComponent\";\n\nconst AnotherComponent: React.FC = () => {\n  return (\n    <div>\n      {/* Use the constant here */}\n      {MyComponent({ text: \"Commercial\", saved: true })}\n    </div>\n  );\n};\n\nexport default AnotherComponent;",
    "filename": "33c6a10c058650e7d527ece3fcf2a9fe_4.scala"
  },
  {
    "conversation_hash": "39a22273afb1bd1ab8e2c03c765264ec",
    "code_index": 4,
    "language": "Scala",
    "libraries": [],
    "code": "const routes: Routes = [\n  {\n    path: 'module-b',\n    loadChildren: () => import('./module-b/module-b.module').then(m => m.ModuleBModule)\n  },\n  // ...other routes, including default path that might load Module A synchronously\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {}",
    "filename": "39a22273afb1bd1ab8e2c03c765264ec_4.scala"
  },
  {
    "conversation_hash": "39a22273afb1bd1ab8e2c03c765264ec",
    "code_index": 11,
    "language": "Scala",
    "libraries": [],
    "code": "const routes: Routes = [\n  // ...your existing routes and guards\n  {\n    path: 'communication', // Use a specific non-empty path for Module A's routes\n    loadChildren: () => import('path/to/communication.module').then(m => m.CommunicationModule),\n  },\n  // ...other routes, such as the lazy-loaded Module B\n  {\n    path: RouteDirection.medicalHistory, // \"medical-history\" or another path for Module B\n    loadChildren: () => import('./components/medical-history-home/medical-history-home.module').then(m => m.MedicalHistoryHomeModule),\n  },\n  // Redirect empty path to a default route if needed, such as:\n  {\n    path: '',\n    redirectTo: 'default-route',\n    pathMatch: 'full'\n  },\n  // ...possibly other route redirections or wildcards\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)], // forChild since this is a feature module\n  exports: [RouterModule],\n})\nexport class AppRoutingModule { }",
    "filename": "39a22273afb1bd1ab8e2c03c765264ec_11.scala"
  },
  {
    "conversation_hash": "39a22273afb1bd1ab8e2c03c765264ec",
    "code_index": 12,
    "language": "Scala",
    "libraries": [],
    "code": "const routes: Routes = [\n  // ...other routes and guards\n  \n  // Lazy-loaded route for Module A ('CommunicationModule')\n  {\n    path: 'communication',\n    loadChildren: () => import('./path-to-communication-module/communication.module').then(m => m.CommunicationModule),\n  },\n  \n  // Lazy-loaded route for Module B ('MedicalHistoryHomeModule')\n  {\n    path: 'medical-history',\n    loadChildren: () => import('./components/medical-history-home/medical-history-home.module').then(m => m.MedicalHistoryHomeModule),\n  },\n  \n  // Redirect empty path to a specific route or leave as is based on required behavior\n  {\n    path: '',\n    redirectTo: 'some-default-route',\n    pathMatch: 'full'\n  },\n\n  // ...possibly other routes or route redirections\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)], // forChild since this is a feature module\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }",
    "filename": "39a22273afb1bd1ab8e2c03c765264ec_12.scala"
  },
  {
    "conversation_hash": "39a22273afb1bd1ab8e2c03c765264ec",
    "code_index": 13,
    "language": "Scala",
    "libraries": [],
    "code": "@NgModule({\n  declarations: [\n    // ... other declarations\n    SharedComponent, // The component you want to reuse\n  ],\n  imports: [\n    // ... other imports\n    CommunicationRoutingModule,\n  ],\n  exports: [\n    SharedComponent, // Export it so it can be used outside of the module\n  ]\n})\nexport class CommunicationModule { }",
    "filename": "39a22273afb1bd1ab8e2c03c765264ec_13.scala"
  },
  {
    "conversation_hash": "39a22273afb1bd1ab8e2c03c765264ec",
    "code_index": 14,
    "language": "Scala",
    "libraries": [],
    "code": "@NgModule({\n  // ...\n  imports: [\n    // ... other imports\n    CommunicationModule, // Now SharedComponent is available for use\n    // ...\n  ],\n  // ...\n})\nexport class AppModule { }",
    "filename": "39a22273afb1bd1ab8e2c03c765264ec_14.scala"
  },
  {
    "conversation_hash": "39a22273afb1bd1ab8e2c03c765264ec",
    "code_index": 15,
    "language": "Scala",
    "libraries": [],
    "code": "const routes: Routes = [\n  // Define a specific path for Module A's routes\n  {\n    path: 'communication',\n    loadChildren: () => import('./path-to-module-a/module-a.module').then(m => m.ModuleAModule),\n  },\n\n  // Define the route for Module B\n  {\n    path: 'medical-history',\n    loadChildren: () => import('./path-to-module-b/module-b.module').then(m => m.ModuleBModule),\n  },\n\n  // Redirect the empty path to some default path if required, or leave it to match the AppComponent\n  {\n    path: '',\n    pathMatch: 'full',\n    component: AppComponent\n  },\n\n  // Handle other routes and lazy-load additional modules as needed\n  // ...\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)], // Use forRoot because this is the root routing module\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}",
    "filename": "39a22273afb1bd1ab8e2c03c765264ec_15.scala"
  },
  {
    "conversation_hash": "39a22273afb1bd1ab8e2c03c765264ec",
    "code_index": 18,
    "language": "Scala",
    "libraries": [
      "ModuleA",
      "it"
    ],
    "code": "@NgModule({\n  declarations: [\n    AppComponent,\n    // ... (other declarations)\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    // ... (other module imports)\n    ModuleAModule, // Eagerly import ModuleA because you are using a component from it\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}",
    "filename": "39a22273afb1bd1ab8e2c03c765264ec_18.scala"
  },
  {
    "conversation_hash": "39a22273afb1bd1ab8e2c03c765264ec",
    "code_index": 20,
    "language": "Scala",
    "libraries": [],
    "code": "const routes: Routes = [\n  // ...other routes\n\n  // Define a specific path for lazy-loaded Module A\n  {\n    path: 'communication', // This path must match the one used for navigation in your app\n    loadChildren: () => import('./path-to-module-a/module-a.module').then(m => m.ModuleAModule),\n  },\n\n  // Define the route for lazy-loaded Module B\n  {\n    path: 'medical-history', // This path should be used when you navigate to Module B\n    loadChildren: () => import('./components/medical-history-home/medical-history-home.module').then(m => m.MedicalHistoryHomeModule),\n  },\n\n  // Configure a catch-all route that redirects to your preferred default route or the AppComponent\n  {\n    path: '**', \n    redirectTo: 'default-route-or-app-component-path', // where `default-route-...` is the path you wish users to be redirected to when they go to an undefined route\n    pathMatch: 'full'\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}",
    "filename": "39a22273afb1bd1ab8e2c03c765264ec_20.scala"
  },
  {
    "conversation_hash": "39a22273afb1bd1ab8e2c03c765264ec",
    "code_index": 23,
    "language": "Scala",
    "libraries": [],
    "code": "const routes: Routes = [\n  // The specific route for Module B that you navigate to bypass Module A's empty path\n  {\n    path: 'medical-history', // The path for Module B\n    loadChildren: () => import('./components/medical-history-home/medical-history-home.module').then(m => m.MedicalHistoryHomeModule),\n  },\n\n  // Catch-all route for any other paths that are not explicitly defined above\n  { \n    path: '**', \n    component: AppComponent,\n    canActivate: [YourCatchAllGuard] // Optional: You could create a guard to manage redirections based on business logic\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}",
    "filename": "39a22273afb1bd1ab8e2c03c765264ec_23.scala"
  },
  {
    "conversation_hash": "39a22273afb1bd1ab8e2c03c765264ec",
    "code_index": 24,
    "language": "Scala",
    "libraries": [
      "ModuleA"
    ],
    "code": "@NgModule({\n  declarations: [\n    AppComponent,\n    // ... other declarations\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    // ... other module imports\n    ModuleAModule, // Eagerly import ModuleA\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}",
    "filename": "39a22273afb1bd1ab8e2c03c765264ec_24.scala"
  },
  {
    "conversation_hash": "39a22273afb1bd1ab8e2c03c765264ec",
    "code_index": 25,
    "language": "Scala",
    "libraries": [
      "the"
    ],
    "code": "const routes: Routes = [\n  {\n    path: 'medical-history',\n    loadChildren: () => import('./components/medical-history-home/medical-history-home.module').then(m => m.MedicalHistoryHomeModule),\n  },\n  // ... other specific routes\n\n  // This is your default route, which will use Component A from the eagerly-loaded Module A.\n  // Any non-specific paths will fall back to this route, but it will not interfere with \"medical-history\" path.\n  {\n    path: '',\n    component: AppComponent\n  },\n\n  // Add a catch-all route for any other undefined paths to handle 404 or redirect somewhere else.\n  {\n    path: '**',\n    redirectTo: 'path-to-default-or-error-component',\n    pathMatch: 'full'\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}",
    "filename": "39a22273afb1bd1ab8e2c03c765264ec_25.scala"
  },
  {
    "conversation_hash": "ecd6a8fd4039520a79df84f64433576b",
    "code_index": 3,
    "language": "Scala",
    "libraries": [],
    "code": "internal class UpdateUserRequest : ISailplayApiRequest, IConvertToHttpContent\n{\n    // Реализация свойств интерфейса ISailplayApiRequest\n\n    HttpContent IConvertToHttpContent.ConvertToHttpContent(string token)\n    {\n        // Реализация метода ConvertToHttpContent\n    }\n}",
    "filename": "ecd6a8fd4039520a79df84f64433576b_3.scala"
  },
  {
    "conversation_hash": "d55262d2984a9ee1e4cd665d78f87214",
    "code_index": 3,
    "language": "Scala",
    "libraries": [],
    "code": "@startuml\n\npackage net.micode.notes.data {\n\nclass Notes {\n    ...\n}\n\nclass NotesDatabaseHelper {\n    - DB_NAME: String\n    - DB_VERSION: int\n    - TAG: String\n    - CREATE_NOTE_TABLE_SQL: String\n    - CREATE_DATA_TABLE_SQL: String\n    ...\n\n    + NotesDatabaseHelper(Context)\n    + void createNoteTable(SQLiteDatabase)\n    + void createDataTable(SQLiteDatabase)\n    ...\n    # void onCreate(SQLiteDatabase)\n    # void onUpgrade(SQLiteDatabase, int, int)\n    ...\n}\n\ninterface NoteColumns {\n    ...\n}\n\ninterface DataColumns {\n    ...\n}\n\nclass DataConstants {\n    ...\n}\n\nclass TextNote {\n    ...\n}\n\nclass CallNote {\n    ...\n}\n\nclass Contact {\n    ...\n}\n\nNotesDatabaseHelper .up.|> SQLiteOpenHelper : extends\nNotesDatabaseHelper -left-|> NoteColumns : uses\nNotesDatabaseHelper -left-|> DataColumns : uses\nNotesDatabaseHelper -left-|> DataConstants : uses\nNotesDatabaseHelper -left-|> Notes : uses\nTextNote ..|> DataColumns\nCallNote ..|> DataColumns\n\n}\n@enduml",
    "filename": "d55262d2984a9ee1e4cd665d78f87214_3.scala"
  },
  {
    "conversation_hash": "d55262d2984a9ee1e4cd665d78f87214",
    "code_index": 4,
    "language": "Scala",
    "libraries": [],
    "code": "@startuml\n\npackage net.micode.notes.data {\n\nclass Notes {\n    ...\n}\n\nclass NotesDatabaseHelper {\n    ...\n}\n\nclass NotesProvider {\n    - mMatcher: UriMatcher\n    - mHelper: NotesDatabaseHelper\n    - TAG: String\n    - NOTES_SEARCH_PROJECTION: String\n    ...\n\n    + onCreate(): boolean\n    + query(uri: Uri, projection: String[], selection: String, selectionArgs: String[], sortOrder: String): Cursor\n    + insert(uri: Uri, values: ContentValues): Uri\n    + delete(uri: Uri, selection: String, selectionArgs: String[]): int\n    + update(uri: Uri, values: ContentValues, selection: String, selectionArgs: String[]): int\n    + getType(uri: Uri): String\n    ...\n}\n\ninterface NoteColumns {\n    ...\n}\n\ninterface DataColumns {\n    ...\n}\n\nclass DataConstants {\n    ...\n}\n\nclass TextNote {\n    ...\n}\n\nclass CallNote {\n    ...\n}\n\nclass Contact {\n    ...\n}\n\nNotesDatabaseHelper .up.|> SQLiteOpenHelper : extends\nNotesProvider .up.|> ContentProvider : extends\nNotesProvider -left-|> NoteColumns : uses\nNotesProvider -left-|> DataColumns : uses\nNotesProvider -left-|> DataConstants : uses\nNotesProvider -left-|> Notes : uses\nNotesProvider -left-|> NotesDatabaseHelper : uses\nTextNote ..|> DataColumns\nCallNote ..|> DataColumns\n\n}\n@enduml",
    "filename": "d55262d2984a9ee1e4cd665d78f87214_4.scala"
  },
  {
    "conversation_hash": "d55262d2984a9ee1e4cd665d78f87214",
    "code_index": 5,
    "language": "Scala",
    "libraries": [],
    "code": "@startuml\n\npackage net.micode.notes.data {\n\n' 构建 Notes 数据库助手类\nclass NotesDatabaseHelper {\n    ...\n}\n\n' 构建 Notes 提供者类\nclass NotesProvider {\n    ...\n}\n\n' 设置 NotesDatabaseHelper 类的基类\nNotesDatabaseHelper -up-|> SQLiteOpenHelper\n\n' 设置 NotesProvider 类的基类\nNotesProvider -up-|> ContentProvider\n\n' 设置 NotesProvider 与其他组件的关系\nNotesProvider --> NoteColumns : uses\nNotesProvider --> DataColumns : uses\nNotesProvider --> DataConstants : uses\nNotesProvider --> Notes : uses\n\n' 设置 NotesDatabaseHelper 与其他组件的关系，避免重复，因此与 NotesProvider 重叠的部分省略\nNotesDatabaseHelper --> NoteColumns : uses\nNotesDatabaseHelper --> DataColumns : uses\nNotesDatabaseHelper --> DataConstants : uses\nNotesDatabaseHelper --> Notes : uses\n}\n@enduml",
    "filename": "d55262d2984a9ee1e4cd665d78f87214_5.scala"
  },
  {
    "conversation_hash": "2e1a998d792fb0c54cf92eaf88d21f13",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "NoteWidgetProvider (Abstract Class)\n===================\n- PROJECTION: String[]\n- COLUMN_ID: int\n- COLUMN_BG_COLOR_ID: int\n- COLUMN_SNIPPET: int\n- TAG: String\n\nMethods:\n========\n+ onDeleted(context: Context, appWidgetIds: int[]): void\n+ update(context: Context, appWidgetManager: AppWidgetManager, appWidgetIds: int[]): void\n+ getBgResourceId(bgId: int): int (Abstract)\n+ getLayoutId(): int (Abstract)\n+ getWidgetType(): int (Abstract)\n\nPrivate Methods:\n================\n- getNoteWidgetInfo(context: Context, widgetId: int): Cursor\n- update(context: Context, appWidgetManager: AppWidgetManager, appWidgetIds: int[], privacyMode: boolean): void",
    "filename": "2e1a998d792fb0c54cf92eaf88d21f13_0.scala"
  },
  {
    "conversation_hash": "2e1a998d792fb0c54cf92eaf88d21f13",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "NoteWidgetProvider_2x (Class) extends NoteWidgetProvider\n=====================\n\nMethods:\n========\n+ onUpdate(context: Context, appWidgetManager: AppWidgetManager, appWidgetIds: int[]): void\n+ getLayoutId(): int\n+ getBgResourceId(bgId: int): int\n+ getWidgetType(): int",
    "filename": "2e1a998d792fb0c54cf92eaf88d21f13_1.scala"
  },
  {
    "conversation_hash": "2e1a998d792fb0c54cf92eaf88d21f13",
    "code_index": 2,
    "language": "Scala",
    "libraries": [],
    "code": "NoteWidgetProvider_4x (Class) extends NoteWidgetProvider\n=====================\n\nMethods:\n========\n+ onUpdate(context: Context, appWidgetManager: AppWidgetManager, appWidgetIds: int[]): void\n+ getLayoutId(): int\n+ getBgResourceId(bgId: int): int\n+ getWidgetType(): int",
    "filename": "2e1a998d792fb0c54cf92eaf88d21f13_2.scala"
  },
  {
    "conversation_hash": "2e1a998d792fb0c54cf92eaf88d21f13",
    "code_index": 3,
    "language": "Scala",
    "libraries": [],
    "code": "AlarmAlertActivity (Class) extends Activity implements OnClickListener, OnDismissListener\n===================\n\nFields:\n=======\n- mNoteId: long\n- mSnippet: String\n- SNIPPET_PREW_MAX_LEN: int (static, final)\n- mPlayer: MediaPlayer\n\nMethods:\n========\n+ onCreate(savedInstanceState: Bundle): void\n+ onClick(dialog: DialogInterface, which: int): void\n+ onDismiss(dialog: DialogInterface): void\n\nPrivate Methods:\n================\n- isScreenOn(): boolean\n- playAlarmSound(): void\n- showActionDialog(): void\n- stopAlarmSound(): void",
    "filename": "2e1a998d792fb0c54cf92eaf88d21f13_3.scala"
  },
  {
    "conversation_hash": "2ee63e4d971416b3ad72f49caab2b09b",
    "code_index": 3,
    "language": "Scala",
    "libraries": [],
    "code": "- mDate: Calendar\n- mIs24HourView: boolean\n- mOnDateTimeSetListener: OnDateTimeSetListener\n- mDateTimePicker: DateTimePicker\n\n...\n\n+ DateTimePickerDialog(context: Context, date: long)\n+ set24HourView(is24HourView: boolean): void\n+ setOnDateTimeSetListener(callBack: OnDateTimeSetListener): void\n+ updateTitle(date: long): void\n+ onClick(arg0: DialogInterface, arg1: int): void",
    "filename": "2ee63e4d971416b3ad72f49caab2b09b_3.scala"
  },
  {
    "conversation_hash": "2ee63e4d971416b3ad72f49caab2b09b",
    "code_index": 4,
    "language": "Scala",
    "libraries": [],
    "code": "- mButton: Button\n- mPopupMenu: PopupMenu\n- mMenu: Menu\n\n...\n\n+ DropdownMenu(context: Context, button: Button, menuId: int)\n+ setOnDropdownMenuItemClickListener(listener: PopupMenu.OnMenuItemClickListener): void\n+ findItem(id: int): MenuItem\n+ setTitle(title: CharSequence): void",
    "filename": "2ee63e4d971416b3ad72f49caab2b09b_4.scala"
  },
  {
    "conversation_hash": "78cdfd80d6b2a3521302d3138e13a94d",
    "code_index": 18,
    "language": "Scala",
    "libraries": [],
    "code": "* Serving Flask app \"app\" (lazy loading)\n * Environment: production\n   WARNING: This is a development server. Do not use it in a production deployment.\n   Use a production WSGI server instead.\n * Debug mode: off\n * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)",
    "filename": "78cdfd80d6b2a3521302d3138e13a94d_18.scala"
  },
  {
    "conversation_hash": "8b22c7215802d1093d60d3c9454594e8",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "@startuml\n\nclass NoteEditText {\n    - TAG: String\n    - mIndex: int\n    - mSelectionStartBeforeDelete: int\n    - SCHEME_TEL: String\n    - SCHEME_HTTP: String\n    - SCHEME_EMAIL: String\n    - sSchemaActionResMap: Map\n    - mOnTextViewChangeListener: OnTextViewChangeListener\n\n    + NoteEditText(context: Context)\n    + NoteEditText(context: Context, attrs: AttributeSet)\n    + NoteEditText(context: Context, attrs: AttributeSet, defStyle: int)\n    + setIndex(index: int): void\n    + setOnTextViewChangeListener(listener: OnTextViewChangeListener): void\n    + onTouchEvent(event: MotionEvent): boolean\n    + onKeyDown(keyCode: int, event: KeyEvent): boolean\n    + onKeyUp(keyCode: int, event: KeyEvent): boolean\n    + onFocusChanged(focused: boolean, direction: int, previouslyFocusedRect: Rect): void\n    + onCreateContextMenu(menu: ContextMenu): void\n}\n\ninterface OnTextViewChangeListener {\n    {abstract} onEditTextDelete(index: int, text: String)\n    {abstract} onEditTextEnter(index: int, text: String)\n    {abstract} onTextChange(index: int, hasText: boolean)\n}\n\nNoteEditText -l- \"1\" OnTextViewChangeListener\n\n@enduml",
    "filename": "8b22c7215802d1093d60d3c9454594e8_0.scala"
  },
  {
    "conversation_hash": "f6da424444d461bded8f653e125f3762",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "# Replace this (deprecated)\ntf.losses.sparse_softmax_cross_entropy(labels, logits)\n\n# With this (compatible version)\ntf.compat.v1.losses.sparse_softmax_cross_entropy(labels, logits)",
    "filename": "f6da424444d461bded8f653e125f3762_1.scala"
  },
  {
    "conversation_hash": "990a81e595f6467076c6be30f28f7849",
    "code_index": 3,
    "language": "Scala",
    "libraries": [
      "react"
    ],
    "code": "// vite.config.js\nimport { defineConfig } from 'vite'\nimport react from '@vitejs/plugin-react'\n\n// https://vitejs.dev/config/\nexport default defineConfig({\n  plugins: [react()]\n  // other configurations...\n})",
    "filename": "990a81e595f6467076c6be30f28f7849_3.scala"
  },
  {
    "conversation_hash": "e217f4d2fadb032bfa4e261dc351393d",
    "code_index": 10,
    "language": "Scala",
    "libraries": [],
    "code": "def caracteristiques(categorie: str, D: Dict[str, Set[str]], dcaract: Dict[str, Set[str]]) -> Set[str]:\n    # Obtenir l'ensemble des catégories parentes directes et indirectes de la catégorie donnée.\n    parents = typologie(D).get(categorie, set())\n    # Ajouter la catégorie elle-même pour ne pas manquer ses caractéristiques propres.\n    parents.add(categorie)\n    \n    # Ensemble pour stocker les caractéristiques.\n    caract_set = set()\n    # Itération sur chaque catégorie parente pour collecter les caractéristiques.\n    for parent in parents:\n        caract_parent = dcaract.get(parent, set())  # Obtenir les caractéristiques de la catégorie parente, s'il y en a.\n        # Union des caractéristiques parentes dans l'ensemble des caractéristiques.\n        caract_set |= caract_parent\n    \n    return caract_set\n\n# Utilisation de la fonction d'assertion pour tester la fonction caracteristiques.\nassert caracteristiques('lapin', Dclassif, Dcaract) == {'respire', 'poils', '4pattes'}",
    "filename": "e217f4d2fadb032bfa4e261dc351393d_10.scala"
  },
  {
    "conversation_hash": "4d3e5200b1b737398b4590014558c9c9",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "extends Spatial\n\n# Скорость интерполяции (чем меньше, тем более плавно будет поворот)\nexport var interpolation_speed: float = 5.0\n\n# Положение объекта, на который должен смотреть RotatingObject\nexport var target_position: Vector3 = Vector3.ZERO\n\nfunc _process(delta):\n    # Положение, на которое объект должен смотреть\n    var target_look_at = target_position\n    \n    # Текущее преобразование объекта\n    var current_transform = transform\n    \n    # Предполагаемое преобразование объекта (если бы он сразу повернулся к цели)\n    var target_transform = current_transform.looking_at(target_look_at, Vector3.UP)\n    \n    # Интерполируем текущее преобразование к предполагаемому\n    current_transform = current_transform.interpolate_with(target_transform, delta * interpolation_speed)\n    \n    # Применяем новое преобразование к объекту\n    transform = current_transform",
    "filename": "4d3e5200b1b737398b4590014558c9c9_0.scala"
  },
  {
    "conversation_hash": "086dac54f82a6b9c419834d10059881e",
    "code_index": 6,
    "language": "Scala",
    "libraries": [],
    "code": "A    B      C      D          E       F\n0  1  4.5    one   True 2023-01-01  (1+2j)\n1  2  5.5    two  False 2023-01-02  (3+4j)\n2  3  6.5  three   True 2023-01-03  (5+6j)\nA             int64\nB           float64\nC            object\nD              bool\nE    datetime64[ns]\nF          complex128\ndtype: object",
    "filename": "086dac54f82a6b9c419834d10059881e_6.scala"
  },
  {
    "conversation_hash": "086dac54f82a6b9c419834d10059881e",
    "code_index": 8,
    "language": "Scala",
    "libraries": [],
    "code": "MixedTypeColumn\n0              42\n1        a string\n2            3.14\n3            True\n4       [1, 2, 3]\n5  {'key': 'value'}\n6            None\nMixedTypeColumn    object\ndtype: object",
    "filename": "086dac54f82a6b9c419834d10059881e_8.scala"
  },
  {
    "conversation_hash": "086dac54f82a6b9c419834d10059881e",
    "code_index": 23,
    "language": "Scala",
    "libraries": [],
    "code": "int_column        int64\nfloat_column    float64\nstr_column       object\nbool_column        bool\ndtype: object",
    "filename": "086dac54f82a6b9c419834d10059881e_23.scala"
  },
  {
    "conversation_hash": "3cd58e8f0ae839f5601af39c4f51645b",
    "code_index": 4,
    "language": "Scala",
    "libraries": [],
    "code": "instance Show unittype => Show (State unittype) where...\ninstance Show Mage where...\ninstance Eq Mage where...\ninstance Show Unit where...\ninstance Eq Entity where...",
    "filename": "3cd58e8f0ae839f5601af39c4f51645b_4.scala"
  },
  {
    "conversation_hash": "9b0714a5720055ac592db0e2724dadde",
    "code_index": 14,
    "language": "Scala",
    "libraries": [],
    "code": "cmake_minimum_required(VERSION 3.0 FATAL_ERROR)\nproject(your_project_name)\n\nlist(APPEND CMAKE_PREFIX_PATH \"/absolute/path/to/libtorch\")\nfind_package(Torch REQUIRED)\n\nadd_executable(main main.cpp)\ntarget_link_libraries(main \"${TORCH_LIBRARIES}\")\n\nset_property(TARGET main PROPERTY CXX_STANDARD 14)",
    "filename": "9b0714a5720055ac592db0e2724dadde_14.scala"
  },
  {
    "conversation_hash": "9b0714a5720055ac592db0e2724dadde",
    "code_index": 18,
    "language": "Scala",
    "libraries": [],
    "code": "cmake_minimum_required(VERSION 3.0 FATAL_ERROR)\nproject(example-app)\n\nfind_package(Torch REQUIRED)\n\nadd_executable(example-app example-app.cpp)\ntarget_link_libraries(example-app \"${TORCH_LIBRARIES}\")\n\nset_property(TARGET example-app PROPERTY CXX_STANDARD 14)",
    "filename": "9b0714a5720055ac592db0e2724dadde_18.scala"
  },
  {
    "conversation_hash": "96af4cbedc267c0bee910d8d2a33eb2d",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "cmake_minimum_required(VERSION 3.0 FATAL_ERROR)\nproject(my_project)\n\nfind_package(Torch REQUIRED PATHS \"C:/libtorch\" NO_DEFAULT_PATH)\n\nadd_executable(my_project main.cpp)\ntarget_link_libraries(my_project \"${TORCH_LIBRARIES}\")\nset_property(TARGET my_project PROPERTY CXX_STANDARD 11)",
    "filename": "96af4cbedc267c0bee910d8d2a33eb2d_0.scala"
  },
  {
    "conversation_hash": "3a2b3fc6dd4667495ef36685a97319cb",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "\"Kestrel\": {\n     \"Limits\": {\n       \"MaxRequestBodySize\": 52428800 // for example, raise to 50MB\n     }\n   }",
    "filename": "3a2b3fc6dd4667495ef36685a97319cb_1.scala"
  },
  {
    "conversation_hash": "1ca720b189babafff300750249304d0b",
    "code_index": 34,
    "language": "Scala",
    "libraries": [],
    "code": "/* Assume .popupInner defaults to bold text */\n.popupInner {\n    font-weight: bold;\n    /* ... other styles for popupInner ... */\n}\n\n/* This will ensure that child elements of .popupInner with class .regular are not bolded */\n.popupInner .regular {\n    font-weight: normal;\n    /* ... other styles for regular ... */\n}",
    "filename": "1ca720b189babafff300750249304d0b_34.scala"
  },
  {
    "conversation_hash": "14fa3f0b778f53b466bfce5b0b6537d6",
    "code_index": 21,
    "language": "Scala",
    "libraries": [],
    "code": "@foreach (var item in Model)\n{\n    string url = $\"/{item.Alias}\";\n    <tr>\n        <td>@item.PostId</td>\n        <td><a href=\"/@url\">@item.Title</a></td>   \n        <td><a href=\"/@url\">@item.Cat.Alias> @item.Cat.CatName</a></td>\n        <!-- Rest of your code -->\n    </tr>\n}",
    "filename": "14fa3f0b778f53b466bfce5b0b6537d6_21.scala"
  },
  {
    "conversation_hash": "f7d84d21b7d1074ac07314fa8902ee02",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "adb shell settings put secure upload_debug_log_pref 0\nadb shell settings put secure upload_log_pref 0\nadb shell settings put global wifi_verbose_logging_enabled 0\nadb shell settings put global foreground_service_starts_logging_enabled 0\nadb shell settings put global enable_diskstats_logging 0\nadb shell settings put global activity_starts_logging_enabled 0\nadb shell settings put global profiler.force_disable_ulog 1\nadb shell settings put global profiler.debugmonitor false\nadb shell settings put global logcat.live disable\nadb shell settings put global ro.debuggable 0\nadb shell settings put global debug.mdpcomp.logs 0\nadb shell settings put global debug.atrace.tags.enableflags 0\nadb shell settings put global logd.kernel false\nadb shell settings put global vendor.display.disable_hw_recovery_dump 1\nadb shell settings put global trustkernel.log.state disable\nadb shell settings put global debug.systemui.latency_tracking 0\nadb shell settings put global persist.sample.eyetracking.log 0\nadb shell settings put global debug.brcm.mm.logs 0\nadb shell settings put global sys.debug.watchdog 0\nadb shell settings put global logd.statistics 0\nadb shell settings put global persist.sys.logging 0\nadb shell settings put global persist.sys.loglevel 0\nadb shell settings put global sys.log.app 0\nadb shell settings put global ro.logd.size 0\nadb shell settings put global ro.logd.size.stats 0\nadb shell settings put global ro.logdumpd.enabled 0\nadb shell settings put global persist.vendor.dpm.loglevel 0\nadb shell settings put global persist.vendor.dpmhalservice.loglevel 0\nadb shell settings put global persist.vendor.sys.modem.logging.enable false\nadb shell settings put global debug.enable.wl_log 0\nadb shell settings put global debug.als.logs 0\nadb shell settings put global debug.svi.logs 0\nadb shell settings put global log.tag.stats_log 0\nadb shell settings put global ro.lmk.debug false\nadb shell settings put global ro.lmk.log_stats false\nadb shell settings put global ro.config.hw.logsystem.send 0\nadb shell settings put global debug.hwui.skia_atrace_enabled false\nadb shell settings put global persist.sys.mdlog_dumpback 0\nadb shell settings put global persist.vendor.mdlog.need_dump 0\nadb shell settings put global vendor.swvdec.log.level 0\nadb shell settings put global debug.sf.enable_transaction_tracing false\nadb shell settings put global ro.systemui.debug false\nadb shell settings put global persist.debug.sf.statistics 0\nadb shell settings put global persist.debug.host.ramdump 0\nadb shell settings put global persist.ims.disableDebugLogs 1\nadb shell settings put global persist.ims.disableDebugDataPathLogs 1\nadb shell settings put global persist.ims.disableADBLogs 1\nadb shell settings put global persist.ims.disableQXDMLogs 1\nadb shell settings put global persist.ims.disableIMSLogs 1\nadb shell settings put global persist.sys.qxdm_logs 0\nadb shell settings put global persist.service.debuggable 0\nadb shell settings put global persist.logd.limit off\nadb shell settings put global persist.logd.size 0\nadb shell settings put global persist.bt.iot.enablelogging false\nadb shell settings put global vendor.bluetooth.startbtlogger false\nadb shell settings put global persist.ai.timedebug.enable false\nadb shell settings put global persist.sys.qlogd 0\nadb shell settings put global persist.sys.hw_statistics 0\nadb shell settings put global persist.vendor.verbose_logging_enabled false\nadb shell settings put global persist.debug.xlog.enable 0\nadb shell settings put global persist.sys.perfettologging.enable 0\nadb shell settings put global persist.sys.perf.debug false\nadb shell settings put global persist.sys.offlinelog.kernel false\nadb shell settings put global persist.sys.offlinelog.logcat false\nadb shell settings put global persist.sys.offlinelog.logcatkernel false\nadb shell settings put global persist.sys.log.user 0\nadb shell settings put global persist.sys.log-main.enable 0\nadb shell settings put global persist.sys.log-system.enable 0\nadb shell settings put global persist.sys.log-events.enable 0\nadb shell settings put global persist.sys.log-radio.enable 0\nadb shell settings put global persist.sys.tcpdump.lognum 0\nadb shell settings put global persist.sys.tcpdump.logsize 0\nadb shell settings put global persist.sys.wifipacketlog.state false\nadb shell settings put global persist.debug.wfd.enable 0\nadb shell settings put global persist.data.qmi.adb_logmask 0\nadb shell settings put system status_logging_cnt 0\nadb shell settings put system anr_debugging_mechanism 0\nadb shell settings put system anr_debugging_mechanism_status 0\nadb shell settings put system dk_log_level 0\nadb shell settings put system user_log_enabled 0\nadb shell settings put system window_orientation_listener_log 0",
    "filename": "f7d84d21b7d1074ac07314fa8902ee02_0.scala"
  },
  {
    "conversation_hash": "29808b676c7a1f0195a4d2185cdb3737",
    "code_index": 4,
    "language": "Scala",
    "libraries": [],
    "code": "import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"my-app\",\n  template: `\n    <TextView [(ngModel)]=\"yourTextProperty\" hint=\"Введите многострочный текст...\" height=\"200\"></TextView>\n  `,\n})\nexport class AppComponent {\n  yourTextProperty: string = \"Здесь будет ваш многострочный текст.\";\n}",
    "filename": "29808b676c7a1f0195a4d2185cdb3737_4.scala"
  },
  {
    "conversation_hash": "29808b676c7a1f0195a4d2185cdb3737",
    "code_index": 10,
    "language": "Scala",
    "libraries": [],
    "code": "import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"my-component\",\n  template: `\n    <TabView [visibility]=\"shouldShowTabs ? 'visible' : 'collapsed'\">\n      <!-- Контент TabView -->\n    </TabView>\n  `\n})\nexport class MyComponent {\n  shouldShowTabs: boolean = true;\n}",
    "filename": "29808b676c7a1f0195a4d2185cdb3737_10.scala"
  },
  {
    "conversation_hash": "29808b676c7a1f0195a4d2185cdb3737",
    "code_index": 13,
    "language": "Scala",
    "libraries": [],
    "code": "import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"my-page\",\n  template: `<Page actionBarHidden=\"true\"><StackLayout><!-- ваш контент --></StackLayout></Page>`\n})\nexport class MyPageComponent {}",
    "filename": "29808b676c7a1f0195a4d2185cdb3737_13.scala"
  },
  {
    "conversation_hash": "bed031714d6907afdf1796fbe6e2f589",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "// Incorrect - no key prop\n{items.map(item => <div>{item.text}</div>)}\n\n// Correct - key prop added\n{items.map(item => <div key={item.id}>{item.text}</div>)}",
    "filename": "bed031714d6907afdf1796fbe6e2f589_0.scala"
  },
  {
    "conversation_hash": "e30f94433149eabbbc4c55d86bcf4695",
    "code_index": 2,
    "language": "Scala",
    "libraries": [],
    "code": "Matrix Object: \n  type: seqaij\nrows=9, cols=4\ntotal: nz=9, allocated=9 (max used 0,69%)\nmemory: 328 Bytes\n   0:   global: 0   local: 0   values: 0 0 0 0 0 0 0 0 0  \n   1:   global: 1   local: 1   values: 0 0 0 0 0 0 0 0 0  \n   2:   global: 2   local: 2   values: 0 0 0 0 0 0 0 0 0  \n   3:   global: 3   local: 3   values: 0 0 0 0 0 0 0 0 0  \n   4:   global: 4   local: 4   values: 0 0 0 0 0 0 0 0 0  \n   5:   global: 5   local: 5   values: 0 0 0 0 0 0 0 0 0  \n   6:   global: 6   local: 6   values: 0 0 0 0 0 0 0 0 0  \n   7:   global: 7   local: 7   values: 0 0 0 0 0 0 0 0 0  \n   8:   global: 8   local: 8   values: 0 0 0 0 0 0 0 0 0",
    "filename": "e30f94433149eabbbc4c55d86bcf4695_2.scala"
  },
  {
    "conversation_hash": "e30f94433149eabbbc4c55d86bcf4695",
    "code_index": 4,
    "language": "Scala",
    "libraries": [],
    "code": "Matrix Object: \n  type: seqaij\nrows=9, cols=3\ntotal: nz=9, allocated=9 (max used 100,00%)\nmemory: 328 Bytes\n   0:   global: 0   local: 0   values: 1  \n   1:   global: 1   local: 1   values: 1  \n   2:   global: 2   local: 2   values: 1  \n   3:   global: 3   local: 0   values: 1  \n   4:   global: 4   local: 1   values: 1  \n   5:   global: 5   local: 2   values: 1  \n   6:   global: 6   local: 0   values: 1  \n   7:   global: 7   local: 1   values: 1  \n   8:   global: 8   local: 2   values: 1",
    "filename": "e30f94433149eabbbc4c55d86bcf4695_4.scala"
  },
  {
    "conversation_hash": "3d42805fdd32039b84283ade2d508194",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "as3\nthis.newType:ТипДанных = newType;\nthis.layer:ТипДанных = Main.systemUILayer;\nthis.imageLoader:GTanksI = Main.osgi.getService(GTanksI) as GTanksI;\nthis.image:Bitmap = this.imageLoader.pict();\nthis.image.x = 10;\nthis.image.y = 11;\naddChild(this.window:ТипДанных);\naddChild(this.image);",
    "filename": "3d42805fdd32039b84283ade2d508194_1.scala"
  },
  {
    "conversation_hash": "9270fc411abdd1439af900632bb174c1",
    "code_index": 2,
    "language": "Scala",
    "libraries": [],
    "code": "import { FormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [\n    // ...\n  ],\n  imports: [\n    FormsModule,\n    // ...\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }",
    "filename": "9270fc411abdd1439af900632bb174c1_2.scala"
  },
  {
    "conversation_hash": "af3a0e0caa8f447d2d5a0ec133367106",
    "code_index": 18,
    "language": "Scala",
    "libraries": [],
    "code": "import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { AppComponent } from './app.component';\n\nimport { HomeModule } from '../home/dist/homeMicroFrontend';\nimport { AboutModule } from '../about/dist/aboutMicroFrontend';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    HomeModule,\n    AboutModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }",
    "filename": "af3a0e0caa8f447d2d5a0ec133367106_18.scala"
  },
  {
    "conversation_hash": "af3a0e0caa8f447d2d5a0ec133367106",
    "code_index": 21,
    "language": "Scala",
    "libraries": [],
    "code": "import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { AppComponent } from './app.component';\n\nimport { HomeModule } from '../home/dist/homeMicroFrontend';\nimport { AboutModule } from '../about/dist/aboutMicroFrontend';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    HomeModule,\n    AboutModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }",
    "filename": "af3a0e0caa8f447d2d5a0ec133367106_21.scala"
  },
  {
    "conversation_hash": "6784d354ce8cd9959f20ac57c06da1b1",
    "code_index": 4,
    "language": "Scala",
    "libraries": [],
    "code": "// app-routing.module.ts\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [\n  { path: 'home', loadChildren: () => import('./home/home.module').then(m => m.HomeModule) },\n  { path: 'dashboard', loadChildren: () => import('./dashboard/dashboard.module').then(m => m.DashboardModule) },\n  { path: 'settings', loadChildren: () => import('./settings/settings.module').then(m => m.SettingsModule) },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }",
    "filename": "6784d354ce8cd9959f20ac57c06da1b1_4.scala"
  },
  {
    "conversation_hash": "6784d354ce8cd9959f20ac57c06da1b1",
    "code_index": 7,
    "language": "Scala",
    "libraries": [],
    "code": "// app-routing.module.ts\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [\n  { path: 'home', loadChildren: () => import('home-app').then(m => m.HomeModule) },\n  { path: 'dashboard', loadChildren: () => import('dashboard-app').then(m => m.DashboardModule) },\n  { path: 'settings', loadChildren: () => import('settings-app').then(m => m.SettingsModule) },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }",
    "filename": "6784d354ce8cd9959f20ac57c06da1b1_7.scala"
  },
  {
    "conversation_hash": "9a39c17570f40ce77a89aa4a1aeeefe9",
    "code_index": 1,
    "language": "Scala",
    "libraries": [
      "flash.display.MovieClip",
      "flash.events.MouseEvent",
      "flash.text.TextField",
      "flash.text.TextFormat",
      "flash.text.TextFormatAlign",
      "fonts.TanksFonts"
    ],
    "code": "package launcher.panel.buttonBar \n{\n    /**\n     * ...\n     * author alekskart\n     */\n    import flash.display.MovieClip;\n    import flash.text.TextField;\n    import flash.text.TextFormat;\n    import flash.events.MouseEvent;\n    import fonts.TanksFonts;\n    import flash.text.TextFormatAlign;\n     \n    [Embed(source=\"fonts/TanksFonts.ttf\", fontName=\"TanksFonts\", mimeType=\"application/x-font-truetype\")]\n    public class quickPanel extends MovieClip \n    {\n        // Остальной код класса quickPanel\n\n    }\n}",
    "filename": "9a39c17570f40ce77a89aa4a1aeeefe9_1.scala"
  },
  {
    "conversation_hash": "eb3b0a9f01493f79a58bbf74d3732217",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "import 'package:flutter/material.dart';\n\nclass LoginPage extends StatelessWidget {\n  @override\n  Widget build(BuildContext context) {\n    return Scaffold(\n      body: Container(\n        padding: EdgeInsets.symmetric(horizontal: 20),\n        child: Column(\n          mainAxisAlignment: MainAxisAlignment.center,\n          children: [\n            TextFormField(\n              decoration: InputDecoration(labelText: 'Username'),\n            ),\n            SizedBox(height: 20),\n            TextFormField(\n              decoration: InputDecoration(labelText: 'Password'),\n              obscureText: true,\n            ),\n            SizedBox(height: 20),\n            ElevatedButton(\n              onPressed: () {\n                // Login logic here\n              },\n              child: Text('Login'),\n            ),\n          ],\n        ),\n      ),\n    );\n  }\n}\n\nvoid main() {\n  runApp(MaterialApp(\n    home: LoginPage(),\n  ));\n}",
    "filename": "eb3b0a9f01493f79a58bbf74d3732217_0.scala"
  },
  {
    "conversation_hash": "56804c75df4deb97d2c8a97d7bbe6d8b",
    "code_index": 2,
    "language": "Scala",
    "libraries": [],
    "code": "@media print {\n     .contenedor .boton-imprimir {\n       display: none;\n     }\n   }",
    "filename": "56804c75df4deb97d2c8a97d7bbe6d8b_2.scala"
  },
  {
    "conversation_hash": "56804c75df4deb97d2c8a97d7bbe6d8b",
    "code_index": 3,
    "language": "Scala",
    "libraries": [],
    "code": "<style>\n  @media print {\n    .boton-imprimir {\n      display: none !important;\n    }\n  }\n</style>",
    "filename": "56804c75df4deb97d2c8a97d7bbe6d8b_3.scala"
  },
  {
    "conversation_hash": "64e97fc094c4b214a0b980d9a50eae78",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "task fatAar(type: Zip) {\n    classifier = 'fat'\n    from(configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) })\n    with jar\n}\n\nartifacts {\n    archives fatAar\n}",
    "filename": "64e97fc094c4b214a0b980d9a50eae78_0.scala"
  },
  {
    "conversation_hash": "b9eb15c811c34af10d1fb6daa2119a75",
    "code_index": 6,
    "language": "Scala",
    "libraries": [
      "android.text.method.LinkMovementMethod"
    ],
    "code": "import android.text.method.LinkMovementMethod\n// ...\n\nval textView = findViewById<TextView>(R.id.myTextView)\ntextView.movementMethod = LinkMovementMethod.getInstance()",
    "filename": "b9eb15c811c34af10d1fb6daa2119a75_6.scala"
  },
  {
    "conversation_hash": "ffb090a1b7cf2c53e6513ce54c8bb835",
    "code_index": 3,
    "language": "Scala",
    "libraries": [],
    "code": "val textViewLink: TextView = findViewById(R.id.textViewLink)\ntextViewLink.movementMethod = LinkMovementMethod.getInstance()\ntextViewLink.text = if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.N) {\n    Html.fromHtml(getString(R.string.linked_text), Html.FROM_HTML_MODE_COMPACT)\n} else {\n    Html.fromHtml(getString(R.string.linked_text))\n}",
    "filename": "ffb090a1b7cf2c53e6513ce54c8bb835_3.scala"
  },
  {
    "conversation_hash": "35948d4d66306fb5911f57656388f358",
    "code_index": 57,
    "language": "Scala",
    "libraries": [],
    "code": "{\n    editDocument ? (\n        <DocumentEditor\n            initialContent={editDocument.content || ''} \n            onSave={handleSaveDocument}\n            onCancel={handleCancelEditing}\n        />\n    ) : (<></>)\n}",
    "filename": "35948d4d66306fb5911f57656388f358_57.scala"
  },
  {
    "conversation_hash": "0960c5a07b81a3e8bdeb84e5e7e0ce65",
    "code_index": 2,
    "language": "Scala",
    "libraries": [],
    "code": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  template: `\n    <h1>Shell Application</h1>\n    <router-outlet></router-outlet>\n  `,\n})\nexport class AppComponent {}",
    "filename": "0960c5a07b81a3e8bdeb84e5e7e0ce65_2.scala"
  },
  {
    "conversation_hash": "f3f180dd1d87cec68fe04d6824d63425",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "for /f \"delims=\" %%i in ('dir /s /b /ad \"%InstallDir%\\*Windows Media Player*\"') do (\n    if exist \"%%i\" (\n        %MinSudo% --TrustedInstaller --Verbose --Privileged --NoLogo --WorkDir=\"\" cmd /c \"rmdir /s /q \"%%i\"\"\n    )\n)",
    "filename": "f3f180dd1d87cec68fe04d6824d63425_1.scala"
  },
  {
    "conversation_hash": "7db99b36f237af184a29b8421bf082b0",
    "code_index": 2,
    "language": "Scala",
    "libraries": [],
    "code": "length_var = tk.StringVar(value=\"3\")  # valor padrão para o comprimento do som em segundos\n\ntk.Label(config_window, text=\"Comprimento (s):\").grid(row=2, column=2)\nlength_entry = tk.Entry(config_window, textvariable=length_var)\nlength_entry.grid(row=2, column=3)",
    "filename": "7db99b36f237af184a29b8421bf082b0_2.scala"
  },
  {
    "conversation_hash": "27436208245df97c6bd1406e4d66d0ff",
    "code_index": 2,
    "language": "Scala",
    "libraries": [],
    "code": "package your.package.path {\n    public class PlayerData {\n       public var warehouse_data:Object;\n       // Другие свойства игрока...\n    }\n}",
    "filename": "27436208245df97c6bd1406e4d66d0ff_2.scala"
  },
  {
    "conversation_hash": "bf59eddd0f97f1af0add4b0b393ea1d1",
    "code_index": 3,
    "language": "Scala",
    "libraries": [],
    "code": "nircmd win activate ititle \"iVMS-4200\"\ntimeout /t 2\nnircmd lockcursor\ntimeout /t 1\nnircmd sendmouse left click x y\nnircmd unlockcursor",
    "filename": "bf59eddd0f97f1af0add4b0b393ea1d1_3.scala"
  },
  {
    "conversation_hash": "128f02a616d6109d56f513efc73d2496",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": ">:(\n\nOr if you want it larger, you can use something like this:\n\n    >>>:(((((((\n   >:(((   ((((\n  >:((       (((\n >:((         ((\n>:(((         ((\n>:(((       (((\n  >:((((   ((((\n    >>>:(((((((",
    "filename": "128f02a616d6109d56f513efc73d2496_0.scala"
  },
  {
    "conversation_hash": "c2b28a307f46eb4824a189076a256dd7",
    "code_index": 10,
    "language": "Scala",
    "libraries": [],
    "code": "// Atribuir a execução do som à uma variável global\n~meuSom = {\n    var freq = 440; // Frequência em Hz\n    var amp = 0.5; // Amplitude\n    SinOsc.ar(freq, 0, amp)!2 // O ‘!2’ cria um array com duas cópias para saída estéreo\n}.play;",
    "filename": "c2b28a307f46eb4824a189076a256dd7_10.scala"
  },
  {
    "conversation_hash": "c2b28a307f46eb4824a189076a256dd7",
    "code_index": 16,
    "language": "Scala",
    "libraries": [],
    "code": "\"linha 1\".postln;  // Postado imediatamente.\n\n// defer adia a execução da função para que outras coisas possam acontecer primeiro.\n{ \"linha 2 com defer\".postln; }.defer;\n\n\"linha 3\".postln;  // Provavelmente será postada antes que a linha 2 aconteça, devido ao defer.\n\n// Também é possível agendar execução com um tempo específico de espera com .fork e wait.\n(\n{\n    \"linha 4 com espera\".postln;\n    1.wait; // Espera por 1 segundo.\n    \"linha 5 após 1 segundo\".postln;\n}.fork;\n)\n\n// A linha 4 será postada, depois as linhas 1 e 3, e em algum ponto depois a linha 2 (devido ao defer),\n// e após 1 segundo de espera da linha 4, a linha 5 será postada.",
    "filename": "c2b28a307f46eb4824a189076a256dd7_16.scala"
  },
  {
    "conversation_hash": "2bb0d638154337ed89ab96d16486340d",
    "code_index": 3,
    "language": "Scala",
    "libraries": [],
    "code": "uint256 newTargetSharePrice = (amount *\n    START_REBASING_SHARE_PRICE +\n    __rebasingSharePrice.targetValue *\n    _totalRebasingShares) / _totalRebasingShares;\n__rebasingSharePrice = InterpolatedValue({\n    lastTimestamp: SafeCastLib.safeCastTo32(block.timestamp),\n    lastValue: SafeCastLib.safeCastTo224(_rebasingSharePrice),\n    targetTimestamp: SafeCastLib.safeCastTo32(endTimestamp),\n    targetValue: SafeCastLib.safeCastTo224(newTargetSharePrice)\n});",
    "filename": "2bb0d638154337ed89ab96d16486340d_3.scala"
  },
  {
    "conversation_hash": "d349e320c5f72dcd7b58e816af650694",
    "code_index": 4,
    "language": "Scala",
    "libraries": [],
    "code": ".method public getPurchaseState()I\n    .locals 2\n\n    const/4 v0, 0x1  # Устанавливаем v0 в значение 1, которое может представлять успешную покупку.\n\n    return v0        # Всегда возвращаем v0.\n.end method",
    "filename": "d349e320c5f72dcd7b58e816af650694_4.scala"
  },
  {
    "conversation_hash": "1d01141d39f5650293bd3cf2957fb12b",
    "code_index": 6,
    "language": "Scala",
    "libraries": [],
    "code": "val saltedDF1 = df1.withColumn(\"joinKey\", concat($\"joinKey\", lit(\"_\"), (rand() * 10).cast(\"int\").toString))\n   val replicatedDF2 = df2.flatMap{ row =>\n     (0 until 10).map(i => (row.getAs[String](\"joinKey\") + s\"_$i\", row.getAs[Type](\"otherColumn\")))\n   }.toDF(\"joinKey\", \"otherColumn\")\n\n   val joinedDF = saltedDF1.join(replicatedDF2, Seq(\"joinKey\"))",
    "filename": "1d01141d39f5650293bd3cf2957fb12b_6.scala"
  },
  {
    "conversation_hash": "cf1ed948593ac0a998b6a9f930621e65",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "val dfLarge = ... // large dataframe\n     val dfSmall = ... // small dataframe\n     \n     val broadcastDFSmall = spark.sparkContext.broadcast(dfSmall)\n     val result = dfLarge.join(broadcastDFSmall.value, Seq(\"timestamp\"), \"inner\")",
    "filename": "cf1ed948593ac0a998b6a9f930621e65_0.scala"
  },
  {
    "conversation_hash": "2da5fc6e51dba80302c6eca6e0bb81b0",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "IBridgeValidator(vars.bridgeValidator).validateTxData(\n       IBridgeValidator.ValidateTxDataArgs(\n           singleVaultData_.liqData.txData,\n           vars.chainId,\n           vars.chainId,\n           vars.chainId,\n           true,\n           address(this),\n           msg.sender,\n           address(token),\n           address(0)\n       )\n   );",
    "filename": "2da5fc6e51dba80302c6eca6e0bb81b0_0.scala"
  },
  {
    "conversation_hash": "3e2fc267a4a9ec3cd579ac88ddade867",
    "code_index": 9,
    "language": "Scala",
    "libraries": [],
    "code": "a\nbe\ndef\nghiJ\nkImno\nparstu",
    "filename": "3e2fc267a4a9ec3cd579ac88ddade867_9.scala"
  },
  {
    "conversation_hash": "c369f16619f8595bfe05d72350675522",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "extends KinematicBody3D\n\nvar target_velocity = Vector3.ZERO\nvar current_velocity = Vector3.ZERO\nvar speed = 10.0\nvar acceleration = 5.0 # How quickly the character speeds up\nvar deceleration = 5.0 # How quickly the character slows down",
    "filename": "c369f16619f8595bfe05d72350675522_0.scala"
  },
  {
    "conversation_hash": "b2ca96d3b0c09f6e086bfb234fd459b2",
    "code_index": 4,
    "language": "Scala",
    "libraries": [],
    "code": "diskpart\nlist disk\nselect disk 0\nlist volume\nselect volume X       (Replace X with the system reserved volume number)\nformat fs=ntfs quick\nassign letter=Z       (You can choose a letter that's not in use)\nexit\nbootrec /fixboot",
    "filename": "b2ca96d3b0c09f6e086bfb234fd459b2_4.scala"
  },
  {
    "conversation_hash": "f9c83b3bffb8d04e7a7a4904d0e37d82",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "constructor(\n    DiamondArgs memory _args,\n    IDiamondCut.FacetCut[] memory _diamondCutFacets\n) {\n    LibDiamond.setContractOwner(_args.owner);\n    LibDiamond.diamondCut(\n        _diamondCutFacets,\n        _args.init,\n        _args.initCalldata\n    );\n}",
    "filename": "f9c83b3bffb8d04e7a7a4904d0e37d82_1.scala"
  },
  {
    "conversation_hash": "f9c83b3bffb8d04e7a7a4904d0e37d82",
    "code_index": 4,
    "language": "Scala",
    "libraries": [],
    "code": "// The DiamondStorage struct in LibDiamond\nstruct DiamondStorage {\n    mapping(bytes4 => FacetAddressAndPosition) selectorToFacetAndPosition;\n    ...\n}",
    "filename": "f9c83b3bffb8d04e7a7a4904d0e37d82_4.scala"
  },
  {
    "conversation_hash": "63632f9b1700b7f11beefc74566896d1",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "\"item.mmorpg.jewel.dex\": \"Ngọc Lucidan\",\n\"item.mmorpg.jewel.str\": \"Ngọc Thiên thạch\",\n\"item.mmorpg.jewel.int\": \"Ngọc Bụi sao\",\n\n\"item.mmorpg.stone.0\": \"Đá Thường\",\n\"item.mmorpg.stone.1\": \"Đá Không phổ biến\",\n\"item.mmorpg.stone.2\": \"Đá Hiếm\",\n\"item.mmorpg.stone.3\": \"Đá Huyền bí\",\n\"item.mmorpg.stone.4\": \"Đá Huyền thoại\",\n\"item.mmorpg.stone.5\": \"Đá Thần thoại\",\n\n\"item.mmorpg.map\": \"Bản đồ Phiêu lưu\",\n\"item.mmorpg.stat_soul\": \"Linh hồn Thông số Trang bị\",\n\"item.mmorpg.set_map\": \"Công cụ Cài đặt Bản đồ\",\n\"item.mmorpg.loot_bag\": \"Túi Trang bị Đồ nhặt\",\n\"item.mmorpg.map_bag\": \"Túi Bản đồ\",\n\"item.mmorpg.currency_bag\": \"Túi Tiền tệ\",\n\"item.mmorpg.newbie_gear_bag\": \"Túi Trang bị Cho người mới\",\n\"item.mmorpg.tutorial_book\": \"Sách hướng dẫn Age of Exile\",\n\"item.mmorpg.map_back_portal\": \"Ngọc Thoát khỏi Bản đồ\",\n\"item.mmorpg.level_nearest_entity\": \"Lên cấp thực thể gần nhất\",\n\"item.mmorpg.increase_rarity_nearest_entity\": \"Tăng Độ hiếm của thực thể gần nhất\",\n\"item.mmorpg.mat.infused_iron\": \"Sắt Được tinh luyện\",\n\"item.mmorpg.mat.crystallized_essence\": \"Bản chất Tinh thể hóa\",\n\"item.mmorpg.mat.golden_orb\": \"Hoàng ngọc\",\n\"item.mmorpg.mat.mythic_essence\": \"Bản chất Thần thoại\",\n\"item.mmorpg.awaken_runeword\": \"RuneWord Thức tỉnh\",\n\"item.mmorpg.identify_tome\": \"Sách Nhận dạng\",\n\"item.mmorpg.teleport_scroll\": \"Trục xuất Về cuộn\",\n\n\"mmorpg.name.map\": \"Bản đồ Phiêu lưu\",\n\"mmorpg.tooltip.put_in_mapdevice\": \"Nhấp chuột phải vào Thiết bị Bản đồ để sử dụng\",\n\"mmorpg.tooltip.press_shift_more_info\": \"[Alt]: Thông tin, [Ctrl]: Ẩn\",\n\"mmorpg.tooltip.affix_rarity_lootbonus\": \"Phụ gia Độ hiếm Phần thưởng\",\n\n\"entity.mmorpg.zombie\": \"Zombie\",\n\"entity.mmorpg.spider\": \"Nhện\",\n\"entity.mmorpg.spirit_wolf\": \"Sói Linh hồn\",\n\"entity.mmorpg.skeleton\": \"Bộ xương\",\n\"entity.mmorpg.thorny_minion\": \"Minion Gai\",\n\"entity.mmorpg.explody_minion\": \"Minion TNT\",\n\n\"entity.mmorpg.fire_golem\": \"Golem Lửa\",\n\"entity.mmorpg.cold_golem\": \"Golem Băng giá\",\n\"entity.mmorpg.lightning_golem\": \"Golem Sét\",\n\n\"entity.mmorpg.boss_golem\": \"Golem Sa đọa\",\n\n\"effect.mmorpg.food_health_regen\": \"Hồi phục Sức khỏe\",\n\"effect.mmorpg.food_mana_regen\": \"Hồi phục Mana\",\n\"effect.mmorpg.food_magic_shield_regen\": \"Hồi phục Khiên phép thuật\",\n\"effect.mmorpg.knockback_resist\": \"Kháng Đẩy lùi\",\n\"effect.mmorpg.anti_wither\": \"Chống Khô héo\",\n\"effect.mmorpg.anti_poison\": \"Chống Độc\",\n\"effect.mmorpg.scroll_buff\": \"Buff Cuộn trục xuất\",\n\"effect.mmorpg.instant_arrows\": \"Mũi tên Tức thì\",\n\"effect.mmorpg.meal\": \"Buff Bữa ăn\",\n\"effect.mmorpg.fish\": \"Buff Hải sản\",\n\"effect.mmorpg.potion\": \"Buff Philtre\",\n\n\"item.mmorpg.loot_crate.common\": \"Rương Phần thưởng Đồ vật Thường\",\n\"item.mmorpg.loot_crate.magic\": \"Rương Phần thưởng Đồ vật Phép thuật\",\n\"item.mmorpg.loot_crate.rare\": \"Rương Phần thưởng Đồ vật Hiếm\",\n\"item.mmorpg.loot_crate.relic\": \"Rương Phần thưởng Đồ vật Cổ vật\",\n\"item.mmorpg.loot_crate.unique\": \"Rương Phần thưởng Đồ vật Độc nhất\",\n\"item.mmorpg.loot_crate.gem\": \"Rương Phần thưởng Ngọc\",\n\"item.mmorpg.loot_crate.rune\": \"Rương Phần thưởng Rune\",\n\n\"item.mmorpg.loot_table_chest\": \"Túi Phần thưởng Lên cấp\",",
    "filename": "63632f9b1700b7f11beefc74566896d1_1.scala"
  },
  {
    "conversation_hash": "b3da96f000b707f8359f9add77cdac6b",
    "code_index": 6,
    "language": "Scala",
    "libraries": [],
    "code": "<!-- 添加 Milvus Java SDK 依赖 -->\n   <dependency>\n       <groupId>io.milvus</groupId>\n       <artifactId>milvus-sdk-java</artifactId>\n       <version>RecommendedVersionHere</version> <!-- 确保使用最新版本 -->\n   </dependency>",
    "filename": "b3da96f000b707f8359f9add77cdac6b_6.scala"
  },
  {
    "conversation_hash": "a8c321b54b88d08386a344edda7c724b",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "constructor(\n    address _pool,\n    address _bridgedTokenMint,\n    address _pdaBridgedTokenAccount,\n    @bump bytes1 _bump\n) {\n    // ... \n    // Validation logic must go here\n}",
    "filename": "a8c321b54b88d08386a344edda7c724b_1.scala"
  },
  {
    "conversation_hash": "0a626b65b6b88216f4e4be882fdf2538",
    "code_index": 3,
    "language": "Scala",
    "libraries": [],
    "code": "import { OnInit } from '@angular/core';\n\nexport class YourComponent implements OnInit {\n  selectedStockStatus: string;\n\n  ngOnInit() {\n    this.selectedStockStatus = this.addStockRequest.get('stockStatus').value;\n  }\n\n  // Your other methods and logic\n}",
    "filename": "0a626b65b6b88216f4e4be882fdf2538_3.scala"
  },
  {
    "conversation_hash": "f31e41bdbe620b4d9d7ffdbfc6385f2e",
    "code_index": 18,
    "language": "Scala",
    "libraries": [],
    "code": "// MenuConnexion.tsx\n\n// ...\n\n<section className='le-panier'>\n  {cart.map((item: CartItem, index: number) => (\n    <ItemPanier\n      key={index}\n      typeBillet={item.id}\n      quantite={item.quantity}\n      title={item.title}\n      price={item.price}\n    />\n  ))}\n</section>\n\n// ...",
    "filename": "f31e41bdbe620b4d9d7ffdbfc6385f2e_18.scala"
  },
  {
    "conversation_hash": "52b4a228b1383feedff415905826a12c",
    "code_index": 6,
    "language": "Scala",
    "libraries": [],
    "code": "const ItemPanier: React.FC<Props> = ({ typeBillet, quantite }) => {\n  // ... Code de votre composant ...\n};\n\nexport default ItemPanier;",
    "filename": "52b4a228b1383feedff415905826a12c_6.scala"
  },
  {
    "conversation_hash": "b5f63a370c08e0338627b6d7eb5577dd",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "constructor(string memory _name, string memory _symbol, address _owner) ERC20(_name, _symbol) {\n    owner = _owner;\n    // Initial minting - creates a certain amount of tokens for distribution\n    _mint(_owner, initialSupply);\n\n    // Possible additional configuration steps:\n    // - Set up roles or permissions if using an Access Control system\n    // - Initialize other state variables or configurations specific to the token economics\n    // - Configure additional features such as fee mechanisms or token burns\n}",
    "filename": "b5f63a370c08e0338627b6d7eb5577dd_1.scala"
  },
  {
    "conversation_hash": "818f5a65d7384c0c62dedcb7bd1d47a2",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "/* App.css ou un autre fichier CSS importé dans votre projet */\n\n.bgbillet {\n  width: 100%; /* ou toute autre mesure */\n  height: auto; /* pour garder le ratio de la vidéo */\n  position: absolute; /* si vous voulez placer la vidéo en arrière-plan */\n  top: 0;\n  left: 0;\n}",
    "filename": "818f5a65d7384c0c62dedcb7bd1d47a2_1.scala"
  },
  {
    "conversation_hash": "460084bfde1e8b47fb48c7577a7cd20e",
    "code_index": 9,
    "language": "Scala",
    "libraries": [],
    "code": "plugins {\n    java\n}\n\njava {\n    sourceCompatibility = JavaVersion.VERSION_17\n    targetCompatibility = JavaVersion.VERSION_17\n}\n\n// Other configurations such as repositories, dependencies, etc.",
    "filename": "460084bfde1e8b47fb48c7577a7cd20e_9.scala"
  },
  {
    "conversation_hash": "4dc587a718b2988c2840943c0816e7b7",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "<Button\n  text={isLoading ? \"Chargement...\" : isAdded ? \"ARTICLE AJOUTÉ\" : \"AJOUTER AU PANIER\"}\n  isLoading={isLoading}\n  formRef={undefined}\n  onClick={addToCartHandler} // Ajoutez l'écouteur d'événements ici\n/>",
    "filename": "4dc587a718b2988c2840943c0816e7b7_0.scala"
  },
  {
    "conversation_hash": "bac4056249f80e9b541ce7dc980fb773",
    "code_index": 8,
    "language": "Scala",
    "libraries": [],
    "code": "<CarteArtiste\n  oldGroupes={lesGroupes}\n  key={groupe.idG}\n  id={groupe.idG}\n  //vérifiez que les valeurs soient correctement transmises\n  oldX={idArtistComingFrom == groupe.idG ? oldX : null}\n  oldY={idArtistComingFrom == groupe.idG ? oldY : null}\n  comesFromPageArtist={idArtistComingFrom == groupe.idG ? true : false}\n  nomArtiste={groupe.nomG}\n  date={groupe.datePassage} // Utilisez les nouveaux champs\n  heure={groupe.heurePassage}\n  setIsNavTransparent={props.setIsNavTransparent}\n/>",
    "filename": "bac4056249f80e9b541ce7dc980fb773_8.scala"
  },
  {
    "conversation_hash": "e3023b39bc49cd9773a29a60e97a1cc0",
    "code_index": 13,
    "language": "Scala",
    "libraries": [
      "CarteProgrammation"
    ],
    "code": "import CarteProgrammation from '../../components/Programme/CarteProgrammation';\n// ...\n\n<main className='liste-artistes'>\n    {\n        [...lesGroupes, ...lesArtistes].map((programme, index) => {\n            return(\n                <CarteProgrammation\n                    key={programme.idG}\n                    programme={programme}\n                    setIsNavTransparent={props.setIsNavTransparent}\n                    // D'autres props si nécessaire...\n                />\n            )\n        })\n    }\n</main>",
    "filename": "e3023b39bc49cd9773a29a60e97a1cc0_13.scala"
  },
  {
    "conversation_hash": "412e0f639124c2d8fc000d73b187db48",
    "code_index": 6,
    "language": "Scala",
    "libraries": [],
    "code": "@main def helloMe() = {\n  // Code commented out; it demonstrates by-value vs. by-name parameter differences.\n  /*\n  println(\n    byValue(Random.nextInt(10000))\n  ) // : Seq[Int] = Seq(2551, 2551, 2551)\n  println(byqName(Random.nextInt(10000)))\n   */\n\n  callAll(helloAll) // Calls 'helloAll', prints a random number as a string.\n  callAll(helloAll) // Calls 'helloAll' again, prints another random number as a string.\n}",
    "filename": "412e0f639124c2d8fc000d73b187db48_6.scala"
  },
  {
    "conversation_hash": "5170d72d68ea459a1479a9322b18ebea",
    "code_index": 13,
    "language": "Scala",
    "libraries": [],
    "code": "val deltaTable = DeltaTable.forPath(spark, \"s3://path/to/delta/table\")\n   \n   // Drop the partition by deleting the data in it.\n   // For example, if you partition by `date` and want to drop '2023-01-01'.\n   deltaTable.delete(\"date = '2023-01-01'\")",
    "filename": "5170d72d68ea459a1479a9322b18ebea_13.scala"
  },
  {
    "conversation_hash": "a1cebc2272eb34889f4870c73d4cb8a3",
    "code_index": 26,
    "language": "Scala",
    "libraries": [],
    "code": "<AnimatePresence>\n  {filteredGroupes.map((groupe, index) => (\n    // make sure to add unique keys to your components\n  ))}\n  {filteredArtistes.map((artiste, index) => (\n    // make sure to add unique keys to your components\n  ))}\n</AnimatePresence>",
    "filename": "a1cebc2272eb34889f4870c73d4cb8a3_26.scala"
  },
  {
    "conversation_hash": "4ccf221fec2c1a03c10aa88f2c73e69f",
    "code_index": 2,
    "language": "Scala",
    "libraries": [],
    "code": "<select value={selectedDate} onChange={(e) => setSelectedDate(e.target.value)}>\n     <option value=\"\">Tout</option>\n     <option value=\"2023-07-21\">21 Juillet</option>\n     <option value=\"2023-07-22\">22 Juillet</option>\n     <option value=\"2023-07-23\">23 Juillet</option>\n   </select>",
    "filename": "4ccf221fec2c1a03c10aa88f2c73e69f_2.scala"
  },
  {
    "conversation_hash": "963a4b77b3d37c28b2984f373cb48a9b",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "// custom-typings.d.ts\ndeclare module 'some-library' {\n  export interface SomeInterface {\n    // Add a new method definition\n    newMethod(): void;\n  }\n}",
    "filename": "963a4b77b3d37c28b2984f373cb48a9b_1.scala"
  },
  {
    "conversation_hash": "963a4b77b3d37c28b2984f373cb48a9b",
    "code_index": 6,
    "language": "Scala",
    "libraries": [],
    "code": "export default class MyPlugin extends Plugin {\n    onload() {\n        super.onload(); // Calls the onload method of the parent Plugin class\n        // Your additional code here\n    }\n}",
    "filename": "963a4b77b3d37c28b2984f373cb48a9b_6.scala"
  },
  {
    "conversation_hash": "33b21b665a6ad1a2a5b7a9206eac9d04",
    "code_index": 10,
    "language": "Scala",
    "libraries": [],
    "code": "val someRows = Seq(\n     Row(\"Alice\", 11),\n     Row(\"Bob\", 12)\n   )\n   \n   val someSchema = StructType(List(\n     StructField(\"name\", StringType, true),\n     StructField(\"age\", IntegerType, true)\n   ))\n   \n   val someDF = spark.createDataFrame(\n     spark.sparkContext.parallelize(someRows),\n     someSchema\n   )",
    "filename": "33b21b665a6ad1a2a5b7a9206eac9d04_10.scala"
  },
  {
    "conversation_hash": "e55ed805162a67bb5f97bdad56039570",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "dependencies {\n    implementation(\"com.google.android.gms:play-services-ads:22.6.0\")\n    implementation(\"androidx.appcompat:appcompat:1.6.1\")\n    implementation(\"com.google.android.material:material:1.8.0\")\n    implementation(\"androidx.constraintlayout:constraintlayout:2.1.4\")\n    testImplementation(\"junit:junit:4.13.2\")\n    androidTestImplementation(\"androidx.test.ext:junit:1.1.5\")\n    androidTestImplementation(\"androidx.test.espresso:espresso-core:3.5.1\")\n    \n    // New Lifecycle dependencies with correct components\n    def lifecycle_version = \"2.3.1\"\n    // ViewModel\n    implementation(\"androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version\")\n    // LiveData\n    implementation(\"androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version\")\n    // Lifecycle Runtime\n    implementation(\"androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version\")\n    // Annotation processor\n    // Use kapt for Kotlin projects, it replaces the annotationProcessor instruction\n    kapt(\"androidx.lifecycle:lifecycle-compiler:$lifecycle_version\")\n    \n    // If your app is a Java project, use the following instead of kapt:\n    // annotationProcessor(\"androidx.lifecycle:lifecycle-compiler:$lifecycle_version\")\n}",
    "filename": "e55ed805162a67bb5f97bdad56039570_0.scala"
  },
  {
    "conversation_hash": "da8f19af11c5ae9358675326f6285543",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "dependencies {\n    implementation(\"com.google.android.gms:play-services-ads:22.6.0\")\n    implementation(\"androidx.appcompat:appcompat:1.6.1\")\n    implementation(\"com.google.android.material:material:1.8.0\")\n    implementation(\"androidx.constraintlayout:constraintlayout:2.1.4\")\n    testImplementation(\"junit:junit:4.13.2\")\n    androidTestImplementation(\"androidx.test.ext:junit:1.1.5\")\n    androidTestImplementation(\"androidx.test.espresso:espresso-core:3.5.1\")\n\n    // Add the lifecycle dependencies here\n    def lifecycle_version = \"2.3.1\"\n    // Note: lifecycle-extensions is deprecated, consider using lifecycle-viewmodel and lifecycle-livedata\n    implementation(\"androidx.lifecycle:lifecycle-extensions:$lifecycle_version\") // Deprecated\n    implementation(\"androidx.lifecycle:lifecycle-runtime:$lifecycle_version\")\n    kapt(\"androidx.lifecycle:lifecycle-compiler:$lifecycle_version\") // Use kapt instead of annotationProcessor for Kotlin projects\n}\n\n// Make sure to apply the kapt plugin if you're using Kotlin and replacing annotationProcessor with kapt\napply plugin: 'kotlin-kapt'",
    "filename": "da8f19af11c5ae9358675326f6285543_0.scala"
  },
  {
    "conversation_hash": "762c9a6b038eaa529359a5238e483a5d",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "dependencies {\n    implementation(\"com.google.android.gms:play-services-ads:22.6.0\")\n    implementation(\"androidx.appcompat:appcompat:1.6.1\")\n    implementation(\"com.google.android.material:material:1.8.0\")\n    implementation(\"androidx.constraintlayout:constraintlayout:2.1.4\")\n    testImplementation(\"junit:junit:4.13.2\")\n    androidTestImplementation(\"androidx.test.ext:junit:1.1.5\")\n    androidTestImplementation(\"androidx.test.espresso:espresso-core:3.5.1\")\n\n    // Added lifecycle dependencies\n    def lifecycle_version = \"2.3.1\"\n    implementation(\"androidx.lifecycle:lifecycle-extensions:$lifecycle_version\")\n    implementation(\"androidx.lifecycle:lifecycle-runtime:$lifecycle_version\")\n    annotationProcessor(\"androidx.lifecycle:lifecycle-compiler:$lifecycle_version\")\n}",
    "filename": "762c9a6b038eaa529359a5238e483a5d_0.scala"
  },
  {
    "conversation_hash": "02d8bbfbbeb38c03bb481bd58a3631e8",
    "code_index": 17,
    "language": "Scala",
    "libraries": [],
    "code": "{% set spectateurs_dict = {spectateur.get_idS(): spectateur for spectateur in liste_spectateurs} %}\n<tbody>\n    {% for billet in liste_billets %}\n        {% set spectateur = spectateurs_dict.get(billet.get_idSpectateur(), None) %}\n        <tr>\n            ...",
    "filename": "02d8bbfbbeb38c03bb481bd58a3631e8_17.scala"
  },
  {
    "conversation_hash": "02d8bbfbbeb38c03bb481bd58a3631e8",
    "code_index": 18,
    "language": "Scala",
    "libraries": [],
    "code": "<!-- Créez un dictionnaire en dehors de la boucle. -->\n{% set spectateurs_dict = {spectateur.get_idS(): spectateur for spectateur in liste_spectateurs} %}\n\n<tbody>\n    <!-- Utilisez ce dictionnaire pour récupérer le spectateur directement. -->\n    {% for billet in liste_billets %}\n        {% set spectateur = spectateurs_dict.get(billet.get_idSpectateur(), None) %}\n        <tr>\n            <!-- Vos autres cellules de tableau... -->\n            <td>\n                {% if spectateur %}\n                    Nom: {{ spectateur.get_nomS() }}<br>\n                    Email: {{ spectateur.get_emailS() }}<br>\n                    <!-- Autres informations du spectateur ici -->\n                {% else %}\n                    Informations indisponibles\n                {% endif %}\n            </td>\n            <!-- Vos autres cellules de tableau... -->\n        </tr>\n    {% endfor %}\n</tbody>",
    "filename": "02d8bbfbbeb38c03bb481bd58a3631e8_18.scala"
  },
  {
    "conversation_hash": "fc388203ea7c1bd75005c0896d510eb5",
    "code_index": 10,
    "language": "Scala",
    "libraries": [],
    "code": "android {\n    defaultConfig {\n        ...\n        multiDexEnabled true\n    }\n    ...\n}\n\ndependencies {\n    implementation 'androidx.multidex:multidex:2.0.1'\n    ...\n}",
    "filename": "fc388203ea7c1bd75005c0896d510eb5_10.scala"
  },
  {
    "conversation_hash": "4a2b568d169bbf6409d256278191bff2",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "\"platformSchema\": {\n  \"com.linkedin.schema.BigQuerySchema\": {\n    \"tableSchema\": {\n      \"fields\": [\n        {\n          \"name\": \"system\",\n          \"type\": \"STRING\",\n          \"mode\": \"NULLABLE\",\n          \"description\": \"A description for the system field.\"\n        },\n        {\n          \"name\": \"job_id\",\n          \"type\": \"INTEGER\",\n          \"mode\": \"NULLABLE\",\n          \"description\": \"A description for the job_id field.\"\n        }\n        // Further field definitions go here...\n      ]\n    }\n  }\n}",
    "filename": "4a2b568d169bbf6409d256278191bff2_1.scala"
  },
  {
    "conversation_hash": "4a2b568d169bbf6409d256278191bff2",
    "code_index": 3,
    "language": "Scala",
    "libraries": [],
    "code": "\"platformSchema\": {\n  \"com.linkedin.schema.OtherSchema\": {\n    \"schema\": \"{\\\"fields\\\": [{\\\"name\\\": \\\"system\\\",\\\"type\\\": \\\"STRING\\\", \\\"mode\\\": \\\"NULLABLE\\\"},{\\\"name\\\": \\\"job_id\\\",\\\"type\\\": \\\"INTEGER\\\", \\\"mode\\\": \\\"NULLABLE\\\"}]}\"\n  }\n}",
    "filename": "4a2b568d169bbf6409d256278191bff2_3.scala"
  },
  {
    "conversation_hash": "1e48cb9d7219c6b10e632aa9f0d12ddf",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "node_modules\n.nuxt\ndist\n.git\n.gitignore\nREADME.md\nDockerfile\ndocker-compose.yml\nnpm-debug.log\nyarn-error.log",
    "filename": "1e48cb9d7219c6b10e632aa9f0d12ddf_1.scala"
  },
  {
    "conversation_hash": "00025badb6bf2c882aa37054079c1166",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "<dependency>\n    <groupId>io.minio</groupId>\n    <artifactId>minio</artifactId>\n    <version>8.3.3</version> <!-- Check for the latest version -->\n</dependency>",
    "filename": "00025badb6bf2c882aa37054079c1166_0.scala"
  },
  {
    "conversation_hash": "00025badb6bf2c882aa37054079c1166",
    "code_index": 5,
    "language": "Scala",
    "libraries": [],
    "code": "<dependency>\n    <groupId>io.minio</groupId>\n    <artifactId>minio</artifactId>\n    <version>8.3.3</version> <!-- Check for the latest version -->\n</dependency>",
    "filename": "00025badb6bf2c882aa37054079c1166_5.scala"
  },
  {
    "conversation_hash": "3e4d62337c52cee5d5f879616d0bf782",
    "code_index": 4,
    "language": "Scala",
    "libraries": [
      "com.fasterxml.jackson.annotation.JsonFormat",
      "java.util.Date"
    ],
    "code": "import com.fasterxml.jackson.annotation.JsonFormat;\nimport java.util.Date;\n\npublic class MetaData {\n    // ...\n\n    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = \"yyyy-MM-dd'T'HH:mm:ss\")\n    private Date updateTime;\n\n    // ...\n}",
    "filename": "3e4d62337c52cee5d5f879616d0bf782_4.scala"
  },
  {
    "conversation_hash": "551cfbe3df805a347c586a3d2450d618",
    "code_index": 5,
    "language": "Scala",
    "libraries": [],
    "code": "<dependency>\n    <groupId>acq.library.daolazy</groupId>\n    <artifactId>dao-lazy</artifactId>\n    <version>2.0.3</version>\n    <scope>system</scope>\n    <systemPath>/absolute/path/to/dao-lazy-2.0.3.jar</systemPath>\n</dependency>",
    "filename": "551cfbe3df805a347c586a3d2450d618_5.scala"
  },
  {
    "conversation_hash": "a25615b8b471b523440430526f7d0e92",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "<androidx.appcompat.widget.Toolbar\n    android:id=\"@+id/toolbar\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"?attr/actionBarSize\"\n    ...\n/>",
    "filename": "a25615b8b471b523440430526f7d0e92_0.scala"
  },
  {
    "conversation_hash": "8576faf3e2e50d6beab87c8b88192bfb",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "# ValidationMessages.properties\nvalidation.notBlank=El campo {0} es obligatorio.\nvalidation.email=El correo electrónico no es válido.\nvalidation.size=El campo {0} debe tener como máximo {max} caracteres.\nvalidation.past=La fecha de nacimiento debe ser una fecha pasada.\nvalidation.identityFormat=La identificación debe contener exactamente 13 dígitos.\nvalidation.phoneFormat=El número de teléfono debe tener 10 dígitos.",
    "filename": "8576faf3e2e50d6beab87c8b88192bfb_1.scala"
  },
  {
    "conversation_hash": "8576faf3e2e50d6beab87c8b88192bfb",
    "code_index": 6,
    "language": "Scala",
    "libraries": [],
    "code": "# ValidationMessages.properties\nvalidation.notBlank=El campo {0} es obligatorio.\nvalidation.email=El correo electrónico proporcionado para el campo {0} no es válido.\nvalidation.size=El campo {0} debe tener como máximo {max} caracteres.\nvalidation.past=El campo {0} debe ser una fecha pasada.\nvalidation.identityFormat=El campo {0} debe contener exactamente 13 dígitos.\nvalidation.phoneFormat=El campo {0} debe tener 10 dígitos.",
    "filename": "8576faf3e2e50d6beab87c8b88192bfb_6.scala"
  },
  {
    "conversation_hash": "8576faf3e2e50d6beab87c8b88192bfb",
    "code_index": 11,
    "language": "Scala",
    "libraries": [],
    "code": "# ValidationMessages.properties\n\njavax.validation.constraints.NotBlank.message = El campo {0} no puede estar vacío o lleno de espacios en blanco.\njavax.validation.constraints.Email.message = La dirección de correo electrónico '{0}' no es una dirección válida.\njavax.validation.constraints.NotNull.message = El campo {0} no puede ser nulo.\njavax.validation.constraints.Size.message = El tamaño del campo {0} debe estar entre {min} y {max}.\njavax.validation.constraints.Min.message = El valor del campo {0} debe ser al menos {value}.\njavax.validation.constraints.Max.message = El valor del campo {0} no puede ser mayor de {value}.\njavax.validation.constraints.Pattern.message = El campo {0} no coincide con el patrón esperado: {regexp}.\njavax.validation.constraints.Future.message = La fecha del campo {0} debe ser una fecha futura.\njavax.validation.constraints.FutureOrPresent.message = La fecha del campo {0} debe ser una fecha actual o futura.\njavax.validation.constraints.Past.message = La fecha del campo {0} debe ser una fecha pasada.\njavax.validation.constraints.PastOrPresent.message = La fecha del campo {0} debe ser una fecha actual o pasada.\njavax.validation.constraints.Positive.message = El número del campo {0} debe ser positivo.\njavax.validation.constraints.PositiveOrZero.message = El número del campo {0} debe ser cero o más.\njavax.validation.constraints.Negative.message = El número del campo {0} debe ser negativo.\njavax.validation.constraints.NegativeOrZero.message = El número del campo {0} debe ser cero o menos.\njavax.validation.constraints.Digits.message = El campo {0} debe ser numérico y no tener más de {integer} dígitos enteros y {fraction} dígitos fraccionarios.\njavax.validation.constraints.AssertTrue.message = El valor del campo {0} debe ser verdadero.\njavax.validation.constraints.AssertFalse.message = El valor del campo {0} debe ser falso.",
    "filename": "8576faf3e2e50d6beab87c8b88192bfb_11.scala"
  },
  {
    "conversation_hash": "71e92bc7668550add2e128c9597fe8d7",
    "code_index": 12,
    "language": "Scala",
    "libraries": [],
    "code": "module your.module.name {\n       ...\n       requires gson;\n       ...\n   }",
    "filename": "71e92bc7668550add2e128c9597fe8d7_12.scala"
  },
  {
    "conversation_hash": "71e92bc7668550add2e128c9597fe8d7",
    "code_index": 13,
    "language": "Scala",
    "libraries": [],
    "code": "module my.application {\n    requires java.sql;\n    exports com.myapp;\n    // altre direttive...\n}",
    "filename": "71e92bc7668550add2e128c9597fe8d7_13.scala"
  },
  {
    "conversation_hash": "2024941ebcd634d2a3c0113cc2766e67",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "{\n    \"java.project.referencedLibraries\": [\n        \"path/to/your/library.jar\",\n        \"lib/**/*.jar\"\n    ]\n}",
    "filename": "2024941ebcd634d2a3c0113cc2766e67_0.scala"
  },
  {
    "conversation_hash": "994aeac599550590ccab5f5b9d24b207",
    "code_index": 4,
    "language": "Scala",
    "libraries": [],
    "code": "export class MyComponent {\n  componentProperty = 'Initial Value';\n  // This property is bound to the input. If the value changes in the input field,\n  // this property will be updated, and if the property changes programmatically,\n  // the input field will update to reflect that.\n}",
    "filename": "994aeac599550590ccab5f5b9d24b207_4.scala"
  },
  {
    "conversation_hash": "545b8beccb08dc8976edacdf1a098e81",
    "code_index": 1,
    "language": "Scala",
    "libraries": [
      "here"
    ],
    "code": "@NgModule({\n  declarations: [\n    // ... other components or pipes\n    // Remove ShortenPipe from here if it's not meant to be a declaration\n  ],\n  // ... other module properties\n})\nexport class AppModule { }",
    "filename": "545b8beccb08dc8976edacdf1a098e81_1.scala"
  },
  {
    "conversation_hash": "545b8beccb08dc8976edacdf1a098e81",
    "code_index": 4,
    "language": "Scala",
    "libraries": [],
    "code": "import { Pipe, PipeTransform } from '@angular/core';\n   \n   @Pipe({\n     name: 'shorten' // Use this name in your template to invoke the pipe\n   })\n   export class ShortenPipe implements PipeTransform {\n   \n     transform(value: string, limit: number): string {\n       if (value.length > limit) {\n         return value.substr(0, limit) + '...';\n       }\n       return value;\n     }\n   }",
    "filename": "545b8beccb08dc8976edacdf1a098e81_4.scala"
  },
  {
    "conversation_hash": "545b8beccb08dc8976edacdf1a098e81",
    "code_index": 5,
    "language": "Scala",
    "libraries": [],
    "code": "@NgModule({\n     declarations: [\n       // other components, directives, and pipes\n       ShortenPipe,\n     ],\n     // other module properties\n   })\n   export class AppModule { }",
    "filename": "545b8beccb08dc8976edacdf1a098e81_5.scala"
  },
  {
    "conversation_hash": "545b8beccb08dc8976edacdf1a098e81",
    "code_index": 9,
    "language": "Scala",
    "libraries": [],
    "code": "import { Component, OnInit } from '@angular/core';\nimport { Observable, interval } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-time',\n  template: `<div>Current Time: {{ time$ | async }}</div>`,\n})\nexport class TimeComponent {\n  // Create an Observable that emits a new Date object every second\n  time$: Observable<Date> = interval(1000).pipe(map(() => new Date()));\n}",
    "filename": "545b8beccb08dc8976edacdf1a098e81_9.scala"
  },
  {
    "conversation_hash": "a8587dd9786e26371af6c6939fc0f72d",
    "code_index": 4,
    "language": "Scala",
    "libraries": [],
    "code": "val handler = Handler(Looper.getMainLooper()) // создаем Handler для работы с основным(UI) потоком\n\n// Отправляем задачу на выполнение\nhandler.post {\n    // действие, которое будет выполнено в UI потоке\n}",
    "filename": "a8587dd9786e26371af6c6939fc0f72d_4.scala"
  },
  {
    "conversation_hash": "007217dbf071624f4c9ae316bc8dd2cb",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "resource \"null_resource\" \"configure_app_proxy\" {\n  depends_on = [azuread_application.example, azuread_service_principal.example]\n\n  provisioner \"local-exec\" {\n    command = \"az ad app proxy add --id ${azuread_application.example.application_id} --external-url https://proxy.example.com --internal-url http://internal-app/ --no-wait\"\n    environment = {\n      AZURE_AD_USER     = var.azure_ad_user\n      AZURE_AD_PASSWORD = var.azure_ad_password\n    }\n  }\n}",
    "filename": "007217dbf071624f4c9ae316bc8dd2cb_1.scala"
  },
  {
    "conversation_hash": "0b63b84f3614ec2614880f9e00cd4e76",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "# Устанавливаем новую тему или лаунчер (предварительно загрузив APK файл):\npm install /path/to/launcher.apk\n\n# Модифицируем системные настройки (требует root-доступа и осторожности):\nsettings put global <setting_name> <new_value>",
    "filename": "0b63b84f3614ec2614880f9e00cd4e76_0.scala"
  },
  {
    "conversation_hash": "c5267fc5236a1c0187578ae70b35f573",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "extends Node2D\n\nvar radius: float = 10.0\n\nfunc _ready():\n    set_physics_process(true)\n    var circle = CircleShape2D.new()\n    circle.set_radius(radius)\n    var collisionShape = CollisionShape2D.new()\n    collisionShape.shape = circle\n    add_child(collisionShape)\n    collisionShape.owner = self",
    "filename": "c5267fc5236a1c0187578ae70b35f573_1.scala"
  },
  {
    "conversation_hash": "159a4a89a47eeda1b4001a35196a2f22",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "(let [result-chan (search :bing \"eggs\")]\n  (println (<!! result-chan))) ;; For synchronous retrieval outside of go-block.\n\n;; or\n\n(go\n  (let [results (<! (search :bing \"eggs\"))] ;; For asynchronous retrieval within a go-block.\n    (println results)))",
    "filename": "159a4a89a47eeda1b4001a35196a2f22_1.scala"
  },
  {
    "conversation_hash": "c19abf4dd5332006c3b1c725823bb4b9",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "(defn search\n  \"Searches the Internet for the designated query. Engines supported:\n  \\n`:bing` `:google` `:yandex` `:brave` `:yahoo` `:mojeek`\n  \\nExample search: `search :bing \\\"eggs\\\"`\"\n  [engine query]\n  (let [search-c (go (>! search-buffer (fetch-and-extract-all-urls engine query)))\n        result-c (chan)]\n    (go (let [[result value] (alts! [search-buffer (timeout 5000)])] ; Timeout after 5 seconds\n          (if (= result search-buffer)\n            (do\n              (let [processed (process-url-glob value)]\n                (>! result-c processed))\n              (close! result-c))\n            (>! result-c \"Search timed out\")\n            (close! result-c))))\n    result-c))\n\n(let [search-result (search :bing \"eggs\")]\n  (println (<!! search-result)))",
    "filename": "c19abf4dd5332006c3b1c725823bb4b9_0.scala"
  },
  {
    "conversation_hash": "c19abf4dd5332006c3b1c725823bb4b9",
    "code_index": 1,
    "language": "Scala",
    "libraries": [
      "either"
    ],
    "code": "(defn search\n  \"Searches the Internet for the designated query. Engines supported:\n  \\n`:bing` `:google` `:yandex` `:brave` `:yahoo` `:mojeek`\n  \\nExample search: `(search :bing \\\"eggs\\\")`\"\n  [engine query]\n  (let [search-c (chan) ; Create a new channel for search results\n        timeout-c (timeout 5000)] ; Create a timeout channel for 5 seconds\n    (go\n      ;; Perform the search operation and put the resulting URLs into the search-c channel\n      (>! search-c (process-url-glob (fetch-and-extract-all-urls engine query))))\n    (go\n      ;; Wait for the first result from either the search-c channel or the timeout\n      (let [[value ch] (alts! [search-c timeout-c])]\n        (if (= ch search-c)\n          (do (close! search-c) ; Close the search channel if it was used\n              value) ; Return the search results\n          \"Search timed out\"))))) ; Return timeout message if timeout was triggered\n\n;; Example usage (you will call search and use <!! to block until the result is available)\n(let [search-result (search :bing \"eggs\")]\n  (println (<!! search-result)))",
    "filename": "c19abf4dd5332006c3b1c725823bb4b9_1.scala"
  },
  {
    "conversation_hash": "a991c68b491c00036e3cc70a632d8179",
    "code_index": 4,
    "language": "Scala",
    "libraries": [],
    "code": "(def db-spec {:dbtype \"postgresql\"\n              :host \"localhost\"\n              :dbname \"yourdatabase\"     ; Replace with your database name\n              :user \"youruser\"           ; Replace with your database user\n              :password \"yourpassword\"   ; Replace with your database password\n              :port 5432})",
    "filename": "a991c68b491c00036e3cc70a632d8179_4.scala"
  },
  {
    "conversation_hash": "b9e52c2f0c2ee55f8f9d3faf1337d345",
    "code_index": 11,
    "language": "Scala",
    "libraries": [],
    "code": "@GetMapping(\"/{operacionId}\")\n@Operation(\n        operationId = \"Obtener detalles de una operación\",\n        description = \"Operación de lectura\",\n        summary = \"Devuelve una operación por su identificador.\")\n@ApiResponse(\n        responseCode = \"200\",\n        content = @Content(mediaType = \"application/json\", schema = @Schema(implementation = Operacion.class)))\n@ApiResponse(\n        responseCode = \"404\",\n        content = @Content(mediaType = \"application/json\", schema = @Schema()),\n        description = \"No se ha encontrado ninguna operación con el identificador dado.\")\n@ApiResponse(\n        responseCode = \"500\",\n        content = @Content(mediaType = \"application/json\", schema = @Schema()),\n        description = \"Error interno del servidor.\")\npublic ResponseEntity<Operacion> getOperacion(@PathVariable Long operacionId) {\n    // El cuerpo del método se mantiene igual\n}\n\n@PostMapping\n@Operation(\n        operationId = \"Registrar una operación\",\n        description = \"Operación de escritura\",\n        summary = \"Crea una operación a partir de los datos introducidos.\",\n        requestBody = @io.swagger.v3.oas.annotations.parameters.RequestBody(\n                description = \"Datos del producto a crear.\",\n                required = true,\n                content = @Content(mediaType = \"application/json\", schema = @Schema(implementation = OperacionRequest.class))))\n@ApiResponse(\n        responseCode = \"201\",\n        content = @Content(mediaType = \"application/json\", schema = @Schema(implementation = Operacion.class)))\n@ApiResponse(\n        responseCode = \"400\",\n        content = @Content(mediaType = \"application/json\", schema = @Schema()),\n        description = \"Algún dato introducido es incorrecto.\")\n@ApiResponse(\n        responseCode = \"404\",\n        content = @Content(mediaType = \"application/json\", schema = @Schema()),\n        description = \"No se ha encontrado ninguna operación con el identificador dado.\")\n@ApiResponse(\n        responseCode = \"500\",\n        content = @Content(mediaType = \"application/json\", schema = @Schema()),\n        description = \"Error interno del servidor.\")\npublic ResponseEntity<Operacion> createOperacion(@RequestBody @Valid OperacionRequest request) {\n    // El cuerpo del método se mantiene igual\n}",
    "filename": "b9e52c2f0c2ee55f8f9d3faf1337d345_11.scala"
  },
  {
    "conversation_hash": "36f5dd06dc0c80f08be54360564d2481",
    "code_index": 6,
    "language": "Scala",
    "libraries": [],
    "code": "let dates_in_month (dates : (int * int * int) list) (month : int) : (int * int * int) list =\n  List.filter (fun date -> snd3 date = month) dates\n\nlet dates_in_months (dates : (int * int * int) list) (months : int list) : (int * int * int) list =\n  List.fold_left (fun acc m -> acc @ (dates_in_month dates m)) [] months",
    "filename": "36f5dd06dc0c80f08be54360564d2481_6.scala"
  },
  {
    "conversation_hash": "43e2fb97c2360162e5a20941c6de5e7c",
    "code_index": 7,
    "language": "Scala",
    "libraries": [],
    "code": "(ns your-ns-name\n  (:require [reagent.core :as r]\n            [\"react-apexcharts\" :refer [ApexChart]]))\n\n(def apex-chart-data\n  (r/atom {:series [{:data [{:x \"New Delhi\" :y 218}\n                            {:x \"Kolkata\"   :y 149}\n                            {:x \"Mumbai\"    :y 184}\n                            {:x \"Ahmedabad\" :y 55}\n                            {:x \"Bangaluru\" :y 84}\n                            {:x \"Pune\"      :y 31}\n                            {:x \"Chennai\"   :y 70}\n                            {:x \"Jaipur\"    :y 30}\n                            {:x \"Surat\"     :y 44}\n                            {:x \"Hyderabad\" :y 68}\n                            {:x \"Lucknow\"   :y 28}\n                            {:x \"Indore\"    :y 19}\n                            {:x \"Kanpur\"    :y 29}]}]\n           :options {:legend {:show false}\n                     :chart {:height 350\n                             :type \"treemap\"}\n                     :title {:text \"Basic Treemap\"}}}))\n\n(defn apex-chart-component []\n  [:div\n   [:div#chart\n    [:> ApexChart {:options @apex-chart-data :options\n                   :series  (@apex-chart-data :series)\n                   :type    \"treemap\"\n                   :height  350}]]\n   [:div#html-dist]])\n\n;; Render the component in your cljs app entry point or wherever is suitable.\n(defn mount-root []\n  (r/render [apex-chart-component]\n            (.getElementById js/document \"app\")))",
    "filename": "43e2fb97c2360162e5a20941c6de5e7c_7.scala"
  },
  {
    "conversation_hash": "b2c63faebecf236de1f11da9dc8e06de",
    "code_index": 3,
    "language": "Scala",
    "libraries": [],
    "code": "(defn get-time [date-string]\n  (let [date (js/Date. date-string)\n        time (.getTime date)]\n    (println \"get-time:\" date-string \"->\" date \"->\" time) ; Add this for debugging\n    time))",
    "filename": "b2c63faebecf236de1f11da9dc8e06de_3.scala"
  },
  {
    "conversation_hash": "b2c63faebecf236de1f11da9dc8e06de",
    "code_index": 8,
    "language": "Scala",
    "libraries": [],
    "code": "(defn get-series-durations [series]\n  (map (fn [person]\n         {:name (:name person)\n          :data (map (fn [activity]\n                       (let [start-time (get-time (first (:y activity)))\n                             end-time   (get-time (second (:y activity)))]\n                         {:x (:x activity)\n                          :duration (get-time-difference start-time end-time)}))\n                     (:data person))})\n       series))",
    "filename": "b2c63faebecf236de1f11da9dc8e06de_8.scala"
  },
  {
    "conversation_hash": "b2c63faebecf236de1f11da9dc8e06de",
    "code_index": 20,
    "language": "Scala",
    "libraries": [],
    "code": ";; Locate the person by name\n(def amy-harris-data (find-person-by-name @range-bar-series \"Amy Harris\"))\n\n;; Now that we have Amy Harris's data, pass it to get the total time.\n(def amy-total-time (get-person-total-time amy-harris-data))\n\n;; Print the total time\n(println \"Total time for Amy Harris:\" amy-total-time)",
    "filename": "b2c63faebecf236de1f11da9dc8e06de_20.scala"
  },
  {
    "conversation_hash": "1379ae7091cd32d30adf270dbf0c0664",
    "code_index": 20,
    "language": "Scala",
    "libraries": [],
    "code": "(defn total-revenue-per-year []\n  (reduce (fn [acc invoice]\n            (let [year (js/parseInt (subs (:date invoice) 0 4))]\n              (update acc year (fnil + 0) (:amount invoice))))\n          {}\n          invoices))",
    "filename": "1379ae7091cd32d30adf270dbf0c0664_20.scala"
  },
  {
    "conversation_hash": "1379ae7091cd32d30adf270dbf0c0664",
    "code_index": 21,
    "language": "Scala",
    "libraries": [],
    "code": "(defn count-invoices-per-year []\n  (reduce (fn [acc invoice]\n            (let [year (js/parseInt (subs (:date invoice) 0 4))]\n              (update acc year (fnil inc 0))))\n          {}\n          invoices))",
    "filename": "1379ae7091cd32d30adf270dbf0c0664_21.scala"
  },
  {
    "conversation_hash": "1379ae7091cd32d30adf270dbf0c0664",
    "code_index": 22,
    "language": "Scala",
    "libraries": [],
    "code": "(defn revenue-per-service-type [year]\n  (reduce (fn [acc invoice]\n            (when (= (js/parseInt (subs (:date invoice) 0 4)) year)\n              (update acc (:service-type invoice) (fnil + 0) (:amount invoice))))\n          {}\n          invoices))",
    "filename": "1379ae7091cd32d30adf270dbf0c0664_22.scala"
  },
  {
    "conversation_hash": "1379ae7091cd32d30adf270dbf0c0664",
    "code_index": 25,
    "language": "Scala",
    "libraries": [],
    "code": "(defn revenue-per-client [year]\n  (reduce (fn [acc invoice]\n            (when (= (js/parseInt (subs (:date invoice) 0 4)) year)\n              (update acc (:client-name invoice) (fnil + 0) (:amount invoice))))\n          {}\n          invoices))",
    "filename": "1379ae7091cd32d30adf270dbf0c0664_25.scala"
  },
  {
    "conversation_hash": "1379ae7091cd32d30adf270dbf0c0664",
    "code_index": 26,
    "language": "Scala",
    "libraries": [],
    "code": "(defn monthly-revenue-breakdown [year]\n  (reduce (fn [acc invoice]\n            (let [invoice-year (js/parseInt (subs (:date invoice) 0 4))\n                  month (subs (:date invoice) 5 7)]\n              (when (= invoice-year year)\n                (update acc month (fnil + 0) (:amount invoice)))))\n          {}\n          invoices))",
    "filename": "1379ae7091cd32d30adf270dbf0c0664_26.scala"
  },
  {
    "conversation_hash": "1379ae7091cd32d30adf270dbf0c0664",
    "code_index": 28,
    "language": "Scala",
    "libraries": [],
    "code": "(defn monthly-revenue-breakdown [year]\n  (reduce (fn [acc invoice]\n            (let [invoice-year (js/parseInt (subs (:date invoice) 0 4))\n                  month (subs (:date invoice) 5 7)]\n              (if (= invoice-year year)\n                (update acc month (fnil + 0) (:amount invoice))\n                acc))) ; Return the accumulator unchanged if the year doesn't match\n          {} ; Start with an empty map\n          invoices))",
    "filename": "1379ae7091cd32d30adf270dbf0c0664_28.scala"
  },
  {
    "conversation_hash": "1379ae7091cd32d30adf270dbf0c0664",
    "code_index": 34,
    "language": "Scala",
    "libraries": [],
    "code": "(defn total-amount-per-client []\n  (reduce (fn [acc invoice]\n            (update acc (:client-name invoice) (fnil + 0) (:amount invoice)))\n          {}\n          invoices))",
    "filename": "1379ae7091cd32d30adf270dbf0c0664_34.scala"
  },
  {
    "conversation_hash": "1379ae7091cd32d30adf270dbf0c0664",
    "code_index": 36,
    "language": "Scala",
    "libraries": [],
    "code": "(defn total-amount-per-client []\n  (reduce (fn [acc invoice]\n            (update acc (:client-name invoice) (fnil + 0) (:amount invoice)))\n          {}\n          invoices))",
    "filename": "1379ae7091cd32d30adf270dbf0c0664_36.scala"
  },
  {
    "conversation_hash": "1103f9e5b200ee43decefe22b63629b7",
    "code_index": 2,
    "language": "Scala",
    "libraries": [],
    "code": "(def chart-config\n  {:chart {:type \"bar\"\n           :height 350}\n   :plotOptions {:bar {:horizontal true\n                       :isFunnel true}}\n   :series [{:name \"Funnel Series\"\n             :data [{:x \"Sourced\"\n                     :y 138}\n                    {:x \"Assessed\"\n                     :y 99}\n                    {:x \"Technical\"\n                     :y 75}\n                    {:x \"Offered\"\n                     :y 30}]}]})",
    "filename": "1103f9e5b200ee43decefe22b63629b7_2.scala"
  },
  {
    "conversation_hash": "11b7b0ee94be23de55bcb05793047d18",
    "code_index": 2,
    "language": "Scala",
    "libraries": [],
    "code": "export enum Mode {\n  Empty = '',\n  Test = 'test',\n  Success = 'success',\n}\n\nexport interface Test {\n  id: number;\n  name: string;\n  mode: Mode;\n  desk: boolean;\n}\n\nexport interface FTest {\n  createdAt: Date;\n  id: string;\n  name: string;\n  tests: Test[];\n}\n\nconst fTests: FTest[] = [\n  //... your FTest data with nested Test objects ...\n];\n\nconst successfulFTests = fTests.filter(fTest => fTest.tests.some(test => test.mode === Mode.Success));\n\n// Do something with successfulFTests, like displaying or further processing.",
    "filename": "11b7b0ee94be23de55bcb05793047d18_2.scala"
  },
  {
    "conversation_hash": "5fb5657e06c14849fe6c631ea7a00b89",
    "code_index": 3,
    "language": "Scala",
    "libraries": [
      "mod",
      "phase"
    ],
    "code": "java.lang.RuntimeException: Mixin transformation of com.jozufozu.flywheel.core.model.ModelUtil failed\n...\nCaused by: org.spongepowered.asm.mixin.transformer.throwables.MixinTransformerError: An unexpected critical error was encountered\n...\nCaused by: org.spongepowered.asm.mixin.throwables.MixinApplyError: Mixin [#irisflw:irisflw.mixins.flw.json:MixinModelUtil from mod irisflw] from phase [DEFAULT] in config [#irisflw:irisflw.mixins.flw.json] FAILED during APPLY\n...\nCaused by: org.spongepowered.asm.mixin.injection.throwables.InvalidInjectionException: Critical injection failure: Callback group @Group(name=getBufferBuilderHead, min=1, max=2) in #irisflw:irisflw.mixins.flw.json:MixinModelUtil from mod irisflw failed injection check: expected 1 invocation(s) but 0 succeeded [ -> PostApply Phase -> #irisflw:irisflw.mixins.flw.json:MixinModelUtil from mod irisflw]",
    "filename": "5fb5657e06c14849fe6c631ea7a00b89_3.scala"
  },
  {
    "conversation_hash": "8acb614a77db1729b2c227494eb85ff8",
    "code_index": 0,
    "language": "Scala",
    "libraries": [
      "mod",
      "phase"
    ],
    "code": "Description: Unexpected error\n\njava.lang.RuntimeException: Mixin transformation of com.jozufozu.flywheel.core.model.ModelUtil failed\n\t...\nCaused by: org.spongepowered.asm.mixin.throwables.MixinApplyError: Mixin [#irisflw:irisflw.mixins.flw.json:MixinModelUtil from mod irisflw] from phase [DEFAULT] in config [#irisflw:irisflw.mixins.flw.json] FAILED during APPLY\n\t...\nCaused by: org.spongepowered.asm.mixin.injection.throwables.InvalidInjectionException: Critical injection failure: Callback group @Group(name=getBufferBuilderHead, min=1, max=2) in #irisflw:irisflw.mixins.flw.json:MixinModelUtil from mod irisflw failed injection check: expected 1 invocation(s) but 0 succeeded [ -> PostApply Phase -> #irisflw:irisflw.mixins.flw.json:MixinModelUtil from mod irisflw]",
    "filename": "8acb614a77db1729b2c227494eb85ff8_0.scala"
  },
  {
    "conversation_hash": "1569c3afb898cdbd367b004aeb718b17",
    "code_index": 2,
    "language": "Scala",
    "libraries": [],
    "code": "class MyClass(private var _myProperty: Int) {\n  // Getter\n  def myProperty: Int = _myProperty\n  \n  // Setter\n  def myProperty_=(value: Int): Unit = {\n    _myProperty = value\n    // additional logic here if needed\n  }\n}",
    "filename": "1569c3afb898cdbd367b004aeb718b17_2.scala"
  },
  {
    "conversation_hash": "7f7123ab0db469faf471db07246ced11",
    "code_index": 2,
    "language": "Scala",
    "libraries": [],
    "code": "(defmacro defaccessors [typename & fields]\n  `(do ~@(mapcat (fn [field]\n                    [(defn ~(symbol (str \"get-\" (name field))) [o#] (get o# ~field))\n                     (defn ~(symbol (str \"set-\" (name field))) [o# v#] (assoc o# ~field v#))])\n                  fields)))\n\n(defaccessors person :name :age)",
    "filename": "7f7123ab0db469faf471db07246ced11_2.scala"
  },
  {
    "conversation_hash": "6144117707623652327dd2d68bdd917d",
    "code_index": 7,
    "language": "Scala",
    "libraries": [],
    "code": "DELETE FROM \"ContactCustomData\" AS ccd\nJOIN \"StringValue\" AS sv ON ccd.\"FieldNameValueId\" = sv.\"Id\"\nWHERE ccd.\"ContactId\" = @ContactId\n  AND sv.\"Value\" IN (@FieldsNames)\nRETURNING sv.\"Value\";",
    "filename": "6144117707623652327dd2d68bdd917d_7.scala"
  },
  {
    "conversation_hash": "6144117707623652327dd2d68bdd917d",
    "code_index": 9,
    "language": "Scala",
    "libraries": [],
    "code": "DELETE FROM \"ContactCustomData\" AS ccd\nUSING \"StringValue\" AS sv\nWHERE ccd.\"FieldNameValueId\" = sv.\"Id\"\n  AND ccd.\"ContactId\" = @ContactId\n  AND sv.\"Value\" IN (@FieldsNames)\nRETURNING sv.\"Value\";",
    "filename": "6144117707623652327dd2d68bdd917d_9.scala"
  },
  {
    "conversation_hash": "3489029d47c1cf4a5e7df3e31e18f82b",
    "code_index": 5,
    "language": "Scala",
    "libraries": [],
    "code": "df.selectExpr(\"to_json(struct(*)) AS value\")\n  .write\n  .format(\"kafka\")\n  .option(\"kafka.bootstrap.servers\", \"your-kafka-broker:port\")\n  .option(\"topic\", \"your-kafka-topic\")\n  .save()",
    "filename": "3489029d47c1cf4a5e7df3e31e18f82b_5.scala"
  },
  {
    "conversation_hash": "52c9830e540be1f60bbba088a190e8cc",
    "code_index": 0,
    "language": "Scala",
    "libraries": [
      "org.apache.spark.sql.SparkSession"
    ],
    "code": "import org.apache.spark.sql.SparkSession\n\nval spark = SparkSession.builder\n  .appName(\"CSV to PostgreSQL\")\n  .getOrCreate()\n\nval df = spark.read\n  .option(\"header\", \"true\") // Use this if your CSV has a header\n  .option(\"inferSchema\", \"true\") // Enable schema inference\n  .csv(\"path/to/your/csvfile.csv\")",
    "filename": "52c9830e540be1f60bbba088a190e8cc_0.scala"
  },
  {
    "conversation_hash": "52c9830e540be1f60bbba088a190e8cc",
    "code_index": 2,
    "language": "Scala",
    "libraries": [],
    "code": "val dbConnectionUrl = \"jdbc:postgresql://<hostname>:<port>/<database>\"\nval dbProperties = new java.util.Properties\ndbProperties.setProperty(\"driver\", \"org.postgresql.Driver\")\ndbProperties.setProperty(\"user\", \"<dbuser>\")\ndbProperties.setProperty(\"password\", \"<dbpassword>\")\n// Increase this value as needed, considering the DB's max_connections setting\ndbProperties.setProperty(\"numPartitions\", \"10\") \ndbProperties.setProperty(\"batchsize\", \"10000\") // Batch insert size",
    "filename": "52c9830e540be1f60bbba088a190e8cc_2.scala"
  },
  {
    "conversation_hash": "9c0815eb5e31f003d87ce479bc98ced0",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "(deftemplate chiffre\n    (slot valeur))\n\n(deftemplate lettre\n    (slot valeur)\n    (slot representation))\n\n(defrule saisie-chiffre\n    =>\n    (printout t \"Veuillez saisir un chiffre entre 0 et 9 : \")\n    (assert (chiffre (valeur (read))))\n)\n\n(defrule conversion-lettre\n    ?chiffre <- (chiffre (valeur ?valeur))\n    =>\n    (switch ?valeur\n        (case 0 then (assert (lettre (valeur 0) (representation \"Zéro\"))))\n        (case 1 then (assert (lettre (valeur 1) (representation \"Un\"))))\n        (case 2 then (assert (lettre (valeur 2) (representation \"Deux\"))))\n        (case 3 then (assert (lettre (valeur 3) (representation \"Trois\"))))\n        (case 4 then (assert (lettre (valeur 4) (representation \"Quatre\"))))\n        (case 5 then (assert (lettre (valeur 5) (representation \"Cinq\"))))\n        (case 6 then (assert (lettre (valeur 6) (representation \"Six\"))))\n        (case 7 then (assert (lettre (valeur 7) (representation \"Sept\"))))\n        (case 8 then (assert (lettre (valeur 8) (representation \"Huit\"))))\n        (case 9 then (assert (lettre (valeur 9) (representation \"Neuf\"))))\n    )\n    (retract ?chiffre)\n)\n\n(defrule affichage-lettre\n    ?lettre <- (lettre (valeur ?valeur) (representation ?representation))\n    =>\n    (printout t \"Le chiffre \" ?valeur \" correspond à la lettre : \" ?representation crlf)\n    (retract ?lettre)\n)\n\n(reset)\n(run)",
    "filename": "9c0815eb5e31f003d87ce479bc98ced0_0.scala"
  },
  {
    "conversation_hash": "7265af956cf2fb9fc4c81dca69ee73fb",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "(defrule demander-chiffre\n  =>\n  (printout t \"Veuillez saisir un chiffre de 0 à 9 : \")\n  (bind ?chiffre (read))\n  (assert (chiffre ?chiffre))\n)\n\n(defrule convertir-en-lettre\n  ?chiffre <- (chiffre ?)\n  ?lettre <- (lettre ?)\n  =>\n  (retract ?chiffre ?lettre)\n)\n\n(defrule afficher-resultat\n  ?chiffre <- (chiffre ?)\n  =>\n  (switch ?chiffre\n    (case 0 then (assert (lettre \"zéro\")))\n    (case 1 then (assert (lettre \"un\")))\n    (case 2 then (assert (lettre \"deux\")))\n    (case 3 then (assert (lettre \"trois\")))\n    (case 4 then (assert (lettre \"quatre\")))\n    (case 5 then (assert (lettre \"cinq\")))\n    (case 6 then (assert (lettre \"six\")))\n    (case 7 then (assert (lettre \"sept\")))\n    (case 8 then (assert (lettre \"huit\")))\n    (case 9 then (assert (lettre \"neuf\")))\n  )\n  (printout t \"Le chiffre \" ?chiffre \" s'écrit en lettre : \" ?lettre crlf)\n  (retract ?chiffre)\n)",
    "filename": "7265af956cf2fb9fc4c81dca69ee73fb_0.scala"
  },
  {
    "conversation_hash": "0ccd1e20a0ff09b21e76120127b5feac",
    "code_index": 21,
    "language": "Scala",
    "libraries": [],
    "code": "<table class=\"table\">\n    <caption>Elenco delle Scuole</caption> <!-- Questo è il titolo della tabella -->\n    <thead>\n        <tr>\n            <th>Nome</th>\n            <th>Indirizzo</th>\n            <th>Numero di Studenti</th>\n            <th>Azioni</th>\n        </tr>\n    </thead>\n    <tbody>\n        @foreach (var scuola in scuole)\n        {\n            <tr>\n                <td>@scuola.Nome</td>\n                <td>@scuola.Indirizzo</td>\n                <td>@scuola.NumeroStudenti</td>\n                <td>\n                    <!-- Azioni -->\n                </td>\n            </tr>\n        }\n    </tbody>\n</table>",
    "filename": "0ccd1e20a0ff09b21e76120127b5feac_21.scala"
  },
  {
    "conversation_hash": "a03123e2e53c4d0829233867746ace1e",
    "code_index": 5,
    "language": "Scala",
    "libraries": [],
    "code": "% Определение класса города\nclass city(\n  name: string,\n  connections: list[connection]\n).\n\n% Определение класса дороги\nclass connection(\n  destination: city,\n  distance: float\n).\n\nprogram main\nopen core\n\nclauses\nrun() :-\n  % Создаем города\n  CityA = new city(\"a\", []),\n  CityB = new city(\"b\", []),\n  CityC = new city(\"c\", []),\n  CityD = new city(\"d\", []),\n  CityE = new city(\"e\", []),\n  CityF = new city(\"f\", []),\n  CityG = new city(\"g\", []),\n\n  % Создаем дороги между городами и указываем их протяженность\n  addConnection(CityA, CityB, 10.0),\n  addConnection(CityA, CityE, 1.0),\n  addConnection(CityA, CityD, 4.0),\n  addConnection(CityC, CityB, 1.0),\n  addConnection(CityC, CityE, 2.0),\n  addConnection(CityC, CityD, 1.0),\n  addConnection(CityF, CityB, 15.0),\n  addConnection(CityF, CityD, 7.0),\n  addConnection(CityF, CityG, 6.0),\n  addConnection(CityG, CityD, 5.0),\n  addConnection(CityE, CityB, 3.0),\n  addConnection(CityE, CityD, 3.0),\n\n  % Проверяем, что города и дороги созданы успешно\n  foreach(\n    City in [CityA, CityB, CityC, CityD, CityE, CityF, CityG],\n    (writeln(\"Город: \", City? name),\n     foreach(Conn in City? connections, writeln(\"  Дорога в \", Conn? destination? name, \" с протяженностью \", Conn? distance)))\n  ).\n\n% Добавление дороги между городами\naddConnection(City1: city, City2: city, Distance: float) :-\n  Connection = new connection(City2, Distance),\n  City1? connections := [Connection | City1? connections],\n  Connection2 = new connection(City1, Distance),\n  City2? connections := [Connection2 | City2? connections].",
    "filename": "a03123e2e53c4d0829233867746ace1e_5.scala"
  },
  {
    "conversation_hash": "d5bdbc06b95eb36363a7a595efcda5a0",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "implement main\nopen core\nopen console\n\ndomains\n    score = integer.\n    qualification = string.\n\nclass predicates\n    classify : (score Z) -> qualification Q.\n    main : ().\n\nclauses\n    classify(Z) = \"M\" :- Z >= 80, Z <= 100.\n    classify(Z) = \"S\" :- Z >= 60, Z < 80.\n    classify(Z) = \"B\" :- Z >= 40, Z < 60.\n    classify(Z) = \"N\" :- Z >= 0, Z < 40.\n\n    main() :-\n        write(\"Enter student's score (Z): \"),\n        readint(Z),\n        (\n            Z >= 0, Z <= 100 ->\n            Qualification = classify(Z),\n            printf(\"The student's qualification is %s\\n\", Qualification)\n        ; \n            write(\"Invalid score.\\n\")\n        ).\n\nend implement main\n\ngoal\n    main::main.",
    "filename": "d5bdbc06b95eb36363a7a595efcda5a0_1.scala"
  },
  {
    "conversation_hash": "48a01a65aec79e89fc56ba7d2904413b",
    "code_index": 5,
    "language": "Scala",
    "libraries": [],
    "code": "(defn wrap-error-handling [handler]\n  (fn [request]\n    (try\n      (handler request)\n      (catch Exception e\n        (do\n          (println \"Unexpected error:\" (.getMessage e))\n          (json-response \"error\" nil {:message \"Internal server error\"}))))))",
    "filename": "48a01a65aec79e89fc56ba7d2904413b_5.scala"
  },
  {
    "conversation_hash": "88bf8239b652fd28e509ee955b64cdf0",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "(defrule rule1\n    (stock-level ?level&:(< ?level 10))\n    =>\n    (assert (reorder-command))\n)\n\n(defrule rule2\n    (predicted-demand ?demand)\n    (current-stock ?stock)\n    (test (> ?demand ?stock))\n    =>\n    (assert (increase-order-quantity))\n)\n\n(defrule rule3\n    (supplier-offer X)\n    (total-order-quantity ?quantity&:(> ?quantity 100))\n    =>\n    (assert (place-order 120))\n)\n\n(defrule rule4\n    (estimated-delivery-time ?time&:(> ?time 5))\n    =>\n    (assert (search-for-alternate-supplier))\n)\n\n(defrule rule5\n    (stock-level ?level&:(> ?level 50))\n    (decreasing-demand)\n    =>\n    (assert (reduce-order-quantity))\n)\n\n(defrule rule6\n    (storage-cost ?cost&:(> ?cost threshold-value))\n    =>\n    (assert (opt-for-smaller-more-frequent-orders))\n)\n\n(defrule rule7\n    (supplier-offer Y)\n    (total-order-quantity ?quantity)\n    (test (> ?quantity 50))\n    =>\n    (assert (place-order 60))\n)\n\n(defrule rule8\n    (stockout-cost ?cost&:(> ?cost 1000))\n    =>\n    (assert (increase-safety-stock-level))\n)\n\n(defrule rule9\n    (stock-level ?level&:(> ?level average-stock))\n    =>\n    (assert (reduce-order-quantity))\n)\n\n(defrule rule10\n    (supplier-offer Z)\n    (favorable-payment-terms)\n    =>\n    (assert (prioritize-supplier-Z))\n)",
    "filename": "88bf8239b652fd28e509ee955b64cdf0_0.scala"
  },
  {
    "conversation_hash": "5a9481e1ec99a2d65e01e6cdd24e9308",
    "code_index": 9,
    "language": "Scala",
    "libraries": [],
    "code": "(require '[goog.dom :as gdom])\n\n;; Get element by ID\n(def my-element (gdom/getElement \"my-element-id\"))\n\n;; Query the DOM using a selector\n(def elems (gdom/querySelectorAll \".my-class\"))",
    "filename": "5a9481e1ec99a2d65e01e6cdd24e9308_9.scala"
  },
  {
    "conversation_hash": "ee42a96ba35d749c685d14bf54771f77",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "#ifdef MY_MACRO\n    // Code to be compiled if MY_MACRO is defined\n#else\n    // Code to be compiled if MY_MACRO is not defined\n#endif",
    "filename": "ee42a96ba35d749c685d14bf54771f77_0.scala"
  },
  {
    "conversation_hash": "e51a2e8ff98c8fdb6cef537bd325a948",
    "code_index": 5,
    "language": "Scala",
    "libraries": [],
    "code": "<androidx.coordinatorlayout.widget.CoordinatorLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\">\n    \n    <!-- Otros elementos de la interfaz pueden ir aquí -->\n\n    <com.google.android.material.floatingactionbutton.FloatingActionButton\n        android:id=\"@+id/floatingActionButton\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:clickable=\"true\"\n        android:focusable=\"true\" <!-- Se recomienda para la accesibilidad -->\n        android:src=\"@android:drawable/ic_input_add\"\n        app:layout_anchorGravity=\"bottom|end|right\" <!-- Anclado en la esquina inferior derecha -->\n        app:layout_behavior=\"@string/hide_bottom_view_on_scroll_behavior\"  <!-- Opcional: Comportamiento de esconder al hacer scroll -->\n        android:contentDescription=\"@string/fab_description\" <!-- Opcional: Descripción de accesibilidad -->\n        android:tint=\"@color/your_color\" /> <!-- Opcional: Cambiar el color del ícono -->\n\n</androidx.coordinatorlayout.widget.CoordinatorLayout>",
    "filename": "e51a2e8ff98c8fdb6cef537bd325a948_5.scala"
  },
  {
    "conversation_hash": "4f73974edee6f6ae1feafdfcbf929319",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "(def word-collection2 #{\"Chic\"        \"Chichi\"     \"Chick\"\n                        \"Chin\"        \"Chink\"      \"Chinking\"\n                        \"Chinning\"    \"Chuck\"      \"Chucking\"\n                        \"Chug\"        \"Chugging\"   \"Chunk\"\n                        \"Chunking\"    \"Cinch\"      \"Cinching\"\n                        \"Hick\"        \"High\"       \"Hiking\"\n                        \"Hinging\"     \"Hugging\"    \"Hunch\"\n                        \"Hunching\"    \"Hung\"       \"Hunk\"\n                        \"Inch\"        \"Inching\"    \"Nigh\"\n                        \"Unhinging\"})",
    "filename": "4f73974edee6f6ae1feafdfcbf929319_0.scala"
  },
  {
    "conversation_hash": "c4301d2ccf269213aab8212a99701e05",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "input {\n  file {\n    path => \"/path/to/your/charon-logs.log\"\n    start_position => \"beginning\"\n  }\n}",
    "filename": "c4301d2ccf269213aab8212a99701e05_1.scala"
  },
  {
    "conversation_hash": "c4301d2ccf269213aab8212a99701e05",
    "code_index": 3,
    "language": "Scala",
    "libraries": [],
    "code": "mutate {\n  rename => { \"subsystem_abbr\" => \"subsystem\" }\n  replace => { \"subsystem\" => \"%{subsystem}\" }\n  gsub => [ ... ]\n  ...\n}",
    "filename": "c4301d2ccf269213aab8212a99701e05_3.scala"
  },
  {
    "conversation_hash": "c4301d2ccf269213aab8212a99701e05",
    "code_index": 6,
    "language": "Scala",
    "libraries": [
      "subsystem_abbr",
      "the"
    ],
    "code": "mutate {\n  # We keep the rename from subsystem_abbr to subsystem\n  rename => { \"subsystem_abbr\" => \"subsystem\" }\n  \n  # Notice that we need separate arrays for each gsub action, not a single array\n  gsub => [\n    [\"subsystem\", \"dmn\", \"Main daemon setup/cleanup/signal handling\"],\n    [\"subsystem\", \"lib\", \"libstrongswan library messages\"],\n    [\"subsystem\", \"app\", \"applications other than daemons\"],\n    # ... Add the rest of the replacements here ...\n    [\"subsystem\", \"tnc\", \"Trusted Network Connect\"]\n  ]\n  \n  # Remove the unnecessary replace filter from the original configuration\n}",
    "filename": "c4301d2ccf269213aab8212a99701e05_6.scala"
  },
  {
    "conversation_hash": "c4301d2ccf269213aab8212a99701e05",
    "code_index": 9,
    "language": "Scala",
    "libraries": [],
    "code": "filter {\n  grok {\n    match => { \"message\" => \"%{SYSLOGTIMESTAMP:timestamp} %{INT:thread}\\[%{WORD:subsystem}\\] %{GREEDYDATA:description}\" }\n  }\n\n  if [subsystem] == \"dmn\" {\n    mutate {\n      replace => { \"subsystem\" => \"Main daemon setup/cleanup/signal handling\" }\n    }\n  } else if [subsystem] == \"lib\" {\n    mutate {\n      replace => { \"subsystem\" => \"libstrongswan library messages\" }\n    }\n  }\n  # ... add similar conditional mutate blocks for each subsystem ...\n\n  date {\n    match => [\"timestamp\", \"MMM dd HH:mm:ss\", \"MMM  d HH:mm:ss\"]\n    locale => \"en\"\n    target => \"@timestamp\"\n  }\n}",
    "filename": "c4301d2ccf269213aab8212a99701e05_9.scala"
  },
  {
    "conversation_hash": "fb459109aafc2e333bf8aff97f4e6957",
    "code_index": 2,
    "language": "Scala",
    "libraries": [],
    "code": "#ifdef __USE_GNU\n// accept4 is available\n#else\n// accept4 is not available\n#endif",
    "filename": "fb459109aafc2e333bf8aff97f4e6957_2.scala"
  },
  {
    "conversation_hash": "d93a0d2c04e9b50a009cfac779bbd49f",
    "code_index": 19,
    "language": "Scala",
    "libraries": [],
    "code": "# For Windows (use appropriate paths for your machine)\nset JAVA_HOME=C:\\path\\to\\your\\jdk\nset ANDROID_HOME=%LOCALAPPDATA%\\Android\\Sdk\nset ANDROID_SDK_ROOT=%ANDROID_HOME%\nset ANDROID_NDK_ROOT=%ANDROID_HOME%\\ndk-bundle\nset PATH=%PATH%;%ANDROID_HOME%\\platform-tools;%ANDROID_HOME%\\tools;%ANDROID_HOME%\\tools\\bin",
    "filename": "d93a0d2c04e9b50a009cfac779bbd49f_19.scala"
  },
  {
    "conversation_hash": "712c9d287e529c9415b96192d62d3e5a",
    "code_index": 3,
    "language": "Scala",
    "libraries": [],
    "code": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-progress-bar',\n  templateUrl: './progress-bar.component.html',\n  styleUrls: ['./progress-bar.component.css']\n})\nexport class ProgressBarComponent {\n\n  remainingInQueue: number = 10; // Change this value to the actual number of remaining items in the queue\n  totalItemsInQueue: number = 100; // Change this value to the total number of items in the queue\n\n  get queueProgress(): number {\n    return ((this.totalItemsInQueue - this.remainingInQueue) / this.totalItemsInQueue) * 100;\n  }\n\n}",
    "filename": "712c9d287e529c9415b96192d62d3e5a_3.scala"
  },
  {
    "conversation_hash": "52bd253c22ec2cb32f79ba916880d063",
    "code_index": 3,
    "language": "Scala",
    "libraries": [],
    "code": "/**\n * @typedef {Object} MyData\n * @property {number} id\n * @property {string} name\n * @property {number} amount\n */",
    "filename": "52bd253c22ec2cb32f79ba916880d063_3.scala"
  },
  {
    "conversation_hash": "2fec6cf8e5ee93de2731af19f46ddefb",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "val btnEliminar: Button = findViewById(R.id.btnEliminar)\nval drawable = ContextCompat.getDrawable(this, R.drawable.ic_eliminar)\nval bitmapDrawable = drawable as BitmapDrawable\nval bitmap = bitmapDrawable.bitmap\nval resizedDrawable = BitmapDrawable(resources, Bitmap.createScaledBitmap(bitmap, nuevoAncho, nuevoAlto, true))\n\nbtnEliminar.setCompoundDrawablesWithIntrinsicBounds(resizedDrawable, null, null, null)",
    "filename": "2fec6cf8e5ee93de2731af19f46ddefb_0.scala"
  },
  {
    "conversation_hash": "cdda7132dfdc56644ebef017e943e87e",
    "code_index": 17,
    "language": "Scala",
    "libraries": [],
    "code": "tree = {\n    \"A\": {\n        \"children\": {\n            \"B\": {},\n            \"C\": {\n                \"children\": {\n                    \"D\": {},\n                    \"E\": {}\n                }\n            }\n        }\n    }\n}",
    "filename": "cdda7132dfdc56644ebef017e943e87e_17.scala"
  },
  {
    "conversation_hash": "05e4b7c9a8a7595e65adacb7676693bd",
    "code_index": 18,
    "language": "Scala",
    "libraries": [
      "fetching"
    ],
    "code": "<property>\n   <name>hive.fetch.task.conversion</name>\n   <value>more</value>\n   <description>\n      Some queries can be answered by just using metadata or by reading raw files. \n      Enable conversion of simple SELECTs, TABLESAMPLE and LIMIT to be served from fetching task.\n   </description>\n</property>",
    "filename": "05e4b7c9a8a7595e65adacb7676693bd_18.scala"
  },
  {
    "conversation_hash": "34c3ac259e92c42fab09538054e7c3d1",
    "code_index": 2,
    "language": "Scala",
    "libraries": [],
    "code": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-parent',\n  templateUrl: './parent.component.html',\n  styleUrls: ['./parent.component.css']\n})\nexport class ParentComponent {\n  apiResponse: any;\n  toastShow: boolean = false;\n\n  // Method to handle the emitted API response\n  onApiResponse(response: any) {\n    this.apiResponse = response;\n    this.toastShow = true;\n\n    // Hide the toast after 3 seconds\n    setTimeout(() => {\n      this.toastShow = false;\n    }, 3000);\n  }\n}",
    "filename": "34c3ac259e92c42fab09538054e7c3d1_2.scala"
  },
  {
    "conversation_hash": "34c3ac259e92c42fab09538054e7c3d1",
    "code_index": 3,
    "language": "Scala",
    "libraries": [],
    "code": "import { Component, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'app-child',\n  templateUrl: './child.component.html',\n  styleUrls: ['./child.component.css']\n})\nexport class ChildComponent {\n  @Output() showToast: EventEmitter<any> = new EventEmitter();\n\n  closeModalAndShowToast() {\n    // Close the modal\n    // Code to close the modal here\n\n    // Emit an event to show the toast in the parent component\n    this.showToast.emit();\n  }\n}",
    "filename": "34c3ac259e92c42fab09538054e7c3d1_3.scala"
  },
  {
    "conversation_hash": "902b687d0676dbe576a567ff735cb63c",
    "code_index": 11,
    "language": "Scala",
    "libraries": [],
    "code": "<dependency>\n    <groupId>com.fasterxml.jackson.dataformat</groupId>\n    <artifactId>jackson-dataformat-xml</artifactId>\n    <version>2.13.1</version> <!-- Usa la versión más reciente -->\n</dependency>",
    "filename": "902b687d0676dbe576a567ff735cb63c_11.scala"
  },
  {
    "conversation_hash": "902b687d0676dbe576a567ff735cb63c",
    "code_index": 17,
    "language": "Scala",
    "libraries": [
      "com.fasterxml.jackson.annotation.JsonFormat"
    ],
    "code": "import com.fasterxml.jackson.annotation.JsonFormat;\n\npublic class Productos {\n    \n    // otros atributos de la clase\n\n    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = \"yyyy-MM-dd\")\n    private Date fch_caducidad;\n\n    // Resto del código de la clase: constructor, getters, setters, etc.\n}",
    "filename": "902b687d0676dbe576a567ff735cb63c_17.scala"
  },
  {
    "conversation_hash": "c7695648cdf22ee341e8c2dff2a88d29",
    "code_index": 2,
    "language": "Scala",
    "libraries": [
      "io.swagger.annotations.",
      "org.springframework.web.bind.annotation."
    ],
    "code": "import org.springframework.web.bind.annotation.*;\nimport io.swagger.annotations.*;\n\n@RestController\n@RequestMapping(\"/tasks\")\n@Api(value = \"Task Management System\", description = \"Operations pertaining to tasks in Task Management System\")\npublic class TaskController {\n    @GetMapping(\"/{id}\")\n    @ApiOperation(value = \"Get a task by ID\", response = Task.class)\n    @ApiResponses(value = {\n        @ApiResponse(code = 200, message = \"Successfully retrieved task\"),\n        @ApiResponse(code = 404, message = \"Task not found\")\n    })\n    public Task getTaskById(@PathVariable Long id) {\n        // Implementation goes here\n    }\n\n    // Other endpoint methods with appropriate annotations\n}",
    "filename": "c7695648cdf22ee341e8c2dff2a88d29_2.scala"
  },
  {
    "conversation_hash": "f1f560754c92702273cd42e71b303584",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "/* CSS to initially hide the tooltip content */\n.tooltip .tooltiptext {\n  visibility: hidden;\n}\n\n/* CSS class to toggle when the key is pressed */\n.visible .tooltiptext {\n  visibility: visible;\n}",
    "filename": "f1f560754c92702273cd42e71b303584_1.scala"
  },
  {
    "conversation_hash": "24a58dd74fdcabaeb4d1322b12602190",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "// 假设你已经通过JDBC获取了一个支持事务的数据库连接\nval connection: java.sql.Connection = ...\nconnection.setAutoCommit(false)\n\ntry {\n    // 执行一些数据库操作\n    val preparedStatement = connection.prepareStatement(\"SOME SQL\")\n    // ...\n\n    // 提交事务\n    connection.commit()\n} catch {\n    case e: Exception =>\n        // 发生异常，回滚事务\n        connection.rollback()\n        throw e\n} finally {\n    // 清理资源\n    connection.close()\n}",
    "filename": "24a58dd74fdcabaeb4d1322b12602190_0.scala"
  },
  {
    "conversation_hash": "862873c33770e2367dc3862f63bc753d",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "import \"pe\"\n\nrule PEFileExample {\n    condition:\n        pe.number_of_sections > 4\n}",
    "filename": "862873c33770e2367dc3862f63bc753d_0.scala"
  },
  {
    "conversation_hash": "c7d3047a97d17b54fa26b24432d4a698",
    "code_index": 4,
    "language": "Scala",
    "libraries": [],
    "code": "<nav className={`flex flex-col items-center justify-center gap-y-4 p-10 bg-matte border border-accent rounded-3xl w-80 fixed inset-0 mx-auto my-auto ${isNavVisible ? 'flex' : 'hidden'}`}>\n    {navData.map((link, i) => (\n        // ... your Link component\n    ))}\n</nav>",
    "filename": "c7d3047a97d17b54fa26b24432d4a698_4.scala"
  },
  {
    "conversation_hash": "c7d3047a97d17b54fa26b24432d4a698",
    "code_index": 6,
    "language": "Scala",
    "libraries": [],
    "code": "<nav className={`flex flex-col items-center justify-center gap-y-4 p-10 bg-matte border border-accent rounded-3xl w-80 fixed top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 ${isNavVisible ? '' : 'hidden'}`}>\n    {navData.map((link, i) => (\n        // ... your Link component\n    ))}\n</nav>",
    "filename": "c7d3047a97d17b54fa26b24432d4a698_6.scala"
  },
  {
    "conversation_hash": "d04fb14f86046fd2b85e4211ffa4f009",
    "code_index": 13,
    "language": "Scala",
    "libraries": [],
    "code": "#animationContainer img {\n    display: none; /* Wszystkie obrazy ukryte, z wyjątkiem aktywnego */\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%; /* Dostosuj, aby pasowało do pożądanego rozmiaru */\n    height: auto;\n}\n\n/* Domyślnie aktywny obrazek */\n#animationContainer img.active {\n    display: block;\n}",
    "filename": "d04fb14f86046fd2b85e4211ffa4f009_13.scala"
  },
  {
    "conversation_hash": "2375096a4b0981ad02c93835ddf8e6a5",
    "code_index": 9,
    "language": "Scala",
    "libraries": [],
    "code": "@Database(\n    entities = {User.class},\n    version = 2,\n    autoMigrations = {\n        @AutoMigration(from = 1, to = 2)\n    },\n    exportSchema = true\n)\npublic abstract class AppDatabase extends RoomDatabase {\n    // ...\n}",
    "filename": "2375096a4b0981ad02c93835ddf8e6a5_9.scala"
  },
  {
    "conversation_hash": "c9bccd832e454e5b4ffadda31e06fbc3",
    "code_index": 12,
    "language": "Scala",
    "libraries": [],
    "code": "(defn fetch-dictionary-json [url callback]\n  (let [xhr (js/XMLHttpRequest.)]\n    (.open xhr \"GET\" url true)\n    (set! (.-onload xhr) (fn []\n                            (when (= (.-status xhr) 200)\n                              (let [response (.parse js/JSON (.-responseText xhr))]\n                                (callback response)))))\n    (.send xhr)))",
    "filename": "c9bccd832e454e5b4ffadda31e06fbc3_12.scala"
  },
  {
    "conversation_hash": "49f75ca3db0c429759ca172d0ceebcfc",
    "code_index": 6,
    "language": "Scala",
    "libraries": [],
    "code": "service cloud.firestore {\n  match /databases/{database}/documents {\n    match /users/{userId} {\n      allow read, update, delete: if request.auth.uid == userId;\n      allow create: if request.auth.uid != null;\n    }\n  }\n}",
    "filename": "49f75ca3db0c429759ca172d0ceebcfc_6.scala"
  },
  {
    "conversation_hash": "b1d8524d240faa1471d21a598f2f1d66",
    "code_index": 4,
    "language": "Scala",
    "libraries": [],
    "code": "<dependency>\n    <groupId>com.fasterxml.jackson.core</groupId>\n    <artifactId>jackson-databind</artifactId>\n    <version>2.13.0</version>\n</dependency>",
    "filename": "b1d8524d240faa1471d21a598f2f1d66_4.scala"
  },
  {
    "conversation_hash": "541bf7a916873b5ceecd732b09e9315f",
    "code_index": 7,
    "language": "Scala",
    "libraries": [],
    "code": "service cloud.firestore {\n  match /databases/{database}/documents {\n    match /{document=**} {\n      allow read, write: if request.auth != null;\n    }\n  }\n}",
    "filename": "541bf7a916873b5ceecd732b09e9315f_7.scala"
  },
  {
    "conversation_hash": "4d3537b78dca18e395f1ec47527ca236",
    "code_index": 2,
    "language": "Scala",
    "libraries": [],
    "code": "class Animal {\n    move() {}\n}\n\nclass Dog extends Animal {\n    bark() {}\n}",
    "filename": "4d3537b78dca18e395f1ec47527ca236_2.scala"
  },
  {
    "conversation_hash": "1573b84cf2c94ebb09198c1fd6eac59e",
    "code_index": 8,
    "language": "Scala",
    "libraries": [],
    "code": "// vite.config.js\nexport default defineConfig({\n  base: '/path-to-your-dist-folder/',\n  // ...other configs\n})",
    "filename": "1573b84cf2c94ebb09198c1fd6eac59e_8.scala"
  },
  {
    "conversation_hash": "e9648d8abeafdf456173d15746c336a1",
    "code_index": 7,
    "language": "Scala",
    "libraries": [],
    "code": "@Entity(tableName = \"device\")\ndata class Device(\n    @ColumnInfo(name = \"type\", defaultValue = \"Android\") val type: String?,\n    // ... другие поля\n)",
    "filename": "e9648d8abeafdf456173d15746c336a1_7.scala"
  },
  {
    "conversation_hash": "758d3aa3409bf7f5c2677b64f4750736",
    "code_index": 3,
    "language": "Scala",
    "libraries": [],
    "code": "def start(update: Update, context: CallbackContext):\n    keyboard = [[InlineKeyboardButton(\"Send 123\", callback_data='send_123')]]\n    reply_markup = InlineKeyboardMarkup(keyboard)\n    update.message.reply_text('Please choose:', reply_markup=reply_markup)\n\nstart_handler = CommandHandler('start', start)\ndispatcher.add_handler(start_handler)",
    "filename": "758d3aa3409bf7f5c2677b64f4750736_3.scala"
  },
  {
    "conversation_hash": "8ea2d44814881f46b170f45ade012899",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "input {\n  beats {\n    port => 5044\n  }\n}\n\nfilter {\n  grok {\n    match => { \"message\" => '%{SYSLOG5424SD:apache_timestamp} \\[%{LOGLEVEL:loglevel}\\] \\[client %{IP:client_ip}:%{POSINT:client_port}\\] (?:%{GREEDYDATA:message})? (?:\\[%{DATA:ssl_protocol}/%{DATA:ssl_cipher}\\] )?' }\n  }\n  \n  date {\n    match => [ \"apache_timestamp\", \"EEE MMM dd HH:mm:ss yyyy\" ]\n  }\n\n  mutate {\n    replace => { \"message\" => \"%{message}\" }\n    remove_field => \"apache_timestamp\"\n  }\n\n  if \"_grokparsefailure\" in [tags] {\n    drop { }\n  }\n}\n\noutput {\n  elasticsearch {\n    hosts => [\"localhost:9200\"]\n    index => \"apache-errors-%{+YYYY.MM.dd}\"\n    template_overwrite => true\n  }\n}",
    "filename": "8ea2d44814881f46b170f45ade012899_1.scala"
  },
  {
    "conversation_hash": "f220593f3cef497ae6ba58885010bba8",
    "code_index": 5,
    "language": "Scala",
    "libraries": [],
    "code": "export default defineComponent({\n  props: {\n    value: {\n      type: [String, Number, Boolean, Object, Array, Function] as PropType<any>\n      // Не указывается default, так как prop может быть любого типа\n    }\n  },\n  // ...\n});",
    "filename": "f220593f3cef497ae6ba58885010bba8_5.scala"
  },
  {
    "conversation_hash": "82ef82976641a10849beee7f0f66da7b",
    "code_index": 5,
    "language": "Scala",
    "libraries": [],
    "code": "# main.kv\n\n<BallPlayer>:\n    canvas.before:\n        Color:\n            rgba: 0.5, 0.5, 0.5, 1  # خاکستری\n        Rectangle:\n            pos: self.pos\n            size: self.size",
    "filename": "82ef82976641a10849beee7f0f66da7b_5.scala"
  },
  {
    "conversation_hash": "7ef8bf7bf45f3cb99955e11626435bc1",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "(查询对象\n  (配对订单量\n    (时间 \"昨天\")\n    (核心主体 \"货运小车\")\n    (地点 \"全国\")\n  )\n)",
    "filename": "7ef8bf7bf45f3cb99955e11626435bc1_0.scala"
  },
  {
    "conversation_hash": "4589d8457513e8288468f2a5e2a8ef10",
    "code_index": 0,
    "language": "Scala",
    "libraries": [
      "org.apache.spark.sql.SparkSession",
      "spark.implicits._"
    ],
    "code": "import org.apache.spark.sql.SparkSession\n\nval spark = SparkSession.builder()\n  .appName(\"Spark Example - Bài Tập Cuối Môn\")\n  .config(\"spark.master\", \"local\")\n  .getOrCreate()\n\nimport spark.implicits._",
    "filename": "4589d8457513e8288468f2a5e2a8ef10_0.scala"
  },
  {
    "conversation_hash": "4589d8457513e8288468f2a5e2a8ef10",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "val filePath = \"path_to_your_csv/products_reviews.csv\"\n\nval reviewsDF = spark.read\n  .option(\"header\", \"true\") // use first line of all files as header\n  .option(\"inferSchema\", \"true\") // automatically infer data types\n  .csv(filePath)",
    "filename": "4589d8457513e8288468f2a5e2a8ef10_1.scala"
  },
  {
    "conversation_hash": "4589d8457513e8288468f2a5e2a8ef10",
    "code_index": 3,
    "language": "Scala",
    "libraries": [],
    "code": "val outputFilePath = \"path_to_your_output/average_product_ratings.csv\"\n\naverageRatingsDF.write\n  .option(\"header\", \"true\")\n  .csv(outputFilePath)",
    "filename": "4589d8457513e8288468f2a5e2a8ef10_3.scala"
  },
  {
    "conversation_hash": "4589d8457513e8288468f2a5e2a8ef10",
    "code_index": 5,
    "language": "Scala",
    "libraries": [
      "org.apache.spark.sql.SparkSession",
      "spark.implicits._"
    ],
    "code": "import org.apache.spark.sql.SparkSession\n\n// Khởi tạo Spark Session để sử dụng Spark\nval spark = SparkSession.builder()\n  .appName(\"Spark Example - Bài Tập Cuối Môn\")\n  .config(\"spark.master\", \"local\") // Sử dụng local để chạy trên máy cục bộ\n  .getOrCreate()\n\n// Khai báo việc sử dụng implicits, hữu ích cho các hàm chuyển đổi Dataframe\nimport spark.implicits._",
    "filename": "4589d8457513e8288468f2a5e2a8ef10_5.scala"
  },
  {
    "conversation_hash": "4589d8457513e8288468f2a5e2a8ef10",
    "code_index": 10,
    "language": "Scala",
    "libraries": [
      "scalaj.http.Http"
    ],
    "code": "import scalaj.http.Http\n\nval response = Http(\"https://api.example.com/get-data\")\n  .param(\"parameter\", \"value\")\n  .asString",
    "filename": "4589d8457513e8288468f2a5e2a8ef10_10.scala"
  },
  {
    "conversation_hash": "4589d8457513e8288468f2a5e2a8ef10",
    "code_index": 11,
    "language": "Scala",
    "libraries": [],
    "code": "libraryDependencies ++= Seq(\n      \"com.fasterxml.jackson.core\" % \"jackson-core\" % \"2.12.3\",\n      \"com.fasterxml.jackson.core\" % \"jackson-databind\" % \"2.12.3\",\n      \"com.fasterxml.jackson.core\" % \"jackson-annotations\" % \"2.12.3\"\n    )",
    "filename": "4589d8457513e8288468f2a5e2a8ef10_11.scala"
  },
  {
    "conversation_hash": "651984b178cbc9674f72fb8f388162ee",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "(defun c:ArrowInsert ()\n  (setq oldsnap (getvar \"osmode\"))\n  (setvar \"osmode\" 0) ; Temporarily turn off snaps\n  (setq ss (ssget \"_P\" '((0 . \"POINT\"))))\n  (if ss\n    (progn\n      (setq len (sslength ss))\n      (setq i 0)\n      (repeat len\n        (setq pt (ssname ss i))\n        (setq inspt (cdr (assoc 10 (entget pt))))\n        (command \"INSERT\" \"ArrowBlockName\" inspt 1 1 0) ; Adjust \"ArrowBlockName\" and scale angle values\n        (setq i (1+ i))\n      )\n    )\n  )\n  (command \"ERASE\" ss \"\" ) ; Erase the points after insertion\n  (setvar \"osmode\" oldsnap) ; Restore old snapping settings\n  (princ)\n)",
    "filename": "651984b178cbc9674f72fb8f388162ee_0.scala"
  },
  {
    "conversation_hash": "55e748b6186cd993404e33bfcead6d7d",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "// Scala equivalent\nobject HelloWorld {\n  def sayHello(name: String): Unit = {\n    println(s\"Hello, $name!\")\n  }\n\n  def main(args: Array[String]): Unit = {\n    sayHello(\"World\")\n  }\n}",
    "filename": "55e748b6186cd993404e33bfcead6d7d_1.scala"
  },
  {
    "conversation_hash": "55e748b6186cd993404e33bfcead6d7d",
    "code_index": 11,
    "language": "Scala",
    "libraries": [],
    "code": "<dependency>\n    <groupId>org.seleniumhq.selenium</groupId>\n    <artifactId>selenium-java</artifactId>\n    <version>Phiên bản tương thích với Java 8</version>\n</dependency>",
    "filename": "55e748b6186cd993404e33bfcead6d7d_11.scala"
  },
  {
    "conversation_hash": "67200576435ded6570cd4a459a6654f6",
    "code_index": 13,
    "language": "Scala",
    "libraries": [],
    "code": "package routes\n\nimport (\n\t\"github.com/gin-gonic/gin\"\n\t\"real-estate-api/controllers\" // Assurez-vous que ce chemin est correct.\n)",
    "filename": "67200576435ded6570cd4a459a6654f6_13.scala"
  },
  {
    "conversation_hash": "8ebe34c6f9a978bee08880082537512c",
    "code_index": 3,
    "language": "Scala",
    "libraries": [],
    "code": "/* Más estilos para styles.css */\n\n.image-container img.active {\n  transform: scale(2);\n  z-index: 10;\n  position: relative;\n  box-shadow: 5px 5px 15px #666;\n}",
    "filename": "8ebe34c6f9a978bee08880082537512c_3.scala"
  },
  {
    "conversation_hash": "75bbe09e867ea16da7f6393075e39060",
    "code_index": 6,
    "language": "Scala",
    "libraries": [
      "NextAuth",
      "Providers"
    ],
    "code": "// pages/api/auth/[...nextauth].ts\n\nimport NextAuth from \"next-auth\";\nimport Providers from \"next-auth/providers\";\n\nexport default NextAuth({\n  providers: [\n    Providers.Email({\n      server: process.env.EMAIL_SERVER,\n      from: process.env.EMAIL_FROM,\n    }),\n    // Vous pouvez aussi ajouter d'autres fournisseurs d'authentification ici\n  ],\n  database: process.env.DATABASE_URL,\n  // Configurez d'autres options ici\n});",
    "filename": "75bbe09e867ea16da7f6393075e39060_6.scala"
  },
  {
    "conversation_hash": "331cca20ac74a981e23a2c7498156d94",
    "code_index": 5,
    "language": "Scala",
    "libraries": [],
    "code": "import { createClient } from '@supabase/supabase-js'\n\nconst supabaseUrl = 'YOUR_SUPABASE_URL'\nconst supabaseAnonKey = 'YOUR_SUPABASE_ANON_KEY'\n\nexport const supabase = createClient(supabaseUrl, supabaseAnonKey)",
    "filename": "331cca20ac74a981e23a2c7498156d94_5.scala"
  },
  {
    "conversation_hash": "331cca20ac74a981e23a2c7498156d94",
    "code_index": 44,
    "language": "Scala",
    "libraries": [],
    "code": "// ...\n\n{greves.map(greve => (\n  <MapboxGL.PointAnnotation\n    key={greve.id}\n    id={greve.id.toString()}\n    coordinate={[greve.localisation[0], greve.localisation[1]]}\n  >\n    {/* Vous pouvez personnaliser le contenu du PointAnnotation ici */}\n  </MapboxGL.PointAnnotation>\n))}\n\n// ...",
    "filename": "331cca20ac74a981e23a2c7498156d94_44.scala"
  },
  {
    "conversation_hash": "9e716881d1a0f350508ddf9b7cafa1d8",
    "code_index": 9,
    "language": "Scala",
    "libraries": [],
    "code": "export class VehicleFormComponent implements OnInit {\n  // ...\n  filteredModels: any[] = []; // To store filtered models\n\n  ngOnInit(): void {\n    this.getDrivers();\n    this.getVehicules();\n  }\n\n  onConstructeurChange(constructeurName: string) {\n    // Assuming 'vehicules' is an array and each 'vehicule' has a property 'constructeur' and a property 'modele'\n    // If 'modele' is not directly available, you might need to access it differently depending on your data structure.\n    this.filteredModels = this.vehicules.filter(v => v.constructeur === constructeurName).map(v => v.modele);\n  \n    // Reset the modele form control\n    this.vehiculeService.vehicleForm.get('Modele').reset();\n  }\n  \n  // ... rest of your component code\n}",
    "filename": "9e716881d1a0f350508ddf9b7cafa1d8_9.scala"
  },
  {
    "conversation_hash": "9e716881d1a0f350508ddf9b7cafa1d8",
    "code_index": 12,
    "language": "Scala",
    "libraries": [],
    "code": "export class VehicleFormComponent implements OnInit {\n  // ... other properties\n  allVehicles: any;\n  filteredVehicles: any;\n\n  ngOnInit(): void {\n    // Fetch all vehicles; this should set this.allVehicles\n    this.fetchVehicules();\n  }\n\n  fetchVehicules(): void {\n    this.vehiculeService.getVehicles().subscribe((data: any) => {\n      this.allVehicles = data; // Store all vehicles here\n      this.filteredVehicles = []; // Initialize to empty\n    });\n  }\n\n  onConstructeurChange(constructeur: string): void {\n    // Filter vehicles based on the selected constructeur\n    this.filteredVehicles = this.allVehicles.filter(v => v.Constructeur === constructeur);\n  \n    // Reset the selected modele in the form\n    this.vehiculeService.vehicleForm.get('Modele').reset();\n  }\n\n  // ... rest of your component code\n}",
    "filename": "9e716881d1a0f350508ddf9b7cafa1d8_12.scala"
  },
  {
    "conversation_hash": "9dc38e60f54ab7bd36426ffda889eda7",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "export class VehicleFormComponent implements OnInit {\n  // ... other class members ...\n  filteredModels: string[] = []; // This line is added\n\n  // ... existing methods ...\n}",
    "filename": "9dc38e60f54ab7bd36426ffda889eda7_0.scala"
  },
  {
    "conversation_hash": "ae742bce14d9b4bfaecf2e368d19d4a5",
    "code_index": 5,
    "language": "Scala",
    "libraries": [],
    "code": "getModelsByConstructor(constructor: string): string[] {\n  return this.vehicules\n    .filter(vehicule => vehicule.Constructeur === constructor)\n    .map(vehicule => vehicule.Modele);\n}",
    "filename": "ae742bce14d9b4bfaecf2e368d19d4a5_5.scala"
  },
  {
    "conversation_hash": "ae742bce14d9b4bfaecf2e368d19d4a5",
    "code_index": 8,
    "language": "Scala",
    "libraries": [],
    "code": "getModelsByConstructor(constructor: string | null): string[] {\n  if (constructor === null) {\n    return []; // Return an empty array if constructor is null\n  }\n  return this.vehicules\n    .filter(vehicule => vehicule.Constructeur === constructor)\n    .map(vehicule => vehicule.Modele);\n}",
    "filename": "ae742bce14d9b4bfaecf2e368d19d4a5_8.scala"
  },
  {
    "conversation_hash": "78e06f3ab39ec997f38dce768fe5d3c6",
    "code_index": 10,
    "language": "Scala",
    "libraries": [],
    "code": "android {\n    compileSdkVersion 29 // o la versión que elijas, pero debe ser 28 o superior para AndroidX\n\n    defaultConfig {\n        // ...\n        targetSdkVersion 29 // o la versión que elijas, igualmente 28 o superior\n    }\n    // ...\n}",
    "filename": "78e06f3ab39ec997f38dce768fe5d3c6_10.scala"
  },
  {
    "conversation_hash": "e670b3ad9b0119ee338fda310171508c",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "<androidx.appcompat.widget.Toolbar\n    android:id=\"@+id/toolbar\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"?attr/actionBarSize\"\n    android:background=\"?attr/colorPrimary\"\n    app:popupTheme=\"@style/ThemeOverlay.AppCompat.Light\"\n    app:theme=\"@style/ThemeOverlay.AppCompat.Dark.ActionBar\"/>",
    "filename": "e670b3ad9b0119ee338fda310171508c_0.scala"
  },
  {
    "conversation_hash": "93cab7fae60eaf507ee9b0805a11ba05",
    "code_index": 14,
    "language": "Scala",
    "libraries": [],
    "code": "<com.google.android.material.appbar.MaterialToolbar\n    android:id=\"@+id/materialToolbar\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"?attr/actionBarSize\"\n    app:title=\"Hola\"\n    android:background=\"@color/black\"\n    android:theme=\"?attr/actionBarTheme\"\n    style=\"@style/Widget.MaterialComponents.Toolbar.Primary\"\n    app:menu=\"@menu/toolbar_menu\" /> <!-- Añade esta línea para referenciar tu menú -->",
    "filename": "93cab7fae60eaf507ee9b0805a11ba05_14.scala"
  },
  {
    "conversation_hash": "93cab7fae60eaf507ee9b0805a11ba05",
    "code_index": 20,
    "language": "Scala",
    "libraries": [],
    "code": "<!-- Solo quedará la definición del MaterialToolbar -->\n<com.google.android.material.appbar.MaterialToolbar\n    android:id=\"@+id/materialToolbar\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"?attr/actionBarSize\"\n    app:title=\"Hola\"\n    android:background=\"@color/black\"\n    android:theme=\"?attr/actionBarTheme\"\n    style=\"@style/Widget.MaterialComponents.Toolbar.Primary\"/>",
    "filename": "93cab7fae60eaf507ee9b0805a11ba05_20.scala"
  },
  {
    "conversation_hash": "93cab7fae60eaf507ee9b0805a11ba05",
    "code_index": 34,
    "language": "Scala",
    "libraries": [],
    "code": "<com.google.android.material.appbar.MaterialToolbar\n    android:id=\"@+id/materialToolbar\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"?attr/actionBarSize\"\n    app:title=\"Hola\"\n    app:popupTheme=\"@style/ThemeOverlay.MaterialComponents.Dark\" <!-- Si también quieres el popup del menú en blanco y negro -->\n    android:background=\"@color/black\"\n    android:theme=\"@style/CustomOverflow\" <!-- Aplica el tema personalizado aquí -->\n    style=\"@style/Widget.MaterialComponents.Toolbar.Primary\"/>",
    "filename": "93cab7fae60eaf507ee9b0805a11ba05_34.scala"
  },
  {
    "conversation_hash": "93cab7fae60eaf507ee9b0805a11ba05",
    "code_index": 63,
    "language": "Scala",
    "libraries": [],
    "code": "<com.google.android.material.appbar.MaterialToolbar\n    android:id=\"@+id/materialToolbar\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"?attr/actionBarSize\"\n    app:title=\"Hola\"\n    android:background=\"@color/black\"\n    app:menu=\"@menu/overflow\"\n    style=\"@style/Widget.MaterialComponents.Toolbar.Primary\"/>",
    "filename": "93cab7fae60eaf507ee9b0805a11ba05_63.scala"
  },
  {
    "conversation_hash": "93cab7fae60eaf507ee9b0805a11ba05",
    "code_index": 68,
    "language": "Scala",
    "libraries": [],
    "code": "<com.google.android.material.appbar.MaterialToolbar\n    android:id=\"@+id/materialToolbar\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"?attr/actionBarSize\"\n    android:background=\"@color/black\"\n    app:menu=\"@menu/overflow\"\n    style=\"@style/Widget.MaterialComponents.Toolbar.Primary\">\n\n    <TextView\n        android:id=\"@+id/toolbarCustomTitle\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:layout_gravity=\"start|center_vertical\"\n        android:text=\"Hola\"\n        android:textAppearance=\"@style/TextAppearance.AppCompat.Widget.ActionBar.Title\"\n        android:textColor=\"@color/white\"/>\n\n</com.google.android.material.appbar.MaterialToolbar>",
    "filename": "93cab7fae60eaf507ee9b0805a11ba05_68.scala"
  },
  {
    "conversation_hash": "c9cb0828102802758adbb362398d5504",
    "code_index": 8,
    "language": "Scala",
    "libraries": [],
    "code": "class DefaultSource extends RelationProvider {\n  override def createRelation(sqlContext: SQLContext, parameters: Map[String, String]): BaseRelation = {\n    new MyCustomRelation(sqlContext, parameters)\n  }\n}\n\nclass MyCustomRelation(val sqlContext: SQLContext, val parameters: Map[String, String]) \n  extends BaseRelation with TableScan {\n\n  override def schema: StructType = //... 返回数据的模式\n\n  override def buildScan(): RDD[Row] = {\n    //... 实现数据的读取逻辑并返回RDD[Row]\n  }\n}",
    "filename": "c9cb0828102802758adbb362398d5504_8.scala"
  },
  {
    "conversation_hash": "c9cb0828102802758adbb362398d5504",
    "code_index": 10,
    "language": "Scala",
    "libraries": [
      "org.apache.spark.sql.SparkSession"
    ],
    "code": "import org.apache.spark.sql.SparkSession\n\nval spark = SparkSession\n  .builder()\n  //... 省略其他配置\n  .withExtensions { extensions =>\n    extensions.injectOptimizerRule { session =>\n      MyCustomRule()\n    }\n  }\n  .getOrCreate()",
    "filename": "c9cb0828102802758adbb362398d5504_10.scala"
  },
  {
    "conversation_hash": "c9cb0828102802758adbb362398d5504",
    "code_index": 13,
    "language": "Scala",
    "libraries": [
      "spark.implicits._"
    ],
    "code": "import spark.implicits._\n\nval df = Seq((\"Alice\"), (\"Bob\")).toDF(\"name\")\n\nval upperDF = df.withColumn(\"upper_name\", toUpperCaseUDF($\"name\"))\nupperDF.show()",
    "filename": "c9cb0828102802758adbb362398d5504_13.scala"
  },
  {
    "conversation_hash": "cbb6fb0bba21dac38ca7aff13122df4b",
    "code_index": 3,
    "language": "Scala",
    "libraries": [],
    "code": "import 'package:flutter/material.dart';\nimport 'package:mapbox_gl/mapbox_gl.dart';\n\nclass MapboxMapWidget extends StatelessWidget {\n  @override\n  Widget build(BuildContext context) {\n    return new Scaffold(\n      body: MapboxMap(\n        accessToken: \"VOTRE_CLE_API_MAPBOX\",\n        initialCameraPosition: const CameraPosition(\n          target: LatLng(45.5231, -122.6765),\n          zoom: 11.0,\n        ),\n      ),\n    );\n  }\n}",
    "filename": "cbb6fb0bba21dac38ca7aff13122df4b_3.scala"
  },
  {
    "conversation_hash": "e716dc3082a9c3804e84dcf9b311a8aa",
    "code_index": 4,
    "language": "Scala",
    "libraries": [],
    "code": "<androidx.constraintlayout.widget.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    android:background=\"#FFFFFF\">\n\n    <ImageView\n        android:id=\"@+id/imageView1\"\n        android:layout_width=\"0dp\" <!-- Ajusta dinámicamente basado en las restricciones -->\n        android:layout_height=\"0dp\" <!-- Ajusta dinámicamente basado en las restricciones -->\n        app:layout_constraintDimensionRatio=\"H,16:9\" <!-- Mantiene una proporción pero se ajusta a las restricciones -->\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintTop_toTopOf=\"parent\"\n        android:src=\"@drawable/img_user\"\n        android:scaleType=\"fitCenter\"/>\n\n    <!-- Otros componentes de tu UI aquí -->\n\n</androidx.constraintlayout.widget.ConstraintLayout>",
    "filename": "e716dc3082a9c3804e84dcf9b311a8aa_4.scala"
  },
  {
    "conversation_hash": "e716dc3082a9c3804e84dcf9b311a8aa",
    "code_index": 17,
    "language": "Scala",
    "libraries": [],
    "code": "<androidx.appcompat.widget.Toolbar\n    android:id=\"@+id/toolbar\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"?attr/actionBarSize\"\n    android:background=\"?attr/colorPrimary\"\n    app:popupTheme=\"@style/Menu\" />",
    "filename": "e716dc3082a9c3804e84dcf9b311a8aa_17.scala"
  },
  {
    "conversation_hash": "02b1af464af04fb834e383080e02e793",
    "code_index": 9,
    "language": "Scala",
    "libraries": [],
    "code": "import 'package:flutter/material.dart';\nimport 'package:google_maps_flutter/google_maps_flutter.dart';\n\nclass MapSample extends StatelessWidget {\n  @override\n  Widget build(BuildContext context) {\n    return Scaffold(\n      body: GoogleMap(\n        mapType: MapType.hybrid,\n        initialCameraPosition: CameraPosition(\n          target: LatLng(-34.9285, 138.6007), // Exemple de coordonnées\n          zoom: 14.4746,\n        ),\n        onMapCreated: (GoogleMapController controller) {\n          // Vous pouvez également contrôler la carte une fois créée\n        },\n      ),\n    );\n  }\n}",
    "filename": "02b1af464af04fb834e383080e02e793_9.scala"
  },
  {
    "conversation_hash": "02b1af464af04fb834e383080e02e793",
    "code_index": 10,
    "language": "Scala",
    "libraries": [],
    "code": "import 'package:flutter/material.dart';\nimport 'package:your_project_name/models/cat_model.dart'; // Vous devez créer ce fichier modèle\n\nclass DetailPage extends StatelessWidget {\n  final Cat cat;\n\n  DetailPage({required this.cat});\n\n  @override\n  Widget build(BuildContext context) {\n    return Scaffold(\n      appBar: AppBar(\n        title: Text(cat.name),\n      ),\n      body: SingleChildScrollView(\n        child: Column(\n          children: <Widget>[\n            Hero(\n              tag: 'chat-${cat.id}',\n              child: Image.network(cat.imageUrl),\n            ),\n            Padding(\n              padding: EdgeInsets.all(8.0),\n              child: Text(cat.description),\n            ),\n            // Ajoutez plus de détails ici selon votre modèle de données\n          ],\n        ),\n      ),\n    );\n  }\n}",
    "filename": "02b1af464af04fb834e383080e02e793_10.scala"
  },
  {
    "conversation_hash": "02b1af464af04fb834e383080e02e793",
    "code_index": 11,
    "language": "Scala",
    "libraries": [],
    "code": "import 'package:flutter/material.dart';\n\nclass ProfilePage extends StatelessWidget {\n  @override\n  Widget build(BuildContext context) {\n    return Scaffold(\n      appBar: AppBar(\n        title: Text(\"Profil\"),\n      ),\n      body: Center(\n        child: Column(\n          mainAxisAlignment: MainAxisAlignment.center,\n          children: <Widget>[\n            Icon(Icons.person, size: 100),\n            Text(\"Nom d'utilisateur\"),\n            ElevatedButton(\n              onPressed: () {\n                // Logique pour éditer le profil\n              },\n              child: Text(\"Éditer le Profil\"),\n            ),\n            // Ajoutez plus d'éléments tels que les chats adoptés/signalés\n          ],\n        ),\n      ),\n    );\n  }\n}",
    "filename": "02b1af464af04fb834e383080e02e793_11.scala"
  },
  {
    "conversation_hash": "d385915cad62a8104eb795fd09605a17",
    "code_index": 2,
    "language": "Scala",
    "libraries": [],
    "code": ".image-container img {\n    width: 100%;\n    height: auto;\n    transition: transform 0.5s ease; /* Ajoute un effet de transition doux */\n    transform: scale(1.2) translateY(-20%); /* Ajustez ces valeurs comme nécessaire */\n}",
    "filename": "d385915cad62a8104eb795fd09605a17_2.scala"
  },
  {
    "conversation_hash": "3e0298f17f134078860f5c97f8c9a742",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "start       end    speaker                      text\n0       0.0       4.5        1       \"Hello, my name is...\"\n1       5.0      10.0        2       \"Nice to meet you, I...\"\n2      10.5      13.0        1       \"How have you been?\"\n...",
    "filename": "3e0298f17f134078860f5c97f8c9a742_1.scala"
  },
  {
    "conversation_hash": "5a485e027f95529e8d34207c492af428",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "sealed class PlayerEvent {\n    object Play : PlayerEvent()\n    object Pause : PlayerEvent()\n    data class LoadContent(val contentId: String) : PlayerEvent()\n    data class UpdateProgress(val progress: Int) : PlayerEvent()\n    // 根据需求添加其他事件\n}",
    "filename": "5a485e027f95529e8d34207c492af428_0.scala"
  },
  {
    "conversation_hash": "aebd3877a2488ec84c39a0cff1652d5e",
    "code_index": 2,
    "language": "Scala",
    "libraries": [],
    "code": "// 初始化时，即使没有episode也可以初始化数据源\nval dataSource = SingletonPlayer.initDataSource()\n\n// 后续当获取到episode信息时\nval episode = Episode(\"1\", \"Demo Episode\") // 假设的Episode对象\nSingletonPlayer.configureDataSourceForEpisode(episode)",
    "filename": "aebd3877a2488ec84c39a0cff1652d5e_2.scala"
  },
  {
    "conversation_hash": "e676d00571cd0afb781e349b29c13c7e",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "\"dataset_reader\": {\n        \"class_name\": \"conll2003_reader\",\n        \"data_path\": \"/path/to/your/data\",\n        \"dataset_name\": \"your_dataset_name\",\n        \"provide_pos\": false\n    },",
    "filename": "e676d00571cd0afb781e349b29c13c7e_0.scala"
  },
  {
    "conversation_hash": "bab1cbb94ea33b9703c098e4fba7ddc2",
    "code_index": 4,
    "language": "Scala",
    "libraries": [],
    "code": "import { FormsModule } from '@angular/forms';\nimport { NgModule } from '@angular/core';\n// Autres imports...\n\n@NgModule({\n  declarations: [\n    // Vos composants...\n  ],\n  imports: [\n    // autres modules...\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }",
    "filename": "bab1cbb94ea33b9703c098e4fba7ddc2_4.scala"
  },
  {
    "conversation_hash": "e89de656fbe2355d70e0efcadc9d2841",
    "code_index": 10,
    "language": "Scala",
    "libraries": [],
    "code": "val startForResult = registerForActivityResult(ActivityResultContracts.StartActivityForResult()) { result ->\n    if (result.resultCode == Activity.RESULT_OK) {\n        // Manija del resultado\n        val intent = result.data\n        // Tu código aquí\n    }\n}\n\nval intent = Intent(this, Agregar::class.java)\nstartForResult.launch(intent)",
    "filename": "e89de656fbe2355d70e0efcadc9d2841_10.scala"
  },
  {
    "conversation_hash": "95d1344c6ce2413e48336cafce7bba8a",
    "code_index": 23,
    "language": "Scala",
    "libraries": [],
    "code": "jojoSi (detecteEmotion() == \"heureux\") {\n    imprime(\"C'est génial d'être heureux ! Voici un cookie virtuel 🍪\")\n} jojoSinon {\n    imprime(\"Je suis là pour toi. Veux-tu parler de ce qui te tracasse ?\")\n}",
    "filename": "95d1344c6ce2413e48336cafce7bba8a_23.scala"
  },
  {
    "conversation_hash": "4e7be7b2a53f4b37a2419fd497fc7122",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "(defun c:CXR (/ xrefLayer color)\n  (setq xrefLayer (getstring \"\\nEnter Xref Layer name to override color: \"))\n  (if (not (tblsearch \"LAYER\" xrefLayer))\n    (progn\n      (alert \"Layer does not exist.\")\n      (princ))\n    (progn\n      (setq color (getint \"\\nEnter color number (1-255): \"))\n      (if (and (>= color 1) (<= color 255))\n        (progn\n          (command \"_-LAYER\" \"_SET\" xrefLayer \"\" \"_COLOR\" color \"\" \"\")\n          (princ \"\\nLayer color override applied.\")\n        )\n        (alert \"Invalid color.\")\n      )\n    )\n  )\n  (princ)\n)",
    "filename": "4e7be7b2a53f4b37a2419fd497fc7122_1.scala"
  },
  {
    "conversation_hash": "4e7be7b2a53f4b37a2419fd497fc7122",
    "code_index": 2,
    "language": "Scala",
    "libraries": [],
    "code": "(defun c:C6 (/ ent selSet color)\n  (princ \"\\nChọn một block: \")\n  (setq ent (entsel))\n  \n  (if ent\n    (progn\n      (setq selSet (ssget \"_X\" (list (cons 0 \"INSERT\") (cons 2 (cdr (assoc 2 (entget (car ent))))))))\n      (if selSet\n        (progn\n          (initget 7)\n          (setq color (getint \"\\nChọn mã màu sắc (Enter cho màu xám đen): \"))\n          (if (= color nil) (setq color 8)) ; Màu xám đen nếu bỏ qua bước này\n          (command \"_.-color\" color)\n          (command \"_.change\" selSet \"\" \"p\" \"\")\n        )\n        (princ \"\\nKhông thể lấy được selection set.\")\n      )\n    )\n    (princ \"\\nKhông tìm thấy block.\")\n  )\n  (princ)\n)",
    "filename": "4e7be7b2a53f4b37a2419fd497fc7122_2.scala"
  },
  {
    "conversation_hash": "5eaad3eeb6bb2d5853c54af39f491fb5",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "val dataSource = BaseBlockDataSource()\ndataSource.init()\n\n// For Block 1\nval audioDataFlow = MutableStateFlow<AudioData>(/* initial AudioData value */)\ndataSource.registerFlow(AudioData::class, audioDataFlow)\n\n// For Block 2\nval episodeDataFlow = MutableStateFlow<EpisodeData>(/* initial EpisodeData value */)\ndataSource.registerFlow(EpisodeData::class, episodeDataFlow)",
    "filename": "5eaad3eeb6bb2d5853c54af39f491fb5_1.scala"
  },
  {
    "conversation_hash": "5eaad3eeb6bb2d5853c54af39f491fb5",
    "code_index": 3,
    "language": "Scala",
    "libraries": [
      "somewhere"
    ],
    "code": "// Update AudioData from somewhere within the application/data source\ndataSource.updateData(AudioData::class, newAudioData)\n\n// Update EpisodeData similarly\ndataSource.updateData(EpisodeData::class, newEpisodeData)",
    "filename": "5eaad3eeb6bb2d5853c54af39f491fb5_3.scala"
  },
  {
    "conversation_hash": "e4c75744fc09709f35c1854ea5379ca4",
    "code_index": 4,
    "language": "Scala",
    "libraries": [],
    "code": "import { FormsModule } from '@angular/forms';\n\n  @NgModule({\n    declarations: [\n      // vos composants\n    ],\n    imports: [\n      // autres modules\n      FormsModule\n    ],\n    providers: [],\n    bootstrap: [AppComponent]\n  })\n  export class AppModule { }",
    "filename": "e4c75744fc09709f35c1854ea5379ca4_4.scala"
  },
  {
    "conversation_hash": "1fc00205071eae3b3ba88c9389a2f339",
    "code_index": 2,
    "language": "Scala",
    "libraries": [],
    "code": "SizedBox(\n  height: MediaQuery.of(context).size.height * 0.55, // Ajustez ce chiffre selon vos besoins\n  child: ListView(\n    // Votre contenu ici\n  ),\n)",
    "filename": "1fc00205071eae3b3ba88c9389a2f339_2.scala"
  },
  {
    "conversation_hash": "42e22d70a8a72b0e4cc2d55977f4bbd0",
    "code_index": 0,
    "language": "Scala",
    "libraries": [
      "Vue",
      "Vuex",
      "createPersistedState"
    ],
    "code": "import Vue from 'vue'\nimport Vuex from 'vuex'\nimport createPersistedState from 'vuex-persistedstate'\n\nVue.use(Vuex)\n\n// Dein existierender Store\nconst configStore = new Vuex.Store({\n  // Deine Store-Konfiguration hier...\n})\n\n// Dein tempStore\nconst tempStore = new Vuex.Store({\n  // Deine tempStore-Konfiguration hier...\n  plugins: [createPersistedState({\n    storage: window.sessionStorage, // Hier definieren wir, dass sessionStorage verwendet werden soll\n    paths: ['deinPfadZumZuSpeicherndenState'] // Option: Definiere präzise, welchen State du speichern möchtest\n  })],\n})\n\nexport { configStore, tempStore }",
    "filename": "42e22d70a8a72b0e4cc2d55977f4bbd0_0.scala"
  },
  {
    "conversation_hash": "e5598d23497c339a3f28e6f0efc13f68",
    "code_index": 2,
    "language": "Scala",
    "libraries": [],
    "code": "@inherits LayoutComponentBase\n\n<div class=\"page\">\n    <div class=\"sidebar\">\n        @Body\n    </div>\n</div>\n\n<Footer />",
    "filename": "e5598d23497c339a3f28e6f0efc13f68_2.scala"
  },
  {
    "conversation_hash": "330ceb50cd1e93a907337340b3638d32",
    "code_index": 3,
    "language": "Scala",
    "libraries": [],
    "code": "match bklist.get(chr) {\n    Some(vec) => {\n        // Your logic using `vec`\n    },\n    None => {\n        // Your logic using an empty Vec or alternative logic when the Vec is not present.\n        // If the subsequent logic requires a vector, you can create a new one here\n        // that is used only within this scope, or adjust your approach to eliminate the need.\n    }\n}",
    "filename": "330ceb50cd1e93a907337340b3638d32_3.scala"
  },
  {
    "conversation_hash": "e01bd41cc5c5f84db1125d19f9559218",
    "code_index": 4,
    "language": "Scala",
    "libraries": [],
    "code": "<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 3 entries, 0 to 2\nData columns (total 1 columns):\n #   Column  Non-Null Count  Dtype         \n---  ------  --------------  -----         \n 0   Date    3 non-null      datetime64[ns]\ndtypes: datetime64[ns](1)",
    "filename": "e01bd41cc5c5f84db1125d19f9559218_4.scala"
  },
  {
    "conversation_hash": "e01bd41cc5c5f84db1125d19f9559218",
    "code_index": 6,
    "language": "Scala",
    "libraries": [],
    "code": "<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 3 entries, 0 to 2\nData columns (total 1 columns):\n #   Column  Non-Null Count  Dtype                       \n---  ------  --------------  -----                       \n 0   Date    3 non-null      datetime64[ns, UTC]\ndtypes: datetime64[ns, UTC](1)",
    "filename": "e01bd41cc5c5f84db1125d19f9559218_6.scala"
  },
  {
    "conversation_hash": "e01bd41cc5c5f84db1125d19f9559218",
    "code_index": 16,
    "language": "Scala",
    "libraries": [],
    "code": "# Set everything to be logged to the console\n    log4j.rootCategory=INFO, file\n    log4j.appender.file=org.apache.log4j.RollingFileAppender\n    log4j.appender.file.File=/path/to/your/logs/spark.log\n    log4j.appender.file.MaxFileSize=100MB\n    log4j.appender.file.MaxBackupIndex=10\n    log4j.appender.file.layout=org.apache.log4j.PatternLayout\n    log4j.appender.file.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss} %-5p %c{1}:%L - %m%n",
    "filename": "e01bd41cc5c5f84db1125d19f9559218_16.scala"
  },
  {
    "conversation_hash": "e01bd41cc5c5f84db1125d19f9559218",
    "code_index": 20,
    "language": "Scala",
    "libraries": [
      "org.apache.log4j.Level",
      "org.apache.log4j.Logger"
    ],
    "code": "import org.apache.log4j.Logger\nimport org.apache.log4j.Level\n\n# 在 Spark 应用程序的主类中\nLogger.getLogger(\"org\").setLevel(Level.ERROR)\nLogger.getLogger(\"akka\").setLevel(Level.ERROR)\n\nval log = Logger.getLogger(this.getClass)\n\nlog.info(\"自定义日志信息：开始处理数据。\")",
    "filename": "e01bd41cc5c5f84db1125d19f9559218_20.scala"
  },
  {
    "conversation_hash": "0c859aa732c3968469f77553068aab87",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "<script setup>\nimport { toRefs } from 'vue'\n\n// Определяем пропсы\nconst props = defineProps({\n    targetDisks: Array,\n    takenTargetDisks: Object\n})\n\n// Использование `toRefs` для создания реактивной ссылки на каждое свойство пропса\nconst { targetDisks, takenTargetDisks } = toRefs(props)\n</script>",
    "filename": "0c859aa732c3968469f77553068aab87_0.scala"
  },
  {
    "conversation_hash": "6a762662fd8c955b63078cc00387ddd2",
    "code_index": 3,
    "language": "Scala",
    "libraries": [],
    "code": "{\n      \"query\": {\n        \"match\": {\n          \"message\": \"this is a test\"\n        }\n      }\n    }",
    "filename": "6a762662fd8c955b63078cc00387ddd2_3.scala"
  },
  {
    "conversation_hash": "0ba2cb378b093ae006be39fd37036ccc",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "SRC := foo.c bar.c baz.c\nOBJ := $(patsubst %.c,%.o,$(SRC))\n\nall: $(OBJ)\n    gcc -o myprogram $(OBJ)",
    "filename": "0ba2cb378b093ae006be39fd37036ccc_1.scala"
  },
  {
    "conversation_hash": "8925ea6802a7875d583b835f537c2a44",
    "code_index": 2,
    "language": "Scala",
    "libraries": [],
    "code": "import { generateNavbar } from '../Navbar.js';\n\nexport default class Personnage{\n\n    async render(){\n        // Logique pour obtenir les détails d'un personnage\n        return /*html*/`\n            ${generateNavbar()} // Ajout de la Navbar ici\n            <section class=\"section\">\n                <!-- Contenu spécifique à Personnage ici -->\n            </section>\n        `;\n    }\n}",
    "filename": "8925ea6802a7875d583b835f537c2a44_2.scala"
  },
  {
    "conversation_hash": "1b335afb02442aa08c0a5e3c5d451137",
    "code_index": 7,
    "language": "Scala",
    "libraries": [],
    "code": "torch>=1.8.1\ntorchaudio>=0.8.1\nlibrosa>=0.8.0\nnumpy>=1.19.2\nmatplotlib>=3.3.4\ngTTS>=2.2.2\nffmpeg-python>=0.2.0\njupyterlab>=3.0.14",
    "filename": "1b335afb02442aa08c0a5e3c5d451137_7.scala"
  },
  {
    "conversation_hash": "ab5c017432bd5edbfe8d5892ad46f566",
    "code_index": 3,
    "language": "Scala",
    "libraries": [],
    "code": "(require '[clojure.string :as str])\n\n(defn remove-ext [filename]\n  (first (str/split filename #\"(?=\\.[^.]+$)\")))\n\n(println (remove-ext \"30430823.jpg\"))  ; => \"30430823\"\n(println (remove-ext \"del.c\"))         ; => \"del\"\n(println (remove-ext \"hifive.webm\"))   ; => \"hifive\"",
    "filename": "ab5c017432bd5edbfe8d5892ad46f566_3.scala"
  },
  {
    "conversation_hash": "bee3cacfa0e71e8d96bf2828e8fbf8f8",
    "code_index": 3,
    "language": "Scala",
    "libraries": [
      "retrofit2.Retrofit",
      "retrofit2.converter.gson.GsonConverterFactory"
    ],
    "code": "import retrofit2.Retrofit\n    import retrofit2.converter.gson.GsonConverterFactory\n\n    object RetrofitClient {\n        private const val BASE_URL = \"https://newsapi.org/\"\n\n        val newsService: NewsService by lazy {\n            Retrofit.Builder()\n                .baseUrl(BASE_URL)\n                .addConverterFactory(GsonConverterFactory.create())\n                .build()\n                .create(NewsService::class.java)\n        }\n    }",
    "filename": "bee3cacfa0e71e8d96bf2828e8fbf8f8_3.scala"
  },
  {
    "conversation_hash": "43e7600434b622a4afde9c57c4382f90",
    "code_index": 6,
    "language": "Scala",
    "libraries": [],
    "code": "<script setup>\nimport { provide } from 'vue'\n\nconst message = 'Hallo von Parent!'\n\n// Der Schlüssel \"message\" kann ein beliebiger String oder ein Symbol sein\nprovide('message', message)\n</script>",
    "filename": "43e7600434b622a4afde9c57c4382f90_6.scala"
  },
  {
    "conversation_hash": "36812f61fff1bf512e07775bddcfadda",
    "code_index": 21,
    "language": "Scala",
    "libraries": [],
    "code": "// Esempio di inserimento nell'handler del menu\nswitch (option) {\n    // altri casi...\n    case \"9\":\n        showNotifications();\n        break;\n    // altri casi...\n}",
    "filename": "36812f61fff1bf512e07775bddcfadda_21.scala"
  },
  {
    "conversation_hash": "619a9b7b887402aae5772e0e62a17646",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "using Symbolics\nusing DifferentialEquations\n\n# Définir les variables symboliques\n@variables t k y(t)\n\n# Définir l'équation différentielle\ndeqn = Differential(k * y(t), t) - Differential(y(t), t)\n\n# Résoudre l'équation différentielle symboliquement\nsol = solve(deqn)\n\n# Résoudre l'équation différentielle avec condition initiale\nsol_with_initial_condition = solve(deqn, [y(0) => 1.0])\n\nprintln(sol)\nprintln(sol_with_initial_condition)",
    "filename": "619a9b7b887402aae5772e0e62a17646_1.scala"
  },
  {
    "conversation_hash": "619a9b7b887402aae5772e0e62a17646",
    "code_index": 3,
    "language": "Scala",
    "libraries": [],
    "code": "using Symbolics\nusing DifferentialEquations\n\n# Définir les variables symboliques\n@variables t k m c x(t) v(t)\n\n# Définir les équations différentielles\ndxdt = Differential(x(t), t) - v(t)\ndvdt = Differential(v(t), t) + (k/m) * x(t) + (c/m) * v(t)\n\n# Résoudre symboliquement les équations différentielles\nsol = solve([dxdt, dvdt])\n\nprintln(sol)",
    "filename": "619a9b7b887402aae5772e0e62a17646_3.scala"
  },
  {
    "conversation_hash": "32bef672ddd460782783ae683010cb24",
    "code_index": 10,
    "language": "Scala",
    "libraries": [],
    "code": "@Target(AnnotationTarget.CLASS)\nannotation class MyAnnotation(val value: String)\n\n@MyAnnotation(\"example\")\nclass MyClass\n\nval annotations = MyClass::class.annotations\nfor (annotation in annotations) {\n    println(annotation.annotationClass.simpleName)\n    if (annotation is MyAnnotation) {\n        println(annotation.value)\n    }\n}",
    "filename": "32bef672ddd460782783ae683010cb24_10.scala"
  },
  {
    "conversation_hash": "3e309cd74fe6e94c124a65472b06d37f",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "{ pkgs ? import <nixpkgs> {} }:\n\npkgs.mkShell {\n  buildInputs = [\n    pkgs.git\n    pkgs.htop\n    pkgs.python3\n  ];\n\n  # Environment variables you want to set\n  shellHook = ''\n    export EXAMPLE_ENV_VAR=example\n  '';\n}",
    "filename": "3e309cd74fe6e94c124a65472b06d37f_0.scala"
  },
  {
    "conversation_hash": "382fc72fc55db9ad868b681f12ef5e6d",
    "code_index": 7,
    "language": "Scala",
    "libraries": [
      "JSON"
    ],
    "code": "{\n  state.products.map(product => (\n    <div key={product.id}>\n      <h2>{product.name}</h2>\n      {/* Directly using image path from JSON */}\n      <img src={product.image} alt={product.name} />\n    </div>\n  ))\n}",
    "filename": "382fc72fc55db9ad868b681f12ef5e6d_7.scala"
  },
  {
    "conversation_hash": "30e615a88f8968e4e595f00d5db6b3f3",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "def addTwoNumbers(self, l1: Optional[ListNode], l2: Optional[ListNode]) -> Optional[ListNode]:\n    result = ListNode()\n    dummy = result\n    carry = 0\n    \n    while l1 or l2 or carry:\n        l1Val = l1.val if l1 else 0\n        l2Val = l2.val if l2 else 0\n\n        total = l1Val + l2Val + carry\n        carry = total // 10\n\n        dummy.next = ListNode(total % 10)\n        dummy = dummy.next\n\n        if l1:\n            l1 = l1.next\n        if l2:\n            l2 = l2.next\n\n    return result.next",
    "filename": "30e615a88f8968e4e595f00d5db6b3f3_1.scala"
  },
  {
    "conversation_hash": "43b90af949ff3368cbb54986584ba6f1",
    "code_index": 4,
    "language": "Scala",
    "libraries": [],
    "code": "// login.service.ts\nimport { Injectable } from '@angular/core';\nimport { KeycloakService } from 'keycloak-angular';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LoginService {\n\n  constructor(private keycloakService: KeycloakService) {}\n\n  // Connexion\n  async login() {\n    await this.keycloakService.login();\n  }\n\n  // Déconnexion\n  async logout() {\n    await this.keycloakService.logout();\n  }\n\n  // Récupérer le profil de l'utilisateur\n  async getUserProfile() {\n    return await this.keycloakService.loadUserProfile();\n  }\n\n  // Vérifier si l'utilisateur possède un rôle spécifique\n  hasRole(role: string): boolean {\n    return this.keycloakService.isUserInRole(role);\n  }\n\n  // Vérifier si l'utilisateur est connecté\n  isAuthenticated(): Promise<boolean> {\n    return this.keycloakService.isLoggedIn();\n  }\n}",
    "filename": "43b90af949ff3368cbb54986584ba6f1_4.scala"
  },
  {
    "conversation_hash": "aff2948879a36d144ba43e420461a596",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "import { Injectable } from '@angular/core';\n   import { KeycloakService } from 'keycloak-angular';\n\n   @Injectable({\n     providedIn: 'root',\n   })\n   export class LoginService {\n     constructor(private keycloakService: KeycloakService) {}\n  \n     ...\n   }",
    "filename": "aff2948879a36d144ba43e420461a596_0.scala"
  },
  {
    "conversation_hash": "aff2948879a36d144ba43e420461a596",
    "code_index": 6,
    "language": "Scala",
    "libraries": [],
    "code": "import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\nimport { KeycloakService } from 'keycloak-angular';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginGuard implements CanActivate {\n\n  constructor(private router: Router, private keycloakService: KeycloakService) { }\n\n  canActivate(): boolean {\n    // La logique de garde viendra ici\n  }\n}",
    "filename": "aff2948879a36d144ba43e420461a596_6.scala"
  },
  {
    "conversation_hash": "aff2948879a36d144ba43e420461a596",
    "code_index": 8,
    "language": "Scala",
    "libraries": [],
    "code": "{\n  path: 'mon-espace-admin',\n  loadChildren: () => import('./chemin-vers-mon-module-admin.module').then(m => m.MonModuleAdminModule),\n  canActivate: [LoginGuard] // Utilisation de LoginGuard pour protéger cette route\n}",
    "filename": "aff2948879a36d144ba43e420461a596_8.scala"
  },
  {
    "conversation_hash": "d9177a38b2c0c2f339fc1e4d1aef790d",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "export default defineConfig({\n     server: {\n       proxy: {\n         // 代理配置示例\n         '/api': {\n           target: 'http://example.com/api',\n           changeOrigin: true,\n           rewrite: path => path.replace(/^\\/api/, '')\n         }\n       }\n     }\n   });",
    "filename": "d9177a38b2c0c2f339fc1e4d1aef790d_0.scala"
  },
  {
    "conversation_hash": "81611b2f7fe296c9e40628afbeb26524",
    "code_index": 4,
    "language": "Scala",
    "libraries": [],
    "code": "import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { User } from './user.interface'; // Assurez-vous que le chemin est correct\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  private readonly authUrl: string = 'http://mon-api.com/auth'; // URL de votre endpoint d'authentification\n  \n  constructor(private http: HttpClient) { }\n\n  login(email: string, password: string): Observable<User> {\n    return this.http.post<User>(\n      `${this.authUrl}/login`,\n      { email, password }\n    );\n  }\n\n  // Autres méthodes d'authentification ou de gestion d'utilisateur\n}",
    "filename": "81611b2f7fe296c9e40628afbeb26524_4.scala"
  },
  {
    "conversation_hash": "941dfc1c3b25da856c4e7f42553441bd",
    "code_index": 9,
    "language": "Scala",
    "libraries": [
      "assets"
    ],
    "code": "// Considering _utilisateur.imageProfilBytes is the Uint8List? containing the profile image\n\n// Within your Container widget that builds the profile picture area:\nContainer(\n  width: 80,\n  height: 80,\n  decoration: BoxDecoration(\n    shape: BoxShape.circle,\n    color: Colors.grey, // Default background color\n    image: _utilisateur.imageProfilBytes != null\n        // If there's a profile image, use it\n        ? DecorationImage(\n            image: MemoryImage(_utilisateur.imageProfilBytes!),\n            fit: BoxFit.cover,\n          )\n        // Else, use a default image from assets\n        : DecorationImage(\n            image: AssetImage('assets/user_img/default_user_image.png'),\n            fit: BoxFit.cover,\n          ),\n  ),\n),",
    "filename": "941dfc1c3b25da856c4e7f42553441bd_9.scala"
  },
  {
    "conversation_hash": "57c3bfea47f07a0659815f3dfb4ff330",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "{\n      \"personalityTraits\": [\"Brave\", \"Compassionate\"],\n      \"reactsToThreat\": \"Stand and fight\",\n      \"prefers\": {\"solvingConflicts\": \"Diplomacy over violence\"}\n    }",
    "filename": "57c3bfea47f07a0659815f3dfb4ff330_1.scala"
  },
  {
    "conversation_hash": "1c7235eb3cf99f15b4e2586d6e98b056",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "(def list-colours {:red          \"#ff3705\"\n                   :orange-dark  \"#eb6300\"\n                   :orange       \"#f6a200\"\n                   :yellow       \"#ffcc00\"\n                   :green        \"#96d0b1\"\n                   :teal-dark    \"#007699\"\n                   :teal         \"#17b6c3\"\n                   :navy         \"#6f6f7d\"\n                   :purple       \"#6861f2\"\n                   :flesh        \"#ebb687\"\n                   :flesh-bright \"#f1c194\"\n                   :flesh-pasty  \"#ffe1c2\"\n                   :brown        \"#af5a00\"\n                   :hair         \"#8a4701\"\n                   :white        \"#fff8f8\"\n                   :gray-light   \"#c5c5cb\"\n                   :gray         \"#a9a9b1\"\n                   :gray-mid     \"#8f9397\"\n                   :gray-dark    \"#6f6f7d\"\n                   :black        \"#0b0909\"})\n\n(defn colours [& args]\n  (vec (map list-colours args)))",
    "filename": "1c7235eb3cf99f15b4e2586d6e98b056_1.scala"
  },
  {
    "conversation_hash": "417ea490d9b4416e63b3ec378838cf32",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "<smartTable:SmartTable id=\"smartTable_0\" \n                       entitySet=\"YourEntitySet\" \n                       tableType=\"Table\" \n                       useExportToExcel=\"false\" \n                       beforeExport=\"_onBeforeExport\" \n                       useVariantManagement=\"false\" \n                       useTablePersonalisation=\"true\" \n                       header=\"Products\" \n                       showRowCount=\"true\" \n                       enableAutoBinding=\"true\"\n                       cellClick=\".onCellClick\">\n</smartTable:SmartTable>",
    "filename": "417ea490d9b4416e63b3ec378838cf32_0.scala"
  },
  {
    "conversation_hash": "535e4af88b700f437db34efdea145ebe",
    "code_index": 2,
    "language": "Scala",
    "libraries": [],
    "code": "set_target_properties(${PROJECT_NAME} PROPERTIES\n    ...\n    BUILD_WITH_INSTALL_RPATH TRUE\n    INSTALL_RPATH \"/path/to/protobuf/libs\"\n    ...\n)",
    "filename": "535e4af88b700f437db34efdea145ebe_2.scala"
  },
  {
    "conversation_hash": "f482ff2d481756d380eb70c688004c9a",
    "code_index": 6,
    "language": "Scala",
    "libraries": [],
    "code": "# Set the source variable to point to your main.cpp file\nset(source \"${CMAKE_CURRENT_SOURCE_DIR}/application/src/main.cpp\")\n\n# Use the source variable in an add_executable or add_library command to actually compile it\nadd_executable(MyExecutableName ${source})",
    "filename": "f482ff2d481756d380eb70c688004c9a_6.scala"
  },
  {
    "conversation_hash": "0c4a333f86065f1a38044cd8b6d9c3ad",
    "code_index": 2,
    "language": "Scala",
    "libraries": [],
    "code": "export default defineConfig({\n  server: {\n    proxy: {\n      '/api': 'http://localhost:3000' // Assuming your backend server (Express/Fastify) runs on port 3000\n    }\n  }\n})",
    "filename": "0c4a333f86065f1a38044cd8b6d9c3ad_2.scala"
  },
  {
    "conversation_hash": "0c4a333f86065f1a38044cd8b6d9c3ad",
    "code_index": 6,
    "language": "Scala",
    "libraries": [],
    "code": "import { defineConfig } from 'vite';\n\nexport default defineConfig({\n  server: {\n    proxy: {\n      // Proxying /api requests to your custom server\n      '/api': 'http://localhost:3001',\n    }\n  }\n});",
    "filename": "0c4a333f86065f1a38044cd8b6d9c3ad_6.scala"
  },
  {
    "conversation_hash": "3117eafde226021748924b42dca46168",
    "code_index": 5,
    "language": "Scala",
    "libraries": [],
    "code": "data Expr = Var String | Val Int | Add Expr Expr\ntype Env = [(String, Int)]\n\neval :: Env -> Expr -> Int\neval _ (Val n) = n\neval env (Var x) = fromJust $ lookup x env\neval env (Add e1 e2) = eval env e1 + eval env e2",
    "filename": "3117eafde226021748924b42dca46168_5.scala"
  },
  {
    "conversation_hash": "0ca98fc65a29cdd647331199d0e1a94a",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "objects = main.o\n\netch : $(objects)\n    gcc -o build/etch $(objects)\n\nmain.o : main.c\n    gcc -c main.c\n\n.PHONY : clean\nclean :\n    rm build/etch",
    "filename": "0ca98fc65a29cdd647331199d0e1a94a_0.scala"
  },
  {
    "conversation_hash": "af1ee4fdea5720f41cbe0c3fb05ffc9c",
    "code_index": 1,
    "language": "Scala",
    "libraries": [
      "qualified"
    ],
    "code": "module EvalIdExpr where\n\nimport qualified Data.Map as Map\n\ntype Env = Map.Map String Int  -- Environment mapping identifiers to values\n\nevalIdExpr :: String -> Env -> Int\nevalIdExpr expr env = undefined  -- Parse 'expr' and evaluate it using the mappings in 'env'.",
    "filename": "af1ee4fdea5720f41cbe0c3fb05ffc9c_1.scala"
  },
  {
    "conversation_hash": "7c1b9ee44829992326349c78496ef2a8",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "evalIntExpr :: IntExpr -> Int\nevalIntExpr (Leaf n) = n\nevalIntExpr (Add expr1 expr2) = evalIntExpr expr1 + evalIntExpr expr2\nevalIntExpr (Sub expr1 expr2) = evalIntExpr expr1 - evalIntExpr expr2\nevalIntExpr (Mul expr1 expr2) = evalIntExpr expr1 * evalIntExpr expr2\nevalIntExpr (Uminus expr) = - evalIntExpr expr",
    "filename": "7c1b9ee44829992326349c78496ef2a8_0.scala"
  },
  {
    "conversation_hash": "88500d98fc50a834f04e04a976b3194b",
    "code_index": 5,
    "language": "Scala",
    "libraries": [],
    "code": "# Add an executable target\nadd_executable(MyApp src/main.cpp)\n\n# Use a generator expression to specify the output directory\nset_target_properties(MyApp PROPERTIES\n    RUNTIME_OUTPUT_DIRECTORY \"${CMAKE_SOURCE_DIR}/bin/$<CONFIG>\"\n)",
    "filename": "88500d98fc50a834f04e04a976b3194b_5.scala"
  },
  {
    "conversation_hash": "cd62f0c73d30cb00a66b26357fea8e71",
    "code_index": 0,
    "language": "Scala",
    "libraries": [
      "android.os.Bundle",
      "android.widget.Button",
      "android.widget.TextView",
      "androidx.appcompat.app.AppCompatActivity",
      "kotlin.random.Random"
    ],
    "code": "import android.os.Bundle\nimport android.widget.Button\nimport android.widget.TextView\nimport androidx.appcompat.app.AppCompatActivity\nimport kotlin.random.Random\n\nclass MainActivity : AppCompatActivity() {\n    private val locations = listOf(\"公主坟\", \"军事博物馆\", \"木樨地1\", \"木樨地16\", \"南礼士路\", \"复兴门\", \"西单\", \"天安门西\", \"天安门东\", \"王府井\", \"东单\", \"建国门\", \"永安里\", \"国贸\", \"西直门\", \"车公庄\", \"阜成门\", \"长椿街\", \"宣武门\", \"和平门\", \"前门\", \"崇文门\", \"北京站\", \"朝阳门\", \"东直门\", \"雍和宫\", \"安定门\", \"鼓楼大街\", \"积水潭\", \"海淀黄庄\", \"人民大学\", \"魏公村\", \"国家图书馆\", \"动物园\", \"新街口\", \"平安里\", \"西四\", \"灵境胡同\", \"菜市口\", \"陶然亭\", \"北京南站\", \"马家堡\", \"角门西\", \"惠新西街南口\", \"和平西桥\", \"和平里北街\", \"北新桥\", \"张自忠路\", \"东四\", \"灯市口\", \"磁器口\", \"天坛东门\", \"蒲黄榆\", \"刘家窑\", \"宋家庄\", \"慈寿寺\", \"花园桥\", \"白石桥南\", \"二里沟\", \"车公庄西\", \"北海北\", \"南锣鼓巷\", \"东大桥\", \"呼家楼\", \"北京西站\", \"湾子\", \"达官营\", \"广安门内\", \"虎坊桥\", \"珠市口\", \"桥湾\", \"广渠门内\", \"广渠门外\", \"双井\", \"北土城\", \"安华桥\", \"安德里北街\", \"什刹海\", \"中国美术馆\", \"金鱼胡同\", \"天桥\", \"永定门外\", \"木樨园\", \"海户屯\", \"白堆子\", \"六里桥东\", \"六里桥\", \"巴沟\", \"苏州街\", \"知春里\", \"知春路\", \"西土城\", \"牡丹园\", \"健德门\", \"安贞门\", \"芍药居\", \"太阳宫\", \"三元桥\", \"亮马桥\", \"农业展览馆\", \"团结湖\", \"金台夕照\", \"劲松\", \"潘家园\", \"十里河\", \"分钟寺\", \"成寿寺\", \"石榴庄\", \"大红门\", \"角门东\", \"草桥\", \"纪家庙\", \"首经贸\", \"丰台站\", \"泥洼\", \"西局\", \"莲花桥\", \"西钓鱼台\", \"车道沟\", \"长春桥\", \"火器营\", \"大钟寺\", \"光熙门\", \"柳芳\", \"东管头\", \"丽泽商务区\", \"菜户营\", \"西铁营\", \"景风门\", \"景泰\", \"苏州桥\", \"万寿寺\", \"甘家口\", \"玉渊潭东门\", \"红莲南路\", \"东管头南\", \"西坝河\", \"左家庄\", \"工人体育场\", \"北太平庄\", \"太平桥\", \"牛街\")\n    private lateinit var textView: TextView\n    private lateinit var button: Button\n    \n    override fun onCreate(savedInstanceState: Bundle?) {\n        super.onCreate(savedInstanceState)\n        setContentView(R.layout.activity_main)\n        \n        textView = findViewById(R.id.textView)\n        button = findViewById(R.id.button)\n        \n        refreshTextView()\n        \n        button.setOnClickListener {\n            refreshTextView()\n        }\n    }\n    \n    private fun refreshTextView() {\n        val selectedLocations = locations.shuffled().take(10)\n        textView.text = selectedLocations.joinToString(\", \")\n    }\n}",
    "filename": "cd62f0c73d30cb00a66b26357fea8e71_0.scala"
  },
  {
    "conversation_hash": "aacd8292ec34fadc1a2a2209a5992cb2",
    "code_index": 2,
    "language": "Scala",
    "libraries": [],
    "code": "// Immediate assertion 예시\nalways @(posedge clk) begin\n  assert (reset_n == 1) else $error(\"Reset is not high!\");\n}\n\n// Concurrent assertion 예시\nassert property (@(posedge clk) disable iff (!rst_n) request -> ##[1:5] acknowledge);",
    "filename": "aacd8292ec34fadc1a2a2209a5992cb2_2.scala"
  },
  {
    "conversation_hash": "7a919b48e1fd928b9de98b67020e9b67",
    "code_index": 1,
    "language": "Scala",
    "libraries": [
      "NumberInput",
      "React"
    ],
    "code": "import React from 'react';\nimport NumberInput from './NumberInput';\n\nclass App extends React.Component {\n  render() {\n    return (\n      <div>\n        <h1>Enter Numbers Only</h1>\n        <NumberInput />\n      </div>\n    );\n  }\n}\n\nexport default App;",
    "filename": "7a919b48e1fd928b9de98b67020e9b67_1.scala"
  },
  {
    "conversation_hash": "3be16c7fde1fedefb31e403b2aea29bc",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "find_package(GTest REQUIRED)\ninclude_directories(${GTEST_INCLUDE_DIRS})\n\nadd_executable(mytest main.cpp)\ntarget_link_libraries(mytest ${GTEST_LIBRARIES} pthread)",
    "filename": "3be16c7fde1fedefb31e403b2aea29bc_0.scala"
  },
  {
    "conversation_hash": "b3e6715c6b341a519249c1734b85d2c3",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "(define (list-nth-mod xs n)\n  (if (< n 0)\n      (error \"list-nth-mod: negative number\")\n      (if (null? xs)\n          (error \"list-nth-mod: empty list\")\n          (let ((index (remainder n (length xs))))\n            (list-ref xs index))))",
    "filename": "b3e6715c6b341a519249c1734b85d2c3_0.scala"
  },
  {
    "conversation_hash": "b3e6715c6b341a519249c1734b85d2c3",
    "code_index": 2,
    "language": "Scala",
    "libraries": [],
    "code": "(define (funny-number-stream)\n  (letrec ([f (lambda (n)\n                (cons n\n                      (lambda ()\n                        (stream-cons (if (zero? (modulo n 6)) (- n) n)\n                                     (f (+ n 1))))))])\n    (f 1)))",
    "filename": "b3e6715c6b341a519249c1734b85d2c3_2.scala"
  },
  {
    "conversation_hash": "b3e6715c6b341a519249c1734b85d2c3",
    "code_index": 4,
    "language": "Scala",
    "libraries": [
      "the"
    ],
    "code": "(define (cycle-lists xs ys)\n  (letrec ([cycle (lambda (xs ys)\n                    (if (null? xs) (cycle (reverse xs) ys) ;; When xs ends, restart with ys\n                        (if (null? ys) (cycle xs (reverse ys)) ;; When ys ends, restart with xs\n                            (lambda () ;; Make it a thunk\n                              (cons (cons (car xs) (car ys)) ;; Create the pair from the heads of xs and ys\n                                    (cycle (if (null? (cdr xs)) '() (cdr xs)) ;; Move to next of xs\n                                            (if (null? (cdr ys)) '() (cdr ys))))))))]) ;; Move to next of ys\n  (cycle xs ys)))",
    "filename": "b3e6715c6b341a519249c1734b85d2c3_4.scala"
  },
  {
    "conversation_hash": "b3e6715c6b341a519249c1734b85d2c3",
    "code_index": 6,
    "language": "Scala",
    "libraries": [],
    "code": "(define (list-nth-mod xs n)\n  (if (< n 0)\n      (error \"list-nth-mod: negative number\")\n      (if (null? xs)\n          (error \"list-nth-mod: empty list\")\n          (let ((index (remainder n (length xs))))\n            (list-ref xs index)))))",
    "filename": "b3e6715c6b341a519249c1734b85d2c3_6.scala"
  },
  {
    "conversation_hash": "b3e6715c6b341a519249c1734b85d2c3",
    "code_index": 7,
    "language": "Scala",
    "libraries": [],
    "code": "(define (cycle-lists xs ys)\n  (letrec ([cycler (lambda (xs ys xs-init ys-init)\n                     (lambda ()\n                       (let ((next-xs (if (null? xs) xs-init (cdr xs)))\n                             (next-ys (if (null? ys) ys-init (cdr ys))))\n                         (cons \n                           (cons (if (null? xs) (car xs-init) (car xs))\n                                 (if (null? ys) (car ys-init) (car ys)))\n                           (cycler next-xs next-ys xs-init ys-init))))])\n    (cycler xs ys xs ys)))",
    "filename": "b3e6715c6b341a519249c1734b85d2c3_7.scala"
  },
  {
    "conversation_hash": "b3e6715c6b341a519249c1734b85d2c3",
    "code_index": 10,
    "language": "Scala",
    "libraries": [],
    "code": "(define zoran-then-bentley\n  (letrec ([next (lambda (current)\n                   (cons current\n                         (lambda () (next (if (equal? current \"zoran.jpg\")\n                                              \"bentley.jpg\"\n                                              \"zoran.jpg\")))))])\n    (next \"zoran.jpg\")))",
    "filename": "b3e6715c6b341a519249c1734b85d2c3_10.scala"
  },
  {
    "conversation_hash": "2f7a55aee32c1cde6ec2ffc0a899c62c",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "$.fn.datepicker.dates['es'] = {\n    days: [\"Domingo\", \"Lunes\", \"Martes\", \"Miércoles\", \"Jueves\", \"Viernes\", \"Sábado\"],\n    daysShort: [\"Dom\", \"Lun\", \"Mar\", \"Mié\", \"Jue\", \"Vie\", \"Sáb\"],\n    daysMin: [\"Do\", \"Lu\", \"Ma\", \"Mi\", \"Ju\", \"Vi\", \"Sa\"],\n    months: [\"Enero\", \"Febrero\", \"Marzo\", \"Abril\", \"Mayo\", \"Junio\", \"Julio\", \"Agosto\", \"Septiembre\", \"Octubre\", \"Noviembre\", \"Diciembre\"],\n    monthsShort: [\"Ene\", \"Feb\", \"Mar\", \"Abr\", \"May\", \"Jun\", \"Jul\", \"Ago\", \"Sep\", \"Oct\", \"Nov\", \"Dic\"],\n    today: \"Hoy\",\n    clear: \"Limpiar\",\n    format: \"dd/mm/yyyy\",\n    titleFormat: \"MM yyyy\", /* Aprovecha la misma sintaxis que 'format' */\n    weekStart: 1 // En muchos países de habla hispana, la semana comienza el lunes\n};",
    "filename": "2f7a55aee32c1cde6ec2ffc0a899c62c_0.scala"
  },
  {
    "conversation_hash": "53dfaed1f65828dcd984cba8e4083dc0",
    "code_index": 2,
    "language": "Scala",
    "libraries": [],
    "code": "model User {\n  id       Int      @id @default(autoincrement())\n  username String\n  email    String   @unique\n  password String\n  likes    Like[]\n}\n\nmodel Like {\n  id        Int   @id @default(autoincrement())\n  user      User  @relation(fields: [userId], references: [id])\n  userId    Int\n  likedAt   DateTime\n}",
    "filename": "53dfaed1f65828dcd984cba8e4083dc0_2.scala"
  },
  {
    "conversation_hash": "05254b90aa6f83ce2c4798d7ac81e1e1",
    "code_index": 9,
    "language": "Scala",
    "libraries": [
      "org.apache.log4j."
    ],
    "code": "import org.apache.log4j.{Level, Logger}\n\nval rootLogger = Logger.getRootLogger()\nrootLogger.setLevel(Level.ERROR)\n\nval customLogger = Logger.getLogger(\"com.mycompany\")\ncustomLogger.setLevel(Level.DEBUG)",
    "filename": "05254b90aa6f83ce2c4798d7ac81e1e1_9.scala"
  },
  {
    "conversation_hash": "e195757081301ae59c2852ca566f41f1",
    "code_index": 7,
    "language": "Scala",
    "libraries": [],
    "code": "# Set the variable in CMake\nset(MyCMakeVariable \"Some value\")\n\n# Configure a header file to pass the CMake settings to the source code\nconfigure_file(${CMAKE_CURRENT_SOURCE_DIR}/include/Config.h.in ${CMAKE_CURRENT_BINARY_DIR}/include/Config.h)",
    "filename": "e195757081301ae59c2852ca566f41f1_7.scala"
  },
  {
    "conversation_hash": "e195757081301ae59c2852ca566f41f1",
    "code_index": 17,
    "language": "Scala",
    "libraries": [
      "Config.h.in"
    ],
    "code": "# Example variable settings\nset(MY_VARIABLE TRUE)\nset(ANOTHER_VARIABLE FALSE)\n\n# Convert logical boolean values to 1 or 0\nset(MY_VARIABLE ${MY_VARIABLE})\nset(ANOTHER_VARIABLE ${ANOTHER_VARIABLE})\n\n# Use configure_file to generate Config.h from Config.h.in\nconfigure_file(Config.h.in Config.h @ONLY)\n\n# Make sure to add the directory where the generated Config.h is located to your include directories\ninclude_directories(${CMAKE_CURRENT_BINARY_DIR})",
    "filename": "e195757081301ae59c2852ca566f41f1_17.scala"
  },
  {
    "conversation_hash": "eb8d27f17f5bac268468b1c9d72a665a",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "numpy\nmatplotlib\nsoundfile\nlibrosa\nIPython",
    "filename": "eb8d27f17f5bac268468b1c9d72a665a_1.scala"
  },
  {
    "conversation_hash": "48a2e891194a5dadf8026e3248607a37",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "<input role=\"search\"\n       type=\"text\"\n       class=\"bux-form__text-field search-box\"\n       placeholder=\"Search...\"\n       v-model=\"searchTerm\"\n       :style=\"{'width': '100%', 'border': isFocused ? '1px solid blue !important' : 'none !important', 'margin': '0', 'text-align': 'center'}\"\n       @input=\"updateResults\"\n       @keydown.enter.prevent=\"selectOption()\"\n       @focus=\"isFocused = true\"\n       @blur=\"isFocused = false\"\n       autofocus />",
    "filename": "48a2e891194a5dadf8026e3248607a37_1.scala"
  },
  {
    "conversation_hash": "48a2e891194a5dadf8026e3248607a37",
    "code_index": 3,
    "language": "Scala",
    "libraries": [],
    "code": "<input role=\"search\"\n       type=\"text\"\n       class=\"bux-form__text-field search-box\"\n       :class=\"{'focused-input': isFocused}\"\n       placeholder=\"Search...\"\n       v-model=\"searchTerm\"\n       style=\"width: 100%; margin: 0; text-align: center;\"\n       @input=\"updateResults\"\n       @keydown.enter.prevent=\"selectOption()\"\n       @focus=\"isFocused = true\"\n       @blur=\"isFocused = false\"\n       autofocus />",
    "filename": "48a2e891194a5dadf8026e3248607a37_3.scala"
  },
  {
    "conversation_hash": "20a6b112ceb24f5dc657fd1d0f9f39db",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "ScriptName MySkinChangeSpellScript extends ActiveMagicEffect  \n\n; Event called when the spell or effect starts\nEvent OnEffectStart(Actor akTarget, Actor akCaster)\n    If akCaster.IsPlayer() \n        ; Assuming YourNewSkin.dds is the name of the new skin texture\n        ; and is placed in the correct path. Change \"YourModName\" to the name of your mod or desired path.\n        akCaster.SetSkinTexture(\"Textures\\Actors\\Character\\YourModName\\YourNewSkin.dds\")\n    EndIf\nEndEvent",
    "filename": "20a6b112ceb24f5dc657fd1d0f9f39db_0.scala"
  },
  {
    "conversation_hash": "f3bb1fdff0b3bf6adac39bba3b8f6511",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "clojure\n(def chart-with-click\n  [ApexChart {:options (clj->js\n                        {:chart {:id \"clickable-chart\", \n                                 :events {:click (fn [event, chartContext, config]\n                                                   (js/alert \"Data point clicked!\"))}}\n                         :xaxis {:categories [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\"]}\n                         :title {:text \"Monthly Trends\"\n                                 :align \"center\"}})\n              :series [{:name \"Sample Series\"\n                        :data [30, 40, 45, 50, 49]}]\n              :type \"line\"\n              :height 350}])",
    "filename": "f3bb1fdff0b3bf6adac39bba3b8f6511_0.scala"
  },
  {
    "conversation_hash": "f3bb1fdff0b3bf6adac39bba3b8f6511",
    "code_index": 2,
    "language": "Scala",
    "libraries": [],
    "code": "clojure\n(def themed-chart\n  [ApexChart {:options (clj->js\n                        {:theme {:mode \"dark\",\n                                 :palette \"palette1\"}\n                         :stroke {:width 2\n                                  :curve \"smooth\"}\n                         :chart {:id \"themed-chart\"}})\n              :series [{:name \"Series 1\"\n                        :data [10, 41, 35, 51, 49]}]\n              :type \"area\"\n              :height 350}])",
    "filename": "f3bb1fdff0b3bf6adac39bba3b8f6511_2.scala"
  },
  {
    "conversation_hash": "f3bb1fdff0b3bf6adac39bba3b8f6511",
    "code_index": 3,
    "language": "Scala",
    "libraries": [],
    "code": "clojure\n(def chart-with-tooltip\n  [ApexChart {:options (clj->js\n                        {:chart {:id \"chart-tooltip\"}\n                         :tooltip {:enabled true\n                                   :followCursor true\n                                   :y {:formatter (fn [val] (str val \" units\"))}}})\n              :series [{:name \"Product A\"\n                        :data [44, 55, 41, 64, 22]\n                        :type \"bar\"}]\n              :xaxis {:categories [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\"]}}])",
    "filename": "f3bb1fdff0b3bf6adac39bba3b8f6511_3.scala"
  },
  {
    "conversation_hash": "bdb2b6dad5a378a7482553fffbe31e0b",
    "code_index": 2,
    "language": "Scala",
    "libraries": [],
    "code": "(defn date-formatter [timestamp]\n  (.toDateString (js/Date. timestamp)))\n\n(def chart-options\n  {:chart {:id \"wip-total-chart\"\n           :stacked false\n           :toolbar {:show true\n                     :offsetX 0\n                     :offsetY 0\n                     :tools {:download true\n                             :selection true\n                             :zoom true\n                             :zoomin true\n                             :zoomout true\n                             :pan true\n                             :reset \"<img src=\\\"/static/icons/reset.png\\\" width=\\\"20\\\">\"\n                             :customIcons []}\n                     :export {:csv {:filename nil\n                                    :columnDelimiter \",\"\n                                    :headerCategory \"category\"\n                                    :headerValue \"value\"\n                                    :dateFormatter date-formatter}\n                              :svg {:filename nil}\n                              :png {:filename nil}}\n                     :autoSelected \"zoom\"}}})",
    "filename": "bdb2b6dad5a378a7482553fffbe31e0b_2.scala"
  },
  {
    "conversation_hash": "25231d14a9edf5932d467d1359be13ab",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "# Correct example CMake variable\nset(MY_DEFINE \"HelloWorld\")\n\n# Correctly add a definition for all targets\nadd_definitions(-DMY_DEFINE=\"${MY_DEFINE}\")",
    "filename": "25231d14a9edf5932d467d1359be13ab_0.scala"
  },
  {
    "conversation_hash": "d88bf98fbf40a79073d9555bca46aa57",
    "code_index": 2,
    "language": "Scala",
    "libraries": [
      "org.springframework.boot.autoconfigure.domain.EntityScan",
      "org.springframework.context.annotation.Configuration"
    ],
    "code": "import org.springframework.boot.autoconfigure.domain.EntityScan;\nimport org.springframework.context.annotation.Configuration;\n\n@Configuration\n@EntityScan(\"tu.paquete.de.entidades\")\npublic class JpaConfig {\n}",
    "filename": "d88bf98fbf40a79073d9555bca46aa57_2.scala"
  },
  {
    "conversation_hash": "1abb627281ea00fc1bb6cf0bf278d90c",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "set(ALL_MY_TARGETS \"Target1\" \"Target2\" \"LibraryA\")\n\nforeach(target IN LISTS ALL_MY_TARGETS)\n  target_compile_definitions(${target} PRIVATE MY_DEFINITION=1)\nendforeach()",
    "filename": "1abb627281ea00fc1bb6cf0bf278d90c_1.scala"
  },
  {
    "conversation_hash": "39c68e100ea73631afa1d65611502c76",
    "code_index": 8,
    "language": "Scala",
    "libraries": [],
    "code": "input {\n  file {\n    path => \"/caminho/para/seu/arquivo/de/log.json\"\n    start_position => \"beginning\"\n    codec => \"json\"\n  }\n}\n\nfilter {\n  # Qui você pode adicionar qualquer processamento de filtragem adicional necessário\n}\n\noutput {\n  elasticsearch { \n    hosts => [\"localhost:9200\"] \n    index => \"nome-do-indice-%{+YYYY.MM.dd}\"\n    # Use as configurações do Elasticsearch conforme necessário\n  }\n}",
    "filename": "39c68e100ea73631afa1d65611502c76_8.scala"
  },
  {
    "conversation_hash": "39c68e100ea73631afa1d65611502c76",
    "code_index": 12,
    "language": "Scala",
    "libraries": [],
    "code": "input {\n  beats {\n    port => 5044\n  }\n}\n\nfilter {\n  # Adicione aqui quaisquer filtros que você precise\n}\n\noutput {\n  elasticsearch {\n    hosts => [\"http://seu-elasticsearch:9200\"]\n    index => \"logs-meuapp-%{+YYYY.MM.dd}\"\n  }\n}",
    "filename": "39c68e100ea73631afa1d65611502c76_12.scala"
  },
  {
    "conversation_hash": "6dd1df70070003eb1508e6377ca7be6b",
    "code_index": 3,
    "language": "Scala",
    "libraries": [],
    "code": "val imageBitmap = data?.extras?.get(\"data\") as? Bitmap\nif (imageBitmap != null) {\n    val imageView: ImageView = findViewById(R.id.image_outline) // Replace with your ImageView’s ID\n    imageView.setImageBitmap(imageBitmap)\n} else {\n    // Handle the case where the image was not properly captured or retrieved\n}",
    "filename": "6dd1df70070003eb1508e6377ca7be6b_3.scala"
  },
  {
    "conversation_hash": "6dd1df70070003eb1508e6377ca7be6b",
    "code_index": 6,
    "language": "Scala",
    "libraries": [],
    "code": "// In your app-level build.gradle file, adjust the applicationId for the test application\n    android {\n        defaultConfig {\n            ...\n            testApplicationId \"com.clearup.android.clearup.test\"\n            ...\n        }\n    }",
    "filename": "6dd1df70070003eb1508e6377ca7be6b_6.scala"
  },
  {
    "conversation_hash": "1646cd393b9f66752f752172e2f68e1c",
    "code_index": 2,
    "language": "Scala",
    "libraries": [],
    "code": "{\n  name: \"Active\",\n  cell: (row) => (\n    <span\n      className={`badge ${row.isBlocked ? \"bg-danger\" : \"bg-success\"}`}\n    >\n      {row.isBlocked ? \"Blocked\" : \"Active\"}\n    </span>\n  ),\n}",
    "filename": "1646cd393b9f66752f752172e2f68e1c_2.scala"
  },
  {
    "conversation_hash": "ce99cb37ece149812765e0d801af7b67",
    "code_index": 7,
    "language": "Scala",
    "libraries": [],
    "code": "/* styles.css */\n@media (max-width: 1280px) {\n  .myComponent {\n    /* Styles for the component when the screen width is at most 1280px */\n  }\n}",
    "filename": "ce99cb37ece149812765e0d801af7b67_7.scala"
  },
  {
    "conversation_hash": "c9e2078ea0e0b47465c25da36cc21a37",
    "code_index": 4,
    "language": "Scala",
    "libraries": [],
    "code": "@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Post('login')\n  async login(@Body() loginDto: { username: string; password: string }, @Res() res: Response) {\n    try {\n      const token = await this.appService.login(loginDto.username, loginDto.password);\n      // Setting the token in a cookie\n      res.cookie('auth_token', token, { httpOnly: true }).send('Login successful');\n    } catch (error) {\n      res.status(400).send(error.message);\n    }\n  }\n}",
    "filename": "c9e2078ea0e0b47465c25da36cc21a37_4.scala"
  },
  {
    "conversation_hash": "c9e2078ea0e0b47465c25da36cc21a37",
    "code_index": 5,
    "language": "Scala",
    "libraries": [
      "a"
    ],
    "code": "import { CallHandler, ExecutionContext, Injectable, NestInterceptor } from '@nestjs/common';\nimport { HttpService } from '@nestjs/axios';\nimport { Observable } from 'rxjs';\nimport { AxiosRequestConfig } from 'axios';\n\n@Injectable()\nexport class HttpTokenInterceptor implements NestInterceptor {\n  constructor(private readonly httpService: HttpService) {}\n\n  intercept(context: ExecutionContext, next: CallHandler): Observable<any> {\n    // For demonstration, let's say the token is statically defined.\n    // In a real app, you'd likely fetch this from a config service or user session.\n    const token = 'your_jwt_token_here';\n\n    this.httpService.axiosRef.interceptors.request.use((config: AxiosRequestConfig) => {\n      if (token) {\n        config.headers.Authorization = `Bearer ${token}`;\n      }\n      return config;\n    });\n\n    return next.handle();\n  }\n}",
    "filename": "c9e2078ea0e0b47465c25da36cc21a37_5.scala"
  },
  {
    "conversation_hash": "c9e2078ea0e0b47465c25da36cc21a37",
    "code_index": 7,
    "language": "Scala",
    "libraries": [],
    "code": "import { Controller, UseInterceptors, Get } from '@nestjs/common';\nimport { HttpTokenInterceptor } from './common/interceptors/http-token.interceptor';\n\n@Controller('example')\n@UseInterceptors(HttpTokenInterceptor)\nexport class ExampleController {\n\n  @Get()\n  async exampleEndpoint() {\n    // Your endpoint logic here\n  }\n}",
    "filename": "c9e2078ea0e0b47465c25da36cc21a37_7.scala"
  },
  {
    "conversation_hash": "46a895065b6fda6131de78ca5383a120",
    "code_index": 2,
    "language": "Scala",
    "libraries": [],
    "code": "type\n  Key = enum\n    Key0\n    Key1\n    Key2\n    Key3\n\nproc toKey(c: int): Key =\n  result = c\n\n# Suppress the HoleEnumConv warning in the toKey procedure\ntemplate unsafeToKey(c: int): Key {.unsafe.} =\n  c\n\n# Call the unsafe template to convert integer to Key enum\nvar key: Key = unsafeToKey(2)",
    "filename": "46a895065b6fda6131de78ca5383a120_2.scala"
  },
  {
    "conversation_hash": "46a895065b6fda6131de78ca5383a120",
    "code_index": 3,
    "language": "Scala",
    "libraries": [],
    "code": "type\n  Key = enum\n    Key0\n    Key1\n    Key2\n    Key3\n\nproc toKey(c: int): Key =\n  if c >= 0 and c < 4:\n    return cast[Key](c)\n  else:\n    return Key.Key0  # Set a default enum value in case of an invalid integer\n\nvar key: Key = toKey(2)",
    "filename": "46a895065b6fda6131de78ca5383a120_3.scala"
  },
  {
    "conversation_hash": "ebe7e2e37488b87c9c90a00bf37cafd2",
    "code_index": 2,
    "language": "Scala",
    "libraries": [],
    "code": "val takePictureIntent = Intent(MediaStore.ACTION_IMAGE_CAPTURE)\n   try {\n       startActivityForResult(takePictureIntent, REQUEST_IMAGE_CAPTURE)\n   } catch (e: ActivityNotFoundException) {\n       // display error state to the user\n   }",
    "filename": "ebe7e2e37488b87c9c90a00bf37cafd2_2.scala"
  },
  {
    "conversation_hash": "39aecff431aa6dffd4619741244e14b3",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "'/categorie': (context) => Scaffold(\n  body: SingleChildScrollView( // Ajoutez le SingleChildScrollView ici\n    child: CategoryListPage(),\n  ),\n  bottomNavigationBar: CustomBottomNavigationBar(\n    selectedIndex: 0,\n    onItemTapped: (index) {},\n  ),\n),",
    "filename": "39aecff431aa6dffd4619741244e14b3_1.scala"
  },
  {
    "conversation_hash": "c5e56704c57311f06e378f8cd7d466dc",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "class ProfileView extends StatefulWidget {\n  final user_model.User user;\n  const ProfileView({super.key, required this.user});\n\n  @override\n  State<ProfileView> createState() => _ProfileState();\n}\n\nclass _ProfileState extends State<ProfileView> {\n\n  void _navigateAndDisplaySelection(BuildContext context, bool isReservation) async {\n    // Imaginons que la page Annonces peut traiter les réservations différemment selon le paramètre\n    final result = await Navigator.push(\n      context,\n      MaterialPageRoute(builder: (context) => AnnoncesView(isReservation: isReservation)),\n    );\n\n    // Utilisez `result` pour afficher un message ou effectuer une action lorsque l'utilisateur revient de la page Annonces\n  }\n\n  @override\n  Widget build(BuildContext context) {\n    return SingleChildScrollView( // Pour assurer le scroll si contenu trop grand\n      child: Column(\n        children: [\n          Text('Profile', style: TextStyle(fontSize: 22)),\n          Text('Email: ${widget.user.email}'),\n          Text('Name: ${widget.user.username}'),\n          const SizedBox(height: 20),\n          ElevatedButton(\n            onPressed: () => _navigateAndDisplaySelection(context, true),\n            child: Text('Mes réservations'),\n            style: ElevatedButton.styleFrom(\n              shape: RoundedRectangleBorder(\n                borderRadius: BorderRadius.circular(30.0),\n              ),\n              minimumSize: Size(double.infinity, 50), // double.infinity is the key for full width\n            ),\n          ),\n           const SizedBox(height: 10),\n          ElevatedButton(\n            onPressed: () => _navigateAndDisplaySelection(context, false),\n            child: Text('Mes annonces'),\n            style: ElevatedButton.styleFrom(\n              shape: RoundedRectangleBorder(\n                borderRadius: BorderRadius.circular(30.0),\n              ),\n              minimumSize: Size(double.infinity, 50), // double.infinity is the key for full width\n            ),\n          ),\n          const SignOut(),\n        ],\n      ),\n    );\n  }\n}",
    "filename": "c5e56704c57311f06e378f8cd7d466dc_0.scala"
  },
  {
    "conversation_hash": "c5e56704c57311f06e378f8cd7d466dc",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "class AnnoncesView extends StatefulWidget {\n  final bool isReservation;\n  const AnnoncesView({Key? key, required this.isReservation}) : super(key: key);\n\n  @override\n  _AnnoncesViewState createState() => _AnnoncesViewState();\n}\n\nclass _AnnoncesViewState extends State<AnnoncesView> {\n\n  @override\n  void initState() {\n    super.initState();\n    // Utilisez widget.isReservation ici pour charger les données spécifiques\n  }\n\n  @override\n  Widget build(BuildContext context) {\n    // Construire l'UI en fonction de widget.isReservation\n    return Scaffold(\n      appBar: AppBar(\n        title: Text(widget.isReservation ? 'Mes réservations' : 'Mes annonces'),\n      ),\n      body: // Votre contenu ici\n    );\n  }\n}",
    "filename": "c5e56704c57311f06e378f8cd7d466dc_1.scala"
  },
  {
    "conversation_hash": "c492bcf1207a3ab26152f2c4915ec3bc",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "__pycache__\n*.pyc\n*.pyo\n*.pyd\n.Python\nenv\n.venv\npoetry.lock\npyproject.toml\n.DS_Store\ninstance\n.webassets-cache",
    "filename": "c492bcf1207a3ab26152f2c4915ec3bc_1.scala"
  },
  {
    "conversation_hash": "e9b9d1b1a9ced90417aa25129c98861a",
    "code_index": 3,
    "language": "Scala",
    "libraries": [
      "com.bumptech.glide.Glide",
      "com.bumptech.glide.load.resource.bitmap.RoundedCorners",
      "com.bumptech.glide.request.RequestOptions"
    ],
    "code": "import com.bumptech.glide.Glide\nimport com.bumptech.glide.load.resource.bitmap.RoundedCorners\nimport com.bumptech.glide.request.RequestOptions\n\nGlide.with(this)\n    .load(\"URL_или_ресурс_изображения\")\n    .apply(RequestOptions.bitmapTransform(RoundedCorners(14))) // Здесь устанавливается радиус скругления\n    .into(myImageView)",
    "filename": "e9b9d1b1a9ced90417aa25129c98861a_3.scala"
  },
  {
    "conversation_hash": "4b5f9d0779b6f7b2182b6a1116922fdb",
    "code_index": 2,
    "language": "Scala",
    "libraries": [],
    "code": "com.tuapp\n   ├── ui\n       ├── activities\n       │   ├── MainActivity.java\n       │   ├── DetailActivity.java\n       ├── fragments\n       │   ├── ListFragment.java\n       │   ├── DetailFragment.java",
    "filename": "4b5f9d0779b6f7b2182b6a1116922fdb_2.scala"
  },
  {
    "conversation_hash": "4b5f9d0779b6f7b2182b6a1116922fdb",
    "code_index": 4,
    "language": "Scala",
    "libraries": [],
    "code": "com.tuapp\n   ├── data\n       ├── firestore\n       │   ├── FirestoreService.java\n       │   ├── TaskRepository.java\n       ├── local\n       │   ├── database\n       │       ├── AppDatabase.java\n       ├── repository\n       │   ├── IRepository.java\n       │   ├── TaskRepositoryImpl.java",
    "filename": "4b5f9d0779b6f7b2182b6a1116922fdb_4.scala"
  },
  {
    "conversation_hash": "4b5f9d0779b6f7b2182b6a1116922fdb",
    "code_index": 7,
    "language": "Scala",
    "libraries": [],
    "code": "android {\n       compileSdkVersion 30\n       defaultConfig {\n           applicationId \"com.tu.app\"\n           minSdkVersion 23 // Ajusta esto según sea necesario\n           targetSdkVersion 30\n           versionCode 1\n           versionName \"1.0\"\n       }\n       ...\n   }",
    "filename": "4b5f9d0779b6f7b2182b6a1116922fdb_7.scala"
  },
  {
    "conversation_hash": "095b3dbd5ce242cb4f7874b1a0e05b81",
    "code_index": 6,
    "language": "Scala",
    "libraries": [],
    "code": "@classmethod\ndef load_message_template(cls, config_path: str = \"config/message.json\"):\n    config = load_json_file(config_path)\n    cls.log = config.get(\"log\", {})\n    cls.process = config.get(\"process\", {})\n    cls.resource = config.get(\"resource\", {})",
    "filename": "095b3dbd5ce242cb4f7874b1a0e05b81_6.scala"
  },
  {
    "conversation_hash": "5a1bd19aa2ed784b099fbc89a0efb2e6",
    "code_index": 8,
    "language": "Scala",
    "libraries": [
      "React"
    ],
    "code": "import React from 'react';\n\ninterface ISideNavigationBarProps {\n  version: string;\n  onContextMenu?: (e: React.MouseEvent) => void;\n}\n\nconst SideNavigationBar: React.FC<ISideNavigationBarProps> = ({ version, onContextMenu }) => {\n  \n  return (\n    <div onContextMenu={onContextMenu}>\n      Side Navigation Bar - Version {version}\n    </div>\n  );\n}\n\nexport default SideNavigationBar;",
    "filename": "5a1bd19aa2ed784b099fbc89a0efb2e6_8.scala"
  },
  {
    "conversation_hash": "e0be05fd4fcdde9dcce586455dab6b82",
    "code_index": 4,
    "language": "Scala",
    "libraries": [],
    "code": "import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomepageComponent } from './homepage/homepage.component'; // Importez votre component\n\nconst routes: Routes = [\n  { path: '', redirectTo: '/homepage', pathMatch: 'full' }, // Redirige l'URL racine vers /homepage\n  { path: 'homepage', component: HomepageComponent } // Définit la route pour votre homepage\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }",
    "filename": "e0be05fd4fcdde9dcce586455dab6b82_4.scala"
  },
  {
    "conversation_hash": "e0be05fd4fcdde9dcce586455dab6b82",
    "code_index": 7,
    "language": "Scala",
    "libraries": [],
    "code": "import { Component, OnInit } from '@angular/core';\nimport { DataService } from '../data.service';\n\n@Component({\n  selector: 'app-homepage',\n  templateUrl: './homepage.component.html',\n  styleUrls: ['./homepage.component.css']\n})\nexport class HomepageComponent implements OnInit {\n  data: string;\n\n  constructor(private dataService: DataService) { }\n\n  ngOnInit() {\n    this.dataService.currentData.subscribe(data => this.data = data);\n  }\n}",
    "filename": "e0be05fd4fcdde9dcce586455dab6b82_7.scala"
  },
  {
    "conversation_hash": "1cbe98feae809996420725d785d69e4b",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "@startuml\n!theme plain\n\nclass HPNonStopServer {\n    +start()\n    +shutdown()\n}\n\nclass PathMon {\n    +monitorPathway()\n    +launchServerClass()\n}\n\nclass Pathway {\n    +createPathwayControl()\n    +manageServerProcess()\n}\n\nclass Server {\n    +processRequest()\n    +sendResponse()\n}\n\nHPNonStopServer \"1\" -- \"1..n\" Pathway : contains\nPathway \"1\" -- \"1\" PathMon : uses\nPathway \"1\" -- \"1..n\" Server : manages\n\n@enduml",
    "filename": "1cbe98feae809996420725d785d69e4b_0.scala"
  },
  {
    "conversation_hash": "1cbe98feae809996420725d785d69e4b",
    "code_index": 2,
    "language": "Scala",
    "libraries": [],
    "code": "@startuml\n!theme plain\n\nclass HPNonStopServer {\n    +start()\n    +shutdown()\n}\n\nclass PathMon {\n    +monitorPathway()\n    +launchServerClass()\n}\n\nclass Pathway {\n    +createPathwayControl()\n    +manageServerProcess()\n}\n\nclass Server {\n    +processRequest()\n    +sendResponse()\n}\n\nclass ServerClass {\n    +initialize()\n    +handleRequests()\n}\n\nclass PathCtl {\n    +controlPathway()\n    +manageServers()\n}\n\nHPNonStopServer \"1\" -- \"1..n\" Pathway : contains\nPathway \"1\" -- \"1\" PathMon : uses\nPathway \"1\" -- \"1..n\" ServerClass : launches\nServerClass \"1\" -- \"1..n\" Server : includes\nPathway \"1\" .down.> \"1\" PathCtl : controlled by >>\n\n@enduml",
    "filename": "1cbe98feae809996420725d785d69e4b_2.scala"
  },
  {
    "conversation_hash": "7cc5e7cd6607a3d5337e918c42a03464",
    "code_index": 7,
    "language": "Scala",
    "libraries": [],
    "code": "service cloud.firestore {\n  match /databases/{database}/documents {\n    // Permitir leer/escribir si el usuario está autenticado\n    match /{document=**} {\n      allow read, write: if request.auth != null;\n    }\n  }\n}",
    "filename": "7cc5e7cd6607a3d5337e918c42a03464_7.scala"
  },
  {
    "conversation_hash": "7cc5e7cd6607a3d5337e918c42a03464",
    "code_index": 8,
    "language": "Scala",
    "libraries": [],
    "code": "service cloud.firestore {\n  match /databases/{database}/documents {\n    match /{document=**} {\n      allow read, write: if true;\n    }\n  }\n}",
    "filename": "7cc5e7cd6607a3d5337e918c42a03464_8.scala"
  },
  {
    "conversation_hash": "f6101333be88257f7bada8e93e2a9a4a",
    "code_index": 28,
    "language": "Scala",
    "libraries": [],
    "code": "service cloud.firestore {\n      match /databases/{database}/documents {\n        match /{document=**} {\n          allow read, write: if request.auth != null;\n        }\n      }\n    }",
    "filename": "f6101333be88257f7bada8e93e2a9a4a_28.scala"
  },
  {
    "conversation_hash": "f6101333be88257f7bada8e93e2a9a4a",
    "code_index": 34,
    "language": "Scala",
    "libraries": [],
    "code": "service cloud.firestore {\n  match /databases/{database}/documents {\n    match /{document=**} {\n      allow read, write: if true;\n    }\n  }\n}",
    "filename": "f6101333be88257f7bada8e93e2a9a4a_34.scala"
  },
  {
    "conversation_hash": "5351ce6d238f17f0cb6fe5a427902798",
    "code_index": 3,
    "language": "Scala",
    "libraries": [
      "XMonad"
    ],
    "code": "import XMonad\n\nmain = xmonad def\n    { terminal    = \"xterm\"\n    , modMask     = mod4Mask\n    }",
    "filename": "5351ce6d238f17f0cb6fe5a427902798_3.scala"
  },
  {
    "conversation_hash": "5351ce6d238f17f0cb6fe5a427902798",
    "code_index": 6,
    "language": "Scala",
    "libraries": [
      "XMonad"
    ],
    "code": "import XMonad\n\nmain = xmonad def\n    { terminal    = \"xterm\"\n    , modMask     = mod4Mask\n    }",
    "filename": "5351ce6d238f17f0cb6fe5a427902798_6.scala"
  },
  {
    "conversation_hash": "3b62beb68007ba89d9bcd2642ab11519",
    "code_index": 37,
    "language": "Scala",
    "libraries": [],
    "code": "import { defineConfig } from 'vite';\n\nexport default defineConfig({\n  server: {\n    configureServer(server) {\n      server.middlewares.use((req, res, next) => {\n        // Überprüfe den Pfad der eingehenden Anfrage\n        if (req.url.startsWith('/spezifischer-pfad')) {\n          // Füge den gewünschten Header zur Antwort hinzu\n          res.setHeader('X-Custom-Header', 'MeinWert');\n        }\n        next(); // Stelle sicher, dass du `next()` aufrufst, um die Request-Verarbeitung fortzusetzen\n      });\n    }\n  }\n});",
    "filename": "3b62beb68007ba89d9bcd2642ab11519_37.scala"
  },
  {
    "conversation_hash": "3b62beb68007ba89d9bcd2642ab11519",
    "code_index": 38,
    "language": "Scala",
    "libraries": [],
    "code": "import { defineConfig } from 'vite';\n\nexport default defineConfig({\n  server: {\n    configureServer(server) {\n      server.middlewares.use((req, res, next) => {\n        // Überprüfung, ob der Pfad der Anfrage dem Zielkriterium entspricht\n        if (req.url.startsWith('/data/modules/TestModule/Export')) {\n          // Setze mehrere Header für diese spezifische Anfrage\n          res.setHeader(\"Cross-Origin-Embedder-Policy\", \"require-corp\");\n          res.setHeader(\"Cross-Origin-Opener-Policy\", \"same-origin\");\n        }\n        // Rufe next() auf, um zur nächsten Middleware oder Route zu gelangen\n        next();\n      });\n    }\n  }\n});",
    "filename": "3b62beb68007ba89d9bcd2642ab11519_38.scala"
  },
  {
    "conversation_hash": "3b62beb68007ba89d9bcd2642ab11519",
    "code_index": 39,
    "language": "Scala",
    "libraries": [],
    "code": "export default defineConfig({\n  server: {\n    proxy: {\n      '/api': {\n        target: 'http://backend.example.com',\n        changeOrigin: true,\n        configure: (proxy, options) => {\n          // Hier kannst du die http-proxy Optionen modifizieren\n        }\n      }\n    }\n  }\n});",
    "filename": "3b62beb68007ba89d9bcd2642ab11519_39.scala"
  },
  {
    "conversation_hash": "9034ee49a12031a7b0dff59a6c90e937",
    "code_index": 25,
    "language": "Scala",
    "libraries": [],
    "code": "<com.google.android.material.button.MaterialButton\n    android:id=\"@+id/btnColorPantalla\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"wrap_content\"\n    android:layout_marginBottom=\"20dp\"\n    android:text=\"Color\"\n    android:textColor=\"@color/black\"\n    android:textStyle=\"bold\"\n    android:textSize=\"18sp\"\n    app:strokeColor=\"@color/black\" \n    app:strokeWidth=\"2dp\"\n    style=\"?attr/materialButtonOutlinedStyle\"/>",
    "filename": "9034ee49a12031a7b0dff59a6c90e937_25.scala"
  },
  {
    "conversation_hash": "4a46f9b617deb62fdcf55aed47bb77da",
    "code_index": 6,
    "language": "Scala",
    "libraries": [
      "org.springframework.context.annotation.Configuration",
      "org.springframework.scheduling.annotation.EnableAsync"
    ],
    "code": "import org.springframework.context.annotation.Configuration;\nimport org.springframework.scheduling.annotation.EnableAsync;\n\n@Configuration\n@EnableAsync\npublic class AsyncConfig {\n    // 此处可以配置一些异步任务的参数，例如线程池的大小等\n}",
    "filename": "4a46f9b617deb62fdcf55aed47bb77da_6.scala"
  },
  {
    "conversation_hash": "2e89cdc5ae8014409b0e3062ed7cb202",
    "code_index": 2,
    "language": "Scala",
    "libraries": [],
    "code": "<androidx.appcompat.widget.Toolbar\n    ...\n    android:tag=\"toolbarTitle\">\n    \n    <!-- Tus elementos de Toolbar aquí -->\n    \n</androidx.appcompat.widget.Toolbar>",
    "filename": "2e89cdc5ae8014409b0e3062ed7cb202_2.scala"
  },
  {
    "conversation_hash": "77ce98117eec46d7f870f8cbd01a4d24",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "@Library('my-shared-library') _\n\nnode {\n    stage('Initialize Environment') {\n        def utils = load('Utils.groovy')\n        utils.initializeEnvironment()\n    }\n    \n    // Other stages of the pipeline\n}",
    "filename": "77ce98117eec46d7f870f8cbd01a4d24_1.scala"
  },
  {
    "conversation_hash": "5911e8685b24c1577e23509a5ebb54d3",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "android {\n       compileSdkVersion 30\n       ...\n\n       defaultConfig {\n         ...\n         ndkVersion \"21.3.6528147\"\n         ...\n       }\n     }",
    "filename": "5911e8685b24c1577e23509a5ebb54d3_0.scala"
  },
  {
    "conversation_hash": "0e78556b425df9c5e6c86af86397e1f0",
    "code_index": 10,
    "language": "Scala",
    "libraries": [],
    "code": "foreach (var item in collection.ToList())\n{\n    if (需要修改的条件)\n    {\n        // 在这里修改原始集合\n    }\n}",
    "filename": "0e78556b425df9c5e6c86af86397e1f0_10.scala"
  },
  {
    "conversation_hash": "76e1a920df70d49ab6f748cf689301cd",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "dependencies {\n    def billing_version = \"6.0\" // Kütüphane versiyonu değişebilir, güncel version için resmi dokümantasyona bakın.\n    \n    implementation \"com.android.billingclient:billing:$billing_version\"\n}",
    "filename": "76e1a920df70d49ab6f748cf689301cd_0.scala"
  },
  {
    "conversation_hash": "d63dfabbe9c4c0882443be13895a36fe",
    "code_index": 4,
    "language": "Scala",
    "libraries": [],
    "code": "Redmine::Plugin.register :my_openproject_kanban do\n  name 'OpenProject Kanban Plugin'\n  author 'Ihr Name'\n  description 'Ein einfaches Kanban-Board für OpenProject'\n  version '0.0.1'\n  url 'URL zu Ihrem Plugin Repository'\n  author_url 'URL zu Ihrer Webseite'\nend",
    "filename": "d63dfabbe9c4c0882443be13895a36fe_4.scala"
  },
  {
    "conversation_hash": "9379ae98abaecd24b13d3ec11c0d7e32",
    "code_index": 20,
    "language": "Scala",
    "libraries": [],
    "code": "Redmine::Plugin.register :my_openproject_kanban do\n  name 'OpenProject Kanban Plugin'\n  author 'Ihr Name'\n  description 'Ein einfaches Kanban-Board für OpenProject'\n  version '0.0.1'\n  url 'URL zu Ihrem Plugin Repository'\n  author_url 'URL zu Ihrer Webseite'\nend",
    "filename": "9379ae98abaecd24b13d3ec11c0d7e32_20.scala"
  },
  {
    "conversation_hash": "81d8210348bd361eb97e3f8b06622268",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "[\n       {\n           \"alumno\": \"nombre del primer integrante del grupo\",\n           \"codigo\": \"A20220001\"\n       },\n       {\n           \"alumno\": \"nombre del segundo integrante del grupo\",\n           \"codigo\": \"A20220002\"\n       }\n   ]",
    "filename": "81d8210348bd361eb97e3f8b06622268_0.scala"
  },
  {
    "conversation_hash": "951425b1c3d1af749e61179e6ce51c33",
    "code_index": 6,
    "language": "Scala",
    "libraries": [],
    "code": "airflow users create \\\n       --username admin \\\n       --firstname FIRST_NAME \\\n       --lastname LAST_NAME \\\n       --role Admin \\\n       --email <PRESIDIO_ANONYMIZED_EMAIL_ADDRESS>",
    "filename": "951425b1c3d1af749e61179e6ce51c33_6.scala"
  },
  {
    "conversation_hash": "89b1df7d10d61de282b85410187a74bc",
    "code_index": 26,
    "language": "Scala",
    "libraries": [
      "org.springframework.boot.autoconfigure.SpringBootApplication"
    ],
    "code": "import org.springframework.boot.autoconfigure.SpringBootApplication;\n\n@SpringBootApplication\npublic class SpringApplicationMain {\n    // 主启动方法现在为空，因为Spring Boot是从JavaFX应用启动的\n}",
    "filename": "89b1df7d10d61de282b85410187a74bc_26.scala"
  },
  {
    "conversation_hash": "931451896302383f901368908f99ac91",
    "code_index": 5,
    "language": "Scala",
    "libraries": [],
    "code": "# 修改后的配置\nspring.datasource.url=jdbc:h2:tcp://localhost/${app.h2db-path};DB_CLOSE_ON_EXIT=FALSE;AUTO_RECONNECT=TRUE;MODE=MySQL\nspring.datasource.driverClassName=org.h2.Driver\nspring.datasource.username=capital4j-client\nspring.datasource.password=capital4j-client",
    "filename": "931451896302383f901368908f99ac91_5.scala"
  },
  {
    "conversation_hash": "a23bcb258388d44ee3a359803061d14d",
    "code_index": 2,
    "language": "Scala",
    "libraries": [],
    "code": "{formData.rows.map((row, index) => (\n  <View style={styles.tableRow} key={index}>\n    <Text style={[styles.tableColSTT, { textAlign: \"center\" }]}>{index + 1}</Text>\n    <Text style={[styles.tableColTenHang, { textAlign: \"center\" }]}>{row.tenHang}</Text>\n    <Text style={[styles.tableColMaSo, { textAlign: \"center\" }]}>{row.ma}</Text>\n    <Text style={[styles.tableColDonViTinh, { textAlign: \"center\" }]}>{row.donVi}</Text>\n    <View style={styles.tableColSoLuong}>\n      <View style={{ flexDirection: \"row\" }}> // Đây là sự thay đổi chính để hiển thị \"Chứng từ\" và \"Thực nhập\"\n        <Text style={[styles.tableColChungTu, { textAlign: \"center\", borderRight: \"none\" }]}>{row.chungTu}</Text>\n        <Text style={[styles.tableColThucNhap, { textAlign: \"center\" }]}>{row.thucNhap}</Text>\n      </View>\n    </View>\n    <Text style={[styles.tableColTrangThai, { textAlign: \"center\" }]}>{row.tinhTrang}</Text>\n  </View>\n))}",
    "filename": "a23bcb258388d44ee3a359803061d14d_2.scala"
  },
  {
    "conversation_hash": "997121e7a2e9718e713bdde8ba465a4f",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "(ns blueridge.ui.new\n  (:require\n   [ui.components :as components]\n   [cljs.pprint :refer [cl-format]]\n   [clojure.string :as string]\n   [reagent.core :as ra]\n   [\"reactstrap\" :as rs]))\n\n(defn dropdown-item [config]\n  (let [label (:label config)]\n    [components/dropdown-item config label]))\n\n(def default-styles-dropdown-button\n  ...)\n\n(defn dropdown-button\n  [config]\n  (let [is-open (ra/atom false)]\n    (fn [config] ;; Using a form-2 component to deal with changing props/config.\n      ;; Merge the passed config with default configurations here if needed.\n      (let [merged-config (merge default-styles-dropdown-button config)\n            button-options (:dropdown-button merged-config)\n            toggle-options (:dropdown-toggle merged-config)\n            menu-options (:dropdown-menu merged-config)\n            items (:items merged-config)]\n        [components/dropdown-button\n         (merge button-options\n                {:is-open @is-open\n                 :toggle #(reset! is-open (not @is-open))})\n         [components/dropdown-toggle\n          toggle-options\n          (:title merged-config)]\n         [components/dropdown-menu\n          menu-options\n          (map dropdown-item items)]]))))\n\n;; Remember to pass `config` again in the rendered place if it's dynamic or expects updates.",
    "filename": "997121e7a2e9718e713bdde8ba465a4f_0.scala"
  },
  {
    "conversation_hash": "0da05729e4476734b96b2decb86b2005",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "<select onChange={(e) => setEtat(e.target.value)} value={Etat} className='w-75'>\n    <option>-État-</option>\n    <option value=\"Neuf\">Neuf</option>\n    <option value=\"Très bon\">Très bon</option>\n    <option value=\"Bon\">Bon</option>\n    <option value=\"Correct\">Correct</option>\n    <option value=\"Endommagé\">Endommagé</option>\n    <option value=\"Pour Pièces\">Pour Pièces</option>\n</select>",
    "filename": "0da05729e4476734b96b2decb86b2005_0.scala"
  },
  {
    "conversation_hash": "0da05729e4476734b96b2decb86b2005",
    "code_index": 7,
    "language": "Scala",
    "libraries": [],
    "code": "{Video && (\n       <video width=\"320\" height=\"240\" controls>\n           <source src={URL.createObjectURL(Video)} type=\"video/mp4\" />\n           Your browser does not support the video tag.\n       </video>\n   )}",
    "filename": "0da05729e4476734b96b2decb86b2005_7.scala"
  },
  {
    "conversation_hash": "6b00d5f44c110396525e81278b81cfbb",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "import { NgbModule } from '@ng-bootstrap/ng-bootstrap';\n\n@NgModule({\n  declarations: [],\n  imports: [\n    NgbModule\n  ],\n  providers: [],\n  bootstrap: []\n})\nexport class AppModule { }",
    "filename": "6b00d5f44c110396525e81278b81cfbb_1.scala"
  },
  {
    "conversation_hash": "086c78e7913bdec188f7aa3c0956718e",
    "code_index": 9,
    "language": "Scala",
    "libraries": [
      "org.apache.spark.sql.SparkSession"
    ],
    "code": "import org.apache.spark.sql.SparkSession\n\nval spark = SparkSession.builder()\n  .appName(\"Spark SQL Query Example\")\n  .config(\"spark.some.config.option\", \"some-value\")\n  .getOrCreate()",
    "filename": "086c78e7913bdec188f7aa3c0956718e_9.scala"
  },
  {
    "conversation_hash": "93c384898e1499b4a9328a1084fd6ae3",
    "code_index": 5,
    "language": "Scala",
    "libraries": [],
    "code": "@startuml\n\ninterface MessagingApp {\n    +sendMessage(String message)\n    +receiveMessage(): String\n}\n\ninterface SMS {\n    +sendSMS(String phoneNumber, String message)\n    +receiveSMS(): String\n}\n\ninterface Email {\n    +sendEmail(String recipient, String subject, String message)\n    +receiveEmail(): String\n}\n\nclass SMSAdapter {\n    -smsService: SMS\n    +SMSAdapter(smsService: SMS)\n    +sendMessage(String message)\n    +receiveMessage(): String\n}\n\nclass EmailAdapter {\n    -emailService: Email\n    +EmailAdapter(emailService: Email)\n    +sendMessage(String message)\n    +receiveMessage(): String\n}\n\nclass Main {\n    +main(String[] args)\n}\n\nMessagingApp <|.. SMSAdapter\nMessagingApp <|.. EmailAdapter\nSMSAdapter --> SMS\nEmailAdapter --> Email\nMain --> SMSAdapter\nMain --> EmailAdapter\n\n@enduml",
    "filename": "93c384898e1499b4a9328a1084fd6ae3_5.scala"
  },
  {
    "conversation_hash": "93c384898e1499b4a9328a1084fd6ae3",
    "code_index": 7,
    "language": "Scala",
    "libraries": [],
    "code": "@startuml\n\ninterface MessagingApp {\n    +sendMessage(message: String)\n    +receiveMessage(): String\n}\n\ninterface SMS {\n    +sendSMS(phoneNumber: String, message: String)\n    +receiveSMS(): String\n}\n\ninterface Email {\n    +sendEmail(recipient: String, subject: String, message: String)\n    +receiveEmail(): String\n}\n\nclass SMSAdapter {\n    - smsService: SMS\n    + SMSAdapter(smsService: SMS)\n    + sendMessage(message: String)\n    + receiveMessage(): String\n}\n\nclass EmailAdapter {\n    - emailService: Email\n    + EmailAdapter(emailService: Email)\n    + sendMessage(message: String)\n    + receiveMessage(): String\n}\n\nMessagingApp <|.. SMSAdapter\nMessagingApp <|.. EmailAdapter\nSMSAdapter -right-> SMS\nEmailAdapter -right-> Email\n\n@enduml",
    "filename": "93c384898e1499b4a9328a1084fd6ae3_7.scala"
  },
  {
    "conversation_hash": "93c384898e1499b4a9328a1084fd6ae3",
    "code_index": 9,
    "language": "Scala",
    "libraries": [],
    "code": "@startuml\n\ninterface MessagingApp {\n    +sendMessage(message: String)\n    +receiveMessage(): String\n}\n\ninterface SMS {\n    +sendSMS(phoneNumber: String, message: String)\n    +receiveSMS(): String\n}\n\ninterface Email {\n    +sendEmail(recipient: String, subject: String, message: String)\n    +receiveEmail(): String\n}\n\nclass SMSAdapter {\n    - smsService: SMS\n    + SMSAdapter(smsService: SMS)\n    + sendMessage(message: String)\n    + receiveMessage(): String\n}\n\nclass EmailAdapter {\n    - emailService: Email\n    + EmailAdapter(emailService: Email)\n    + sendMessage(message: String)\n    + receiveMessage(): String\n}\n\nclass SMSService {\n    + sendSMS(phoneNumber: String, message: String)\n    + receiveSMS(): String\n}\n\nclass EmailService {\n    + sendEmail(recipient: String, subject: String, message: String)\n    + receiveEmail(): String\n}\n\nMain --> \"MessagingApp\" : Uses\nMain --> \"SMSAdapter\" : Uses\nMain --> \"EmailAdapter\" : Uses\nMain --> \"SMSService\" : Uses\nMain --> \"EmailService\" : Uses\n\n@enduml",
    "filename": "93c384898e1499b4a9328a1084fd6ae3_9.scala"
  },
  {
    "conversation_hash": "93c384898e1499b4a9328a1084fd6ae3",
    "code_index": 10,
    "language": "Scala",
    "libraries": [],
    "code": "@startuml\n\ninterface MessagingApp {\n    +sendMessage(message: String)\n    +receiveMessage(): String\n}\n\ninterface SMS {\n    +sendSMS(phoneNumber: String, message: String)\n    +receiveSMS(): String\n}\n\ninterface Email {\n    +sendEmail(recipient: String, subject: String, message: String)\n    +receiveEmail(): String\n}\n\nclass SMSAdapter {\n    - smsService: SMS\n    + SMSAdapter(smsService: SMS)\n    + sendMessage(message: String)\n    + receiveMessage(): String\n}\n\nclass EmailAdapter {\n    - emailService: Email\n    + EmailAdapter(emailService: Email)\n    + sendMessage(message: String)\n    + receiveMessage(): String\n}\n\ninterface SMS --|> MessagingApp\ninterface Email --|> MessagingApp\n\nclass SMSService implements SMS {\n    + sendSMS(phoneNumber: String, message: String)\n    + receiveSMS(): String\n}\n\nclass EmailService implements Email {\n    + sendEmail(recipient: String, subject: String, message: String)\n    + receiveEmail(): String\n}\n\nSMSAdapter --|> MessagingApp\nEmailAdapter --|> MessagingApp\n\nSMSAdapter --> SMS : Adapts\nEmailAdapter --> Email : Adapts\n\nMain --> MessagingApp : Uses\nMain --> SMSAdapter : Uses\nMain --> EmailAdapter : Uses\nMain --> SMSService : Uses\nMain --> EmailService : Uses\n\n@enduml",
    "filename": "93c384898e1499b4a9328a1084fd6ae3_10.scala"
  },
  {
    "conversation_hash": "9400e6939b13acfc1d7a7af543074ef5",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "config rule\n       option src 'lan'  # Assuming 192.168.31.0/24 is in 'lan'\n       option dest 'vpnzone'  # Assuming 172.16.0.0/24 is in 'vpnzone'\n       option proto 'all'\n       option target 'ACCEPT'",
    "filename": "9400e6939b13acfc1d7a7af543074ef5_0.scala"
  },
  {
    "conversation_hash": "432984ad455b8ca80ef1ec25abd548b7",
    "code_index": 20,
    "language": "Scala",
    "libraries": [],
    "code": "new TradingView.widget({\n  \"container_id\": \"tv-chart\",\n  \"autosize\": true,\n  \"symbol\": \"NASDAQ:AAPL\",\n  \"interval\": \"D\",\n  \"timezone\": \"Etc/UTC\",\n  \"theme\": \"light\",\n  \"style\": \"1\",\n  \"locale\": \"en\",\n  \"toolbar_bg\": \"#f1f3f6\",\n  \"enable_publishing\": false,\n  \"hide_top_toolbar\": false,\n  \"save_image\": false,\n  \"details\": true,\n  \"hotlist\": true,\n  \"calendar\": true,\n  \"news\": [\n    \"stocktwits\",\n    \"headlines\"\n  ],\n});",
    "filename": "432984ad455b8ca80ef1ec25abd548b7_20.scala"
  },
  {
    "conversation_hash": "4664d6bd43684eaded29955a31132fb0",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "task myTaskThatNeedsTheFile {\n    dependsOn ':app:compileAmcoeDebugJavaWithJavac'\n    doLast {\n        // Access the file here\n    }\n}",
    "filename": "4664d6bd43684eaded29955a31132fb0_0.scala"
  },
  {
    "conversation_hash": "f465178cfeb676da3eb825c0beb45a29",
    "code_index": 5,
    "language": "Scala",
    "libraries": [],
    "code": "// app.module.ts\n\nimport { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { SearchfilterPipe } from './searchfilter.pipe';\n\n@NgModule({\n  declarations: [\n    SearchfilterPipe\n    // Other components, directives, and pipes\n  ],\n  imports: [BrowserModule],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }",
    "filename": "f465178cfeb676da3eb825c0beb45a29_5.scala"
  },
  {
    "conversation_hash": "f465178cfeb676da3eb825c0beb45a29",
    "code_index": 17,
    "language": "Scala",
    "libraries": [],
    "code": "import { NgxPaginationModule } from 'ngx-pagination';\n\n@NgModule({\n  imports: [\n    NgxPaginationModule\n  ]\n})\nexport class AppModule { }",
    "filename": "f465178cfeb676da3eb825c0beb45a29_17.scala"
  },
  {
    "conversation_hash": "f465178cfeb676da3eb825c0beb45a29",
    "code_index": 23,
    "language": "Scala",
    "libraries": [],
    "code": "import { ToastrModule } from 'ngx-toastr';\n\n@NgModule({\n  imports: [\n    ToastrModule.forRoot({\n      positionClass: 'toast-bottom-right',\n      // Other configurations\n    })\n  ]\n})\nexport class AppModule { }",
    "filename": "f465178cfeb676da3eb825c0beb45a29_23.scala"
  },
  {
    "conversation_hash": "ea9d6a922f23507b8e62cec1ab1cca13",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "<dependency>\n    <groupId>org.xerial</groupId>\n    <artifactId>sqlite-jdbc</artifactId>\n    <version>3.36.0.3</version> <!-- 使用适用于您的项目的最新版本 -->\n</dependency>",
    "filename": "ea9d6a922f23507b8e62cec1ab1cca13_0.scala"
  },
  {
    "conversation_hash": "ea9d6a922f23507b8e62cec1ab1cca13",
    "code_index": 5,
    "language": "Scala",
    "libraries": [],
    "code": "# 嵌入式 Derby\nspring.datasource.url=jdbc:derby:myDerbyDB;create=true\nspring.datasource.driver-class-name=org.apache.derby.jdbc.EmbeddedDriver\nspring.datasource.username= // 如果需要\nspring.datasource.password= // 如果需要",
    "filename": "ea9d6a922f23507b8e62cec1ab1cca13_5.scala"
  },
  {
    "conversation_hash": "ea9d6a922f23507b8e62cec1ab1cca13",
    "code_index": 6,
    "language": "Scala",
    "libraries": [],
    "code": "# Derby 客户端-服务器模式\nspring.datasource.url=jdbc:derby://localhost:1527/myDerbyDB;create=true\nspring.datasource.driver-class-name=org.apache.derby.jdbc.ClientDriver\nspring.datasource.username= // 如果需要\nspring.datasource.password= // 如果需要",
    "filename": "ea9d6a922f23507b8e62cec1ab1cca13_6.scala"
  },
  {
    "conversation_hash": "1e16db83c0f9729b7b072ad734cb38b8",
    "code_index": 2,
    "language": "Scala",
    "libraries": [],
    "code": "import { HttpClientModule } from '@angular/common/http';\n\n@NgModule({\n  imports: [\n    HttpClientModule\n  ]\n})\nexport class AppModule { }",
    "filename": "1e16db83c0f9729b7b072ad734cb38b8_2.scala"
  },
  {
    "conversation_hash": "1c1a79c7603d3969e1b898e03245e418",
    "code_index": 39,
    "language": "Scala",
    "libraries": [],
    "code": "task modifyBytecode(type: JavaExec) {\n    main = 'com.example.MyBytecodeModifier'\n    args = [project.buildDir.absolutePath + '/classes/java/main']\n    classpath = sourceSets.main.runtimeClasspath\n}\n\nclasses.dependsOn(modifyBytecode)",
    "filename": "1c1a79c7603d3969e1b898e03245e418_39.scala"
  },
  {
    "conversation_hash": "1c1a79c7603d3969e1b898e03245e418",
    "code_index": 42,
    "language": "Scala",
    "libraries": [
      "javax.persistence."
    ],
    "code": "import javax.persistence.*;\n\n@Entity\n@Inheritance(strategy = InheritanceType.SINGLE_TABLE)\n@DiscriminatorColumn(name = \"dtype\", discriminatorType = DiscriminatorType.STRING)\npublic abstract class BaseEntity {\n    @Id\n    @GeneratedValue(strategy = GenerationType.IDENTITY)\n    private Long id;\n\n    // 公共字段\n}\n\n@Entity\n@DiscriminatorValue(\"SpecificEntity\")\npublic class SpecificEntity extends BaseEntity {\n    // 特定字段\n}",
    "filename": "1c1a79c7603d3969e1b898e03245e418_42.scala"
  },
  {
    "conversation_hash": "67f6a094aac8710257d11c72b1dc8d38",
    "code_index": 0,
    "language": "Scala",
    "libraries": [],
    "code": "CREATE TABLE your_table_name(...)\n  STORED AS INPUTFORMAT\n  'com.hadoop.mapred.DeprecatedLzoTextInputFormat'\n  OUTPUTFORMAT\n  'org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat';",
    "filename": "67f6a094aac8710257d11c72b1dc8d38_0.scala"
  },
  {
    "conversation_hash": "f4145822cdb86dc78ff38ea66ed4599e",
    "code_index": 1,
    "language": "Scala",
    "libraries": [],
    "code": "// 假设这是你的ActorRef[Card]类型的列表\nval cards: List[ActorRef[Card]] = ???\n\n// 检查列表至少有两个元素\nif (cards.size >= 2) {\n  // 打乱顺序并取前两个\n  val selectedCards: List[ActorRef[Card]] = Random.shuffle(cards).take(2)\n  \n  // 现在selectedCards中有两个随机且不同的元素\n  // 你可以根据需要处理这两个元素\n} else {\n  // 列表中的元素不够，处理异常情况\n}",
    "filename": "f4145822cdb86dc78ff38ea66ed4599e_1.scala"
  },
  {
    "conversation_hash": "0394307aa51c053f61a22ed332c71316",
    "code_index": 5,
    "language": "Scala",
    "libraries": [],
    "code": "spring.datasource.url=jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE\n    spring.datasource.driverClassName=org.h2.Driver\n    spring.datasource.username=sa\n    spring.datasource.password=password\n    spring.jpa.database-platform=org.hibernate.dialect.H2Dialect\n\n    # H2 Console\n    spring.h2.console.enabled=true\n    spring.h2.console.path=/h2-console",
    "filename": "0394307aa51c053f61a22ed332c71316_5.scala"
  }
]